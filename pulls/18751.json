{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751",
    "id": 408173315,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDA4MTczMzE1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18751",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18751.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18751.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa13199e89ee6524c74747774b2031ec7d50accb",
    "number": 18751,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "doc: Explain why GetRandMicros must not be templated",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "",
    "labels": [
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-04-23T20:24:18Z",
    "updated_at": "2022-02-15T10:30:07Z",
    "closed_at": "2020-04-27T01:18:46Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "377074daa08f1aed2d29d066ae52a00a6ac22f82",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2004-docGetRandMicros",
      "ref": "2004-docGetRandMicros",
      "sha": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205775,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:17Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5f19155e5bca37bf1fe14515758c6f589f6806ae",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 17,
    "deletions": 4,
    "changed_files": 3,
    "commits": 1,
    "review_comments": 22,
    "comments": 7
  },
  "events": [
    {
      "event": "reviewed",
      "id": 399453431,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NDUzNDMx",
      "url": null,
      "actor": null,
      "commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#pullrequestreview-399453431",
      "submitted_at": "2020-04-23T20:31:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
    },
    {
      "event": "labeled",
      "id": 3266982552,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNjY5ODI1NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3266982552",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-23T21:28:35Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 3266982554,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNjY5ODI1NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3266982554",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-23T21:28:35Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "unlabeled",
      "id": 3267138742,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzI2NzEzODc0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3267138742",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-23T22:28:51Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "unlabeled",
      "id": 3269375177,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzI2OTM3NTE3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3269375177",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-24T13:19:16Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 3269375180,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMyNjkzNzUxODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3269375180",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-24T13:19:16Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "reviewed",
      "id": 400223405,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjIzNDA1",
      "url": null,
      "actor": null,
      "commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#pullrequestreview-400223405",
      "submitted_at": "2020-04-24T19:47:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
    },
    {
      "event": "reviewed",
      "id": 400238797,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMjM4Nzk3",
      "url": null,
      "actor": null,
      "commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "concept ACK on adding reasoning (especially given I was considering trying to turn GetRand* into a template), some clarification questions\r\n",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#pullrequestreview-400238797",
      "submitted_at": "2020-04-24T20:15:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3271273140,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI3MTI3MzE0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3271273140",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-24T22:56:48Z"
    },
    {
      "event": "commented",
      "id": 619273930,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTI3MzkzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619273930",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-24T23:04:26Z",
      "updated_at": "2020-04-24T23:04:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK fa6c75bdbe7f842c7c4c3846467cb47dd1431a75... but not sure if my ack counts anymore 🙂 ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619273930",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751"
    },
    {
      "event": "reviewed",
      "id": 400319081,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzE5MDgx",
      "url": null,
      "actor": null,
      "commit_id": "fa6c75bdbe7f842c7c4c3846467cb47dd1431a75",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#pullrequestreview-400319081",
      "submitted_at": "2020-04-24T23:13:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTEzMTk5ZTg5ZWU2NTI0Yzc0NzQ3Nzc0YjIwMzFlYzdkNTBhY2Ni",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa13199e89ee6524c74747774b2031ec7d50accb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa13199e89ee6524c74747774b2031ec7d50accb",
      "tree": {
        "sha": "a3ff8ae051d9febd312485c125dc333e4db3870d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3ff8ae051d9febd312485c125dc333e4db3870d"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree a3ff8ae051d9febd312485c125dc333e4db3870d\nparent e890c15e2cc91487ce023900912646ff56ee97b4\nauthor MarcoFalke <falke.marco@gmail.com> 1587679492 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1587771683 -0400\n\ndoc: Explain why GetRandMicros must not be templated\n\nCo-Authored-By: Amiti Uttarwar <amiti@uttarwar.org>\nCo-Authored-By: Gloria Zhao <gzhao408@berkeley.edu>\nCo-Authored-By: Pieter Wuille <pieter.wuille@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgDlAwAum0S31KKi8M+jJsU+p0BMhvLE2RgFEZC5Yr5iGNlx+R7WkbsV3T1xdyG\n4UV7DJ4YamjWBKR/JAOPylrQGVCg+ERrC/AJI5kgy0qwnB9YX4m+yw2yw2kuua6o\nTcDKrhsrY+Er+REMXdsT1WfwU6IcQpCuo52PV//V8IYqO0XibPcnHx2wFe8A6y+L\nnbbI1fsSkMh1J7d+JxOXPiULDJNsEQxVobMkFIX50iuAdNrfOdi43cxtARaMXCid\nctjxI60iz9H3KM4BVs9DzON+vQteOd0hrnqYyvvKBORUSBwFRCrIH5Vs6V4Oyj//\nQiJS+3+ADgVeQrA/SW62ULjXg1Kjkxm9b0jdSd902dzRHGTXzS0TBDpZV+g6EGyn\nrdXcfGn2hT1EAL+ZdydFOIF2oA/NxnD081mAipFT+sWhXNiPqKItYHWDjU8yh8C/\nKGCekLKtk/ebKNeyqWvKRdoiyPl87nYSmYjqZwGbaYmnFaoB98GvdEulnUy/8bGy\nZiYxwUM+\n=h8XN\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e890c15e2cc91487ce023900912646ff56ee97b4",
          "sha": "e890c15e2cc91487ce023900912646ff56ee97b4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e890c15e2cc91487ce023900912646ff56ee97b4"
        }
      ],
      "message": "doc: Explain why GetRandMicros must not be templated\n\nCo-Authored-By: Amiti Uttarwar <amiti@uttarwar.org>\nCo-Authored-By: Gloria Zhao <gzhao408@berkeley.edu>\nCo-Authored-By: Pieter Wuille <pieter.wuille@gmail.com>",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-24T23:41:23Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-23T22:04:52Z"
      },
      "sha": "fa13199e89ee6524c74747774b2031ec7d50accb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3271343333,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzI3MTM0MzMzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3271343333",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-24T23:41:40Z"
    },
    {
      "event": "commented",
      "id": 619308096,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTMwODA5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619308096",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-25T02:40:46Z",
      "updated_at": "2020-04-25T02:40:46Z",
      "author_association": "MEMBER",
      "body": "It does actually seem possible to create a templated `GetRandDur` that works as expected(?) when assigning to higher-resolution duration types. I'm not sure it's a good idea, but posting this here in case people are interested:\r\n\r\n```c++\r\ntemplate<typename D>\r\nclass RandDur\r\n{\r\n    const D m_max;\r\npublic:\r\n    constexpr RandDur(D max) : m_max(max) {}\r\n    template<typename D2>\r\n    operator D2() const { return D2{GetRand(D2{m_max}.count())}; }\r\n};\r\n\r\ntemplate<typename D>\r\nRandDur<D> GetRandDur(D duration_max)\r\n{\r\n    return RandDur<D>(duration_max);\r\n}\r\n\r\nstd::chrono::seconds s = GetRandDur(std::chrono::hours{2});\r\n```\r\n\r\n`s` will take on a value between 0 and 7200 seconds here. It works by returning an object `RandDuration` from `GetRandDur` that is an unevaluated random-duration operation. It's evaluated when converting it to seconds, at which time the destination type is known.\r\n\r\nA reason this may not be a good idea is because now\r\n\r\n```c++\r\nauto r = GetRandDur(std::chrono::hours{2});\r\nstd::chrono::seconds s1 = r;\r\nstd::chrono::seconds s2 = r;\r\nprintf(\"%i, %i\\n\", (int)s1.count(), (int)s2.count());\r\n```\r\n\r\nwould print two different numbers.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619308096",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751"
    },
    {
      "event": "reviewed",
      "id": 400510676,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTEwNjc2",
      "url": null,
      "actor": null,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fa13199e89ee6524c74747774b2031ec7d50accb.\r\n\r\nWhat if we prevent template argument deduction?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#pullrequestreview-400510676",
      "submitted_at": "2020-04-26T14:28:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
    },
    {
      "event": "commented",
      "id": 619561836,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTU2MTgzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619561836",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-26T14:34:29Z",
      "updated_at": "2020-04-26T14:34:29Z",
      "author_association": "MEMBER",
      "body": "> What if we prevent template argument deduction?\r\n\r\nhow?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619561836",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751"
    },
    {
      "event": "reviewed",
      "id": 400529640,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTI5NjQw",
      "url": null,
      "actor": null,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fa13199e89ee6524c74747774b2031ec7d50accb",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#pullrequestreview-400529640",
      "submitted_at": "2020-04-26T17:39:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
    },
    {
      "event": "commented",
      "id": 619635073,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYzNTA3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619635073",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-26T22:32:18Z",
      "updated_at": "2020-04-26T22:37:03Z",
      "author_association": "MEMBER",
      "body": "@promag That would work, for example using:\r\n\r\n```c++\r\ntemplate<typename D>\r\nD GetRandDur(typename std::common_type<D>::type max) { ... }\r\n```\r\n\r\nbut you'd still be left with a templated function which you'd need to call as\r\n\r\n```c++\r\nstd::chrono::microseconds r = GetRandDur<std::chrono::microseconds>(std::chrono::hours{2});\r\n```\r\n\r\nso it wouldn't avoid the need for explicitly passing in the precision. The current codebase's approach effectively does the same thing, but with a slightly shorter notation (where `GetRandMicros` is effectively `GetRandDur<std::chrono::microseconds>`.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619635073",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751"
    },
    {
      "event": "mentioned",
      "id": 3273449819,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI3MzQ0OTgxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3273449819",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-26T22:32:19Z"
    },
    {
      "event": "subscribed",
      "id": 3273449821,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyNzM0NDk4MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3273449821",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-26T22:32:19Z"
    },
    {
      "event": "commented",
      "id": 619640697,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTY0MDY5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619640697",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-26T23:21:16Z",
      "updated_at": "2020-04-26T23:21:16Z",
      "author_association": "MEMBER",
      "body": "I wasn't aware that there is a way to tell the compiler that a template argument must be passed. I'll switch out the implementation here with the `std::common_type` one.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619640697",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751"
    },
    {
      "event": "reviewed",
      "id": 400565249,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTY1MjQ5",
      "url": null,
      "actor": null,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "@MarcoFalke what @sipa said, sorry for the delay.\r\n\r\nI don't mind either approaches, nice observation and test thought.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#pullrequestreview-400565249",
      "submitted_at": "2020-04-27T00:06:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
    },
    {
      "event": "closed",
      "id": 3273611724,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzI3MzYxMTcyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3273611724",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-27T01:18:46Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 3273611812,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQzMjczNjExODEy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3273611812",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-27T01:18:50Z"
    },
    {
      "event": "commented",
      "id": 619680891,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTY4MDg5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619680891",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-27T02:51:28Z",
      "updated_at": "2020-04-27T02:51:28Z",
      "author_association": "MEMBER",
      "body": "Why?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619680891",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751"
    },
    {
      "event": "commented",
      "id": 619807887,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTgwNzg4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619807887",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-27T08:04:24Z",
      "updated_at": "2020-04-27T08:04:24Z",
      "author_association": "MEMBER",
      "body": "Maybe because scoped changed Marco will open a new PR? 🤔 ",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#issuecomment-619807887",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18751"
    },
    {
      "event": "locked",
      "id": 6073781194,
      "node_id": "LOE_lADOABII584kHHDazwAAAAFqBovK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073781194",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:30:07Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414103517",
      "pull_request_review_id": 399453431,
      "id": 414103517,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwMzUxNw==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "path": "src/random.h",
      "position": null,
      "original_position": 9,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand this.",
      "created_at": "2020-04-23T20:31:46Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414103517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414103517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414105697",
      "pull_request_review_id": 399455968,
      "id": 414105697,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwNTY5Nw==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "path": "src/random.h",
      "position": null,
      "original_position": 9,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414103517,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh you mean because it would use the type of the input (hours) as precision, effectively, and then converted to microseconds afterwards?\r\n\r\nThat's a very roundabout way of describing the problem, and wouldn't apply to a `GetRandMicros` that always interpreted the input as microseconds.",
      "created_at": "2020-04-23T20:35:36Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414105697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414105697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414109709",
      "pull_request_review_id": 399460302,
      "id": 414109709,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwOTcwOQ==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "path": "src/random.h",
      "position": null,
      "original_position": 9,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414103517,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't understand this.\r\n\r\n\r\nHere is the code. I am happy to remove the sentence and replace it with code instead.\r\n\r\n```cpp\r\ntemplate <typename D>\r\nD GetRandDur(const D& duration_max)\r\n{\r\n    return D{GetRand(duration_max.count())};\r\n}\r\n\r\nBOOST_AUTO_TEST_CASE(util_time_GetRandTime)\r\n{\r\n    std::chrono::seconds rand_hour = GetRandDur(std::chrono::hours{1});\r\n    // Want seconds to be in range [0..1hour), but always get zero :((((\r\n    BOOST_CHECK_EQUAL(rand_hour.count(), 0);\r\n}\r\n\r\n",
      "created_at": "2020-04-23T20:41:59Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414109709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414109709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414111751",
      "pull_request_review_id": 399462615,
      "id": 414111751,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDExMTc1MQ==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "path": "src/random.h",
      "position": null,
      "original_position": 9,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414103517,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> That's a very roundabout way of describing the problem, and wouldn't apply to a GetRandMicros that always interpreted the input as microseconds.\r\n\r\nYes, that is the reason why I added GetRandMicros in fa883ab35ad2d4328e35b1e855d0833740a6b910, but I forgot to add documentation back then.",
      "created_at": "2020-04-23T20:45:26Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414111751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414111751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414130756",
      "pull_request_review_id": 399483897,
      "id": 414130756,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzMDc1Ng==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "path": "src/random.h",
      "position": null,
      "original_position": 9,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414103517,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I understand now. You mean templatizing to avoid the \"Micros\" in the function name (and implicitly pass the resolution of the result that).\r\n\r\nThere's a rather crazy way to work around that:\r\n\r\n```c++\r\ntemplate<typename In, typename OutRep = typename In::rep, typename OutPeriod = typename In::period>\r\nstd::chrono::duration<OutRep, OutPeriod> GetRand(std::chrono::duration<OutRep, OutPeriod> arg) {\r\n    return arg;\r\n}\r\n```\r\nThat's a GetRand that only applies to durations, but you still always have to explicitly state the resolution you want (e.g. `GetRand<std::chrono::milliseconds>(SOME_CONSTANT_OF_TYPE_CHRONO_HOURS)` will work as expected; `GetRand(...)` won't compile).",
      "created_at": "2020-04-23T21:17:48Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414130756",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414130756"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414132382",
      "pull_request_review_id": 399485719,
      "id": 414132382,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEzMjM4Mg==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will",
      "path": "src/random.h",
      "position": null,
      "original_position": 9,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414103517,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I doubt that's more appealing than just GetRandMicros, GetRandMillis, ... functions, though.",
      "created_at": "2020-04-23T21:20:45Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414132382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414132382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414819576",
      "pull_request_review_id": 400223405,
      "id": 414819576,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgxOTU3Ng==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it",
      "path": "src/random.h",
      "position": null,
      "original_position": 7,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My knowledge is pretty limited, but maybe I can make a suggestion for clearer wording?\r\n\r\nIt seems like the issue is that, if `GetRand*(std::chrono::*)` is templated with this implementation, the `max_duration`'s count() is used as-is instead of converting between the argument type and return type like we would expect it to. Instead, the conversion happens at the end. In simple terms, the `std::chrono` types won't convert nicely which means we lose precision if we want random small units of time over the duration of a large unit of time (which I'm guessing is a common use case). For example, when you try to get random seconds over the duration of 1 hour, the only return value you can get is 0 hours = 0 seconds.\r\n\r\nOther example: `std::chrono::seconds rand_seconds = GetRandDur(std::chrono::hours{4});` can return non-zero values, but only at the precision of hours (i.e. 0, 3600, 7200, or 10800 seconds). \r\n\r\nIf you were to make a template, it only necessarily works as intended if you pass in a `max_duration` of strictly the same type (or @sipa's workaround).",
      "created_at": "2020-04-24T19:42:30Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414819576",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414819576"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414833700",
      "pull_request_review_id": 400238797,
      "id": 414833700,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMzcwMA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will\n+// always be set to a constant, not a random duration.",
      "path": "src/random.h",
      "position": null,
      "original_position": 10,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is true? its just random in relation to the duration type of the input. \r\n\r\neg. `std::chrono::seconds foo = GetRand(std::chrono::hours{5})`\r\nmight return 3600, 7200, 10800 etc.",
      "created_at": "2020-04-24T20:09:04Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414833700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414833700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414836790",
      "pull_request_review_id": 400238797,
      "id": 414836790,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNjc5MA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is it impossible, or does the compiler just select template duration of param thats passed & then tries to convert afterwards? \r\n\r\nseems that way to me because `std::chrono::seconds val = GetRandDur(std::chrono::hours)` gives a type conversion error",
      "created_at": "2020-04-24T20:15:11Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414836790",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414836790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414856381",
      "pull_request_review_id": 400263471,
      "id": 414856381,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjM4MQ==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414836790,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No it doesn't give a type conversion error.\r\n\r\nThis compiles fine for me and the test pass:\r\n\r\n```cpp\r\ntemplate <typename D>\r\nD GetRandDur(const D& duration_max)\r\n{\r\n    return D{GetRand(duration_max.count())};\r\n}\r\n\r\nBOOST_AUTO_TEST_CASE(util_time_GetRandTime)\r\n{\r\n    std::chrono::seconds rand_hour = GetRandDur(std::chrono::hours{1});\r\n    // Want seconds to be in range [0..1hour), but always get zero :((((\r\n    BOOST_CHECK_EQUAL(rand_hour.count(), 0);\r\n}",
      "created_at": "2020-04-24T20:53:14Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414856381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414856381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414856628",
      "pull_request_review_id": 400263724,
      "id": 414856628,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjYyOA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will\n+// always be set to a constant, not a random duration.",
      "path": "src/random.h",
      "position": null,
      "original_position": 10,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414833700,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any suggestions to improve the wording? Something with \"quantized\", maybe?",
      "created_at": "2020-04-24T20:53:42Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414856628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414856628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414895938",
      "pull_request_review_id": 400303884,
      "id": 414895938,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5NTkzOA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414836790,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oh interesting. maybe its different in gcc vs clang?? or I'm missing something obvious.",
      "created_at": "2020-04-24T22:23:11Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414895938",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414895938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414897548",
      "pull_request_review_id": 400305420,
      "id": 414897548,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5NzU0OA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414836790,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I hope not; that would violate the language spec.\n\nstd::chrono::hours should always be implicitly convertible into std::chrono::seconds.",
      "created_at": "2020-04-24T22:27:37Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414897548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414897548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414899354",
      "pull_request_review_id": 400307112,
      "id": 414899354,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5OTM1NA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414836790,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok I tried again and it works. I must have made an accidental error. my mistake!",
      "created_at": "2020-04-24T22:32:46Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414899354",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414899354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414902570",
      "pull_request_review_id": 400310135,
      "id": 414902570,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMjU3MA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it",
      "path": "src/random.h",
      "position": null,
      "original_position": 7,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414819576,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@MarcoFalke - I built on @gzhao408's description. here's an attempt at a comment: \r\n\r\nThe following `GetRand<duration>` MUST NOT be templated on the type of the `<duration>` to prevent unexpected results. If there is a mismatch between the return type and the argument type, the compiler is unable to reliably select the correct template. The unexpected conversion handling can lead to precision loss. \r\n\r\nEg. \r\n`std::chrono::seconds rand_seconds = GetRandDur(std::chrono::hours{2})` will return 1 of 2 values rather than 1 of 120 values. \r\n",
      "created_at": "2020-04-24T22:42:17Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414902570",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414902570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414902826",
      "pull_request_review_id": 400310412,
      "id": 414902826,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwMjgyNg==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.\n+// assuming that a GetRand<T> exists for all duration types, then `foo` will\n+// always be set to a constant, not a random duration.",
      "path": "src/random.h",
      "position": null,
      "original_position": 10,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414833700,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "think precision loss captures it better, esp with example. attempted in other comment thread.",
      "created_at": "2020-04-24T22:43:07Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414902826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414902826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414907465",
      "pull_request_review_id": 400314616,
      "id": 414907465,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwNzQ2NQ==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it",
      "path": "src/random.h",
      "position": null,
      "original_position": 7,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414819576,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks @gzhao408 and @amitiuttarwar for helping me to explain this. Took your suggestion and added you both as co author in the commit.",
      "created_at": "2020-04-24T22:57:45Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414907465",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414907465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414907943",
      "pull_request_review_id": 400314983,
      "id": 414907943,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkwNzk0Mw==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRand*(std::chrono::*) MUST NOT be templated on the type of\n+// the duration to prevent unsafe use at the call site. If it was templated, it\n+// would be impossible for the compiler to select the right template. E.g.",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "333393d96dff6c05831d09bc5d9bc2b2c3754ea8",
      "in_reply_to_id": 414836790,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oh, my error was in what I was typing here. I get conversion issue when I do `std::chrono::minutes val = GetRandDur(std::chrono::seconds{120})` \r\n\r\nso when function arg is higher precision than return value. \r\n\r\nwhich is why I was suspecting compiler selects template duration based on function arg, then tries to convert afterwards. so selection is deterministic vs unexpected, but can lead to unexpected results.",
      "created_at": "2020-04-24T22:58:54Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414907943",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414907943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414912568",
      "pull_request_review_id": 400319081,
      "id": 414912568,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkxMjU2OA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRandDur<duration> MUST NOT be templated on the type of the\n+// <duration> to prevent unexpected results. If there is a mismatch between the\n+// return type and the argument type, the compiler is unable to reliably select",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "fa6c75bdbe7f842c7c4c3846467cb47dd1431a75",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry to nitpick here, but i think this is still confusing.\r\n\r\nIn a hypothetical\r\n\r\n```c++\r\ntemplate<typename T>\r\nT GetRandDur(T max) { return T{GetRand(max.count())}; }\r\n\r\nstd::chrono::seconds r = GetRandDur(std::chrono::hours{1})\r\n```\r\n\r\nthere is no unreliable template selection or mismatch between types. `GetRandDur` is reliably instantiated with `T`=`std::chrono::hours`, and is returning a random value of the same type. It's in the assignment outside of the function call that the conversion to `std::chrono::seconds` happens, and this assignment doesn't lose precision; the precision was never requested in the first place.\r\n\r\nHow about this instead:\r\n\r\n    Templates cannot be used here to avoid stating explicitly what precision\r\n    is desired in the result. A hypothetical\r\n    `template<typename T> T GetRandDur(T)` invoked on a\r\n    `std::chrono::hours` argument will only ever return a duration with the\r\n    resolution of 1 hours, which may be unexpected when assigning to\r\n    a variable of a higher resolution duration like `std::chrono::seconds`.",
      "created_at": "2020-04-24T23:13:15Z",
      "updated_at": "2020-04-24T23:41:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414912568",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414912568"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414921034",
      "pull_request_review_id": 400325969,
      "id": 414921034,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyMTAzNA==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRandDur<duration> MUST NOT be templated on the type of the\n+// <duration> to prevent unexpected results. If there is a mismatch between the\n+// return type and the argument type, the compiler is unable to reliably select",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "fa6c75bdbe7f842c7c4c3846467cb47dd1431a75",
      "in_reply_to_id": 414912568,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks. Copy-pasted your text.",
      "created_at": "2020-04-24T23:42:19Z",
      "updated_at": "2020-04-24T23:42:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414921034",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414921034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414923293",
      "pull_request_review_id": 400327767,
      "id": 414923293,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDkyMzI5Mw==",
      "diff_hunk": "@@ -67,7 +67,17 @@\n  * Thread-safe.\n  */\n void GetRandBytes(unsigned char* buf, int num) noexcept;\n+/** Generate a random integer in the range [0..range). Precondition: range > 0 */\n uint64_t GetRand(uint64_t nMax) noexcept;\n+// The following GetRandDur<duration> MUST NOT be templated on the type of the\n+// <duration> to prevent unexpected results. If there is a mismatch between the\n+// return type and the argument type, the compiler is unable to reliably select",
      "path": "src/random.h",
      "position": null,
      "original_position": 8,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "fa6c75bdbe7f842c7c4c3846467cb47dd1431a75",
      "in_reply_to_id": 414912568,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah yes. ok this confirms what I was trying to get at in the other thread. thanks!",
      "created_at": "2020-04-24T23:50:19Z",
      "updated_at": "2020-04-24T23:50:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r414923293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414923293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415432459",
      "pull_request_review_id": 400565249,
      "id": 415432459,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQzMjQ1OQ==",
      "diff_hunk": "@@ -1348,6 +1348,13 @@ BOOST_AUTO_TEST_CASE(gettime)\n     BOOST_CHECK((GetTime() & ~0xFFFFFFFFLL) == 0);\n }\n \n+BOOST_AUTO_TEST_CASE(util_time_GetRandTime)\n+{\n+    // Check that GetRand* can not magically increase the resolution of the result",
      "path": "src/test/util_tests.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "original_commit_id": "fa13199e89ee6524c74747774b2031ec7d50accb",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What magic? ",
      "created_at": "2020-04-26T23:59:01Z",
      "updated_at": "2020-04-27T00:06:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18751#discussion_r415432459",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/415432459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18751"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1353,
      "original_line": 1353,
      "side": "RIGHT"
    }
  ]
}