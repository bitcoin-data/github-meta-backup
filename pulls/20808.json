{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808",
    "id": 547128470,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ3MTI4NDcw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20808",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/20808.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/20808.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c4fb4148259082ce4932838b42d96c2edd6c15df",
    "number": 20808,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: Run rpc_generateblock.py even with wallet disabled",
    "user": {
      "login": "nginocchio",
      "id": 14829793,
      "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nginocchio",
      "html_url": "https://github.com/nginocchio",
      "followers_url": "https://api.github.com/users/nginocchio/followers",
      "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
      "organizations_url": "https://api.github.com/users/nginocchio/orgs",
      "repos_url": "https://api.github.com/users/nginocchio/repos",
      "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/nginocchio/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "<!--\r\n*** Please remove the following help text before submitting: ***\r\n\r\nPull requests without a rationale and clear improvement may be closed\r\nimmediately.\r\n\r\nGUI-related pull requests should be opened against\r\nhttps://github.com/bitcoin-core/gui\r\nfirst. See CONTRIBUTING.md\r\n-->\r\n\r\n<!--\r\nPlease provide clear motivation for your patch and explain how it improves\r\nBitcoin Core user experience or Bitcoin Core developer experience\r\nsignificantly:\r\n\r\n* Any test improvements or new tests that improve coverage are always welcome.\r\n* All other changes should have accompanying unit tests (see `src/test/`) or\r\n  functional tests (see `test/`). Contributors should note which tests cover\r\n  modified code. If no tests exist for a region of modified code, new tests\r\n  should accompany the change.\r\n* Bug fixes are most welcome when they come with steps to reproduce or an\r\n  explanation of the potential issue as well as reasoning for the way the bug\r\n  was fixed.\r\n* Features are welcome, but might be rejected due to design or scope issues.\r\n  If a feature is based on a lot of dependencies, contributors should first\r\n  consider building the system outside of Bitcoin Core, if possible.\r\n* Refactoring changes are only accepted if they are required for a feature or\r\n  bug fix or otherwise improve developer experience significantly. For example,\r\n  most \"code style\" refactoring changes require a thorough explanation why they\r\n  are useful, what downsides they have and why they *significantly* improve\r\n  developer experience or avoid serious programming bugs. Note that code style\r\n  is often a subjective matter. Unless they are explicitly mentioned to be\r\n  preferred in the [developer notes](/doc/developer-notes.md), stylistic code\r\n  changes are usually rejected.\r\n-->\r\n\r\n<!--\r\nBitcoin Core has a thorough review process and even the most trivial change\r\nneeds to pass a lot of eyes and requires non-zero or even substantial time\r\neffort to review. There is a huge lack of active reviewers on the project, so\r\npatches often sit for a long time.\r\n-->\r\nThis PR enables one more of the non-wallet functional tests (rpc_generateblock.py) to be run even with the Bitcoin Core wallet disabled by using the new MiniWallet instead, as proposed in #20078. ",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2020-12-31T00:11:59Z",
    "updated_at": "2022-11-20T09:56:31Z",
    "closed_at": "2021-08-27T09:07:03Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "c54f2c1079769458efafea95af4d74a0c996b9a0",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "nginocchio:iss20078",
      "ref": "iss20078",
      "sha": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 324672586,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMjQ2NzI1ODY=",
        "name": "bitcoin",
        "full_name": "nginocchio/bitcoin",
        "owner": {
          "login": "nginocchio",
          "id": 14829793,
          "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
          "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nginocchio",
          "html_url": "https://github.com/nginocchio",
          "followers_url": "https://api.github.com/users/nginocchio/followers",
          "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
          "organizations_url": "https://api.github.com/users/nginocchio/orgs",
          "repos_url": "https://api.github.com/users/nginocchio/repos",
          "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/nginocchio/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/nginocchio/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/nginocchio/bitcoin",
        "archive_url": "https://api.github.com/repos/nginocchio/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/nginocchio/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/nginocchio/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/nginocchio/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/nginocchio/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/nginocchio/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/nginocchio/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/nginocchio/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/nginocchio/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/nginocchio/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/nginocchio/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/nginocchio/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/nginocchio/bitcoin/events",
        "forks_url": "https://api.github.com/repos/nginocchio/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/nginocchio/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/nginocchio/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/nginocchio/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/nginocchio/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/nginocchio/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/nginocchio/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/nginocchio/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/nginocchio/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/nginocchio/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/nginocchio/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/nginocchio/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/nginocchio/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/nginocchio/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/nginocchio/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/nginocchio/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:nginocchio/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/nginocchio/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/nginocchio/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/nginocchio/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/nginocchio/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/nginocchio/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/nginocchio/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/nginocchio/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/nginocchio/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/nginocchio/bitcoin/hooks",
        "svn_url": "https://github.com/nginocchio/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 161343,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": true,
        "visibility": "public",
        "pushed_at": "2021-03-01T21:54:40Z",
        "created_at": "2020-12-27T02:32:17Z",
        "updated_at": "2023-03-12T15:53:15Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "05e821ee1955797425b7274a16473cec5a920c56",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
      }
    },
    "author_association": "NONE",
    "draft": false,
    "additions": 31,
    "deletions": 32,
    "changed_files": 2,
    "commits": 3,
    "review_comments": 41,
    "comments": 7
  },
  "events": [
    {
      "event": "labeled",
      "id": 4158604145,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxNTg2MDQxNDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4158604145",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T00:12:56Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 560722490,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNzIyNDkw",
      "url": null,
      "actor": null,
      "commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK [`4e8803e`](https://github.com/bitcoin/bitcoin/commit/4e8803e22f0cd8a71f7f81f67ed0137a667b63ce)Code review and built it with and without wallet ",
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-560722490",
      "submitted_at": "2021-01-03T20:11:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "commented",
      "id": 753672969,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzY3Mjk2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753672969",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T20:39:28Z",
      "updated_at": "2021-01-03T20:39:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Not a huge deal @stackman27 but we ACK the commit hash of the HEAD commit. In this case it is 4e8803e22f0cd8a71f7f81f67ed0137a667b63ce\r\n\r\n> When giving an ACK, specify the commits reviewed by appending the commit hash of the HEAD commit.\r\n\r\nFor more details on the review process see this @jonatack doc: https://jonatack.github.io/articles/how-to-review-pull-requests-in-bitcoin-core",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-753672969",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808"
    },
    {
      "event": "mentioned",
      "id": 4162784247,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2Mjc4NDI0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162784247",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T20:39:28Z"
    },
    {
      "event": "subscribed",
      "id": 4162784249,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjI3ODQyNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162784249",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T20:39:28Z"
    },
    {
      "event": "mentioned",
      "id": 4162784252,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2Mjc4NDI1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162784252",
      "actor": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T20:39:28Z"
    },
    {
      "event": "subscribed",
      "id": 4162784253,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjI3ODQyNTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162784253",
      "actor": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T20:39:28Z"
    },
    {
      "event": "commented",
      "id": 753682758,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzY4Mjc1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753682758",
      "actor": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T22:06:07Z",
      "updated_at": "2021-01-03T22:06:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Not a huge deal @stackman27 but we ACK the commit hash of the HEAD commit. In this case it is [4e8803e](https://github.com/bitcoin/bitcoin/commit/4e8803e22f0cd8a71f7f81f67ed0137a667b63ce)\r\n> \r\n> > When giving an ACK, specify the commits reviewed by appending the commit hash of the HEAD commit.\r\n> \r\n> For more details on the review process see this @jonatack doc: https://jonatack.github.io/articles/how-to-review-pull-requests-in-bitcoin-core\r\n\r\noooh i see. Thank you! ",
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-753682758",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808"
    },
    {
      "event": "mentioned",
      "id": 4162840996,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2Mjg0MDk5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162840996",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T22:06:08Z"
    },
    {
      "event": "subscribed",
      "id": 4162840997,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjI4NDA5OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162840997",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T22:06:08Z"
    },
    {
      "event": "mentioned",
      "id": 4162840998,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2Mjg0MDk5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162840998",
      "actor": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T22:06:08Z"
    },
    {
      "event": "subscribed",
      "id": 4162840999,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjI4NDA5OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162840999",
      "actor": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T22:06:08Z"
    },
    {
      "event": "reviewed",
      "id": 561226088,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjI2MDg4",
      "url": null,
      "actor": null,
      "commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 4e8803e22f0cd8a71f7f81f67ed0137a667b63ce\r\n\r\nRan test with wallet disabled and reviewed code.",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-561226088",
      "submitted_at": "2021-01-04T18:04:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "reviewed",
      "id": 561354148,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzU0MTQ4",
      "url": null,
      "actor": null,
      "commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-561354148",
      "submitted_at": "2021-01-04T21:22:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "reviewed",
      "id": 561354767,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMzU0NzY3",
      "url": null,
      "actor": null,
      "commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-561354767",
      "submitted_at": "2021-01-04T21:23:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "reviewed",
      "id": 561406823,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDA2ODIz",
      "url": null,
      "actor": null,
      "commit_id": "1816feeddde9d56f31219d9c832dab710c34af9e",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": ".",
      "user": {
        "login": "taurus228",
        "id": 45716417,
        "node_id": "MDQ6VXNlcjQ1NzE2NDE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/45716417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/taurus228",
        "html_url": "https://github.com/taurus228",
        "followers_url": "https://api.github.com/users/taurus228/followers",
        "following_url": "https://api.github.com/users/taurus228/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/taurus228/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/taurus228/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/taurus228/subscriptions",
        "organizations_url": "https://api.github.com/users/taurus228/orgs",
        "repos_url": "https://api.github.com/users/taurus228/repos",
        "events_url": "https://api.github.com/users/taurus228/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/taurus228/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-561406823",
      "submitted_at": "2021-01-04T22:59:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "reviewed",
      "id": 561654162,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjU0MTYy",
      "url": null,
      "actor": null,
      "commit_id": "1816feeddde9d56f31219d9c832dab710c34af9e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-561654162",
      "submitted_at": "2021-01-05T09:56:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "reviewed",
      "id": 561654611,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjU0NjEx",
      "url": null,
      "actor": null,
      "commit_id": "1816feeddde9d56f31219d9c832dab710c34af9e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-561654611",
      "submitted_at": "2021-01-05T09:57:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "reviewed",
      "id": 561655710,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNjU1NzEw",
      "url": null,
      "actor": null,
      "commit_id": "1816feeddde9d56f31219d9c832dab710c34af9e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. \r\nMake sure to squash your commits according to https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#squashing-commits after addressing the feedback",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-561655710",
      "submitted_at": "2021-01-05T09:58:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4171998995,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE3MTk5ODk5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4171998995",
      "actor": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-05T21:12:27Z"
    },
    {
      "event": "reviewed",
      "id": 562204408,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjA0NDA4",
      "url": null,
      "actor": null,
      "commit_id": "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, this is a good start. You are (I think unintentionally) changing the test behavior.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-562204408",
      "submitted_at": "2021-01-05T23:16:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4186670974,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE4NjY3MDk3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4186670974",
      "actor": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-09T03:12:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4187365037,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE4NzM2NTAzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4187365037",
      "actor": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-09T19:26:37Z"
    },
    {
      "event": "reviewed",
      "id": 564890352,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0ODkwMzUy",
      "url": null,
      "actor": null,
      "commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-564890352",
      "submitted_at": "2021-01-10T19:18:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4193758922,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE5Mzc1ODkyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4193758922",
      "actor": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-12T03:01:56Z"
    },
    {
      "event": "commented",
      "id": 758485600,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1ODQ4NTYwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/758485600",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-12T08:13:03Z",
      "updated_at": "2021-03-26T20:53:25Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21178 (test: run mempool_reorg.py even with wallet disabled by DariusParvin)\n* #21014 (test: Run mempool_accept.py even with wallet disabled by stackman27)\n* #20889 (test: ensure any failing method in MiniWallet leaves no side-effects by mjdietzx)\n* #20874 (test: Run mempool_limit.py even with wallet disabled by stackman27)\n* #20286 (rpc: deprecate `addresses` and `reqSigs` from rpc outputs by mjdietzx)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-758485600",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808"
    },
    {
      "event": "reviewed",
      "id": 566569225,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2NTY5MjI1",
      "url": null,
      "actor": null,
      "commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "This is looking great! Two minor comments",
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-566569225",
      "submitted_at": "2021-01-12T18:53:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "reviewed",
      "id": 566685675,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2Njg1Njc1",
      "url": null,
      "actor": null,
      "commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I added few comments on `wallet.py` to make sure we're both on the same track, since we're both modifying it for the same reason :)",
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-566685675",
      "submitted_at": "2021-01-12T20:49:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "reviewed",
      "id": 591432134,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkxNDMyMTM0",
      "url": null,
      "actor": null,
      "commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#pullrequestreview-591432134",
      "submitted_at": "2021-02-16T16:58:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTZiYjQ1MmZmM2Y5MjdjNDBmN2Q3MzM4ZWUxZGUxNDdmNzNlZDRh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a6bb452ff3f927c40f7d7338ee1de147f73ed4a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4a6bb452ff3f927c40f7d7338ee1de147f73ed4a",
      "tree": {
        "sha": "72be3e34013cf2cc5e1af3ef2867a6e56a35354f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72be3e34013cf2cc5e1af3ef2867a6e56a35354f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e52ce9f2b312b3cf3b0837918e07d7603e241d63",
          "sha": "e52ce9f2b312b3cf3b0837918e07d7603e241d63",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e52ce9f2b312b3cf3b0837918e07d7603e241d63"
        }
      ],
      "message": "test: Run rpc_generateblock.py even with wallet disabled",
      "committer": {
        "name": "nginocchio",
        "email": "nginocchio@gmail.com",
        "date": "2021-03-01T20:51:06Z"
      },
      "author": {
        "name": "nginocchio",
        "email": "nginocchio@gmail.com",
        "date": "2020-12-30T21:57:12Z"
      },
      "sha": "4a6bb452ff3f927c40f7d7338ee1de147f73ed4a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDBhMDFhOWI1MzA5NTAzZjE3NmZiZWJhZGU4ZjMyOTc5NGQ4OGVm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f40a01a9b5309503f176fbebade8f329794d88ef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f40a01a9b5309503f176fbebade8f329794d88ef",
      "tree": {
        "sha": "d85e3b47cf14cd244f472fa4fdde4d1653b6269b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d85e3b47cf14cd244f472fa4fdde4d1653b6269b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a6bb452ff3f927c40f7d7338ee1de147f73ed4a",
          "sha": "4a6bb452ff3f927c40f7d7338ee1de147f73ed4a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a6bb452ff3f927c40f7d7338ee1de147f73ed4a"
        }
      ],
      "message": "add submit transaction to network boolean in MiniWallet",
      "committer": {
        "name": "nginocchio",
        "email": "nginocchio@gmail.com",
        "date": "2021-03-01T20:55:14Z"
      },
      "author": {
        "name": "nginocchio",
        "email": "nginocchio@gmail.com",
        "date": "2021-01-12T02:42:09Z"
      },
      "sha": "f40a01a9b5309503f176fbebade8f329794d88ef"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGZiNDE0ODI1OTA4MmNlNDkzMjgzOGI0MmQ5NmMyZWRkNmMxNWRm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4fb4148259082ce4932838b42d96c2edd6c15df",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c4fb4148259082ce4932838b42d96c2edd6c15df",
      "tree": {
        "sha": "da6115e0271aa409c8be0d18baaa235a2ebc217e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da6115e0271aa409c8be0d18baaa235a2ebc217e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f40a01a9b5309503f176fbebade8f329794d88ef",
          "sha": "f40a01a9b5309503f176fbebade8f329794d88ef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f40a01a9b5309503f176fbebade8f329794d88ef"
        }
      ],
      "message": "make address public",
      "committer": {
        "name": "nginocchio",
        "email": "nginocchio@gmail.com",
        "date": "2021-03-01T20:55:27Z"
      },
      "author": {
        "name": "nginocchio",
        "email": "nginocchio@gmail.com",
        "date": "2021-02-28T18:13:50Z"
      },
      "sha": "c4fb4148259082ce4932838b42d96c2edd6c15df"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4392211795,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM5MjIxMTc5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4392211795",
      "actor": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-01T21:54:48Z"
    },
    {
      "event": "commented",
      "id": 809420087,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTQyMDA4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809420087",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:22:14Z",
      "updated_at": "2021-03-29T14:22:14Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-809420087",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808"
    },
    {
      "event": "labeled",
      "id": 4521831802,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ1MjE4MzE4MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4521831802",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T14:22:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 883165139,
      "node_id": "IC_kwDOABII5840pAfT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/883165139",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-07-20T07:32:11Z",
      "updated_at": "2021-07-20T07:32:11Z",
      "author_association": "MEMBER",
      "body": "Are you still working on this?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-883165139",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808"
    },
    {
      "event": "labeled",
      "id": 5217449962,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDUyMTc0NDk5NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5217449962",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-27T09:06:59Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "closed",
      "id": 5217450228,
      "node_id": "MDExOkNsb3NlZEV2ZW50NTIxNzQ1MDIyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5217450228",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-08-27T09:07:03Z"
    },
    {
      "event": "commented",
      "id": 973187509,
      "node_id": "IC_kwDOABII5846Aam1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/973187509",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-18T19:28:47Z",
      "updated_at": "2021-11-18T19:28:47Z",
      "author_association": "NONE",
      "body": "> Are you still working on this?\r\n\r\nI know someone who is working on this and hopefully they will write here soon. (Just wanted to leave a trace in the PR by this message, sorry for spam.)",
      "user": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-973187509",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808"
    },
    {
      "event": "commented",
      "id": 974269192,
      "node_id": "IC_kwDOABII5846EisI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/974269192",
      "actor": {
        "login": "DariusParvin",
        "id": 41220998,
        "node_id": "MDQ6VXNlcjQxMjIwOTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DariusParvin",
        "html_url": "https://github.com/DariusParvin",
        "followers_url": "https://api.github.com/users/DariusParvin/followers",
        "following_url": "https://api.github.com/users/DariusParvin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DariusParvin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DariusParvin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
        "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
        "repos_url": "https://api.github.com/users/DariusParvin/repos",
        "events_url": "https://api.github.com/users/DariusParvin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-19T17:33:01Z",
      "updated_at": "2021-11-19T17:42:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @jsarenik :)  I am working on this issue. I am mostly finished but will go through it a few more times (reviewing the comments here) before submitting a PR. Work in progress is [here](https://github.com/DariusParvin/bitcoin/tree/rpc-generateblock-to-miniwallet)",
      "user": {
        "login": "DariusParvin",
        "id": 41220998,
        "node_id": "MDQ6VXNlcjQxMjIwOTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/41220998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DariusParvin",
        "html_url": "https://github.com/DariusParvin",
        "followers_url": "https://api.github.com/users/DariusParvin/followers",
        "following_url": "https://api.github.com/users/DariusParvin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DariusParvin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DariusParvin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DariusParvin/subscriptions",
        "organizations_url": "https://api.github.com/users/DariusParvin/orgs",
        "repos_url": "https://api.github.com/users/DariusParvin/repos",
        "events_url": "https://api.github.com/users/DariusParvin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DariusParvin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#issuecomment-974269192",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20808"
    },
    {
      "event": "mentioned",
      "id": 5646810422,
      "node_id": "MEE_lADOABII584uS0-xzwAAAAFQk302",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5646810422",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-19T17:33:01Z"
    },
    {
      "event": "subscribed",
      "id": 5646810430,
      "node_id": "SE_lADOABII584uS0-xzwAAAAFQk30-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5646810430",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-19T17:33:02Z"
    },
    {
      "event": "unlabeled",
      "id": 5648665264,
      "node_id": "UNLE_lADOABII584uS0-xzwAAAAFQr8qw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5648665264",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-20T07:37:43Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "unlabeled",
      "id": 5648665265,
      "node_id": "UNLE_lADOABII584uS0-xzwAAAAFQr8qx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5648665265",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-20T07:37:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 5649702353,
      "node_id": "REFE_lADOABII584uS0-xzwAAAAFQv53R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5649702353",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "368831371d97a642beb54b5c4eb6eb0fedaa16b4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/368831371d97a642beb54b5c4eb6eb0fedaa16b4",
      "created_at": "2021-11-21T07:30:27Z"
    },
    {
      "event": "locked",
      "id": 7851168158,
      "node_id": "LOE_lADOABII584uS0-xzwAAAAHT91Ge",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7851168158",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-20T09:56:31Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551475077",
      "pull_request_review_id": 561226088,
      "id": 551475077,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ3NTA3Nw==",
      "diff_hunk": "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "path": "test/functional/rpc_generateblock.py",
      "position": 45,
      "original_position": 35,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Any reason you bumped up the blocks generated from 110 to 200?",
      "created_at": "2021-01-04T17:59:32Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551475077",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551475077"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551511734",
      "pull_request_review_id": 561272517,
      "id": 551511734,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMTczNA==",
      "diff_hunk": "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "path": "test/functional/rpc_generateblock.py",
      "position": 45,
      "original_position": 35,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "in_reply_to_id": 551475077,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I bumped it from 110 blocks because I was getting premature spend when using 110 blocks. I think its because the utxos are sorted by value so their confirmations are somewhat arbitrary in the self._utxos. 200 seemed to be a quick and dirty fix.",
      "created_at": "2021-01-04T19:11:50Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551511734",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551511734"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551576038",
      "pull_request_review_id": 561354148,
      "id": 551576038,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU3NjAzOA==",
      "diff_hunk": "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "path": "test/functional/rpc_generateblock.py",
      "position": 82,
      "original_position": 71,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It doesn't seem totally related to what's being tested here, but one thing I noticed while reviewing:\r\n\r\nDo you know why, in the original code, `rpc_generateblock.py` sometimes does  `sendrawtransaction` and other times does not, before `generateblock`?\r\n\r\nie here `signed_raw2` was never submitted to the `node` with `sendrawtransaction`, while `txid1` was. \r\n\r\n",
      "created_at": "2021-01-04T21:22:13Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551576038",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551576038"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551578672",
      "pull_request_review_id": 561357345,
      "id": 551578672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTU3ODY3Mg==",
      "diff_hunk": "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "path": "test/functional/rpc_generateblock.py",
      "position": 45,
      "original_position": 35,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "in_reply_to_id": 551475077,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, you're right that it's bc the utxos are sorted by value in `MiniWallet` and a lot of them will be immature coin bases. I think what you have is good. But what I've usually done, and seen done before, is generating the utxos you need to spend with `mini_wallet.generate()`, and then generating 100 block with node, `node.generate(100)` so that all the utxos in `MiniWallet` are mature and good to go",
      "created_at": "2021-01-04T21:27:39Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551578672",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551578672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551605654",
      "pull_request_review_id": 561391326,
      "id": 551605654,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwNTY1NA==",
      "diff_hunk": "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "path": "test/functional/rpc_generateblock.py",
      "position": 82,
      "original_position": 71,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "in_reply_to_id": 551576038,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am not entirely sure, but my assumption while reading through the code was that it was to save a line of code.",
      "created_at": "2021-01-04T22:25:40Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551605654",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551605654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551607299",
      "pull_request_review_id": 561393240,
      "id": 551607299,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwNzI5OQ==",
      "diff_hunk": "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "path": "test/functional/rpc_generateblock.py",
      "position": 45,
      "original_position": 35,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "in_reply_to_id": 551475077,
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I pretty much approached with a similar style as described by @mjdietzx in `mempool_limit.py` as well to prevent premature spend error ",
      "created_at": "2021-01-04T22:29:16Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551607299",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551607299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551609818",
      "pull_request_review_id": 561396213,
      "id": 551609818,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYwOTgxOA==",
      "diff_hunk": "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend",
      "path": "test/functional/rpc_generateblock.py",
      "position": 45,
      "original_position": 35,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "in_reply_to_id": 551475077,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ya that certainly seems like a more coherent approach",
      "created_at": "2021-01-04T22:35:35Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551609818",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551609818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828175",
      "pull_request_review_id": 561654162,
      "id": 551828175,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyODE3NQ==",
      "diff_hunk": "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 57,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "1816feeddde9d56f31219d9c832dab710c34af9e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This will add the tx to the mempool, which is not wanted. the raw tx should only be passed to the miner",
      "created_at": "2021-01-05T09:56:48Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828527",
      "pull_request_review_id": 561654611,
      "id": 551828527,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyODUyNw==",
      "diff_hunk": "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 64,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "1816feeddde9d56f31219d9c832dab710c34af9e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "would be nice to use named arguments",
      "created_at": "2021-01-05T09:57:24Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r551828527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551828527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552044318",
      "pull_request_review_id": 561939374,
      "id": 552044318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA0NDMxOA==",
      "diff_hunk": "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 57,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "1816feeddde9d56f31219d9c832dab710c34af9e",
      "in_reply_to_id": 551828175,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "By \"not wanted\" you mean unnecessary @MarcoFalke? I only ask for my own understanding as the test passes in its current form.",
      "created_at": "2021-01-05T16:29:19Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552044318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552044318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254246",
      "pull_request_review_id": 562204408,
      "id": 552254246,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NDI0Ng==",
      "diff_hunk": "@@ -51,37 +51,34 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(200)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n+        rawtx = node.getrawtransaction(txid)\n+        hash = node.generateblock(address, [rawtx])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         txid = block['tx'][1]\n-        assert_equal(node.gettransaction(txid)['hex'], signed_raw)\n+        assert_equal(node.getrawtransaction(txid, False, hash), rawtx)\n \n         self.log.info('Fail to generate block with out of order txs')\n-        raw1 = node.createrawtransaction([{'txid':txid, 'vout':0}],[{address:0.9999}])\n-        signed_raw1 = node.signrawtransactionwithwallet(raw1)['hex']\n-        txid1 = node.sendrawtransaction(signed_raw1)\n-        raw2 = node.createrawtransaction([{'txid':txid1, 'vout':0}],[{address:0.999}])\n-        signed_raw2 = node.signrawtransactionwithwallet(raw2)['hex']\n-        assert_raises_rpc_error(-25, 'TestBlockValidity failed: bad-txns-inputs-missingorspent', node.generateblock, address, [signed_raw2, txid1])",
      "path": "test/functional/rpc_generateblock.py",
      "position": 82,
      "original_position": 71,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "4e8803e22f0cd8a71f7f81f67ed0137a667b63ce",
      "in_reply_to_id": 551576038,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`sendrawtransaction` submits the tx to mempool, while `createrawtransaction` + `signrawtransaction` merely creates the raw tx objects. Here, in the original test, tx1 is submitted and tx2 is not. It's calling `generateblock()` with the whole raw tx for tx2 and just the txid for tx1.\r\n\r\nSo, actually, your implementation doesn't really match what was there before. Be careful - [`generateblock`](https://github.com/bitcoin/bitcoin/blob/417f95fa453d97087a33d4176523ab278bef21a1/src/rpc/mining.cpp#L295) accepts hexstrings that can represent either txids (when the tx is already in mempool) or raw transactions.",
      "created_at": "2021-01-05T23:13:11Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254730",
      "pull_request_review_id": 562204408,
      "id": 552254730,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjI1NDczMA==",
      "diff_hunk": "@@ -51,37 +69,43 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 56,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "54bb428711e5ae90f8f3c176730688cbe5ea59cf",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can keep this as just 10. It'll fix your premature spend error; 10 outputs is enough for this test.\r\n```\r\nminiwallet.generate(10)\r\n```\r\n\r\n(oops, I put the suggestion on the wrong line - I mean only generate 10 on the miniwallet)",
      "created_at": "2021-01-05T23:14:34Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552254730",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552254730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552391964",
      "pull_request_review_id": 562351279,
      "id": 552391964,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM5MTk2NA==",
      "diff_hunk": "@@ -51,37 +51,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(100)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']\n         hash = node.generateblock(address, [txid])['hash']\n         block = node.getblock(hash, 1)\n         assert_equal(len(block['tx']), 2)\n         assert_equal(block['tx'][1], txid)\n \n         self.log.info('Generate block with raw tx')\n-        utxos = node.listunspent(addresses=[address])\n-        raw = node.createrawtransaction([{'txid':utxos[0]['txid'], 'vout':utxos[0]['vout']}],[{address:1}])\n-        signed_raw = node.signrawtransactionwithwallet(raw)['hex']\n-        hash = node.generateblock(address, [signed_raw])['hash']\n+        txid = miniwallet.send_self_transfer(from_node=node)['txid']",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 57,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "1816feeddde9d56f31219d9c832dab710c34af9e",
      "in_reply_to_id": 551828175,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Transactions for the miner are picked from the mempool, usually. This test should check that the tx can be supplied in raw form, not taking it from the mempool. Also, it tests that a miner can mine a tx that is not in the mempool.",
      "created_at": "2021-01-06T06:23:26Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r552391964",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552391964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554607313",
      "pull_request_review_id": 564890352,
      "id": 554607313,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwNzMxMw==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 58,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you do `hash = miniwallet.generate(1)[0][\"hash\"]` here? That way the coinbase will be appended to `miniwallet._utxos` in the way you're doing it and you won't have to duplicate logic",
      "created_at": "2021-01-10T18:49:40Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554607313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554607313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554607411",
      "pull_request_review_id": 564890352,
      "id": 554607411,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwNzQxMQ==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        utxos.append(utxo)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 62,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You should be able to remove this if you do `hash = miniwallet.generate(1)[0][\"hash\"]` instead",
      "created_at": "2021-01-10T18:50:26Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554607411",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554607411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 60,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554608202",
      "pull_request_review_id": 564890352,
      "id": 554608202,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwODIwMg==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        utxos.append(utxo)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 62,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": 554607411,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you still want the `utxo` in your list, you can then just do `utxos.append(miniwallet.get_utxo())`",
      "created_at": "2021-01-10T18:57:36Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554608202",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554608202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 60,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554608913",
      "pull_request_review_id": 564890352,
      "id": 554608913,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwODkxMw==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 53,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I know it's frowned upon, but thoughts on doing:\r\n```python\r\naddress = miniwallet._address\r\nscriptPubKey = miniwallet._scriptPubKey\r\n```\r\n\r\nOtherwise we're just duplicating that logic, and we can get rid of a bunch of imports. Maybe it's worth considering adding a getter for `address` and `scriptPubKey` to `MiniWallet` (although I don't see anything wrong just accessing the private vars)",
      "created_at": "2021-01-10T19:03:58Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554608913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554608913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 53,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554609512",
      "pull_request_review_id": 564890352,
      "id": 554609512,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwOTUxMg==",
      "diff_hunk": "@@ -51,37 +88,44 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(10)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        utxo = utxos.pop(0)\n+        rawtx = create_miniwallet_rawtx(utxo=utxo, scriptPubKey=scriptPubKey)\n+        txid = node.sendrawtransaction(rawtx)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 94,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not seeing how this is different than `miniwallet.send_self_transfer(...)`",
      "created_at": "2021-01-10T19:08:36Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554609512",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554609512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 100,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554609713",
      "pull_request_review_id": 564890352,
      "id": 554609713,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYwOTcxMw==",
      "diff_hunk": "@@ -51,37 +88,44 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(10)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        utxo = utxos.pop(0)\n+        rawtx = create_miniwallet_rawtx(utxo=utxo, scriptPubKey=scriptPubKey)\n+        txid = node.sendrawtransaction(rawtx)\n         hash = node.generateblock(address, [txid])['hash']\n-        block = node.getblock(hash, 1)\n+        block = node.getblock(hash, 2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': block['tx'][1]['txid'], 'vout': 0, 'value': block['tx'][1]['vout'][0]['value']}\n+        utxos.append(utxo)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 100,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you did miniwallet.send_self_transfer(...) as suggested above, you could get rid of this. Again, if you want the utxo in the list of utxos you are maintaining, you could do: utxos.append(miniwallet.get_utxo())",
      "created_at": "2021-01-10T19:10:24Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554609713",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554609713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 105,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554610229",
      "pull_request_review_id": 564890352,
      "id": 554610229,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMDIyOQ==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 29,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think @MarcoFalke is setting you up for a layup here https://github.com/bitcoin/bitcoin/pull/20876. Then @glozow suggests \"was just thinking that it'd be nice to have a just-create-don't-send option for the MiniWallet. What do you think of a bool option?\"\r\n\r\nI think this is the PR where this is needed. So I'd consider rebasing on-top of #20876, and adding this option to `send_self_transfer` as described here. Then you can utilize this extended functionality and ditch `create_miniwallet_rawtx`\r\n\r\nthoughts?",
      "created_at": "2021-01-10T19:15:11Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554610229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554610229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554610606",
      "pull_request_review_id": 564890352,
      "id": 554610606,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMDYwNg==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 54,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not convinced that we need to maintain our own utxo set. After some re-working (ie adding \"a just-create-don't-send option for the MiniWallet.\") I'm wondering if this can go away",
      "created_at": "2021-01-10T19:18:19Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554610606",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554610606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554611909",
      "pull_request_review_id": 564893377,
      "id": 554611909,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMTkwOQ==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 29,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": 554610229,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes I didn't like my approach but I wasn't sure I should touch the miniwallet class itself to add a `create_raw_transaction` function. So I think your suggestion is a nice solution.",
      "created_at": "2021-01-10T19:30:31Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554611909",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554611909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554613150",
      "pull_request_review_id": 564894284,
      "id": 554613150,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMzE1MA==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 29,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": 554610229,
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I did a similar thing in `mempool_limit` by adding a `prepare_tx` method in MiniWallet Class.\r\nlink: https://github.com/bitcoin/bitcoin/pull/20874/files#diff-7932a60a9127fd22d10d367526fd7b987f9647ce017595f8b1af5c32d5db0083R58\r\nTo be honest, it was just to avoid repetition, but I can see how it could be helpful for both of us\r\n\r\n",
      "created_at": "2021-01-10T19:41:37Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554613150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554613150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554613628",
      "pull_request_review_id": 564894606,
      "id": 554613628,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxMzYyOA==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 54,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": 554610606,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes it probably can go away. My only reasoning for maintaining this list was because I wasn't exactly sure how I could get MiniWallet access to the utxos created from `generateblock`, and even if it did, Miniwallet (in its current state) doesn't have the option to create a transaction not submitted to mempool.",
      "created_at": "2021-01-10T19:45:41Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554613628",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554613628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554614623",
      "pull_request_review_id": 564895297,
      "id": 554614623,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxNDYyMw==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):\n+        flat_fee = Decimal('0.001')\n+        send_value = satoshi_round(utxo['value'] - flat_fee)\n+\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(COutPoint(int(utxo['txid'], 16), utxo['vout']))]\n+        tx.vout = [CTxOut(int(send_value * COIN), scriptPubKey)]\n+        tx.wit.vtxinwit = [CTxInWitness()]\n+        tx.wit.vtxinwit[0].scriptWitness.stack = [CScript([OP_TRUE])]\n+        rawtx = tx.serialize().hex()\n+        return rawtx\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n+        scriptPubKey = hex_str_to_bytes(node.validateaddress(ADDRESS_BCRT1_P2WSH_OP_TRUE)['scriptPubKey'])\n+        utxos = []\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 58,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": 554607313,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought of doing something along the lines of that but shouldn't I be using `generateblock` explicitly in this test?",
      "created_at": "2021-01-10T19:54:39Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554614623",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554614623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554614840",
      "pull_request_review_id": 564895432,
      "id": 554614840,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxNDg0MA==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 29,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": 554610229,
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: shouldn't the name of the method be `create_and_sign_miniwallet_rawtx`?",
      "created_at": "2021-01-10T19:56:20Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554614840",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554614840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554615413",
      "pull_request_review_id": 564895844,
      "id": 554615413,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDYxNTQxMw==",
      "diff_hunk": "@@ -51,37 +88,44 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(10)\n+        node.generate(100)\n \n         # Generate some extra mempool transactions to verify they don't get mined\n         for _ in range(10):\n-            node.sendtoaddress(address, 0.001)\n+            miniwallet.send_self_transfer(from_node=node)\n \n         self.log.info('Generate block with txid')\n-        txid = node.sendtoaddress(address, 1)\n+        utxo = utxos.pop(0)\n+        rawtx = create_miniwallet_rawtx(utxo=utxo, scriptPubKey=scriptPubKey)\n+        txid = node.sendrawtransaction(rawtx)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 94,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": 554609512,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, it really isn't. It mostly just comes down to the blocks generated by `generateblock` not being appended to `self._utxos`. So what it comes down to is what the proper approach for appending to `self._utxos` is.",
      "created_at": "2021-01-10T20:01:51Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554615413",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554615413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 100,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554862558",
      "pull_request_review_id": 565124134,
      "id": 554862558,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg2MjU1OA==",
      "diff_hunk": "@@ -5,33 +5,70 @@\n '''Test generateblock rpc.\n '''\n \n+from decimal import Decimal\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.messages import (\n+    COIN,\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+)\n+from test_framework.script import (\n+    CScript,\n+    OP_TRUE,\n+)\n+from test_framework.util import (\n+    satoshi_round,\n+    hex_str_to_bytes,\n+)\n+from test_framework.wallet import MiniWallet\n+\n+def create_miniwallet_rawtx(utxo, scriptPubKey):",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 29,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "e5b7f5fd26d6bcc7bff7ecaf56b2d4b16c1060c7",
      "in_reply_to_id": 554610229,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @mjdietzx . Please rebase and add the bool option to #20876 ",
      "created_at": "2021-01-11T07:59:06Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r554862558",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554862558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555996983",
      "pull_request_review_id": 566569225,
      "id": 555996983,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk5Njk4Mw==",
      "diff_hunk": "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 30,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this necessary? I don't see why we need this Coinbase in our utxos. I don't see us specifically spending it, and if you remove this it gets rid of the potential problem of appending to mini wallets private `_utxos`",
      "created_at": "2021-01-12T18:47:41Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r555996983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555996983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556000512",
      "pull_request_review_id": 566569225,
      "id": 556000512,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAwMDUxMg==",
      "diff_hunk": "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 22,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": null,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I'm not sure if this really matters, but would it be better to use `miniwallet._address`? I know they are hard-coded to the same value rn\r\n\r\n@MarcoFalke what's you're opinion on this, would it be beneficial to add a getter to `MiniWallet`?\r\n```python\r\n@property\r\ndef address(self):\r\n  return self._address\r\n```",
      "created_at": "2021-01-12T18:53:41Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556000512",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556000512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556008019",
      "pull_request_review_id": 566588270,
      "id": 556008019,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAwODAxOQ==",
      "diff_hunk": "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 30,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": 555996983,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "10 blocks isn't enough for the test because the 10 generated by MiniWallet are sent to sit in the mempool not to be mined. So I can up the generated blocks to 11 and remove that code, or do this approach.",
      "created_at": "2021-01-12T19:06:36Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556008019",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556008019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556015910",
      "pull_request_review_id": 566611924,
      "id": 556015910,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAxNTkxMA==",
      "diff_hunk": "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 30,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": 555996983,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there any reason you need this specific utxo for this test? If you need 11, I'd say generate 11 blocks where you need them.\r\n\r\nbut the 10 generated by MiniWallet are definitely mined. ie if you synced another node, you'd see those blocks with the coinbases (utxos) you are spending. they aren't just in the mempool\r\n\r\nif I'm missing something please lmk, definitely possible",
      "created_at": "2021-01-12T19:20:24Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556015910",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556015910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556033753",
      "pull_request_review_id": 566629866,
      "id": 556033753,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAzMzc1Mw==",
      "diff_hunk": "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 30,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": 555996983,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I do not need that specific utxo for the test. I guess I should have elaborated more on my point. What I meant was that those 10 blocks are generated via `generate` and then are sent via `send_self_transfer`, however, those transactions are never confirmed. So while those new utxos are present within miniwallet generating a confirmed transaction based on them (because they are unconfirmed) isn't possible. Please correct me if I am wrong. Its probably just a better approach to generate 11.",
      "created_at": "2021-01-12T19:42:18Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556033753",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556033753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556037737",
      "pull_request_review_id": 566633857,
      "id": 556037737,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjAzNzczNw==",
      "diff_hunk": "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE\n \n         self.log.info('Generate an empty block to address')\n-        address = node.getnewaddress()\n         hash = node.generateblock(output=address, transactions=[])['hash']\n         block = node.getblock(blockhash=hash, verbose=2)\n+        tx = block['tx'][0]\n+        utxo = {'txid': tx['txid'], 'vout': 0, 'value': tx['vout'][0]['value']}\n+        miniwallet._utxos.append(utxo)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 30,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": 555996983,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah yeah, so the transactions you send with `send_self_transfer` are in the mempool. However, you could still spend them even though they are only in the mempool. And you could also generate a block, and all the transactions in the mempool would then be mined/confirmed (although I don't think this is necessary).\r\n\r\nI'd recommend generating 11 blocks for miniwallet if you need to send 11 utxos. Otherwise the 11th will pick one of the previous `send_self_transfer` utxos to spend (ie one of the transactions in the mempool is the parent of that new \"child\" txn)",
      "created_at": "2021-01-12T19:47:50Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556037737",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556037737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": 29,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556080918",
      "pull_request_review_id": 566685675,
      "id": 556080918,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjA4MDkxOA==",
      "diff_hunk": "@@ -55,8 +55,8 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n-        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None,  submit_tx=True):",
      "path": "test/functional/test_framework/wallet.py",
      "position": 26,
      "original_position": 6,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": null,
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm just wondering whether `rpc_generateblock.py` requires a `flat_fee` or a calculated fee? Because, if i'm not mistaken you used `flat_fee` in previous commits ",
      "created_at": "2021-01-12T20:46:26Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556080918",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556080918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556082342",
      "pull_request_review_id": 566685675,
      "id": 556082342,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjA4MjM0Mg==",
      "diff_hunk": "@@ -73,7 +73,8 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n         self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        if submit_tx:",
      "path": "test/functional/test_framework/wallet.py",
      "position": 36,
      "original_position": 16,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": null,
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "could this be something like `if not submit_tx: return tx` because that would help `mempool_limit.py` as well without much changes? ",
      "created_at": "2021-01-12T20:47:38Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556082342",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556082342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556098137",
      "pull_request_review_id": 566705231,
      "id": 556098137,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjA5ODEzNw==",
      "diff_hunk": "@@ -55,8 +55,8 @@ def get_utxo(self, *, txid=''):\n             index = self._utxos.index(utxo)\n         return self._utxos.pop(index)\n \n-    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None):\n-        \"\"\"Create and send a tx with the specified fee_rate. Fee may be exact or at most one satoshi higher than needed.\"\"\"\n+    def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_spend=None,  submit_tx=True):",
      "path": "test/functional/test_framework/wallet.py",
      "position": 26,
      "original_position": 6,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": 556080918,
      "user": {
        "login": "nginocchio",
        "id": 14829793,
        "node_id": "MDQ6VXNlcjE0ODI5Nzkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/14829793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nginocchio",
        "html_url": "https://github.com/nginocchio",
        "followers_url": "https://api.github.com/users/nginocchio/followers",
        "following_url": "https://api.github.com/users/nginocchio/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nginocchio/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nginocchio/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nginocchio/subscriptions",
        "organizations_url": "https://api.github.com/users/nginocchio/orgs",
        "repos_url": "https://api.github.com/users/nginocchio/repos",
        "events_url": "https://api.github.com/users/nginocchio/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nginocchio/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The fee was irrelevant to `rpc_generateblock.py` so I used a flat fee to reduce the amount of code in the helper function `create_miniwallet_rawtx`. `create_miniwallet_rawtx` now no longer needed in place of `send_self_transfer`.",
      "created_at": "2021-01-12T21:12:58Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r556098137",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/556098137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557533619",
      "pull_request_review_id": 568416670,
      "id": 557533619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzUzMzYxOQ==",
      "diff_hunk": "@@ -73,7 +73,8 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n         self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        if submit_tx:",
      "path": "test/functional/test_framework/wallet.py",
      "position": 36,
      "original_position": 16,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": 556082342,
      "user": {
        "login": "mjdietzx",
        "id": 7217256,
        "node_id": "MDQ6VXNlcjcyMTcyNTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mjdietzx",
        "html_url": "https://github.com/mjdietzx",
        "followers_url": "https://api.github.com/users/mjdietzx/followers",
        "following_url": "https://api.github.com/users/mjdietzx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mjdietzx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mjdietzx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
        "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
        "repos_url": "https://api.github.com/users/mjdietzx/repos",
        "events_url": "https://api.github.com/users/mjdietzx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You can also rebuild the `tx` from the `hex` field that this returns as-is I think\r\n```python\r\nfrom test_framework.messages import CTransaction, ToHex\r\nhex = wallet.send_self_transfer(...)[\"hex\"]\r\ntx = FromHex(CTransaction(), hex)\r\n```",
      "created_at": "2021-01-14T16:39:21Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r557533619",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557533619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558586823",
      "pull_request_review_id": 569610567,
      "id": 558586823,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU4NjgyMw==",
      "diff_hunk": "@@ -73,7 +73,8 @@ def send_self_transfer(self, *, fee_rate=Decimal(\"0.003\"), from_node, utxo_to_sp\n \n         tx_info = from_node.testmempoolaccept([tx_hex])[0]\n         self._utxos.append({'txid': tx_info['txid'], 'vout': 0, 'value': send_value})\n-        from_node.sendrawtransaction(tx_hex)\n+        if submit_tx:",
      "path": "test/functional/test_framework/wallet.py",
      "position": 36,
      "original_position": 16,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": 556082342,
      "user": {
        "login": "stackman27",
        "id": 26356227,
        "node_id": "MDQ6VXNlcjI2MzU2MjI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/26356227?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stackman27",
        "html_url": "https://github.com/stackman27",
        "followers_url": "https://api.github.com/users/stackman27/followers",
        "following_url": "https://api.github.com/users/stackman27/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stackman27/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stackman27/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stackman27/subscriptions",
        "organizations_url": "https://api.github.com/users/stackman27/orgs",
        "repos_url": "https://api.github.com/users/stackman27/repos",
        "events_url": "https://api.github.com/users/stackman27/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stackman27/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see thanks :)",
      "created_at": "2021-01-15T20:53:07Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r558586823",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/558586823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576982498",
      "pull_request_review_id": 591431920,
      "id": 576982498,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk4MjQ5OA==",
      "diff_hunk": "@@ -6,26 +6,29 @@\n '''\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.address import ADDRESS_BCRT1_P2WSH_OP_TRUE\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet import MiniWallet\n \n \n class GenerateBlockTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         node = self.nodes[0]\n+        miniwallet = MiniWallet(node)\n+        address = ADDRESS_BCRT1_P2WSH_OP_TRUE",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 22,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": 556000512,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it is fine to just make `_address` public (remove the underscore)",
      "created_at": "2021-02-16T16:58:18Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r576982498",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576982498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576982673",
      "pull_request_review_id": 591432134,
      "id": 576982673,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3Njk4MjY3Mw==",
      "diff_hunk": "@@ -51,37 +54,35 @@ def run_test(self):\n         assert_equal(len(block['tx']), 1)\n         assert_equal(block['tx'][0]['vout'][0]['scriptPubKey']['addresses'][0], combo_address)\n \n-        # Generate 110 blocks to spend\n-        node.generatetoaddress(110, address)\n+        # Generate some blocks to spend\n+        miniwallet.generate(10)\n+        node.generate(100)",
      "path": "test/functional/rpc_generateblock.py",
      "position": null,
      "original_position": 42,
      "commit_id": "c4fb4148259082ce4932838b42d96c2edd6c15df",
      "original_commit_id": "69e47b1f8801d14de2044ebac2248b619b9fa63d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": " Generating blocks takes a few seconds in valgrind, so I am thinking if this test may benefit from using `miniwallet.scan_blocks` (to be introduced in #21200)",
      "created_at": "2021-02-16T16:58:31Z",
      "updated_at": "2021-03-01T21:54:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20808#discussion_r576982673",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/576982673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20808"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    }
  ]
}