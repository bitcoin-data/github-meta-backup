{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968",
    "id": 1042507625,
    "node_id": "PR_kwDOABII584-I2dp",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25968",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25968.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25968.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25968",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25968/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/746a829489b5707dc92f14471979611783719d3b",
    "number": 25968,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Optimizations & simplifications following #25717",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This contains a list of most-unrelated simplifications and optimizations to the code merged in #25717:\r\n* **Make `ProcessNextHeaders` replace the headers argument**: this allows reusing the same vector storage for input and output headers to `HeadersSync::ProcessNextHeaders`. I find it also natural in the sense that this argument just represents the headers-to-be-processed, both in the caller and the callee, and both before and after the calls.\r\n* **Make `ProcessNextHeaders` support empty headers message**: remove the special case in `ProcessHeadersMessage` dealing with empty headers messages, and instead let `HeadersSync` deal with it correctly.\r\n* **Simplify `TryLowWorkHeadersSync` invocation**: make use of the fact that now `TryLowWorkHeadersSync` is (like `IsContinuationOfLowWorkHeadersSync`) an operation that partially processes headers, it can be invoked in a similar way, bailing out when there is nothing left to do.\r\n* **Avoid an `IsAncestorOfBestHeaderOrTip` call**: just don't call this function when it won't have any effect\r\n* **Compute work from headers without `CBlockIndex`**: avoid the need to construct a `CBlockIndex` object just to compute work for a header, when its `nBits` value suffices for that. Also use some `Span`s where possible.\r\n* **Remove useless `CBlock::GetBlockHeader` (it inherits from it)**: There is no need for a function to convert a `CBlock` to a `CBlockHeader`, as it's a child class of it.\r\n\r\nThese are not reactions to review feedback, and isn't intended for 24.0.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 749416508,
        "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
        "name": "Up for grabs",
        "color": "99a810",
        "default": false
      }
    ],
    "created_at": "2022-08-31T14:59:06Z",
    "updated_at": "2023-04-25T15:05:16Z",
    "closed_at": "2023-04-25T15:05:16Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "9d6793262cfcb6c9e09afeff7b23883d9e3dee80",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sipa:202208_headerssync_optimize",
      "ref": "202208_headerssync_optimize",
      "sha": "746a829489b5707dc92f14471979611783719d3b",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 81,
        "watchers_count": 81,
        "size": 215860,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T11:52:48Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-04-30T00:52:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "29d540b7ada890dd588c4825d40c27c5e6f20061",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 72,
    "deletions": 103,
    "changed_files": 13,
    "commits": 6,
    "review_comments": 12,
    "comments": 5
  },
  "events": [
    {
      "event": "labeled",
      "id": 7297251292,
      "node_id": "LE_lADOABII585Q6Uw7zwAAAAGy8zfc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7297251292",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-31T14:59:42Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7297607614,
      "node_id": "HRFPE_lADOABII585Q6Uw7zwAAAAGy-Ke-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7297607614",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-31T15:40:11Z"
    },
    {
      "event": "milestoned",
      "id": 7299118640,
      "node_id": "MIE_lADOABII585Q6Uw7zwAAAAGzD7Yw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7299118640",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-31T19:23:28Z",
      "milestone": {
        "title": "25.0"
      }
    },
    {
      "event": "commented",
      "id": 1233845645,
      "node_id": "IC_kwDOABII585Jiv2N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1233845645",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T07:12:45Z",
      "updated_at": "2022-09-01T07:12:45Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, light code review ACK e0025e6c21d0429e66d33b0520b71b5180ffc0cc\r\n\r\n-----------\r\n\r\nI think it would save us some time in the future if you duplicate the descriptions from the PR post in commit messages.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1233845645",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25968"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlN2FjN2I5NGQwNGUwNTZlOTk5NGVkMWM4MjczYzUyYjdiMjM5MzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e7ac7b94d04e056e9994ed1c8273c52b7b23931",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e7ac7b94d04e056e9994ed1c8273c52b7b23931",
      "tree": {
        "sha": "109b5d3630ace50e4b25b964612de3fc31e7be2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/109b5d3630ace50e4b25b964612de3fc31e7be2c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5c224d444802dabec5841009e029b9754c92f1",
          "sha": "fa5c224d444802dabec5841009e029b9754c92f1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5c224d444802dabec5841009e029b9754c92f1"
        }
      ],
      "message": "Make ProcessNextHeaders use the headers argument as in/out\n\nThis allows reusing the same vector storage for input and output headers to\nHeadersSync::ProcessNextHeaders. It's also natural in the sense that this argument\njust represents the headers-to-be-processed, both in the caller and the callee, and\nboth before and after the calls.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-09-01T12:30:09Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-08-23T21:29:37Z"
      },
      "sha": "4e7ac7b94d04e056e9994ed1c8273c52b7b23931"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiNTJmYjRlOTVhYTI3MzJkMWExMzkxMzMxZWEwMTM2MmUwMzU5ODQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab52fb4e95aa2732d1a1391331ea01362e035984",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab52fb4e95aa2732d1a1391331ea01362e035984",
      "tree": {
        "sha": "bb27c888da88a48bd4384fe2e062b09129a10edd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb27c888da88a48bd4384fe2e062b09129a10edd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e7ac7b94d04e056e9994ed1c8273c52b7b23931",
          "sha": "4e7ac7b94d04e056e9994ed1c8273c52b7b23931",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e7ac7b94d04e056e9994ed1c8273c52b7b23931"
        }
      ],
      "message": "Make ProcessNextHeaders support empty headers message\n\nRemove the special case in ProcessHeadersMessage dealing with empty headers\nmessages, and instead let the HeadersSync class deal with it correctly.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-09-01T12:30:11Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-08-23T21:46:53Z"
      },
      "sha": "ab52fb4e95aa2732d1a1391331ea01362e035984"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdmMWNmNDQwY2ExYTljODYwODU3MTY3NDVjYTY0ZDNhYzI2OTU3YzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f1cf440ca1a9c86085716745ca64d3ac26957c0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7f1cf440ca1a9c86085716745ca64d3ac26957c0",
      "tree": {
        "sha": "a15a383f3015907c02d8433f7ab19ab0dd46a8c9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a15a383f3015907c02d8433f7ab19ab0dd46a8c9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab52fb4e95aa2732d1a1391331ea01362e035984",
          "sha": "ab52fb4e95aa2732d1a1391331ea01362e035984",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab52fb4e95aa2732d1a1391331ea01362e035984"
        }
      ],
      "message": "Simplify TryLowWorkHeadersSync invocation\n\nMake use of the fact that now TryLowWorkHeadersSync is (like\nIsContinuationOfLowWorkHeadersSync) an operation that partially processes headers, so\nit can be invoked in a similar way, only bailing out when there is nothing left to do.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-09-01T12:30:12Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-08-23T21:57:42Z"
      },
      "sha": "7f1cf440ca1a9c86085716745ca64d3ac26957c0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmY2NlNDAxNTc0NzlmMDY5NTIxYmE1ZWNkZGIxMjhlNjYwMzc4MjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fcce40157479f069521ba5ecddb128e66037824",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1fcce40157479f069521ba5ecddb128e66037824",
      "tree": {
        "sha": "29af8e066d3ac4b8686fd44185e8851b4addeaee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29af8e066d3ac4b8686fd44185e8851b4addeaee"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f1cf440ca1a9c86085716745ca64d3ac26957c0",
          "sha": "7f1cf440ca1a9c86085716745ca64d3ac26957c0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7f1cf440ca1a9c86085716745ca64d3ac26957c0"
        }
      ],
      "message": "Avoid an IsAncestorOfBestHeaderOrTip call\n\nJust don't call this function when it won't have any effect.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-09-01T12:30:13Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-08-23T22:19:51Z"
      },
      "sha": "1fcce40157479f069521ba5ecddb128e66037824"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU2NWE3OGM1NjAxOTI0OWZhODhlOWM1MWI3OWFlN2Q5NGJjZGM4Zjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/565a78c56019249fa88e9c51b79ae7d94bcdc8f7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/565a78c56019249fa88e9c51b79ae7d94bcdc8f7",
      "tree": {
        "sha": "ea41df276e32070fbaa23efcd52ea8b1f1753d2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea41df276e32070fbaa23efcd52ea8b1f1753d2f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fcce40157479f069521ba5ecddb128e66037824",
          "sha": "1fcce40157479f069521ba5ecddb128e66037824",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1fcce40157479f069521ba5ecddb128e66037824"
        }
      ],
      "message": "Compute work from headers without CBlockIndex\n\nAvoid the need to construct a CBlockIndex object just to compute work for a header,\nwhen its nBits value suffices for that. Also use some Spans where possible.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-09-01T12:30:14Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-08-31T14:40:03Z"
      },
      "sha": "565a78c56019249fa88e9c51b79ae7d94bcdc8f7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc0NmE4Mjk0ODliNTcwN2RjOTJmMTQ0NzE5Nzk2MTE3ODM3MTlkM2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/746a829489b5707dc92f14471979611783719d3b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/746a829489b5707dc92f14471979611783719d3b",
      "tree": {
        "sha": "0e16231601e29ba0e12c1a9404ea54b8596569ef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e16231601e29ba0e12c1a9404ea54b8596569ef"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/565a78c56019249fa88e9c51b79ae7d94bcdc8f7",
          "sha": "565a78c56019249fa88e9c51b79ae7d94bcdc8f7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/565a78c56019249fa88e9c51b79ae7d94bcdc8f7"
        }
      ],
      "message": "Remove useless CBlock::GetBlockHeader\n\nThere is no need for a function to convert a CBlock to a CBlockHeader, as it's a child\nclass of it.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-09-01T12:30:15Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2022-08-31T14:47:16Z"
      },
      "sha": "746a829489b5707dc92f14471979611783719d3b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7304804653,
      "node_id": "HRFPE_lADOABII585Q6Uw7zwAAAAGzZnkt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7304804653",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T12:30:40Z"
    },
    {
      "event": "commented",
      "id": 1234214515,
      "node_id": "IC_kwDOABII585JkJ5z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1234214515",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T12:30:47Z",
      "updated_at": "2022-09-01T12:30:47Z",
      "author_association": "MEMBER",
      "body": "@naumenkogs Fair point, done.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1234214515",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25968"
    },
    {
      "event": "mentioned",
      "id": 7304805763,
      "node_id": "MEE_lADOABII585Q6Uw7zwAAAAGzZn2D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7304805763",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T12:30:48Z"
    },
    {
      "event": "subscribed",
      "id": 7304805774,
      "node_id": "SE_lADOABII585Q6Uw7zwAAAAGzZn2O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7304805774",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T12:30:48Z"
    },
    {
      "event": "reviewed",
      "id": 1096400728,
      "node_id": "PRR_kwDOABII585BWb9Y",
      "url": null,
      "actor": null,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Some additional improvements, feel free to ignore.\r\n\r\nThis param seem to be unused\r\n <details>\r\n  <summary>Git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex d029b883c..d099f9d90 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3708,7 +3708,7 @@ bool ChainstateManager::ProcessNewBlockHeaders(const std::vector<CBlockHeader>&\r\n     return true;\r\n }\r\n \r\n-void ChainstateManager::ReportHeadersPresync(const arith_uint256& work, int64_t height, int64_t timestamp)\r\n+void ChainstateManager::ReportHeadersPresync(int64_t height, int64_t timestamp)\r\n {\r\n     AssertLockNotHeld(cs_main);\r\n     const auto& chainstate = ActiveChainstate();\r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex af7e65a54..ac5a3e5c4 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -1051,7 +1051,7 @@ public:\r\n      *  headers are not yet fed to validation during that time, but validation is (for now)\r\n      *  responsible for logging and signalling through NotifyHeaderTip, so it needs this\r\n      *  information. */\r\n-    void ReportHeadersPresync(const arith_uint256& work, int64_t height, int64_t timestamp);\r\n+    void ReportHeadersPresync(int64_t height, int64_t timestamp);\r\n \r\n     ~ChainstateManager();\r\n };\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex b74675916..1a1c75406 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -4380,7 +4380,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n                 if (it != m_headers_presync_stats.end()) stats = it->second;\r\n             }\r\n             if (stats.second) {\r\n-                m_chainman.ReportHeadersPresync(stats.first, stats.second->first, stats.second->second);\r\n+                m_chainman.ReportHeadersPresync(stats.second->first, stats.second->second);\r\n             }\r\n         }\r\n```\r\n</details> \r\n\r\nUse initializer list instead of constructor body + const\r\n <details>\r\n  <summary>Git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/headerssync.h b/src/headerssync.h\r\nindex 566e95ae2..d59df8e0c 100644\r\n--- a/src/headerssync.h\r\n+++ b/src/headerssync.h\r\n@@ -31,16 +31,14 @@ struct CompressedHeader {\r\n         hashMerkleRoot.SetNull();\r\n     }\r\n \r\n-    CompressedHeader(const CBlockHeader& header)\r\n-    {\r\n-        nVersion = header.nVersion;\r\n-        hashMerkleRoot = header.hashMerkleRoot;\r\n-        nTime = header.nTime;\r\n-        nBits = header.nBits;\r\n-        nNonce = header.nNonce;\r\n-    }\r\n-\r\n-    CBlockHeader GetFullHeader(const uint256& hash_prev_block) {\r\n+    CompressedHeader(const CBlockHeader& header) :\r\n+        nVersion(header.nVersion),\r\n+        hashMerkleRoot(header.hashMerkleRoot),\r\n+        nTime(header.nTime),\r\n+        nBits(header.nBits),\r\n+        nNonce(header.nNonce) {}\r\n+\r\n+    CBlockHeader GetFullHeader(const uint256& hash_prev_block) const {\r\n         CBlockHeader ret;\r\n         ret.nVersion = nVersion;\r\n         ret.hashPrevBlock = hash_prev_block;\r\n```\r\n</details> ",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#pullrequestreview-1096400728",
      "submitted_at": "2022-09-05T13:20:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
    },
    {
      "event": "reviewed",
      "id": 1096725703,
      "node_id": "PRR_kwDOABII585BXrTH",
      "url": null,
      "actor": null,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#pullrequestreview-1096725703",
      "submitted_at": "2022-09-05T19:23:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
    },
    {
      "event": "reviewed",
      "id": 1097457648,
      "node_id": "PRR_kwDOABII585Bad_w",
      "url": null,
      "actor": null,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some more cleanup ideas",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#pullrequestreview-1097457648",
      "submitted_at": "2022-09-09T09:58:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
    },
    {
      "event": "commented",
      "id": 1245443307,
      "node_id": "IC_kwDOABII585KO_Tr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245443307",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T13:50:17Z",
      "updated_at": "2023-02-17T15:00:23Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1233845645) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1245443307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25968"
    },
    {
      "event": "commented",
      "id": 1434766905,
      "node_id": "IC_kwDOABII585VhM45",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1434766905",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-17T15:00:20Z",
      "updated_at": "2023-02-17T15:00:50Z",
      "author_association": "MEMBER",
      "body": "@sipa are you inteterested in addressing the review feedback here?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1434766905",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25968"
    },
    {
      "event": "mentioned",
      "id": 8548058646,
      "node_id": "MEE_lADOABII585Q6Uw7zwAAAAH9gQYW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8548058646",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-17T15:00:21Z"
    },
    {
      "event": "subscribed",
      "id": 8548058669,
      "node_id": "SE_lADOABII585Q6Uw7zwAAAAH9gQYt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8548058669",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-17T15:00:21Z"
    },
    {
      "event": "demilestoned",
      "id": 9000313487,
      "node_id": "DEME_lADOABII585Q6Uw7zwAAAAIYdeKP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9000313487",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-13T19:06:12Z",
      "milestone": {
        "title": "25.0"
      }
    },
    {
      "event": "labeled",
      "id": 9093554228,
      "node_id": "LE_lADOABII585Q6Uw7zwAAAAIeBKA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9093554228",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-25T15:04:43Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "commented",
      "id": 1521954195,
      "node_id": "IC_kwDOABII585aty2T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1521954195",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-25T15:04:56Z",
      "updated_at": "2023-04-25T15:04:56Z",
      "author_association": "MEMBER",
      "body": "Closing as up for grabs.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#issuecomment-1521954195",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25968"
    },
    {
      "event": "closed",
      "id": 9093560760,
      "node_id": "CE_lADOABII585Q6Uw7zwAAAAIeBLm4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9093560760",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-25T15:05:16Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962870412",
      "pull_request_review_id": 1096400728,
      "id": 962870412,
      "node_id": "PRRC_kwDOABII5845ZDyM",
      "diff_hunk": "@@ -138,13 +136,11 @@ HeadersSyncState::ProcessingResult HeadersSyncState::ProcessNextHeaders(const\n \n bool HeadersSyncState::ValidateAndStoreHeadersCommitments(const std::vector<CBlockHeader>& headers)\n {\n-    // The caller should not give us an empty set of headers.\n-    Assume(headers.size() > 0);\n-    if (headers.size() == 0) return true;\n-\n     Assume(m_download_state == State::PRESYNC);\n     if (m_download_state != State::PRESYNC) return false;\n \n+    if (headers.size() == 0) return true;",
      "path": "src/headerssync.cpp",
      "position": 59,
      "original_position": 59,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "original_commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit\r\n```suggestion\r\n    if (headers.empty()) return true;\r\n```",
      "created_at": "2022-09-05T12:45:12Z",
      "updated_at": "2022-09-05T13:20:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r962870412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962870412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 142,
      "original_line": 142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962896407",
      "pull_request_review_id": 1096400728,
      "id": 962896407,
      "node_id": "PRRC_kwDOABII5845ZKIX",
      "diff_hunk": "@@ -3432,19 +3432,16 @@ std::vector<unsigned char> ChainstateManager::GenerateCoinbaseCommitment(CBlock&\n     return commitment;\n }\n \n-bool HasValidProofOfWork(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams)\n+bool HasValidProofOfWork(Span<const CBlockHeader> headers, const Consensus::Params& consensusParams)\n {\n-    return std::all_of(headers.cbegin(), headers.cend(),\n+    return std::all_of(headers.begin(), headers.end(),\n             [&](const auto& header) { return CheckProofOfWork(header.GetHash(), header.nBits, consensusParams);});\n }\n \n-arith_uint256 CalculateHeadersWork(const std::vector<CBlockHeader>& headers)\n+arith_uint256 CalculateHeadersWork(Span<const CBlockHeader> headers)\n {\n     arith_uint256 total_work{0};\n-    for (const CBlockHeader& header : headers) {\n-        CBlockIndex dummy(header);\n-        total_work += GetBlockProof(dummy);\n-    }\n+    for (const CBlockHeader& header : headers) total_work += GetBlockProof(header);",
      "path": "src/validation.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "original_commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(nit) i believe in most cases std::accumulate is faster than a for loop\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex d029b883c..648139b1f 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3440,9 +3440,8 @@ bool HasValidProofOfWork(Span<const CBlockHeader> headers, const Consensus::Para\r\n \r\n arith_uint256 CalculateHeadersWork(Span<const CBlockHeader> headers)\r\n {\r\n-    arith_uint256 total_work{0};\r\n-    for (const CBlockHeader& header : headers) total_work += GetBlockProof(header);\r\n-    return total_work;\r\n+    return std::accumulate(headers.begin(), headers.end(), arith_uint256{0},\r\n+            [](arith_uint256 total_work, const CBlockHeader& header) { return total_work + GetBlockProof(header);});\r\n }\r\n```",
      "created_at": "2022-09-05T13:13:50Z",
      "updated_at": "2022-09-05T13:20:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r962896407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962896407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3444,
      "original_line": 3444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093759",
      "pull_request_review_id": 1096725703,
      "id": 963093759,
      "node_id": "PRRC_kwDOABII5845Z6T_",
      "diff_hunk": "@@ -2726,20 +2726,6 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n {\n     size_t nCount = headers.size();\n ",
      "path": "src/net_processing.cpp",
      "position": 16,
      "original_position": 3,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "original_commit_id": "ab52fb4e95aa2732d1a1391331ea01362e035984",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can be moved just before usage L2774 to save a `size()` invocation.",
      "created_at": "2022-09-05T19:00:22Z",
      "updated_at": "2022-09-05T19:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963093759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2728,
      "original_line": 2728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093968",
      "pull_request_review_id": 1096725703,
      "id": 963093968,
      "node_id": "PRRC_kwDOABII5845Z6XQ",
      "diff_hunk": "@@ -2726,20 +2726,6 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n {\n     size_t nCount = headers.size();\n \n-    if (nCount == 0) {\n-        // Nothing interesting. Stop asking this peers for more headers.\n-        // If we were in the middle of headers sync, receiving an empty headers\n-        // message suggests that the peer suddenly has nothing to give us\n-        // (perhaps it reorged to our chain). Clear download state for this peer.\n-        LOCK(peer.m_headers_sync_mutex);\n-        if (peer.m_headers_sync) {\n-            peer.m_headers_sync.reset(nullptr);\n-            LOCK(m_headers_presync_mutex);\n-            m_headers_presync_stats.erase(pfrom.GetId());",
      "path": "src/net_processing.cpp",
      "position": 26,
      "original_position": 13,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "original_commit_id": "ab52fb4e95aa2732d1a1391331ea01362e035984",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to reviewers the state is finalized L133 in `ProcessNextHeaders()`.",
      "created_at": "2022-09-05T19:01:12Z",
      "updated_at": "2022-09-05T19:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963093968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963093968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2744,
      "original_line": 2738,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963096587",
      "pull_request_review_id": 1096725703,
      "id": 963096587,
      "node_id": "PRRC_kwDOABII5845Z7AL",
      "diff_hunk": "@@ -2807,14 +2807,14 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     // At this point, the headers connect to something in our block index.\n     // Do anti-DoS checks to determine if we should process or store for later\n     // processing.\n-    if (!already_validated_work && TryLowWorkHeadersSync(peer, pfrom,\n-                chain_start_header, headers)) {\n-        // If we successfully started a low-work headers sync, then there\n-        // should be no headers to process any further.\n-        Assume(headers.empty());\n-        return;\n+    if (!already_validated_work) {\n+        already_validated_work = TryLowWorkHeadersSync(peer, pfrom, chain_start_header, headers);\n+        have_headers_sync = already_validated_work;",
      "path": "src/net_processing.cpp",
      "position": 74,
      "original_position": 12,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "original_commit_id": "7f1cf440ca1a9c86085716745ca64d3ac26957c0",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not assigning directly the result of `TryLowWOrkHeadersSync()` to `have_headers_sync` here? For some code clarity?",
      "created_at": "2022-09-05T19:10:35Z",
      "updated_at": "2022-09-05T19:23:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963096587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963096587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2812,
      "original_line": 2812,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963618705",
      "pull_request_review_id": 1097457648,
      "id": 963618705,
      "node_id": "PRRC_kwDOABII5845b6eR",
      "diff_hunk": "@@ -2514,12 +2514,6 @@ bool PeerManagerImpl::IsContinuationOfLowWorkHeadersSync(Peer& peer, CNode& pfro\n             }",
      "path": "src/net_processing.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "original_commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unrelated 25717 cleanup, in this file: No need to pass members into member functions:\r\n\r\n```diff\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 74700580ad..8e80bd7aef 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -604,7 +604,7 @@ private:\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_headers_presync_mutex);\r\n     /** Various helpers for headers processing, invoked by ProcessHeadersMessage() */\r\n     /** Return true if headers are continuous and have valid proof-of-work (DoS points assigned on failure) */\r\n-    bool CheckHeadersPoW(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams, Peer& peer);\r\n+    bool CheckHeadersPoW(const std::vector<CBlockHeader>& headers, Peer& peer);\r\n     /** Calculate an anti-DoS work threshold for headers chains */\r\n     arith_uint256 GetAntiDoSWorkThreshold();\r\n     /** Deal with state tracking and headers sync for peers that send the\r\n@@ -2360,10 +2360,10 @@ void PeerManagerImpl::SendBlockTransactions(CNode& pfrom, Peer& peer, const CBlo\r\n     m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCKTXN, resp));\r\n }\r\n \r\n-bool PeerManagerImpl::CheckHeadersPoW(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams, Peer& peer)\r\n+bool PeerManagerImpl::CheckHeadersPoW(const std::vector<CBlockHeader>& headers, Peer& peer)\r\n {\r\n     // Do these headers have proof-of-work matching what's claimed?\r\n-    if (!HasValidProofOfWork(headers, consensusParams)) {\r\n+    if (!HasValidProofOfWork(headers, m_chainparams.GetConsensus())) {\r\n         Misbehaving(peer, 100, \"header with invalid proof of work\");\r\n         return false;\r\n     }\r\n@@ -2750,7 +2750,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\r\n     // We'll rely on headers having valid proof-of-work further down, as an\r\n     // anti-DoS criteria (note: this check is required before passing any\r\n     // headers into HeadersSyncState).\r\n-    if (!CheckHeadersPoW(headers, m_chainparams.GetConsensus(), peer)) {\r\n+    if (!CheckHeadersPoW(headers, peer)) {\r\n         // Misbehaving() calls are handled within CheckHeadersPoW(), so we can\r\n         // just return. (Note that even if a header is announced via compact\r\n         // block, the header itself should be valid, so this type of error can\r\n",
      "created_at": "2022-09-06T12:04:41Z",
      "updated_at": "2022-09-09T09:58:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963618705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963618705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2514,
      "original_line": 2514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963634928",
      "pull_request_review_id": 1097457648,
      "id": 963634928,
      "node_id": "PRRC_kwDOABII5845b-bw",
      "diff_hunk": "@@ -2830,14 +2807,14 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     // At this point, the headers connect to something in our block index.\n     // Do anti-DoS checks to determine if we should process or store for later\n     // processing.\n-    if (!already_validated_work && TryLowWorkHeadersSync(peer, pfrom,\n-                chain_start_header, headers)) {\n-        // If we successfully started a low-work headers sync, then there\n-        // should be no headers to process any further.\n-        Assume(headers.empty());\n-        return;\n+    if (!already_validated_work) {\n+        already_validated_work = TryLowWorkHeadersSync(peer, pfrom, chain_start_header, headers);",
      "path": "src/net_processing.cpp",
      "position": 73,
      "original_position": 73,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "original_commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unrelated, but in this line: A raw pointer that is never null is better passed as a reference.\r\n\r\n```diff\r\ndiff --git a/src/headerssync.cpp b/src/headerssync.cpp\r\nindex 757b942cd9..18ffe65161 100644\r\n--- a/src/headerssync.cpp\r\n+++ b/src/headerssync.cpp\r\n@@ -23,14 +23,14 @@ constexpr size_t REDOWNLOAD_BUFFER_SIZE{13959}; // 13959/584 = ~23.9 commitments\r\n static_assert(sizeof(CompressedHeader) == 48);\r\n \r\n HeadersSyncState::HeadersSyncState(NodeId id, const Consensus::Params& consensus_params,\r\n-        const CBlockIndex* chain_start, const arith_uint256& minimum_required_work) :\r\n+        const CBlockIndex& chain_start, const arith_uint256& minimum_required_work) :\r\n     m_id(id), m_consensus_params(consensus_params),\r\n     m_chain_start(chain_start),\r\n     m_minimum_required_work(minimum_required_work),\r\n-    m_current_chain_work(chain_start->nChainWork),\r\n+    m_current_chain_work{chain_start.nChainWork},\r\n     m_commit_offset(GetRand<unsigned>(HEADER_COMMITMENT_PERIOD)),\r\n-    m_last_header_received(m_chain_start->GetBlockHeader()),\r\n-    m_current_height(chain_start->nHeight)\r\n+    m_last_header_received{chain_start.GetBlockHeader()},\r\n+    m_current_height{chain_start.nHeight}\r\n {\r\n     // Estimate the number of blocks that could possibly exist on the peer's\r\n     // chain *right now* using 6 blocks/second (fastest blockrate given the MTP\r\n@@ -40,7 +40,7 @@ HeadersSyncState::HeadersSyncState(NodeId id, const Consensus::Params& consensus\r\n     // exceeds this bound, because it's not possible for a consensus-valid\r\n     // chain to be longer than this (at the current time -- in the future we\r\n     // could try again, if necessary, to sync a longer chain).\r\n-    m_max_commitments = 6*(Ticks<std::chrono::seconds>(GetAdjustedTime() - NodeSeconds{std::chrono::seconds{chain_start->GetMedianTimePast()}}) + MAX_FUTURE_BLOCK_TIME) / HEADER_COMMITMENT_PERIOD;\r\n+    m_max_commitments = 6*(Ticks<std::chrono::seconds>(GetAdjustedTime() - NodeSeconds{std::chrono::seconds{chain_start.GetMedianTimePast()}}) + MAX_FUTURE_BLOCK_TIME) / HEADER_COMMITMENT_PERIOD;\r\n \r\n     LogPrint(BCLog::NET, \"Initial headers sync started with peer=%d: height=%i, max_commitments=%i, min_work=%s\\n\", m_id, m_current_height, m_max_commitments, m_minimum_required_work.ToString());\r\n }\r\n@@ -164,10 +164,10 @@ bool HeadersSyncState::ValidateAndStoreHeadersCommitments(const std::vector<CBlo\r\n \r\n     if (m_current_chain_work >= m_minimum_required_work) {\r\n         m_redownloaded_headers.clear();\r\n-        m_redownload_buffer_last_height = m_chain_start->nHeight;\r\n-        m_redownload_buffer_first_prev_hash = m_chain_start->GetBlockHash();\r\n-        m_redownload_buffer_last_hash = m_chain_start->GetBlockHash();\r\n-        m_redownload_chain_work = m_chain_start->nChainWork;\r\n+        m_redownload_buffer_last_height = m_chain_start.nHeight;\r\n+        m_redownload_buffer_first_prev_hash = m_chain_start.GetBlockHash();\r\n+        m_redownload_buffer_last_hash = m_chain_start.GetBlockHash();\r\n+        m_redownload_chain_work = m_chain_start.nChainWork;\r\n         m_download_state = State::REDOWNLOAD;\r\n         LogPrint(BCLog::NET, \"Initial headers sync transition with peer=%d: reached sufficient work at height=%i, redownloading from height=%i\\n\", m_id, m_current_height, m_redownload_buffer_last_height);\r\n     }\r\n@@ -231,7 +231,7 @@ bool HeadersSyncState::ValidateAndStoreRedownloadedHeader(const CBlockHeader& he\r\n     if (!m_redownloaded_headers.empty()) {\r\n         previous_nBits = m_redownloaded_headers.back().nBits;\r\n     } else {\r\n-        previous_nBits = m_chain_start->nBits;\r\n+        previous_nBits = m_chain_start.nBits;\r\n     }\r\n \r\n     if (!PermittedDifficultyTransition(m_consensus_params, next_height,\r\n@@ -298,7 +298,7 @@ CBlockLocator HeadersSyncState::NextHeadersRequestLocator() const\r\n     Assume(m_download_state != State::FINAL);\r\n     if (m_download_state == State::FINAL) return {};\r\n \r\n-    auto chain_start_locator = LocatorEntries(m_chain_start);\r\n+    auto chain_start_locator = LocatorEntries(&m_chain_start);\r\n     std::vector<uint256> locator;\r\n \r\n     if (m_download_state == State::PRESYNC) {\r\ndiff --git a/src/headerssync.h b/src/headerssync.h\r\nindex 16da964246..6455b7dae6 100644\r\n--- a/src/headerssync.h\r\n+++ b/src/headerssync.h\r\n@@ -136,7 +136,7 @@ public:\r\n      * minimum_required_work: amount of chain work required to accept the chain\r\n      */\r\n     HeadersSyncState(NodeId id, const Consensus::Params& consensus_params,\r\n-            const CBlockIndex* chain_start, const arith_uint256& minimum_required_work);\r\n+            const CBlockIndex& chain_start, const arith_uint256& minimum_required_work);\r\n \r\n     /** Result data structure for ProcessNextHeaders. */\r\n     struct ProcessingResult {\r\n@@ -208,7 +208,7 @@ private:\r\n     const Consensus::Params& m_consensus_params;\r\n \r\n     /** Store the last block in our block index that the peer's chain builds from */\r\n-    const CBlockIndex* m_chain_start{nullptr};\r\n+    const CBlockIndex& m_chain_start;\r\n \r\n     /** Minimum work that we're looking for on this chain. */\r\n     const arith_uint256 m_minimum_required_work;\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 8e80bd7aef..2dbac5f6cb 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -647,7 +647,7 @@ private:\r\n      *              otherwise.\r\n      */\r\n     bool TryLowWorkHeadersSync(Peer& peer, CNode& pfrom,\r\n-                                  const CBlockIndex* chain_start_header,\r\n+                                  const CBlockIndex& chain_start_header,\r\n                                   std::vector<CBlockHeader>& headers)\r\n         EXCLUSIVE_LOCKS_REQUIRED(!peer.m_headers_sync_mutex, !m_peer_mutex, !m_headers_presync_mutex);\r\n \r\n@@ -2528,10 +2528,10 @@ bool PeerManagerImpl::IsContinuationOfLowWorkHeadersSync(Peer& peer, CNode& pfro\r\n     return false;\r\n }\r\n \r\n-bool PeerManagerImpl::TryLowWorkHeadersSync(Peer& peer, CNode& pfrom, const CBlockIndex* chain_start_header, std::vector<CBlockHeader>& headers)\r\n+bool PeerManagerImpl::TryLowWorkHeadersSync(Peer& peer, CNode& pfrom, const CBlockIndex& chain_start_header, std::vector<CBlockHeader>& headers)\r\n {\r\n     // Calculate the total work on this chain.\r\n-    arith_uint256 total_work = chain_start_header->nChainWork + CalculateHeadersWork(headers);\r\n+    arith_uint256 total_work = chain_start_header.nChainWork + CalculateHeadersWork(headers);\r\n \r\n     // Our dynamic anti-DoS threshold (minimum work required on a headers chain\r\n     // before we'll store it)\r\n@@ -2561,7 +2561,7 @@ bool PeerManagerImpl::TryLowWorkHeadersSync(Peer& peer, CNode& pfrom, const CBlo\r\n             // process the headers using it as normal.\r\n             return IsContinuationOfLowWorkHeadersSync(peer, pfrom, headers);\r\n         } else {\r\n-            LogPrint(BCLog::NET, \"Ignoring low-work chain (height=%u) from peer=%d\\n\", chain_start_header->nHeight + headers.size(), pfrom.GetId());\r\n+            LogPrint(BCLog::NET, \"Ignoring low-work chain (height=%u) from peer=%d\\n\", chain_start_header.nHeight + headers.size(), pfrom.GetId());\r\n             // Since this is a low-work headers chain, no further processing is required.\r\n             headers = {};\r\n             return true;\r\n@@ -2831,7 +2831,7 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\r\n     // Do anti-DoS checks to determine if we should process or store for later\r\n     // processing.\r\n     if (!already_validated_work && TryLowWorkHeadersSync(peer, pfrom,\r\n-                chain_start_header, headers)) {\r\n+                *chain_start_header, headers)) {\r\n         // If we successfully started a low-work headers sync, then there\r\n         // should be no headers to process any further.\r\n         Assume(headers.empty());\r\ndiff --git a/src/test/headers_sync_chainwork_tests.cpp b/src/test/headers_sync_chainwork_tests.cpp\r\nindex 41241ebee2..f7be84a356 100644\r\n--- a/src/test/headers_sync_chainwork_tests.cpp\r\n+++ b/src/test/headers_sync_chainwork_tests.cpp\r\n@@ -85,7 +85,7 @@ BOOST_AUTO_TEST_CASE(headers_sync_state)\r\n             Params().GenesisBlock().nVersion, Params().GenesisBlock().nTime,\r\n             ArithToUint256(1), Params().GenesisBlock().nBits);\r\n \r\n-    const CBlockIndex* chain_start = WITH_LOCK(::cs_main, return m_node.chainman->m_blockman.LookupBlockIndex(Params().GenesisBlock().GetHash()));\r\n+    const CBlockIndex& chain_start { *Assert(WITH_LOCK(::cs_main, return m_node.chainman->m_blockman.LookupBlockIndex(Params().GenesisBlock().GetHash())))};\r\n     std::vector<CBlockHeader> headers_batch;\r\n \r\n     // Feed the first chain to HeadersSyncState, by delivering 1 header\r\n",
      "created_at": "2022-09-06T12:20:13Z",
      "updated_at": "2022-09-09T09:58:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r963634928",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/963634928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2811,
      "original_line": 2811,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110031910",
      "pull_request_review_id": 1303737355,
      "id": 1110031910,
      "node_id": "PRRC_kwDOABII585CKb4m",
      "diff_hunk": "@@ -3432,19 +3432,16 @@ std::vector<unsigned char> ChainstateManager::GenerateCoinbaseCommitment(CBlock&\n     return commitment;\n }\n \n-bool HasValidProofOfWork(const std::vector<CBlockHeader>& headers, const Consensus::Params& consensusParams)\n+bool HasValidProofOfWork(Span<const CBlockHeader> headers, const Consensus::Params& consensusParams)\n {\n-    return std::all_of(headers.cbegin(), headers.cend(),\n+    return std::all_of(headers.begin(), headers.end(),\n             [&](const auto& header) { return CheckProofOfWork(header.GetHash(), header.nBits, consensusParams);});\n }\n \n-arith_uint256 CalculateHeadersWork(const std::vector<CBlockHeader>& headers)\n+arith_uint256 CalculateHeadersWork(Span<const CBlockHeader> headers)\n {\n     arith_uint256 total_work{0};\n-    for (const CBlockHeader& header : headers) {\n-        CBlockIndex dummy(header);\n-        total_work += GetBlockProof(dummy);\n-    }\n+    for (const CBlockHeader& header : headers) total_work += GetBlockProof(header);",
      "path": "src/validation.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "original_commit_id": "746a829489b5707dc92f14471979611783719d3b",
      "in_reply_to_id": 962896407,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How could it be faster? `std::accumulate` is just a function that runs the provided lambda in a loop.\r\n\r\nThe reason you'd want to use `std::accumulate` is because it's more readable. I'm not sure that's the case here.",
      "created_at": "2023-02-17T16:15:56Z",
      "updated_at": "2023-02-17T17:53:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25968#discussion_r1110031910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1110031910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25968"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3444,
      "original_line": 3444,
      "side": "RIGHT"
    }
  ]
}