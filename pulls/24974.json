{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974",
    "id": 918126520,
    "node_id": "PR_kwDOABII5842uX-4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24974",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24974.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24974.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa74e726c414f5f7a1e63126a69463491f66e0ec",
    "number": 24974,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "refactor: Make FEELER_SLEEP_WINDOW type safe (std::chrono)",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This gets rid of the `value*1000` manual conversion.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2022-04-25T13:01:31Z",
    "updated_at": "2022-07-26T15:51:45Z",
    "closed_at": "2022-07-26T14:09:44Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-07-26T14:09:44Z",
    "merge_commit_sha": "567121747712612434223679d77557a7edf0fe56",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2204-feeler-type-üê¥",
      "ref": "2204-feeler-type-üê¥",
      "sha": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205802,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:04Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "1d89fc695a3aeb3e3dcadf371b7667572b38c836",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 31,
    "deletions": 24,
    "changed_files": 6,
    "commits": 2,
    "review_comments": 26,
    "comments": 7
  },
  "events": [
    {
      "event": "labeled",
      "id": 6490264242,
      "node_id": "LE_lADOABII585IY2hIzwAAAAGC2ZKy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6490264242",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T13:01:31Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 1108862564,
      "node_id": "IC_kwDOABII585CF-Zk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1108862564",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T17:48:52Z",
      "updated_at": "2022-07-20T20:32:59Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25619](https://github.com/bitcoin/bitcoin/pull/25619) (net: avoid overriding non-virtual ToString() in CService and use better naming by vasild)\n* [#25203](https://github.com/bitcoin/bitcoin/pull/25203) (logging: update to severity-based logging by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1108862564",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974"
    },
    {
      "event": "commented",
      "id": 1113339042,
      "node_id": "IC_kwDOABII585CXDSi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113339042",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T13:54:57Z",
      "updated_at": "2022-04-29T13:54:57Z",
      "author_association": "MEMBER",
      "body": "ACK fae94c6591231722f01ccde689f0b36febf824cc",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1113339042",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974"
    },
    {
      "event": "commented",
      "id": 1113345946,
      "node_id": "IC_kwDOABII585CXE-a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1113345946",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T14:00:09Z",
      "updated_at": "2022-04-29T14:00:09Z",
      "author_association": "MEMBER",
      "body": "@ajtowns You might be interested in (N)ACKing this change, based on the conversation in https://github.com/bitcoin/bitcoin/pull/24697#discussion_r848094959",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1113345946",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974"
    },
    {
      "event": "mentioned",
      "id": 6523597978,
      "node_id": "MEE_lADOABII585IY2hIzwAAAAGE1jSa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6523597978",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T14:00:09Z"
    },
    {
      "event": "subscribed",
      "id": 6523597988,
      "node_id": "SE_lADOABII585IY2hIzwAAAAGE1jSk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6523597988",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T14:00:09Z"
    },
    {
      "event": "reviewed",
      "id": 957931396,
      "node_id": "PRR_kwDOABII5845GN-E",
      "url": null,
      "actor": null,
      "commit_id": "fae94c6591231722f01ccde689f0b36febf824cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#pullrequestreview-957931396",
      "submitted_at": "2022-04-29T16:01:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6527795124,
      "node_id": "HRFPE_lADOABII585IY2hIzwAAAAGFFj-0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6527795124",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T08:32:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6527799593,
      "node_id": "HRFPE_lADOABII585IY2hIzwAAAAGFFlEp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6527799593",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-30T08:37:35Z"
    },
    {
      "event": "review_requested",
      "id": 6561896863,
      "node_id": "RRE_lADOABII585IY2hIzwAAAAGHHpmf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6561896863",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-06T08:35:52Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 6561897718,
      "node_id": "RRE_lADOABII585IY2hIzwAAAAGHHpz2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6561897718",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-06T08:35:59Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 966529396,
      "node_id": "PRR_kwDOABII5845nBF0",
      "url": null,
      "actor": null,
      "commit_id": "fa9970a769a2f03cd5c9b2f4a00e530d395d7ffb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code Review ACK https://github.com/bitcoin/bitcoin/pull/24974/commits/fa9970a769a2f03cd5c9b2f4a00e530d395d7ffb",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#pullrequestreview-966529396",
      "submitted_at": "2022-05-09T17:03:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
    },
    {
      "event": "labeled",
      "id": 6578910853,
      "node_id": "LE_lADOABII585IY2hIzwAAAAGIIjaF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6578910853",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-10T06:08:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6579422462,
      "node_id": "HRFPE_lADOABII585IY2hIzwAAAAGIKgT-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6579422462",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-10T07:23:12Z"
    },
    {
      "event": "unlabeled",
      "id": 6579965032,
      "node_id": "UNLE_lADOABII585IY2hIzwAAAAGIMkxo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6579965032",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-10T08:41:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 967509368,
      "node_id": "PRR_kwDOABII5845qwV4",
      "url": null,
      "actor": null,
      "commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/24974/commits/fac6af70fd14c380a016152ce38c20158da03136",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#pullrequestreview-967509368",
      "submitted_at": "2022-05-10T10:06:13Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
    },
    {
      "event": "reviewed",
      "id": 967818872,
      "node_id": "PRR_kwDOABII5845r754",
      "url": null,
      "actor": null,
      "commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#pullrequestreview-967818872",
      "submitted_at": "2022-05-10T13:49:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
    },
    {
      "event": "reviewed",
      "id": 958471002,
      "node_id": "PRR_kwDOABII5845IRta",
      "url": null,
      "actor": null,
      "commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#pullrequestreview-958471002",
      "submitted_at": "2022-05-10T13:58:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
    },
    {
      "event": "labeled",
      "id": 6596340379,
      "node_id": "LE_lADOABII585IY2hIzwAAAAGJLCqb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6596340379",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-12T08:44:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6693312088,
      "node_id": "HRFPE_lADOABII585IY2hIzwAAAAGO89ZY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6693312088",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T15:19:58Z"
    },
    {
      "event": "commented",
      "id": 1139735921,
      "node_id": "IC_kwDOABII585D7v1x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1139735921",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T15:42:50Z",
      "updated_at": "2022-05-27T15:42:50Z",
      "author_association": "MEMBER",
      "body": "Rebased only for now",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1139735921",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974"
    },
    {
      "event": "unlabeled",
      "id": 6693783124,
      "node_id": "UNLE_lADOABII585IY2hIzwAAAAGO-wZU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6693783124",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-27T16:39:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 6952124349,
      "node_id": "LE_lADOABII585IY2hIzwAAAAGeYP-9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6952124349",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-07T14:00:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhM2IzY2I5YjVkOTQ0ZDM0YjFkNWFjM2UxMDJhYzMzMzQ4MmE0NzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3b3cb9b5d944d34b1d5ac3e102ac333482a475",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3b3cb9b5d944d34b1d5ac3e102ac333482a475",
      "tree": {
        "sha": "9a338b793380212c0972c031681e59bb03a956b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a338b793380212c0972c031681e59bb03a956b1"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 9a338b793380212c0972c031681e59bb03a956b1\nparent 1d89fc695a3aeb3e3dcadf371b7667572b38c836\nauthor MacroFake <falke.marco@gmail.com> 1651307064 +0200\ncommitter MacroFake <falke.marco@gmail.com> 1657718449 +0200\n\nExpose underlying clock in CThreadInterrupt\n\nOverloading sleep_for is not needed, as\n\n* seconds and minutes can be converted to milliseconds by the compiler,\n  not needing a duration_cast\n* std::condition_variable::wait_for will convert milliseconds to the\n  duration type of the underlying clock\n\nSo simply expose the clock.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgGJwv/c09Ue2jHLIROqcIiF6CYN3mOc4zC21Yfc7hNcJfBc9ws3GT6Y1MKou06\nfNxkD1QDWfqS2nT8bsL3Z9uZozB7IINAceRigarK/AeM9CYqqAQanNherU4n38x/\n9j+/GRHShoo1+VrydGzZdUM1URYw9dWZWAEwhGWlD+PHPTXIGmpwYK7TgTUSOCXq\nSZGT9ipa9SQmFAs5/ogbFDNp3LEt7oE8MHGrPp65z8n3W3koMGaVS0OKKiAJJnqg\n+roTKw8TchabohhyNnGLj+qDjKHQDGbk6Tae3ACI429RpBIZt2NNpdlcO2yBDFSJ\nEZaUOYmwS+EbHLrahGKq9b1LZZxMvZCOGwut9eoZ59aIZTFTLH4X2mh5EGAnzzi5\nFl9XM0xikgwNPDQNeMPufCjc6ZpBm3A0c1qEzsIWKNBmgyYjM1Q9dLeJRstpRe9/\nOoaQBR7hg01p+QPC+802obJs0xhnRLHlRl9ZxDuoXmCeH0+9TE2alnbugtqKCPgW\nKXu4wbGC\n=TkJo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d89fc695a3aeb3e3dcadf371b7667572b38c836",
          "sha": "1d89fc695a3aeb3e3dcadf371b7667572b38c836",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1d89fc695a3aeb3e3dcadf371b7667572b38c836"
        }
      ],
      "message": "Expose underlying clock in CThreadInterrupt\n\nOverloading sleep_for is not needed, as\n\n* seconds and minutes can be converted to milliseconds by the compiler,\n  not needing a duration_cast\n* std::condition_variable::wait_for will convert milliseconds to the\n  duration type of the underlying clock\n\nSo simply expose the clock.",
      "committer": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-07-13T13:20:49Z"
      },
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-04-30T08:24:24Z"
      },
      "sha": "fa3b3cb9b5d944d34b1d5ac3e102ac333482a475"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNzRlNzI2YzQxNGY1ZjdhMWU2MzEyNmE2OTQ2MzQ5MWY2NmUwZWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "tree": {
        "sha": "63e6cb2d5b8e5fda4050c5476aeb4f192f0a4eab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63e6cb2d5b8e5fda4050c5476aeb4f192f0a4eab"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 63e6cb2d5b8e5fda4050c5476aeb4f192f0a4eab\nparent fa3b3cb9b5d944d34b1d5ac3e102ac333482a475\nauthor MacroFake <falke.marco@gmail.com> 1652166529 +0200\ncommitter MacroFake <falke.marco@gmail.com> 1657718472 +0200\n\nrefactor: Make FEELER_SLEEP_WINDOW type safe (std::chrono)\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi5gAv+IfsiEyV+FKfWPf/u1vE2VaJWaKSN+hBLqZhpusS4mWYOBWSuwErM8Cq8\nWT0+5I88UxptkD9zjq9xfsmhcrrZkHoSow5JOJB9WGSj4jQPFejmlAvRlOb3jNK5\nUBs7ZB23Pmd1VQ12fMaBK3969vj5eVH4ANP/4FjM2mJHx3TufIgM3q0NvutfTDhg\nzoetg86YlkZ5wRG8Cuo2XenA3+EyT6FkYZc/pxQUqqZUfZuNpxDYDFVeFSWPDnHW\nHXnYx4QjgAtC0fcCyQCV6TmHtxnDIltjol3QPoEHVmtcG+2P6mL/lqLKi+LoYn05\nnRusw9r1RyHvNs/2D9reHtFBWKwHVc2wynErTc+3mh9qZBtH0CFRaKeXW3Hx73sJ\n+FfkgJXP9fF1ko15mHammcOBPFlUIpycFUJ1R1ow3M+SmlSAW4+bJs9absdKfYTu\ntHzL28MhVAj+A00uwHwC3rmOnHlZJsiA4txb5u9HRKt5PVuYkdxH6gh9fPQy6p/+\nMHmFUDm3\n=DdPT\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3b3cb9b5d944d34b1d5ac3e102ac333482a475",
          "sha": "fa3b3cb9b5d944d34b1d5ac3e102ac333482a475",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3b3cb9b5d944d34b1d5ac3e102ac333482a475"
        }
      ],
      "message": "refactor: Make FEELER_SLEEP_WINDOW type safe (std::chrono)",
      "committer": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-07-13T13:21:12Z"
      },
      "author": {
        "name": "MacroFake",
        "email": "falke.marco@gmail.com",
        "date": "2022-05-10T07:08:49Z"
      },
      "sha": "fa74e726c414f5f7a1e63126a69463491f66e0ec"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6985965833,
      "node_id": "HRFPE_lADOABII585IY2hIzwAAAAGgZWEJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6985965833",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T13:21:59Z"
    },
    {
      "event": "unlabeled",
      "id": 6986484013,
      "node_id": "UNLE_lADOABII585IY2hIzwAAAAGgbUkt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6986484013",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T14:21:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1183340995,
      "node_id": "IC_kwDOABII585GiFnD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1183340995",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-13T15:04:44Z",
      "updated_at": "2022-07-13T15:04:44Z",
      "author_association": "MEMBER",
      "body": "Rebased",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1183340995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974"
    },
    {
      "event": "commented",
      "id": 1195387397,
      "node_id": "IC_kwDOABII585HQCoF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195387397",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T11:56:55Z",
      "updated_at": "2022-07-26T11:56:55Z",
      "author_association": "MEMBER",
      "body": "utACK fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1195387397",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974"
    },
    {
      "event": "review_requested",
      "id": 7064258332,
      "node_id": "RRE_lADOABII585IY2hIzwAAAAGlEAcc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7064258332",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T11:59:06Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 7064258346,
      "node_id": "RRE_lADOABII585IY2hIzwAAAAGlEAcq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7064258346",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T11:59:06Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1195524400,
      "node_id": "IC_kwDOABII585HQkEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1195524400",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T14:00:36Z",
      "updated_at": "2022-07-26T14:00:36Z",
      "author_association": "MEMBER",
      "body": "Code review ACK fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#issuecomment-1195524400",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24974"
    },
    {
      "event": "merged",
      "id": 7065292890,
      "node_id": "ME_lADOABII585IY2hIzwAAAAGlH9Ba",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7065292890",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "567121747712612434223679d77557a7edf0fe56",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/567121747712612434223679d77557a7edf0fe56",
      "created_at": "2022-07-26T14:09:44Z"
    },
    {
      "event": "closed",
      "id": 7065292921,
      "node_id": "CE_lADOABII585IY2hIzwAAAAGlH9B5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7065292921",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T14:09:44Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 7066186032,
      "node_id": "HRDE_lADOABII585IY2hIzwAAAAGlLXEw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7066186032",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-26T15:51:45Z"
    },
    {
      "event": "referenced",
      "id": 7074421235,
      "node_id": "REFE_lADOABII585IY2hIzwAAAAGlqxnz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7074421235",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "95d3e91c7220a8ff62ba09057b166e373a984bcb",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/95d3e91c7220a8ff62ba09057b166e373a984bcb",
      "created_at": "2022-07-27T16:18:56Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861932886",
      "pull_request_review_id": 957931396,
      "id": 861932886,
      "node_id": "PRRC_kwDOABII584zYA1W",
      "diff_hunk": "@@ -2151,12 +2152,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         }\n \n         if (addrConnect.IsValid()) {\n-\n             if (fFeeler) {\n                 // Add small amount of random noise before connection to avoid synchronization.\n-                int randsleep = GetRandInt(FEELER_SLEEP_WINDOW * 1000);\n-                if (!interruptNet.sleep_for(std::chrono::milliseconds(randsleep)))",
      "path": "src/net.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fae94c6591231722f01ccde689f0b36febf824cc",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it makes sense to pass in a time point here; even if we used `sleep_until` that would just end up doing `now() + rand - now()` which seems silly.\r\n\r\nBut, rather than parameterise by a duration; we could parameterise by a Clock:\r\n\r\n```c++\r\n    template <typename C=std::chrono::steady_clock>\r\n    typename C::duration rand_uniform_duration(typename C::duration max) noexcept\r\n    {\r\n        assert(max.count() > 0);\r\n        return typename C::duration{GetRand(max.count())};\r\n    };\r\n```\r\nwhich would make it just be:\r\n\r\n```c++\r\n    if (!interruptNet.sleep_for(rng.rand_uniform_duration(FEELER_SLEEP_WINDOW)))\r\n```\r\n\r\n(That avoids the need for the `common_type` stuff too)\r\n\r\nAt least for me, `steady_clock` operates in nanoseconds, so the existing `sleep_for(millis)` doesn't work, but replacing the three `CThreadInterrupt::sleep_for` methods with a single one that accepts `std::chrono::steady_clock::duration rel_time` would fix that. Alternatively, so would:\r\n\r\n```c++\r\n    template <typename Dur>\r\n    bool sleep_for(Dur rel_time)\r\n    {\r\n        return sleep_for_ms(std::chrono::duration_cast<std::chrono::milliseconds>(rel_time));\r\n    }\r\n```",
      "created_at": "2022-04-29T15:49:53Z",
      "updated_at": "2022-04-29T16:01:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r861932886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/861932886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1834,
      "original_line": 1834,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862330618",
      "pull_request_review_id": 958470493,
      "id": 862330618,
      "node_id": "PRRC_kwDOABII584zZh76",
      "diff_hunk": "@@ -2151,12 +2152,11 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect)\n         }\n \n         if (addrConnect.IsValid()) {\n-\n             if (fFeeler) {\n                 // Add small amount of random noise before connection to avoid synchronization.\n-                int randsleep = GetRandInt(FEELER_SLEEP_WINDOW * 1000);\n-                if (!interruptNet.sleep_for(std::chrono::milliseconds(randsleep)))",
      "path": "src/net.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fae94c6591231722f01ccde689f0b36febf824cc",
      "in_reply_to_id": 861932886,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, changed",
      "created_at": "2022-04-30T08:33:41Z",
      "updated_at": "2022-04-30T08:33:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r862330618",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862330618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1834,
      "original_line": 1834,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862331287",
      "pull_request_review_id": 958471002,
      "id": 862331287,
      "node_id": "PRRC_kwDOABII584zZiGX",
      "diff_hunk": "@@ -19,13 +19,12 @@\n class CThreadInterrupt\n {\n public:\n+    using Clock = std::chrono::steady_clock;",
      "path": "src/threadinterrupt.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fa9970a769a2f03cd5c9b2f4a00e530d395d7ffb",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "review note: https://eel.is/c++draft/thread.condition.condvar#24",
      "created_at": "2022-04-30T08:41:57Z",
      "updated_at": "2022-05-10T13:58:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r862331287",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/862331287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869264320",
      "pull_request_review_id": 967818872,
      "id": 869264320,
      "node_id": "PRRC_kwDOABII584zz-vA",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why support negative ranges?",
      "created_at": "2022-05-10T13:49:07Z",
      "updated_at": "2022-05-10T13:49:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869264320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869264320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869277448",
      "pull_request_review_id": 967837669,
      "id": 869277448,
      "node_id": "PRRC_kwDOABII584z0B8I",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Some call sites may use a negative range. For example in addr relay, the timestamp of some address messages is randomly pushed into the past.\r\n\r\nAlso, it seems safer when the alternative is either unspecified behaviour, or a crash.",
      "created_at": "2022-05-10T13:59:27Z",
      "updated_at": "2022-05-10T13:59:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869277448",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869277448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869286539",
      "pull_request_review_id": 967851370,
      "id": 869286539,
      "node_id": "PRRC_kwDOABII584z0EKL",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The behavior here still seems odd in those cases. I'd expect call sites that actually can result in negative range values to want \"rand_uniform_duration(T)\" to mean: \"give me a uniform duration not exceeding T\". If T is negative, that probably means just returning 0?",
      "created_at": "2022-05-10T14:07:24Z",
      "updated_at": "2022-05-10T14:07:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869286539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869286539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869294988",
      "pull_request_review_id": 967863809,
      "id": 869294988,
      "node_id": "PRRC_kwDOABII584z0GOM",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, the interval is determined at run-time and the passed in value can either mean the start or the end of the interval, with the other value being `0`.\r\n\r\nI am not sure if mapping any negative value to a constant `0` is less confusing. And I couldn't find another solution that is well defined at run time (no unspecified behaviour, no crash).",
      "created_at": "2022-05-10T14:14:39Z",
      "updated_at": "2022-05-10T14:14:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869294988",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869294988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869317017",
      "pull_request_review_id": 967896063,
      "id": 869317017,
      "node_id": "PRRC_kwDOABII584z0LmZ",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I'm not objecting to this change. It just strikes me as bizarre semantics; the simplest interpretation of a range is specifying how wide the window of possible values is - and that simply cannot be negative.\r\n\r\nAn alternative is always returning range itself if it is <= 0. That at least satisfies the constraint \"never return a value exceeding range\", and probably works just as well for the intended call sites (who I suspect use to determine how long to wait)?",
      "created_at": "2022-05-10T14:33:30Z",
      "updated_at": "2022-05-10T14:33:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869317017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869317017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869337240",
      "pull_request_review_id": 967925108,
      "id": 869337240,
      "node_id": "PRRC_kwDOABII584z0QiY",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again, I am not sure that returning any constant is less confusing for a random function that took a non-zero input.\r\n\r\nFor reference, one potential call site would be:\r\n\r\n```\r\naddr.nTime = GetTime() - rng.randrange(nOneWeek) - nOneWeek;\r\n```\r\n\r\nThis (and any other) call site can obviously be written without relying on a negative range, but we'd also need to avoid this with a compile error. Without `consteval`, this is probably only possible with some template magic?",
      "created_at": "2022-05-10T14:50:41Z",
      "updated_at": "2022-05-10T14:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869337240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869337240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869400677",
      "pull_request_review_id": 968017606,
      "id": 869400677,
      "node_id": "PRRC_kwDOABII584z0gBl",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think template magic works for this -- you get \"non-type template parameter\" errors trying to pass chrono::duration's as template parameters. I think you could do it with c++20 which allows \"literal class types\" as a non-type template parameter. https://en.cppreference.com/w/cpp/language/template_parameters",
      "created_at": "2022-05-10T15:39:39Z",
      "updated_at": "2022-05-10T15:39:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869400677",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869400677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869427321",
      "pull_request_review_id": 968049722,
      "id": 869427321,
      "node_id": "PRRC_kwDOABII584z0mh5",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe `if (Assume(range.count()) > 0) { return Dur{randrange...}; } else { return range; }` ? I don't think we could make it a `consteval` function even with c++20, because `rng.randrange()` isn't going to be `consteval`?",
      "created_at": "2022-05-10T15:59:36Z",
      "updated_at": "2022-05-10T15:59:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r869427321",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/869427321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/870996381",
      "pull_request_review_id": 970318092,
      "id": 870996381,
      "node_id": "PRRC_kwDOABII584z6lmd",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be ideal to enforce non-negative at compile time, and then force every caller to switch to a non-negative construction.\r\n\r\nWhile I don't think how this is possible, I don't have much preference for the behavior if the value is negative. It is indeed annoying. We're not making it worse at least.\r\nPerhaps status quo makes more sense in this case.",
      "created_at": "2022-05-12T06:33:51Z",
      "updated_at": "2022-05-12T06:33:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r870996381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/870996381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872481737",
      "pull_request_review_id": 972376270,
      "id": 872481737,
      "node_id": "PRRC_kwDOABII5840AQPJ",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, if I'm reading this right, this seems like quite an odd api to me. I'm not sure why passing a clock is necessary.\r\n\r\nFrom what I can tell, you pass it a duration and a clock, and it gives you a new random duration in the clock's period. In other words.. we basically want a `std::chrono::duration_cast` which is hijacked and randomized. So why not use that api?\r\n\r\nIt'd look like (simplified for positive-only and untested):\r\n```c++\r\ntemplate <class ToDuration, class Rep, class Period>\r\nconstexpr ToDuration rand_uniform_duration(const std::chrono::duration<Rep, Period>& d)\r\n{\r\n    auto max_ret = std::chrono::duration_cast<ToDuration>(d);\r\n    auto rand_offset = ToDuration(randrange(d.count()));\r\n    return max_ret - rand_offset;\r\n}\r\n```\r\n\r\nUsed like:\r\n```c++\r\nauto foo = rand_uniform_duration<std::chrono::milliseconds>(30s);\r\n```\r\n\r\nOr in this case:\r\n```c++\r\nauto foo = rand_uniform_duration<CThreadInterrupt::Clock::duration>(FEELER_SLEEP_WINDOW);\r\n\r\n```\r\n\r\nThat way, we effectively communicate that we're randomizing in the target period as opposed to the provided one.",
      "created_at": "2022-05-13T14:46:51Z",
      "updated_at": "2022-05-13T14:46:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872481737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872481737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872496925",
      "pull_request_review_id": 972398618,
      "id": 872496925,
      "node_id": "PRRC_kwDOABII5840AT8d",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think a `duration_cast` is dangerous and not very useful here. Recall that the compiler will do the cast for you if it is safe to do. And in cases where it isn't safe, you are better off not calling this function in the first place.\r\n\r\nI used clock, as it was suggested here: https://github.com/bitcoin/bitcoin/pull/24974#discussion_r861932886\r\n\r\nThough, I think durations should be fine, too.",
      "created_at": "2022-05-13T15:02:40Z",
      "updated_at": "2022-05-13T15:02:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872496925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872496925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872517814",
      "pull_request_review_id": 972431903,
      "id": 872517814,
      "node_id": "PRRC_kwDOABII5840AZC2",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As @ajtowns and I discussed yesterday in the office, here's a quick attempt at compile-time checking (to side-step the question of negative durations) just for fun. It's not completely unreasonable imo.\r\n\r\nEdit: Whoops, deleted, that was horribly broken.",
      "created_at": "2022-05-13T15:25:24Z",
      "updated_at": "2022-05-13T15:30:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872517814",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872517814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872521324",
      "pull_request_review_id": 972441881,
      "id": 872521324,
      "node_id": "PRRC_kwDOABII5840AZ5s",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Interesting. I guess you'd still have to static_assert against implicit sign conversion when going from 64-bit unsigned to 64-bit signed.",
      "created_at": "2022-05-13T15:29:18Z",
      "updated_at": "2022-05-13T15:29:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872521324",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872521324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872557872",
      "pull_request_review_id": 972481771,
      "id": 872557872,
      "node_id": "PRRC_kwDOABII5840Ai0w",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, here's a full working test-case. Statically checked for non-negative, passed durations, and no `duration_cast ` as @MarcoFalke suggested:\r\n\r\n```c++\r\n#include <chrono>\r\n#include <cstdlib>\r\n#include <cstdio>\r\n\r\nlong int randrange(uint64_t mod)\r\n{\r\n    auto ret = random() % mod;\r\n    return ret;\r\n}\r\n\r\ntemplate <typename Duration, typename Duration::rep Ticks>\r\nstruct static_duration\r\n{\r\n    using duration = Duration;\r\n    static constexpr typename Duration::rep ticks = Ticks;\r\n};\r\n\r\ntemplate <typename ToDuration, typename FromDuration, typename FromDuration::rep Ticks>\r\nconstexpr ToDuration rand_uniform_duration(const static_duration<FromDuration, Ticks>&)\r\n{\r\n    static_assert(Ticks >= 0);\r\n    FromDuration from(Ticks);\r\n    ToDuration max_ret{from};\r\n    return ToDuration{randrange(max_ret.count())};\r\n}\r\n\r\nstatic constexpr static_duration<std::chrono::seconds, 30> foo;\r\nstatic constexpr static_duration<std::chrono::seconds, -30> negfoo;\r\n\r\nint main()\r\n{\r\n    srand(time(nullptr));\r\n    auto bar = rand_uniform_duration<std::chrono::milliseconds>(foo);\r\n    // auto negbar = rand_uniform_duration<std::chrono::milliseconds>(negfoo); // Compiler error\r\n    \r\n    printf(\"duration: %ld\\n\", bar.count());\r\n}\r\n```\r\n\r\nEdit: I cleaned up a little. Made the static rep duration type dependent on the duration's. Added a static assert and an example compile error.\r\n\r\nEdit2: Require a `static_duration` rather than its parts and no need to subtract.",
      "created_at": "2022-05-13T15:58:40Z",
      "updated_at": "2022-05-13T19:09:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872557872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872557872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872561944",
      "pull_request_review_id": 972487392,
      "id": 872561944,
      "node_id": "PRRC_kwDOABII5840Aj0Y",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Interesting. I guess you'd still have to static_assert against implicit sign conversion when going from 64-bit unsigned to 64-bit signed.\r\n\r\n~Right, I guess you'd want to accept a `int64_t` and `static_assert` that it's > 0 instead.~\r\nFixed above.\r\n\r\nFeel free to disregard or clean up and use :)",
      "created_at": "2022-05-13T16:03:39Z",
      "updated_at": "2022-05-13T21:45:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r872561944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/872561944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883733694",
      "pull_request_review_id": 987682222,
      "id": 883733694,
      "node_id": "PRRC_kwDOABII5840rLS-",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, glad we figured out how to implement this, but is this something that is actually preferable? :sweat_smile: ",
      "created_at": "2022-05-27T15:42:40Z",
      "updated_at": "2022-05-27T15:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r883733694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/883733694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884043414",
      "pull_request_review_id": 988257928,
      "id": 884043414,
      "node_id": "PRRC_kwDOABII5840sW6W",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ü§∑\r\nIt's perfectly expressive and constexpr, so there's not much downside other than (the syntax and) the emitted per-constant symbol. The obvious realistic downside being that it's kinda overkill...\r\n\r\nBut maybe not it's a bad thing to be able to express only-positive-time more generally? So maybe that's the test... is there somewhere else where it might be useful to describe time constants as positive only?",
      "created_at": "2022-05-28T00:52:42Z",
      "updated_at": "2022-05-28T00:52:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r884043414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884043414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885880534",
      "pull_request_review_id": 990803762,
      "id": 885880534,
      "node_id": "PRRC_kwDOABII5840zXbW",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm happy (or about equally unhappy...) with any of the approaches really; and I guess we'd want to switch to C++20 syntax when that's available either way, so *shrug* from me. @sipa?",
      "created_at": "2022-05-31T16:52:13Z",
      "updated_at": "2022-05-31T16:52:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885880534",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885880534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885887251",
      "pull_request_review_id": 990812850,
      "id": 885887251,
      "node_id": "PRRC_kwDOABII5840zZET",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think there is a *minimal, theoretical* advantage to disallowing negative values, as the inverting the most negative value is an integer sanitizer violation. Though, this shouldn't affect execution of a program that is not compiled with the integer sanitizer and shouldn't happen in practise either.\r\n\r\nWhat is the \"C++20\" syntax, if I may ask? ",
      "created_at": "2022-05-31T16:59:42Z",
      "updated_at": "2022-05-31T16:59:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885887251",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885887251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885905964",
      "pull_request_review_id": 990838586,
      "id": 885905964,
      "node_id": "PRRC_kwDOABII5840zdos",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With C++20 you can pass a duration to a template, and then do a static_assert on its value, so you'd write `rand_uniform_duration<dur>()` instead of `rand_uniform_duration(dur)` and get the compile-time check.",
      "created_at": "2022-05-31T17:22:14Z",
      "updated_at": "2022-05-31T17:22:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r885905964",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885905964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886882040",
      "pull_request_review_id": 992081676,
      "id": 886882040,
      "node_id": "PRRC_kwDOABII58403L74",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, with `dur` you mean `static_duration`, not `std::chrono::duration`?\r\n\r\nI can't get it to work with `std::chrono::duration`:\r\n\r\n```cpp\r\n#include <chrono>\r\n\r\nusing namespace std::chrono_literals;\r\n\r\nstruct FRC {\r\n    template <std::chrono::duration range>\r\n    auto rand_uniform_delay(auto time) {\r\n        return time + rand_uniform_duration<decltype(time)::duration, range>();\r\n    }\r\n    template <typename Duration, std::chrono::duration range>\r\n    Duration rand_uniform_duration() noexcept {\r\n        static_assert(range.count() > 0);\r\n        return Duration{randrange(range.count())};\r\n    }\r\n};\r\n\r\nint main() {\r\n    FRC frc;\r\n    frc.rand_uniform_delay<9h>(std::chrono::sys_seconds{1s});\r\n    frc.rand_uniform_duration<std::chrono::seconds, 9h>();\r\n}\r\n```\r\n\r\nhttps://godbolt.org/z/8Y868s98K",
      "created_at": "2022-06-01T14:32:50Z",
      "updated_at": "2022-06-01T14:32:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r886882040",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886882040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887135297",
      "pull_request_review_id": 992448929,
      "id": 887135297,
      "node_id": "PRRC_kwDOABII58404JxB",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, I'm not really sure why it doesn't work (well, `std::chrono::duration` needs template parameters and stuff, but even after fixing that it doesn't work)\r\n\r\nHere's something that does, via a wrapper class. Not sure that's any better than @theuni's c++17 compatible wrapper. https://godbolt.org/z/nnKx4fde5\r\n\r\n```c++\r\n#include <chrono>\r\n\r\nint64_t randrange(int64_t x) { return x / 2; }\r\n\r\nusing namespace std::chrono_literals;\r\n\r\ntemplate<typename dur=std::chrono::seconds>\r\nstruct template_duration\r\n{\r\n    const int64_t count;\r\n    using duration = dur;\r\n    constexpr template_duration(dur f) : count{f.count()} { }\r\n    constexpr dur to_dur() const { return dur{count}; }\r\n};\r\ntemplate<typename dur>\r\nconstexpr template_duration<dur> tmpl_dur(const dur& d) { return {d}; }\r\n\r\nstruct FRC {\r\n    template <typename Duration, auto range>\r\n    Duration rand_uniform_duration() noexcept {\r\n        static_assert(range.count > 0);\r\n        return Duration{randrange(Duration{range.to_dur()}.count())};\r\n    }\r\n\r\n    template <auto range, typename X>\r\n    X rand_uniform_delay(X time) noexcept {\r\n        return time + rand_uniform_duration<typename X::duration, range>();\r\n    }    \r\n};\r\n\r\nint main() {\r\n    FRC frc;\r\n    constexpr auto DELAY_HOURS{tmpl_dur(8h)};\r\n    auto now = std::chrono::sys_seconds{1s};\r\n    frc.rand_uniform_duration<std::chrono::seconds, DELAY_HOURS>();\r\n    frc.rand_uniform_delay<DELAY_HOURS>(now);\r\n}\r\n```",
      "created_at": "2022-06-01T17:42:54Z",
      "updated_at": "2022-06-01T17:42:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r887135297",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887135297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920197638",
      "pull_request_review_id": 1037534721,
      "id": 920197638,
      "node_id": "PRRC_kwDOABII58422RoG",
      "diff_hunk": "@@ -227,13 +228,19 @@ class FastRandomContext\n     template <typename Tp>\n     Tp rand_uniform_delay(const Tp& time, typename Tp::duration range)\n     {\n-        using Dur = typename Tp::duration;\n-        Dur dur{range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n-                range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :\n-                                    /* interval [0..0] */ Dur{0}};\n-        return time + dur;\n+        return time + rand_uniform_duration<Tp>(range);\n     }\n \n+    /** Generate a uniform random duration in the range from 0 (inclusive) to range (exclusive). */\n+    template <typename Chrono>\n+    typename Chrono::duration rand_uniform_duration(typename Chrono::duration range) noexcept\n+    {\n+        using Dur = typename Chrono::duration;\n+        return range.count() > 0 ? /* interval [0..range) */ Dur{randrange(range.count())} :\n+               range.count() < 0 ? /* interval (range..0] */ -Dur{randrange(-range.count())} :",
      "path": "src/random.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "fa74e726c414f5f7a1e63126a69463491f66e0ec",
      "original_commit_id": "fac6af70fd14c380a016152ce38c20158da03136",
      "in_reply_to_id": 869264320,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Happy to use different std-lib syntax, but anything that requires a wrapper class that re-implements stuff seems overkill to solve a problem that doesn't exist.",
      "created_at": "2022-07-13T15:09:26Z",
      "updated_at": "2022-07-13T15:09:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24974#discussion_r920197638",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/920197638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24974"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 249,
      "original_line": 249,
      "side": "RIGHT"
    }
  ]
}