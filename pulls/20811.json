{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811",
    "id": 547247322,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ3MjQ3MzIy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20811",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/20811.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/20811.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
    "number": 20811,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "refactor: move net_processing implementation details out of header",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Moves the implementation details of `PeerManager` and all of `struct Peer` into net_processing.cpp.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-12-31T06:50:36Z",
    "updated_at": "2022-08-16T17:02:52Z",
    "closed_at": "2021-01-13T08:48:34Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-01-13T08:48:34Z",
    "merge_commit_sha": "60427ee35f280483c8aa7e5f33a95cc093c3fd0a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "ajtowns:202012-netproc-impl-split",
      "ref": "202012-netproc-impl-split",
      "sha": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 53941525,
        "node_id": "MDEwOlJlcG9zaXRvcnk1Mzk0MTUyNQ==",
        "name": "bitcoin",
        "full_name": "ajtowns/bitcoin",
        "owner": {
          "login": "ajtowns",
          "id": 127186,
          "node_id": "MDQ6VXNlcjEyNzE4Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ajtowns",
          "html_url": "https://github.com/ajtowns",
          "followers_url": "https://api.github.com/users/ajtowns/followers",
          "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
          "organizations_url": "https://api.github.com/users/ajtowns/orgs",
          "repos_url": "https://api.github.com/users/ajtowns/repos",
          "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ajtowns/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ajtowns/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ajtowns/bitcoin",
        "archive_url": "https://api.github.com/repos/ajtowns/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ajtowns/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ajtowns/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ajtowns/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ajtowns/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ajtowns/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ajtowns/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ajtowns/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ajtowns/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ajtowns/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ajtowns/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ajtowns/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ajtowns/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ajtowns/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ajtowns/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ajtowns/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ajtowns/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ajtowns/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ajtowns/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ajtowns/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ajtowns/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ajtowns/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ajtowns/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ajtowns/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ajtowns/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ajtowns/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ajtowns/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ajtowns/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ajtowns/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ajtowns/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ajtowns/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ajtowns/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ajtowns/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ajtowns/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ajtowns/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ajtowns/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ajtowns/bitcoin/hooks",
        "svn_url": "https://github.com/ajtowns/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 262427,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T19:54:41Z",
        "created_at": "2016-03-15T12:11:24Z",
        "updated_at": "2023-03-19T19:22:46Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5574e489631bb20c4566df916b79863f31dc6f0c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 283,
    "deletions": 253,
    "changed_files": 7,
    "commits": 5,
    "review_comments": 32,
    "comments": 15
  },
  "events": [
    {
      "event": "commented",
      "id": 752866799,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1Mjg2Njc5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752866799",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T06:51:51Z",
      "updated_at": "2021-01-12T11:48:40Z",
      "author_association": "MEMBER",
      "body": "This is the first step of the refactoring proposed in #20758 and just does encapsulation, it doesn't remove any of the globals.\r\n\r\nEDIT: Rationale for moving things from the header into cpp files is to:\r\n\r\n- reduce compilation times (the code only gets compiled for a single cpp, rather than every cpp that includes the header)\r\n- reduce churn when updating the implementation (you only need to touch the cpp, not the header; and don't need to recompile other modules)\r\n- makes it easier to see what's interface and what's implementation details\r\n\r\nMore specifically, #20758 aims to reduce the number of net_processing globals by moving them into the PeerManager class, which will involve less churn if that class isn't exposed as a header file; and #19398 aims to move things from net to net_processing which also involves less churn if it doesn't need to go into the net_processing header file.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-752866799",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4159070753,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE1OTA3MDc1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4159070753",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T06:57:20Z"
    },
    {
      "event": "labeled",
      "id": 4159119666,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxNTkxMTk2NjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4159119666",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T07:24:00Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 4159119668,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxNTkxMTk2Njg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4159119668",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T07:24:00Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "commented",
      "id": 752884973,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1Mjg4NDk3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/752884973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T08:17:51Z",
      "updated_at": "2021-01-12T01:33:22Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20904 (net: (de)serialize CSubNet in addrv2 format by vasild)\n* #20729 (p2p: standardize on outbound-{full, block}-relay connection type naming by jonatack)\n* #20295 (rpc: getblockfrompeer by Sjors)\n* #20228 (addrman: Make addrman a top-level component by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-752884973",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4159663367,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE1OTY2MzM2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4159663367",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-31T13:17:15Z"
    },
    {
      "event": "commented",
      "id": 753235027,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzIzNTAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753235027",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-01T01:00:38Z",
      "updated_at": "2021-01-01T01:00:38Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. I like this kind of encapsulation a lot.\r\n\r\nI'm not sure why the TSAN build is failing with \"WARNING: ThreadSanitizer: double lock of a mutex\". It seems like a false alarm to me. I think it's choking on `std::condition_variable condMsgProc`/`Mutex mutexMsgProc` so maybe it's something similar to https://github.com/google/sanitizers/issues/1259?\r\n",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753235027",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "reviewed",
      "id": 560582568,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTgyNTY4",
      "url": null,
      "actor": null,
      "commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#pullrequestreview-560582568",
      "submitted_at": "2021-01-01T11:15:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
    },
    {
      "event": "reviewed",
      "id": 560582678,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwNTgyNjc4",
      "url": null,
      "actor": null,
      "commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 13a7fec39d7e30becd7bf6eb57709f471d8ba315 assuming the tsan suppression is fixed.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#pullrequestreview-560582678",
      "submitted_at": "2021-01-01T11:58:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4160933834,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE2MDkzMzgzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4160933834",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-01T12:51:06Z"
    },
    {
      "event": "commented",
      "id": 753453403,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ1MzQwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753453403",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T09:49:38Z",
      "updated_at": "2021-01-02T09:49:38Z",
      "author_association": "MEMBER",
      "body": "utACK fa6b22736656b207251fabb068d9a3ddd91d1266",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753453403",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "labeled",
      "id": 4161706472,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxNjE3MDY0NzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4161706472",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-02T13:32:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4162117703,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE2MjExNzcwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162117703",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T02:09:44Z"
    },
    {
      "event": "unlabeled",
      "id": 4162118923,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDE2MjExODkyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162118923",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T02:12:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 753597290,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzU5NzI5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753597290",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T10:37:12Z",
      "updated_at": "2021-01-03T10:37:12Z",
      "author_association": "MEMBER",
      "body": "utACK 7bd4517e5830a09a173d82fe3184acf0bcea06a9",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753597290",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "commented",
      "id": 753611705,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzYxMTcwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753611705",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T12:44:42Z",
      "updated_at": "2021-01-03T12:44:42Z",
      "author_association": "MEMBER",
      "body": "Would it make sense to move `PeerManager` to its own file (given how much this PR is moving stuff around anyway)?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753611705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4162457242,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE2MjQ1NzI0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162457242",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T13:28:13Z"
    },
    {
      "event": "commented",
      "id": 753617551,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzYxNzU1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753617551",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T13:30:53Z",
      "updated_at": "2021-01-03T13:30:53Z",
      "author_association": "MEMBER",
      "body": "utACK abeecaa66ed136b3f0b7ff500ae5b592256072a5\r\n\r\nThanks for being so responsive to review comments!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753617551",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "commented",
      "id": 753617650,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzYxNzY1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/753617650",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T13:31:47Z",
      "updated_at": "2021-01-03T13:31:47Z",
      "author_association": "MEMBER",
      "body": "Bumped to fix missed indentation.\r\n\r\n@Sjors After the further commits in #20758 almost all of net_processing is moved into `PeerManager`, so its effectively a dedicated file anyway. Splitting out sub-components (like orphan handling) into their own modules would be a good next step afterwards, I think.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753617650",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "mentioned",
      "id": 4162460396,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDE2MjQ2MDM5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162460396",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T13:31:47Z"
    },
    {
      "event": "subscribed",
      "id": 4162460398,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQxNjI0NjAzOTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4162460398",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-03T13:31:47Z"
    },
    {
      "event": "labeled",
      "id": 4169627310,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxNjk2MjczMTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4169627310",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-05T12:52:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 755022898,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTAyMjg5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/755022898",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-06T01:48:01Z",
      "updated_at": "2021-01-06T01:48:01Z",
      "author_association": "MEMBER",
      "body": "Rebased for conflict with #20842",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-755022898",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4172923313,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE3MjkyMzMxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4172923313",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-06T01:48:06Z"
    },
    {
      "event": "unlabeled",
      "id": 4173193346,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDE3MzE5MzM0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4173193346",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-06T03:30:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 755194604,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NTE5NDYwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/755194604",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-06T09:42:10Z",
      "updated_at": "2021-01-06T09:42:10Z",
      "author_association": "MEMBER",
      "body": "utACK 916cfe29656a11592f9eff31219353ff1ac9d564",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-755194604",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "reviewed",
      "id": 562664709,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNjY0NzA5",
      "url": null,
      "actor": null,
      "commit_id": "d7c43797cc6e597c2223aa63ebd596abafe301a8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#pullrequestreview-562664709",
      "submitted_at": "2021-01-06T12:13:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4177940971,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE3Nzk0MDk3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4177940971",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T02:53:29Z"
    },
    {
      "event": "reviewed",
      "id": 563328900,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMzI4OTAw",
      "url": null,
      "actor": null,
      "commit_id": "02f67760d9014b4c963c3c8a57ed5d56de98205d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#pullrequestreview-563328900",
      "submitted_at": "2021-01-07T09:24:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
    },
    {
      "event": "commented",
      "id": 756000517,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NjAwMDUxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/756000517",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T09:35:09Z",
      "updated_at": "2021-01-07T09:35:09Z",
      "author_association": "MEMBER",
      "body": "I'm not sure if adding the comments to `NetEventsInterface` adds much.\r\n\r\nutACK 02f67760d9014b4c963c3c8a57ed5d56de98205d.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-756000517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "labeled",
      "id": 4180285754,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQxODAyODU3NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4180285754",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-07T15:05:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 563896871,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODk2ODcx",
      "url": null,
      "actor": null,
      "commit_id": "02f67760d9014b4c963c3c8a57ed5d56de98205d",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "richardsonmark316",
        "id": 75702736,
        "node_id": "MDQ6VXNlcjc1NzAyNzM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75702736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/richardsonmark316",
        "html_url": "https://github.com/richardsonmark316",
        "followers_url": "https://api.github.com/users/richardsonmark316/followers",
        "following_url": "https://api.github.com/users/richardsonmark316/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/richardsonmark316/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/richardsonmark316/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/richardsonmark316/subscriptions",
        "organizations_url": "https://api.github.com/users/richardsonmark316/orgs",
        "repos_url": "https://api.github.com/users/richardsonmark316/repos",
        "events_url": "https://api.github.com/users/richardsonmark316/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/richardsonmark316/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#pullrequestreview-563896871",
      "submitted_at": "2021-01-07T23:14:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4186792188,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE4Njc5MjE4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4186792188",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-09T06:51:06Z"
    },
    {
      "event": "unlabeled",
      "id": 4186794505,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDE4Njc5NDUwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4186794505",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-09T06:55:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 564781391,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0NzgxMzkx",
      "url": null,
      "actor": null,
      "commit_id": "3bcde8b84722be58c68309b7076aba238cf4c305",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 3bcde8b84722be58c68309b7076aba238cf4c305\r\n\r\nDid a git range-diff to verify that only the comments in `NetEventsInterface` have changed.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#pullrequestreview-564781391",
      "submitted_at": "2021-01-09T12:39:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZDI0NmE1OWI2MDZjNTE3MjhkMTBjYjcwMDA0YTZlZWRiOTUxYmNh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d246a59b606c51728d10cb70004a6eedb951bca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0d246a59b606c51728d10cb70004a6eedb951bca",
      "tree": {
        "sha": "0400ab70ade009473022283d994d7b1e4b1edfb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0400ab70ade009473022283d994d7b1e4b1edfb5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9158d6f34153dc937e109d0e7486e956a26f20aa",
          "sha": "9158d6f34153dc937e109d0e7486e956a26f20aa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9158d6f34153dc937e109d0e7486e956a26f20aa"
        }
      ],
      "message": "net, net_processing: move NetEventsInterface method docs to net.h",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-09T13:27:45Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-07T02:27:22Z"
      },
      "sha": "0d246a59b606c51728d10cb70004a6eedb951bca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGYzZDNmZDZiYmJkMGUwNjExNjc5NzE3N2JhNzk3NTgwNTUzMjUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0df3d3fd6bbbd0e06116797177ba797580553250",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0df3d3fd6bbbd0e06116797177ba797580553250",
      "tree": {
        "sha": "b5cf0e8df62688cd214b44cd71294cb1f8aa05ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5cf0e8df62688cd214b44cd71294cb1f8aa05ea"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d246a59b606c51728d10cb70004a6eedb951bca",
          "sha": "0d246a59b606c51728d10cb70004a6eedb951bca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0d246a59b606c51728d10cb70004a6eedb951bca"
        }
      ],
      "message": "net_processing: make more of PeerManager private",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-09T13:27:45Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-23T07:14:08Z"
      },
      "sha": "0df3d3fd6bbbd0e06116797177ba797580553250"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTY4YjgyZmViYjNlY2JkNWViYjdjM2Y5ZGEyN2U3NjJiMGM2OGY2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a568b82febb3ecbd5ebb7c3f9da27e762b0c68f6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a568b82febb3ecbd5ebb7c3f9da27e762b0c68f6",
      "tree": {
        "sha": "6c7ad758ba58cc09978c415ebe951b5bf0317e5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c7ad758ba58cc09978c415ebe951b5bf0317e5c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0df3d3fd6bbbd0e06116797177ba797580553250",
          "sha": "0df3d3fd6bbbd0e06116797177ba797580553250",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0df3d3fd6bbbd0e06116797177ba797580553250"
        }
      ],
      "message": "net_processing: split PeerManager into interface and implementation classes",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-09T13:27:45Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-23T07:35:33Z"
      },
      "sha": "a568b82febb3ecbd5ebb7c3f9da27e762b0c68f6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGYyZTZkMmRmNzExN2E4ZGJmMTdjNjNjNTE0OWZjNTNhNmZlMmIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0f2e6d2df7117a8dbf17c63c5149fc53a6fe2b2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e0f2e6d2df7117a8dbf17c63c5149fc53a6fe2b2",
      "tree": {
        "sha": "d1a2cdc026ac055675ad05ca8ac788445d371c8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1a2cdc026ac055675ad05ca8ac788445d371c8f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a568b82febb3ecbd5ebb7c3f9da27e762b0c68f6",
          "sha": "a568b82febb3ecbd5ebb7c3f9da27e762b0c68f6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a568b82febb3ecbd5ebb7c3f9da27e762b0c68f6"
        }
      ],
      "message": "net_processing: move PeerManagerImpl into cpp file",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-09T13:27:45Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-23T07:40:41Z"
      },
      "sha": "e0f2e6d2df7117a8dbf17c63c5149fc53a6fe2b2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOTdmNzBjODYxYWM2OTU5YjgxMTZhOWJjYTMwMzFlZGViMmIyYWFh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "tree": {
        "sha": "70af0a75d2d5bdde1030051f64e9401eddb15301",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/70af0a75d2d5bdde1030051f64e9401eddb15301"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0f2e6d2df7117a8dbf17c63c5149fc53a6fe2b2",
          "sha": "e0f2e6d2df7117a8dbf17c63c5149fc53a6fe2b2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e0f2e6d2df7117a8dbf17c63c5149fc53a6fe2b2"
        }
      ],
      "message": "net_processing: move Peer definition to .cpp",
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2021-01-09T13:27:45Z"
      },
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2020-12-30T08:41:45Z"
      },
      "sha": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4187044649,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDE4NzA0NDY0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4187044649",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-09T13:29:28Z"
    },
    {
      "event": "commented",
      "id": 757212348,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzIxMjM0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757212348",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-09T13:51:21Z",
      "updated_at": "2021-01-09T13:51:21Z",
      "author_association": "MEMBER",
      "body": "ACK c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-757212348",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "commented",
      "id": 757901480,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1NzkwMTQ4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/757901480",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-11T11:50:00Z",
      "updated_at": "2021-01-11T11:50:00Z",
      "author_association": "MEMBER",
      "body": "ACK c97f70c861ac6959b8116a9bca3031edeb2b2aaa\r\n\r\n> After the further commits in #20758 almost all of net_processing is moved into `PeerManager`, so its effectively a dedicated file anyway. Splitting out sub-components (like orphan handling) into their own modules would be a good next step afterwards, I think.\r\n\r\nThat sounds good, because `net_processing.cpp` is almost 5000 lines now, with a whole bunch of classes and structs.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-757901480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "reviewed",
      "id": 566056758,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2MDU2NzU4",
      "url": null,
      "actor": null,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK c97f70c861ac6959b8116a9bca3031edeb2b2aaa\r\n\r\nCode review ok (some minor questions below), compiles locally with clang 12 without warnings, unit and functional tests pass.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#pullrequestreview-566056758",
      "submitted_at": "2021-01-12T09:30:58Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
    },
    {
      "event": "commented",
      "id": 759167895,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTE2Nzg5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759167895",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-13T02:47:09Z",
      "updated_at": "2021-01-13T02:47:09Z",
      "author_association": "MEMBER",
      "body": "Reviewing this really soon if you're looking for more eyes on it before merge.\r\n\r\n",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-759167895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "commented",
      "id": 759299847,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc1OTI5OTg0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/759299847",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-13T08:47:28Z",
      "updated_at": "2021-01-13T08:51:04Z",
      "author_association": "MEMBER",
      "body": "Nice, good thing to have less implementation details in (commonly included) header files.\r\n\r\nCode review ACK c97f70c861ac6959b8116a9bca3031edeb2b2aaa\r\n\r\n> Reviewing this really soon if you're looking for more eyes on it before merge.\r\n\r\nDon't let it being merged keep you from reviewing it please 😄 ",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-759299847",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20811"
    },
    {
      "event": "merged",
      "id": 4200058014,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDIwMDA1ODAxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4200058014",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "60427ee35f280483c8aa7e5f33a95cc093c3fd0a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60427ee35f280483c8aa7e5f33a95cc093c3fd0a",
      "created_at": "2021-01-13T08:48:34Z"
    },
    {
      "event": "closed",
      "id": 4200058032,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDIwMDA1ODAzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4200058032",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-13T08:48:34Z"
    },
    {
      "event": "referenced",
      "id": 4202008722,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQyMDIwMDg3MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4202008722",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "375df7582c4ae7745cd1ac633ce6e917775ca474",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/375df7582c4ae7745cd1ac633ce6e917775ca474",
      "created_at": "2021-01-13T16:07:53Z"
    },
    {
      "event": "reviewed",
      "id": 568702990,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NzAyOTkw",
      "url": null,
      "actor": null,
      "commit_id": "a568b82febb3ecbd5ebb7c3f9da27e762b0c68f6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code Review ACK c97f70c\r\n\r\nGood code restructuring direction, only minors.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#pullrequestreview-568702990",
      "submitted_at": "2021-01-15T00:27:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
    },
    {
      "event": "referenced",
      "id": 5949692348,
      "node_id": "REFE_lADOABII584uTV_izwAAAAFioRm8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5949692348",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a5142b422d009628de4cd6d5d1ea9f960281b22a",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/a5142b422d009628de4cd6d5d1ea9f960281b22a",
      "created_at": "2022-01-25T13:03:19Z"
    },
    {
      "event": "referenced",
      "id": 5950427285,
      "node_id": "REFE_lADOABII584uTV_izwAAAAFirFCV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5950427285",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6002783def518352952b2b878aea5205e6b0308f",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/6002783def518352952b2b878aea5205e6b0308f",
      "created_at": "2022-01-25T14:49:15Z"
    },
    {
      "event": "referenced",
      "id": 5950452097,
      "node_id": "REFE_lADOABII584uTV_izwAAAAFirLGB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5950452097",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bb213e6dee15d12a43347f17f7379f8fc03c49a1",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/bb213e6dee15d12a43347f17f7379f8fc03c49a1",
      "created_at": "2022-01-25T14:52:32Z"
    },
    {
      "event": "referenced",
      "id": 5950452116,
      "node_id": "REFE_lADOABII584uTV_izwAAAAFirLGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5950452116",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "418a3581123eaa67cf01a71b58c589ec1b208d13",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/418a3581123eaa67cf01a71b58c589ec1b208d13",
      "created_at": "2022-01-25T14:52:32Z"
    },
    {
      "event": "referenced",
      "id": 5950497837,
      "node_id": "REFE_lADOABII584uTV_izwAAAAFirWQt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5950497837",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c85369a06efc85469765337ed94c3a7233633d9c",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/c85369a06efc85469765337ed94c3a7233633d9c",
      "created_at": "2022-01-25T14:58:19Z"
    },
    {
      "event": "locked",
      "id": 7199007793,
      "node_id": "LOE_lADOABII584uTV_izwAAAAGtGCQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199007793",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:02:52Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550758244",
      "pull_request_review_id": 560582568,
      "id": 550758244,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc1ODI0NA==",
      "diff_hunk": "@@ -1295,7 +1479,7 @@ void PeerManager::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_\n  * Update our best height and announce any block hashes which weren't previously\n  * in ::ChainActive() to our peers.\n  */\n-void PeerManager::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n+void PeerManagerImpl::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 341,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "When renaming this, you'll probably also have to rename `mutex:PeerManager::UpdatedBlockTip` in `./test/sanitizer_suppressions/tsan`",
      "created_at": "2021-01-01T11:15:32Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550758244",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550758244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1482,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550758510",
      "pull_request_review_id": 560582678,
      "id": 550758510,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc1ODUxMA==",
      "diff_hunk": "@@ -40,210 +34,36 @@ struct CNodeStateStats {\n     std::vector<int> vHeightInFlight;\n };\n \n-/**\n- * Data structure for an individual peer. This struct is not protected by\n- * cs_main since it does not contain validation-critical data.\n- *\n- * Memory is owned by shared pointers and this object is destructed when\n- * the refcount drops to zero.\n- *\n- * Mutexes inside this struct must not be held when locking m_peer_mutex.\n- *\n- * TODO: move most members from CNodeState to this structure.\n- * TODO: move remaining application-layer data members from CNode to this structure.\n- */\n-struct Peer {\n-    /** Same id as the CNode object for this peer */\n-    const NodeId m_id{0};\n-\n-    /** Protects misbehavior data members */\n-    Mutex m_misbehavior_mutex;\n-    /** Accumulated misbehavior score for this peer */\n-    int m_misbehavior_score GUARDED_BY(m_misbehavior_mutex){0};\n-    /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n-    bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n-\n-    /** Protects block inventory data members */\n-    Mutex m_block_inv_mutex;\n-    /** List of blocks that we'll anounce via an `inv` message.\n-     * There is no final sorting before sending, as they are always sent\n-     * immediately and in the order requested. */\n-    std::vector<uint256> m_blocks_for_inv_relay GUARDED_BY(m_block_inv_mutex);\n-    /** Unfiltered list of blocks that we'd like to announce via a `headers`\n-     * message. If we can't announce via a `headers` message, we'll fall back to\n-     * announcing via `inv`. */\n-    std::vector<uint256> m_blocks_for_headers_relay GUARDED_BY(m_block_inv_mutex);\n-    /** The final block hash that we sent in an `inv` message to this peer.\n-     * When the peer requests this block, we send an `inv` message to trigger\n-     * the peer to request the next sequence of block hashes.\n-     * Most peers use headers-first syncing, which doesn't use this mechanism */\n-    uint256 m_continuation_block GUARDED_BY(m_block_inv_mutex) {};\n-\n-    /** This peer's reported block height when we connected */\n-    std::atomic<int> m_starting_height{-1};\n-\n-    /** Set of txids to reconsider once their parent transactions have been accepted **/\n-    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n-\n-    /** Protects m_getdata_requests **/\n-    Mutex m_getdata_requests_mutex;\n-    /** Work queue of items requested by this peer **/\n-    std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n-\n-    explicit Peer(NodeId id) : m_id(id) {}\n-};\n-\n-using PeerRef = std::shared_ptr<Peer>;\n-\n-class PeerManager final : public CValidationInterface, public NetEventsInterface {\n+class PeerManager : public CValidationInterface, public NetEventsInterface\n+{\n public:\n-    PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                bool ignore_incoming_txs);\n-\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n-    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n-    void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n-    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n-    void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n-    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n+    static std::unique_ptr<PeerManager> make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                                             CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                                             bool ignore_incoming_txs);\n+    virtual ~PeerManager() { }\n \n-    /** Initialize a peer by adding it to mapNodeState and pushing a message requesting its version */\n-    void InitializeNode(CNode* pnode) override;\n-    /** Handle removal of a peer by updating various state and removing it from mapNodeState */\n-    void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n-    /**\n-    * Process protocol messages received from a given node\n-    *\n-    * @param[in]   pfrom           The node which we have received messages from.\n-    * @param[in]   interrupt       Interrupt condition for processing threads\n-    */\n-    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n-    /**\n-    * Send queued protocol messages to be sent to a give node.\n-    *\n-    * @param[in]   pto             The node which we are sending messages to.\n-    * @return                      True if there is more work to be done\n-    */\n-    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n-\n-    /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n-    void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-    /** Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound */\n-    void CheckForStaleTipAndEvictPeers();\n-    /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n-    void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-    /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n-    void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n+    /** Get statistics from node state */\n+    virtual bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) = 0;\n \n-    /** Process a single message from a peer. Public for fuzz testing */\n-    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n-                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc);\n+    /** Whether this node ignores txs received over p2p. */\n+    virtual bool IgnoresIncomingTxs() = 0;\n \n     /**\n      * Increment peer's misbehavior score. If the new value >= DISCOURAGEMENT_THRESHOLD, mark the node\n      * to be discouraged, meaning the peer might be disconnected and added to the discouragement filter.\n      * Public for unit testing.\n      */\n-    void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message);\n-\n-    /** Get statistics from node state */\n-    bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats);\n-\n-    /** Whether this node ignores txs received over p2p. */\n-    bool IgnoresIncomingTxs() {return m_ignore_incoming_txs;};\n-\n-private:\n-    /** Get a shared pointer to the Peer object.\n-     *  May return an empty shared_ptr if the Peer object can't be found. */\n-    PeerRef GetPeerRef(NodeId id) const;\n-\n-    /** Get a shared pointer to the Peer object and remove it from m_peer_map.\n-     *  May return an empty shared_ptr if the Peer object can't be found. */\n-    PeerRef RemovePeer(NodeId id);\n+    virtual void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) = 0;\n \n     /**\n-     * Potentially mark a node discouraged based on the contents of a BlockValidationState object\n-     *\n-     * @param[in] via_compact_block this bool is passed in because net_processing should\n-     * punish peers differently depending on whether the data was provided in a compact\n-     * block message or not. If the compact block had a valid header, but contained invalid\n-     * txs, the peer should not be punished. See BIP 152.\n-     *\n-     * @return Returns true if the peer was punished (probably disconnected)\n-     */\n-    bool MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n-                                 bool via_compact_block, const std::string& message = \"\");\n-\n-    /**\n-     * Potentially disconnect and discourage a node based on the contents of a TxValidationState object\n-     *\n-     * @return Returns true if the peer was punished (probably disconnected)\n-     */\n-    bool MaybePunishNodeForTx(NodeId nodeid, const TxValidationState& state, const std::string& message = \"\");\n-\n-    /** Maybe disconnect a peer and discourage future connections from its address.\n-     *\n-     * @param[in]   pnode     The node to check.\n-     * @return                True if the peer was marked for disconnection in this function\n+     * Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound.\n+     * Public for unit testing.\n      */\n-    bool MaybeDiscourageAndDisconnect(CNode& pnode);\n+    virtual void CheckForStaleTipAndEvictPeers() = 0;\n \n-    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n-    /** Process a single headers message from a peer. */\n-    void ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n-                               const std::vector<CBlockHeader>& headers,\n-                               bool via_compact_block);\n-\n-    void SendBlockTransactions(CNode& pfrom, const CBlock& block, const BlockTransactionsRequest& req);\n-\n-    /** Register with TxRequestTracker that an INV has been received from a\n-     *  peer. The announcement parameters are decided in PeerManager and then\n-     *  passed to TxRequestTracker. */\n-    void AddTxAnnouncement(const CNode& node, const GenTxid& gtxid, std::chrono::microseconds current_time)\n-        EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n-\n-    /** Send a version message to a peer */\n-    void PushNodeVersion(CNode& pnode, int64_t nTime);\n-\n-    const CChainParams& m_chainparams;\n-    CConnman& m_connman;\n-    /** Pointer to this node's banman. May be nullptr - check existence before dereferencing. */\n-    BanMan* const m_banman;\n-    ChainstateManager& m_chainman;\n-    CTxMemPool& m_mempool;\n-    TxRequestTracker m_txrequest GUARDED_BY(::cs_main);\n-\n-    int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n-\n-    //* Whether this node is running in blocks only mode */\n-    const bool m_ignore_incoming_txs;\n-\n-    /** Whether we've completed initial sync yet, for determining when to turn\n-      * on extra block-relay-only peers. */\n-    bool m_initial_sync_finished{false};\n-\n-    /** Protects m_peer_map. This mutex must not be locked while holding a lock\n-     *  on any of the mutexes inside a Peer object. */\n-    mutable Mutex m_peer_mutex;\n-    /**\n-     * Map of all Peer objects, keyed by peer id. This map is protected\n-     * by the m_peer_mutex. Once a shared pointer reference is\n-     * taken, the lock may be released. Individual fields are protected by\n-     * their own locks.\n-     */\n-    std::map<NodeId, PeerRef> m_peer_map GUARDED_BY(m_peer_mutex);\n+    /** Process a single message from a peer. Public for fuzz testing */\n+    virtual void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) = 0;",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 244,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps align with opening parens?",
      "created_at": "2021-01-01T11:18:18Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550758510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550758510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550758986",
      "pull_request_review_id": 560582678,
      "id": 550758986,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc1ODk4Ng==",
      "diff_hunk": "@@ -1034,7 +1211,7 @@ void PeerManager::Misbehaving(const NodeId pnode, const int howmuch, const std::\n     }\n }\n \n-bool PeerManager::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n+bool PeerManagerImpl::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n                                           bool via_compact_block, const std::string& message)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 277,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Keep alignment with parens",
      "created_at": "2021-01-01T11:24:58Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550758986",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550758986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1221,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550759607",
      "pull_request_review_id": 560582678,
      "id": 550759607,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc1OTYwNw==",
      "diff_hunk": "@@ -1130,9 +1307,16 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n         (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, consensusParams) < STALE_RELAY_AGE_LIMIT);\n }\n \n-PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                         bool ignore_incoming_txs)\n+std::unique_ptr<PeerManager> PeerManager::make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,",
      "path": "src/net_processing.cpp",
      "position": 305,
      "original_position": 296,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Adding a new parameter to the ctor now requires updating five locations (`PeerManager::make` declaration, `PeerManager::make` definition signature, `PeerManager::make` function body` `PeerManagerImpl` ctor declaration, `PeerManagerImpl` ctor definition signature.\r\n\r\nI wonder if it makes sense to create a `PeerManagerArgs` struct that's passed into the `make()` method and forwarded to the `PeerManagerImpl` ctor so that only one place needs to be changed?",
      "created_at": "2021-01-01T11:33:07Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550759607",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550759607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1316,
      "original_line": 1316,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550759657",
      "pull_request_review_id": 560582678,
      "id": 550759657,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc1OTY1Nw==",
      "diff_hunk": "@@ -2267,7 +2451,7 @@ static void ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv, const CChainPar\n     connman.PushMessage(&peer, std::move(msg));\n }\n \n-void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n                                          const std::chrono::microseconds time_received,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 391,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Feel free to fix alignment while you're touching this function :)",
      "created_at": "2021-01-01T11:33:48Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550759657",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550759657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550761705",
      "pull_request_review_id": 560582678,
      "id": 550761705,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2MTcwNQ==",
      "diff_hunk": "@@ -6,19 +6,13 @@\n #ifndef BITCOIN_NET_PROCESSING_H\n #define BITCOIN_NET_PROCESSING_H\n \n-#include <consensus/params.h>\n #include <net.h>\n #include <sync.h>\n-#include <txrequest.h>\n #include <validationinterface.h>\n \n-class BlockTransactionsRequest;\n-class BlockValidationState;\n-class CBlockHeader;\n class CChainParams;\n class CTxMemPool;\n class ChainstateManager;\n-class TxValidationState;\n \n extern RecursiveMutex cs_main;\n extern RecursiveMutex g_cs_orphans;",
      "path": "src/net_processing.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This only needs to be exposed because of the weird lock ordering requirements documented here: https://github.com/bitcoin/bitcoin/blob/e75f91eae3936269b40b4bfdfe540d5526270936/src/init.cpp#L202-L208. Once tx data is moved into `Peer` and `RelayTransactions()` no longer needs to call `ForEachNode()` and therefore take `cs_vNodes` while holding `g_cs_orphans`, this mutex can be private in net_processing.",
      "created_at": "2021-01-01T11:58:43Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550761705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550761705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550944654",
      "pull_request_review_id": 560665001,
      "id": 550944654,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk0NDY1NA==",
      "diff_hunk": "@@ -6,19 +6,13 @@\n #ifndef BITCOIN_NET_PROCESSING_H\n #define BITCOIN_NET_PROCESSING_H\n \n-#include <consensus/params.h>\n #include <net.h>\n #include <sync.h>\n-#include <txrequest.h>\n #include <validationinterface.h>\n \n-class BlockTransactionsRequest;\n-class BlockValidationState;\n-class CBlockHeader;\n class CChainParams;\n class CTxMemPool;\n class ChainstateManager;\n-class TxValidationState;\n \n extern RecursiveMutex cs_main;\n extern RecursiveMutex g_cs_orphans;",
      "path": "src/net_processing.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": 550761705,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think that's relevant for this PR though?",
      "created_at": "2021-01-03T02:11:05Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550944654",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550944654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550944743",
      "pull_request_review_id": 560665044,
      "id": 550944743,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk0NDc0Mw==",
      "diff_hunk": "@@ -1130,9 +1307,16 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n         (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, consensusParams) < STALE_RELAY_AGE_LIMIT);\n }\n \n-PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                         bool ignore_incoming_txs)\n+std::unique_ptr<PeerManager> PeerManager::make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,",
      "path": "src/net_processing.cpp",
      "position": 305,
      "original_position": 296,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": 550759607,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also requires touching everywhere that calls the ctor. Not against it, but doesn't seem like a big win.",
      "created_at": "2021-01-03T02:12:36Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550944743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550944743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1316,
      "original_line": 1316,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550986467",
      "pull_request_review_id": 560684619,
      "id": 550986467,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk4NjQ2Nw==",
      "diff_hunk": "@@ -1130,9 +1307,16 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n         (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, consensusParams) < STALE_RELAY_AGE_LIMIT);\n }\n \n-PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                         bool ignore_incoming_txs)\n+std::unique_ptr<PeerManager> PeerManager::make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,",
      "path": "src/net_processing.cpp",
      "position": 305,
      "original_position": 296,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": 550759607,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not necessarily if we're passing in arguments with defaults. Anyway, not important here. Can be considered separately.",
      "created_at": "2021-01-03T10:24:25Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550986467",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550986467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1316,
      "original_line": 1316,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550986507",
      "pull_request_review_id": 560684646,
      "id": 550986507,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk4NjUwNw==",
      "diff_hunk": "@@ -6,19 +6,13 @@\n #ifndef BITCOIN_NET_PROCESSING_H\n #define BITCOIN_NET_PROCESSING_H\n \n-#include <consensus/params.h>\n #include <net.h>\n #include <sync.h>\n-#include <txrequest.h>\n #include <validationinterface.h>\n \n-class BlockTransactionsRequest;\n-class BlockValidationState;\n-class CBlockHeader;\n class CChainParams;\n class CTxMemPool;\n class ChainstateManager;\n-class TxValidationState;\n \n extern RecursiveMutex cs_main;\n extern RecursiveMutex g_cs_orphans;",
      "path": "src/net_processing.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": 550761705,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Correct, this was just an observation about why is required here now.",
      "created_at": "2021-01-03T10:24:57Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550986507",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550986507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550987838",
      "pull_request_review_id": 560685464,
      "id": 550987838,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDk4NzgzOA==",
      "diff_hunk": "@@ -1034,7 +1211,7 @@ void PeerManager::Misbehaving(const NodeId pnode, const int howmuch, const std::\n     }\n }\n \n-bool PeerManager::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n+bool PeerManagerImpl::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n                                           bool via_compact_block, const std::string& message)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 277,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": 550758986,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not resolved",
      "created_at": "2021-01-03T10:36:59Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550987838",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/550987838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1221,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551006305",
      "pull_request_review_id": 560696756,
      "id": 551006305,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTAwNjMwNQ==",
      "diff_hunk": "@@ -1034,7 +1211,7 @@ void PeerManager::Misbehaving(const NodeId pnode, const int howmuch, const std::\n     }\n }\n \n-bool PeerManager::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n+bool PeerManagerImpl::MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n                                           bool via_compact_block, const std::string& message)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 277,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": 550758986,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "dammit",
      "created_at": "2021-01-03T13:29:08Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r551006305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551006305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1221,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551099132",
      "pull_request_review_id": 560760950,
      "id": 551099132,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5OTEzMg==",
      "diff_hunk": "@@ -1130,9 +1307,16 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n         (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, consensusParams) < STALE_RELAY_AGE_LIMIT);\n }\n \n-PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                         bool ignore_incoming_txs)\n+std::unique_ptr<PeerManager> PeerManager::make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,",
      "path": "src/net_processing.cpp",
      "position": 305,
      "original_position": 296,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": 550759607,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "BTW, as part of turning (almost) all of net_processing.cpp into `PeerManagerImpl` methods, we could plausibly remove all the `PeerManagerImpl` declarations by just having net_processing.h start with `namespace { class PeerManagerImpl : public PeerManager {` and end with the closing brackets and the `PeerManager::make` definition -- there's no need to declare class methods before use. That'd remove one of the redundancies above, as well as a bunch of others.",
      "created_at": "2021-01-04T03:09:28Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r551099132",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551099132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1316,
      "original_line": 1316,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551217966",
      "pull_request_review_id": 560905098,
      "id": 551217966,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxNzk2Ng==",
      "diff_hunk": "@@ -1130,9 +1307,16 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n         (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, consensusParams) < STALE_RELAY_AGE_LIMIT);\n }\n \n-PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                         bool ignore_incoming_txs)\n+std::unique_ptr<PeerManager> PeerManager::make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,",
      "path": "src/net_processing.cpp",
      "position": 305,
      "original_position": 296,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "13a7fec39d7e30becd7bf6eb57709f471d8ba315",
      "in_reply_to_id": 550759607,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems reasonable, although like you say earlier, it's not a big win. Perhaps something for a follow-up once more of #20758 has landed.",
      "created_at": "2021-01-04T10:01:02Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r551217966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/551217966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1316,
      "original_line": 1316,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552546506",
      "pull_request_review_id": 562664709,
      "id": 552546506,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjU0NjUwNg==",
      "diff_hunk": "@@ -100,55 +100,27 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n                 CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n                 bool ignore_incoming_txs);\n \n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n+    /** Overridden from CValidationInterface. */\n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n     void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n     void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n     void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n \n-    /** Initialize a peer by adding it to mapNodeState and pushing a message requesting its version */\n+    /** Implement NetEventsInterface */\n     void InitializeNode(CNode* pnode) override;\n-    /** Handle removal of a peer by updating various state and removing it from mapNodeState */\n     void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n-    /**\n-    * Process protocol messages received from a given node",
      "path": "src/net_processing.h",
      "position": 114,
      "original_position": 29,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "d7c43797cc6e597c2223aa63ebd596abafe301a8",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are you sure you want to lose all this documentation?",
      "created_at": "2021-01-06T12:13:11Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r552546506",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/552546506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 126,
      "original_line": 126,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553080928",
      "pull_request_review_id": 563178732,
      "id": 553080928,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA4MDkyOA==",
      "diff_hunk": "@@ -100,55 +100,27 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n                 CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n                 bool ignore_incoming_txs);\n \n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n+    /** Overridden from CValidationInterface. */\n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n     void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n     void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n-    /**\n-     * Overridden from CValidationInterface.\n-     */\n     void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n \n-    /** Initialize a peer by adding it to mapNodeState and pushing a message requesting its version */\n+    /** Implement NetEventsInterface */\n     void InitializeNode(CNode* pnode) override;\n-    /** Handle removal of a peer by updating various state and removing it from mapNodeState */\n     void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n-    /**\n-    * Process protocol messages received from a given node",
      "path": "src/net_processing.h",
      "position": 114,
      "original_position": 29,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "d7c43797cc6e597c2223aa63ebd596abafe301a8",
      "in_reply_to_id": 552546506,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a commit to move them into `NetEventsInterface`; that makes more of a conflict with #20864 so probably a good idea to get that reviewed and merged first.",
      "created_at": "2021-01-07T02:54:17Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r553080928",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553080928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 126,
      "original_line": 126,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553205371",
      "pull_request_review_id": 563328900,
      "id": 553205371,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzIwNTM3MQ==",
      "diff_hunk": "@@ -617,11 +617,27 @@ uint16_t GetListenPort();\n class NetEventsInterface\n {\n public:\n-    virtual bool ProcessMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n-    virtual bool SendMessages(CNode* pnode) = 0;\n+    /** Initialize a peer by adding it to mapNodeState and pushing a message requesting its version */",
      "path": "src/net.h",
      "position": null,
      "original_position": 6,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "02f67760d9014b4c963c3c8a57ed5d56de98205d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment about the implementation (`mapNodeState`) doesn't make sense in the interface class. Same for `FinalizeNode()` below.",
      "created_at": "2021-01-07T09:24:35Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r553205371",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/553205371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 620,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554301333",
      "pull_request_review_id": 564689596,
      "id": 554301333,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDMwMTMzMw==",
      "diff_hunk": "@@ -617,11 +617,27 @@ uint16_t GetListenPort();\n class NetEventsInterface\n {\n public:\n-    virtual bool ProcessMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n-    virtual bool SendMessages(CNode* pnode) = 0;\n+    /** Initialize a peer by adding it to mapNodeState and pushing a message requesting its version */",
      "path": "src/net.h",
      "position": null,
      "original_position": 6,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "02f67760d9014b4c963c3c8a57ed5d56de98205d",
      "in_reply_to_id": 553205371,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Grr, edited twice, but rebased three times and lost them, I guess. Rebased and edited again.",
      "created_at": "2021-01-09T06:51:02Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r554301333",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554301333"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 620,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554422942",
      "pull_request_review_id": 564781391,
      "id": 554422942,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQyMjk0Mg==",
      "diff_hunk": "@@ -769,11 +769,28 @@ class CNode\n class NetEventsInterface\n {\n public:\n-    virtual bool ProcessMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n-    virtual bool SendMessages(CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(pnode->cs_sendProcessing) = 0;\n+    /** Initialize a peer (setup state, queue any initial messages) */",
      "path": "src/net.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "3bcde8b84722be58c68309b7076aba238cf4c305",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think it's a big deal, but if you're going to add these comments to the interface class, I think there are some potential improvements:\r\n\r\n- \"queue any initial messages\" is only true for the version message for outbound peers. Since it's not universally true, it probably doesn't belong in the description of the interface.\r\n- `SendMessages()` return value is not used to indicate if more work is done. The function always returns `true` and that value is discarded by the caller. A future commit could change the function to return `void`.\r\n- `ProcessMessages()` _does_ return a bool that indicates whether there's more work.\r\n\r\nEventually, these functions could all be updated to just take a single `CNode&` argument, which would be a very clean interface (#20228 removes the `update_connection_time` arg from `FinalizeNode()`, and I have another branch that eliminates `interrupt`).",
      "created_at": "2021-01-09T12:39:03Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r554422942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554422942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 772,
      "original_line": 772,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554427587",
      "pull_request_review_id": 564783996,
      "id": 554427587,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQyNzU4Nw==",
      "diff_hunk": "@@ -769,11 +769,28 @@ class CNode\n class NetEventsInterface\n {\n public:\n-    virtual bool ProcessMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n-    virtual bool SendMessages(CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(pnode->cs_sendProcessing) = 0;\n+    /** Initialize a peer (setup state, queue any initial messages) */",
      "path": "src/net.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "3bcde8b84722be58c68309b7076aba238cf4c305",
      "in_reply_to_id": 554422942,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`SendMessages` lost its new lock annotation in the rebase, so I've added the doc from `ProcessMessages` return value.\r\n\r\nI think \"any initial messages\" covers nothing, just a version message, or anything else we might think up fine. The return value of `SendMessages` is \"used\" in the unit tests, so haven't removed that in this PR. Looking at the `CNode&` thing in #20758",
      "created_at": "2021-01-09T13:29:23Z",
      "updated_at": "2021-01-09T13:29:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r554427587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/554427587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 772,
      "original_line": 772,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555608269",
      "pull_request_review_id": 566056758,
      "id": 555608269,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTYwODI2OQ==",
      "diff_hunk": "@@ -39,216 +33,39 @@ struct CNodeStateStats {\n     std::vector<int> vHeightInFlight;\n };\n \n-/**\n- * Data structure for an individual peer. This struct is not protected by\n- * cs_main since it does not contain validation-critical data.\n- *\n- * Memory is owned by shared pointers and this object is destructed when\n- * the refcount drops to zero.\n- *\n- * Mutexes inside this struct must not be held when locking m_peer_mutex.\n- *\n- * TODO: move most members from CNodeState to this structure.\n- * TODO: move remaining application-layer data members from CNode to this structure.\n- */\n-struct Peer {\n-    /** Same id as the CNode object for this peer */\n-    const NodeId m_id{0};\n-\n-    /** Protects misbehavior data members */\n-    Mutex m_misbehavior_mutex;\n-    /** Accumulated misbehavior score for this peer */\n-    int m_misbehavior_score GUARDED_BY(m_misbehavior_mutex){0};\n-    /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n-    bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n-\n-    /** Protects block inventory data members */\n-    Mutex m_block_inv_mutex;\n-    /** List of blocks that we'll announce via an `inv` message.\n-     * There is no final sorting before sending, as they are always sent\n-     * immediately and in the order requested. */\n-    std::vector<uint256> m_blocks_for_inv_relay GUARDED_BY(m_block_inv_mutex);\n-    /** Unfiltered list of blocks that we'd like to announce via a `headers`\n-     * message. If we can't announce via a `headers` message, we'll fall back to\n-     * announcing via `inv`. */\n-    std::vector<uint256> m_blocks_for_headers_relay GUARDED_BY(m_block_inv_mutex);\n-    /** The final block hash that we sent in an `inv` message to this peer.\n-     * When the peer requests this block, we send an `inv` message to trigger\n-     * the peer to request the next sequence of block hashes.\n-     * Most peers use headers-first syncing, which doesn't use this mechanism */\n-    uint256 m_continuation_block GUARDED_BY(m_block_inv_mutex) {};\n-\n-    /** This peer's reported block height when we connected */\n-    std::atomic<int> m_starting_height{-1};\n-\n-    /** Set of txids to reconsider once their parent transactions have been accepted **/\n-    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n-\n-    /** Protects m_getdata_requests **/\n-    Mutex m_getdata_requests_mutex;\n-    /** Work queue of items requested by this peer **/\n-    std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n-\n-    explicit Peer(NodeId id) : m_id(id) {}\n-};\n-\n-using PeerRef = std::shared_ptr<Peer>;\n-\n-class PeerManager final : public CValidationInterface, public NetEventsInterface {\n+class PeerManager : public CValidationInterface, public NetEventsInterface",
      "path": "src/net_processing.h",
      "position": 80,
      "original_position": 80,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: maybe consider renaming\r\n`PeerManager` -> `PeerManagerInterface`\r\n`PeerManagerImpl` -> `PeerManager`\r\nfor consistency with `CValidationInterface` and `NetEventsInterface`.",
      "created_at": "2021-01-12T08:59:18Z",
      "updated_at": "2021-01-12T09:30:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555608269",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555608269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555612652",
      "pull_request_review_id": 566056758,
      "id": 555612652,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTYxMjY1Mg==",
      "diff_hunk": "@@ -1129,9 +1313,16 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n         (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, consensusParams) < STALE_RELAY_AGE_LIMIT);\n }\n \n-PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                         bool ignore_incoming_txs)\n+std::unique_ptr<PeerManager> PeerManager::make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                                               CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                                               bool ignore_incoming_txs)\n+{\n+    return std::make_unique<PeerManagerImpl>(chainparams, connman, banman, scheduler, chainman, pool, ignore_incoming_txs);\n+}",
      "path": "src/net_processing.cpp",
      "position": 310,
      "original_position": 310,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the rationale behind this method? It is not like callers can choose which implementation to use. Why not use `std::make_unique<PeerManagerImpl>(...)` in the callers and drop this method?",
      "created_at": "2021-01-12T09:06:43Z",
      "updated_at": "2021-01-12T09:30:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555612652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555612652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": 1316,
      "original_start_line": 1316,
      "start_side": "RIGHT",
      "line": 1321,
      "original_line": 1321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555615240",
      "pull_request_review_id": 566056758,
      "id": 555615240,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTYxNTI0MA==",
      "diff_hunk": "@@ -167,6 +168,186 @@ std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUA\n void EraseOrphansFor(NodeId peer);\n \n // Internal stuff\n+namespace {\n+/**\n+ * Data structure for an individual peer. This struct is not protected by\n+ * cs_main since it does not contain validation-critical data.\n+ *\n+ * Memory is owned by shared pointers and this object is destructed when\n+ * the refcount drops to zero.\n+ *\n+ * Mutexes inside this struct must not be held when locking m_peer_mutex.\n+ *\n+ * TODO: move most members from CNodeState to this structure.\n+ * TODO: move remaining application-layer data members from CNode to this structure.\n+ */\n+struct Peer {\n+    /** Same id as the CNode object for this peer */\n+    const NodeId m_id{0};\n+\n+    /** Protects misbehavior data members */\n+    Mutex m_misbehavior_mutex;\n+    /** Accumulated misbehavior score for this peer */\n+    int m_misbehavior_score GUARDED_BY(m_misbehavior_mutex){0};\n+    /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n+    bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n+\n+    /** Protects block inventory data members */\n+    Mutex m_block_inv_mutex;\n+    /** List of blocks that we'll announce via an `inv` message.\n+     * There is no final sorting before sending, as they are always sent\n+     * immediately and in the order requested. */\n+    std::vector<uint256> m_blocks_for_inv_relay GUARDED_BY(m_block_inv_mutex);\n+    /** Unfiltered list of blocks that we'd like to announce via a `headers`\n+     * message. If we can't announce via a `headers` message, we'll fall back to\n+     * announcing via `inv`. */\n+    std::vector<uint256> m_blocks_for_headers_relay GUARDED_BY(m_block_inv_mutex);\n+    /** The final block hash that we sent in an `inv` message to this peer.\n+     * When the peer requests this block, we send an `inv` message to trigger\n+     * the peer to request the next sequence of block hashes.\n+     * Most peers use headers-first syncing, which doesn't use this mechanism */\n+    uint256 m_continuation_block GUARDED_BY(m_block_inv_mutex) {};\n+\n+    /** This peer's reported block height when we connected */\n+    std::atomic<int> m_starting_height{-1};\n+\n+    /** Set of txids to reconsider once their parent transactions have been accepted **/\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n+\n+    /** Protects m_getdata_requests **/\n+    Mutex m_getdata_requests_mutex;\n+    /** Work queue of items requested by this peer **/\n+    std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n+\n+    explicit Peer(NodeId id) : m_id(id) {}\n+};\n+\n+using PeerRef = std::shared_ptr<Peer>;\n+\n+class PeerManagerImpl final : public PeerManager\n+{\n+public:\n+    PeerManagerImpl(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                    CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                    bool ignore_incoming_txs);\n+\n+    /** Overridden from CValidationInterface. */\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n+    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n+    void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n+    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n+\n+    /** Implement NetEventsInterface */\n+    void InitializeNode(CNode* pnode) override;\n+    void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n+    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n+    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n+\n+    /** Implement PeerManager */\n+    void CheckForStaleTipAndEvictPeers() override;\n+    bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) override;\n+    bool IgnoresIncomingTxs() override { return m_ignore_incoming_txs; }\n+    void SetBestHeight(int height) override { m_best_height = height; };\n+    void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n+    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+\n+private:\n+    /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n+    void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n+    void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n+    void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n+\n+    /** Get a shared pointer to the Peer object.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef GetPeerRef(NodeId id) const;\n+\n+    /** Get a shared pointer to the Peer object and remove it from m_peer_map.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef RemovePeer(NodeId id);\n+\n+    /**\n+     * Potentially mark a node discouraged based on the contents of a BlockValidationState object\n+     *\n+     * @param[in] via_compact_block this bool is passed in because net_processing should\n+     * punish peers differently depending on whether the data was provided in a compact\n+     * block message or not. If the compact block had a valid header, but contained invalid\n+     * txs, the peer should not be punished. See BIP 152.\n+     *\n+     * @return Returns true if the peer was punished (probably disconnected)\n+     */\n+    bool MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n+                                 bool via_compact_block, const std::string& message = \"\");\n+\n+    /**\n+     * Potentially disconnect and discourage a node based on the contents of a TxValidationState object\n+     *\n+     * @return Returns true if the peer was punished (probably disconnected)\n+     */\n+    bool MaybePunishNodeForTx(NodeId nodeid, const TxValidationState& state, const std::string& message = \"\");\n+\n+    /** Maybe disconnect a peer and discourage future connections from its address.\n+     *\n+     * @param[in]   pnode     The node to check.\n+     * @return                True if the peer was marked for disconnection in this function\n+     */\n+    bool MaybeDiscourageAndDisconnect(CNode& pnode);\n+\n+    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    /** Process a single headers message from a peer. */\n+    void ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n+                               const std::vector<CBlockHeader>& headers,\n+                               bool via_compact_block);\n+\n+    void SendBlockTransactions(CNode& pfrom, const CBlock& block, const BlockTransactionsRequest& req);\n+\n+    /** Register with TxRequestTracker that an INV has been received from a\n+     *  peer. The announcement parameters are decided in PeerManager and then\n+     *  passed to TxRequestTracker. */\n+    void AddTxAnnouncement(const CNode& node, const GenTxid& gtxid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    /** Send a version message to a peer */\n+    void PushNodeVersion(CNode& pnode, int64_t nTime);\n+\n+    const CChainParams& m_chainparams;\n+    CConnman& m_connman;\n+    /** Pointer to this node's banman. May be nullptr - check existence before dereferencing. */\n+    BanMan* const m_banman;\n+    ChainstateManager& m_chainman;\n+    CTxMemPool& m_mempool;\n+    TxRequestTracker m_txrequest GUARDED_BY(::cs_main);\n+\n+    /** The height of the best chain */\n+    std::atomic<int> m_best_height{-1};\n+\n+    int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n+\n+    /** Whether this node is running in blocks only mode */\n+    const bool m_ignore_incoming_txs;\n+\n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay-only peers. */\n+    bool m_initial_sync_finished{false};\n+\n+    /** Protects m_peer_map. This mutex must not be locked while holding a lock\n+     *  on any of the mutexes inside a Peer object. */\n+    mutable Mutex m_peer_mutex;\n+    /**\n+     * Map of all Peer objects, keyed by peer id. This map is protected\n+     * by the m_peer_mutex. Once a shared pointer reference is\n+     * taken, the lock may be released. Individual fields are protected by\n+     * their own locks.\n+     */\n+    std::map<NodeId, PeerRef> m_peer_map GUARDED_BY(m_peer_mutex);\n+};\n+} // namespace\n+\n namespace {",
      "path": "src/net_processing.cpp",
      "position": 192,
      "original_position": 192,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n \r\n```",
      "created_at": "2021-01-12T09:11:01Z",
      "updated_at": "2021-01-12T09:30:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555615240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555615240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": 349,
      "original_start_line": 349,
      "start_side": "RIGHT",
      "line": 351,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555650041",
      "pull_request_review_id": 566110340,
      "id": 555650041,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY1MDA0MQ==",
      "diff_hunk": "@@ -1129,9 +1313,16 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n         (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, consensusParams) < STALE_RELAY_AGE_LIMIT);\n }\n \n-PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                         bool ignore_incoming_txs)\n+std::unique_ptr<PeerManager> PeerManager::make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                                               CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                                               bool ignore_incoming_txs)\n+{\n+    return std::make_unique<PeerManagerImpl>(chainparams, connman, banman, scheduler, chainman, pool, ignore_incoming_txs);\n+}",
      "path": "src/net_processing.cpp",
      "position": 310,
      "original_position": 310,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "in_reply_to_id": 555612652,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`PeerManagerImpl` is only declared in the cpp file, so is not available to the callers.",
      "created_at": "2021-01-12T10:02:14Z",
      "updated_at": "2021-01-12T10:02:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555650041",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555650041"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": 1316,
      "original_start_line": 1316,
      "start_side": "RIGHT",
      "line": 1321,
      "original_line": 1321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555659702",
      "pull_request_review_id": 566123030,
      "id": 555659702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY1OTcwMg==",
      "diff_hunk": "@@ -167,6 +168,186 @@ std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUA\n void EraseOrphansFor(NodeId peer);\n \n // Internal stuff\n+namespace {\n+/**\n+ * Data structure for an individual peer. This struct is not protected by\n+ * cs_main since it does not contain validation-critical data.\n+ *\n+ * Memory is owned by shared pointers and this object is destructed when\n+ * the refcount drops to zero.\n+ *\n+ * Mutexes inside this struct must not be held when locking m_peer_mutex.\n+ *\n+ * TODO: move most members from CNodeState to this structure.\n+ * TODO: move remaining application-layer data members from CNode to this structure.\n+ */\n+struct Peer {\n+    /** Same id as the CNode object for this peer */\n+    const NodeId m_id{0};\n+\n+    /** Protects misbehavior data members */\n+    Mutex m_misbehavior_mutex;\n+    /** Accumulated misbehavior score for this peer */\n+    int m_misbehavior_score GUARDED_BY(m_misbehavior_mutex){0};\n+    /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n+    bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n+\n+    /** Protects block inventory data members */\n+    Mutex m_block_inv_mutex;\n+    /** List of blocks that we'll announce via an `inv` message.\n+     * There is no final sorting before sending, as they are always sent\n+     * immediately and in the order requested. */\n+    std::vector<uint256> m_blocks_for_inv_relay GUARDED_BY(m_block_inv_mutex);\n+    /** Unfiltered list of blocks that we'd like to announce via a `headers`\n+     * message. If we can't announce via a `headers` message, we'll fall back to\n+     * announcing via `inv`. */\n+    std::vector<uint256> m_blocks_for_headers_relay GUARDED_BY(m_block_inv_mutex);\n+    /** The final block hash that we sent in an `inv` message to this peer.\n+     * When the peer requests this block, we send an `inv` message to trigger\n+     * the peer to request the next sequence of block hashes.\n+     * Most peers use headers-first syncing, which doesn't use this mechanism */\n+    uint256 m_continuation_block GUARDED_BY(m_block_inv_mutex) {};\n+\n+    /** This peer's reported block height when we connected */\n+    std::atomic<int> m_starting_height{-1};\n+\n+    /** Set of txids to reconsider once their parent transactions have been accepted **/\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n+\n+    /** Protects m_getdata_requests **/\n+    Mutex m_getdata_requests_mutex;\n+    /** Work queue of items requested by this peer **/\n+    std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n+\n+    explicit Peer(NodeId id) : m_id(id) {}\n+};\n+\n+using PeerRef = std::shared_ptr<Peer>;\n+\n+class PeerManagerImpl final : public PeerManager\n+{\n+public:\n+    PeerManagerImpl(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                    CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                    bool ignore_incoming_txs);\n+\n+    /** Overridden from CValidationInterface. */\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n+    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n+    void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n+    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n+\n+    /** Implement NetEventsInterface */\n+    void InitializeNode(CNode* pnode) override;\n+    void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n+    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n+    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n+\n+    /** Implement PeerManager */\n+    void CheckForStaleTipAndEvictPeers() override;\n+    bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) override;\n+    bool IgnoresIncomingTxs() override { return m_ignore_incoming_txs; }\n+    void SetBestHeight(int height) override { m_best_height = height; };\n+    void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n+    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+\n+private:\n+    /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n+    void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n+    void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n+    void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n+\n+    /** Get a shared pointer to the Peer object.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef GetPeerRef(NodeId id) const;\n+\n+    /** Get a shared pointer to the Peer object and remove it from m_peer_map.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef RemovePeer(NodeId id);\n+\n+    /**\n+     * Potentially mark a node discouraged based on the contents of a BlockValidationState object\n+     *\n+     * @param[in] via_compact_block this bool is passed in because net_processing should\n+     * punish peers differently depending on whether the data was provided in a compact\n+     * block message or not. If the compact block had a valid header, but contained invalid\n+     * txs, the peer should not be punished. See BIP 152.\n+     *\n+     * @return Returns true if the peer was punished (probably disconnected)\n+     */\n+    bool MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n+                                 bool via_compact_block, const std::string& message = \"\");\n+\n+    /**\n+     * Potentially disconnect and discourage a node based on the contents of a TxValidationState object\n+     *\n+     * @return Returns true if the peer was punished (probably disconnected)\n+     */\n+    bool MaybePunishNodeForTx(NodeId nodeid, const TxValidationState& state, const std::string& message = \"\");\n+\n+    /** Maybe disconnect a peer and discourage future connections from its address.\n+     *\n+     * @param[in]   pnode     The node to check.\n+     * @return                True if the peer was marked for disconnection in this function\n+     */\n+    bool MaybeDiscourageAndDisconnect(CNode& pnode);\n+\n+    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    /** Process a single headers message from a peer. */\n+    void ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n+                               const std::vector<CBlockHeader>& headers,\n+                               bool via_compact_block);\n+\n+    void SendBlockTransactions(CNode& pfrom, const CBlock& block, const BlockTransactionsRequest& req);\n+\n+    /** Register with TxRequestTracker that an INV has been received from a\n+     *  peer. The announcement parameters are decided in PeerManager and then\n+     *  passed to TxRequestTracker. */\n+    void AddTxAnnouncement(const CNode& node, const GenTxid& gtxid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    /** Send a version message to a peer */\n+    void PushNodeVersion(CNode& pnode, int64_t nTime);\n+\n+    const CChainParams& m_chainparams;\n+    CConnman& m_connman;\n+    /** Pointer to this node's banman. May be nullptr - check existence before dereferencing. */\n+    BanMan* const m_banman;\n+    ChainstateManager& m_chainman;\n+    CTxMemPool& m_mempool;\n+    TxRequestTracker m_txrequest GUARDED_BY(::cs_main);\n+\n+    /** The height of the best chain */\n+    std::atomic<int> m_best_height{-1};\n+\n+    int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n+\n+    /** Whether this node is running in blocks only mode */\n+    const bool m_ignore_incoming_txs;\n+\n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay-only peers. */\n+    bool m_initial_sync_finished{false};\n+\n+    /** Protects m_peer_map. This mutex must not be locked while holding a lock\n+     *  on any of the mutexes inside a Peer object. */\n+    mutable Mutex m_peer_mutex;\n+    /**\n+     * Map of all Peer objects, keyed by peer id. This map is protected\n+     * by the m_peer_mutex. Once a shared pointer reference is\n+     * taken, the lock may be released. Individual fields are protected by\n+     * their own locks.\n+     */\n+    std::map<NodeId, PeerRef> m_peer_map GUARDED_BY(m_peer_mutex);\n+};\n+} // namespace\n+\n namespace {",
      "path": "src/net_processing.cpp",
      "position": 192,
      "original_position": 192,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "in_reply_to_id": 555615240,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same for below L462-464. I don't think this needs to be fixed in this PR. When it is, everything in the second anonymous namespace (L351-462) should be unindented - our style guide says that namespace blocks shouldn't be indented.",
      "created_at": "2021-01-12T10:17:32Z",
      "updated_at": "2021-01-12T10:17:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555659702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555659702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": 349,
      "original_start_line": 349,
      "start_side": "RIGHT",
      "line": 351,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555666697",
      "pull_request_review_id": 566132147,
      "id": 555666697,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTY2NjY5Nw==",
      "diff_hunk": "@@ -1129,9 +1313,16 @@ static bool BlockRequestAllowed(const CBlockIndex* pindex, const Consensus::Para\n         (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, consensusParams) < STALE_RELAY_AGE_LIMIT);\n }\n \n-PeerManager::PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                         CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                         bool ignore_incoming_txs)\n+std::unique_ptr<PeerManager> PeerManager::make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                                               CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                                               bool ignore_incoming_txs)\n+{\n+    return std::make_unique<PeerManagerImpl>(chainparams, connman, banman, scheduler, chainman, pool, ignore_incoming_txs);\n+}",
      "path": "src/net_processing.cpp",
      "position": 310,
      "original_position": 310,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "in_reply_to_id": 555612652,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right.",
      "created_at": "2021-01-12T10:28:12Z",
      "updated_at": "2021-01-12T10:28:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555666697",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555666697"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": 1316,
      "original_start_line": 1316,
      "start_side": "RIGHT",
      "line": 1321,
      "original_line": 1321,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555716021",
      "pull_request_review_id": 566196567,
      "id": 555716021,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTcxNjAyMQ==",
      "diff_hunk": "@@ -39,216 +33,39 @@ struct CNodeStateStats {\n     std::vector<int> vHeightInFlight;\n };\n \n-/**\n- * Data structure for an individual peer. This struct is not protected by\n- * cs_main since it does not contain validation-critical data.\n- *\n- * Memory is owned by shared pointers and this object is destructed when\n- * the refcount drops to zero.\n- *\n- * Mutexes inside this struct must not be held when locking m_peer_mutex.\n- *\n- * TODO: move most members from CNodeState to this structure.\n- * TODO: move remaining application-layer data members from CNode to this structure.\n- */\n-struct Peer {\n-    /** Same id as the CNode object for this peer */\n-    const NodeId m_id{0};\n-\n-    /** Protects misbehavior data members */\n-    Mutex m_misbehavior_mutex;\n-    /** Accumulated misbehavior score for this peer */\n-    int m_misbehavior_score GUARDED_BY(m_misbehavior_mutex){0};\n-    /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n-    bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n-\n-    /** Protects block inventory data members */\n-    Mutex m_block_inv_mutex;\n-    /** List of blocks that we'll announce via an `inv` message.\n-     * There is no final sorting before sending, as they are always sent\n-     * immediately and in the order requested. */\n-    std::vector<uint256> m_blocks_for_inv_relay GUARDED_BY(m_block_inv_mutex);\n-    /** Unfiltered list of blocks that we'd like to announce via a `headers`\n-     * message. If we can't announce via a `headers` message, we'll fall back to\n-     * announcing via `inv`. */\n-    std::vector<uint256> m_blocks_for_headers_relay GUARDED_BY(m_block_inv_mutex);\n-    /** The final block hash that we sent in an `inv` message to this peer.\n-     * When the peer requests this block, we send an `inv` message to trigger\n-     * the peer to request the next sequence of block hashes.\n-     * Most peers use headers-first syncing, which doesn't use this mechanism */\n-    uint256 m_continuation_block GUARDED_BY(m_block_inv_mutex) {};\n-\n-    /** This peer's reported block height when we connected */\n-    std::atomic<int> m_starting_height{-1};\n-\n-    /** Set of txids to reconsider once their parent transactions have been accepted **/\n-    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n-\n-    /** Protects m_getdata_requests **/\n-    Mutex m_getdata_requests_mutex;\n-    /** Work queue of items requested by this peer **/\n-    std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n-\n-    explicit Peer(NodeId id) : m_id(id) {}\n-};\n-\n-using PeerRef = std::shared_ptr<Peer>;\n-\n-class PeerManager final : public CValidationInterface, public NetEventsInterface {\n+class PeerManager : public CValidationInterface, public NetEventsInterface",
      "path": "src/net_processing.h",
      "position": 80,
      "original_position": 80,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "in_reply_to_id": 555608269,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The way I look at it is that `Interface` is for defining a class where some other module is going to implement the methods that do the actual work; but the work to fulfill the `PeerManager` API really is done by net_processing; it's just an implementation detail that the methods are virtual and inheritance is used -- the `unique_ptr<Impl> m_impl;` approach used in txrequest could equally well have been used too. So I think `PeerManager*` is the right name for what is being exposed to other modules here.",
      "created_at": "2021-01-12T11:54:40Z",
      "updated_at": "2021-01-12T11:54:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555716021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555716021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 36,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555717316",
      "pull_request_review_id": 566198258,
      "id": 555717316,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTcxNzMxNg==",
      "diff_hunk": "@@ -167,6 +168,186 @@ std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUA\n void EraseOrphansFor(NodeId peer);\n \n // Internal stuff\n+namespace {\n+/**\n+ * Data structure for an individual peer. This struct is not protected by\n+ * cs_main since it does not contain validation-critical data.\n+ *\n+ * Memory is owned by shared pointers and this object is destructed when\n+ * the refcount drops to zero.\n+ *\n+ * Mutexes inside this struct must not be held when locking m_peer_mutex.\n+ *\n+ * TODO: move most members from CNodeState to this structure.\n+ * TODO: move remaining application-layer data members from CNode to this structure.\n+ */\n+struct Peer {\n+    /** Same id as the CNode object for this peer */\n+    const NodeId m_id{0};\n+\n+    /** Protects misbehavior data members */\n+    Mutex m_misbehavior_mutex;\n+    /** Accumulated misbehavior score for this peer */\n+    int m_misbehavior_score GUARDED_BY(m_misbehavior_mutex){0};\n+    /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n+    bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n+\n+    /** Protects block inventory data members */\n+    Mutex m_block_inv_mutex;\n+    /** List of blocks that we'll announce via an `inv` message.\n+     * There is no final sorting before sending, as they are always sent\n+     * immediately and in the order requested. */\n+    std::vector<uint256> m_blocks_for_inv_relay GUARDED_BY(m_block_inv_mutex);\n+    /** Unfiltered list of blocks that we'd like to announce via a `headers`\n+     * message. If we can't announce via a `headers` message, we'll fall back to\n+     * announcing via `inv`. */\n+    std::vector<uint256> m_blocks_for_headers_relay GUARDED_BY(m_block_inv_mutex);\n+    /** The final block hash that we sent in an `inv` message to this peer.\n+     * When the peer requests this block, we send an `inv` message to trigger\n+     * the peer to request the next sequence of block hashes.\n+     * Most peers use headers-first syncing, which doesn't use this mechanism */\n+    uint256 m_continuation_block GUARDED_BY(m_block_inv_mutex) {};\n+\n+    /** This peer's reported block height when we connected */\n+    std::atomic<int> m_starting_height{-1};\n+\n+    /** Set of txids to reconsider once their parent transactions have been accepted **/\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n+\n+    /** Protects m_getdata_requests **/\n+    Mutex m_getdata_requests_mutex;\n+    /** Work queue of items requested by this peer **/\n+    std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n+\n+    explicit Peer(NodeId id) : m_id(id) {}\n+};\n+\n+using PeerRef = std::shared_ptr<Peer>;\n+\n+class PeerManagerImpl final : public PeerManager\n+{\n+public:\n+    PeerManagerImpl(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                    CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                    bool ignore_incoming_txs);\n+\n+    /** Overridden from CValidationInterface. */\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n+    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n+    void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n+    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n+\n+    /** Implement NetEventsInterface */\n+    void InitializeNode(CNode* pnode) override;\n+    void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n+    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n+    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n+\n+    /** Implement PeerManager */\n+    void CheckForStaleTipAndEvictPeers() override;\n+    bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) override;\n+    bool IgnoresIncomingTxs() override { return m_ignore_incoming_txs; }\n+    void SetBestHeight(int height) override { m_best_height = height; };\n+    void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n+    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+\n+private:\n+    /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n+    void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n+    void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n+    void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n+\n+    /** Get a shared pointer to the Peer object.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef GetPeerRef(NodeId id) const;\n+\n+    /** Get a shared pointer to the Peer object and remove it from m_peer_map.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef RemovePeer(NodeId id);\n+\n+    /**\n+     * Potentially mark a node discouraged based on the contents of a BlockValidationState object\n+     *\n+     * @param[in] via_compact_block this bool is passed in because net_processing should\n+     * punish peers differently depending on whether the data was provided in a compact\n+     * block message or not. If the compact block had a valid header, but contained invalid\n+     * txs, the peer should not be punished. See BIP 152.\n+     *\n+     * @return Returns true if the peer was punished (probably disconnected)\n+     */\n+    bool MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n+                                 bool via_compact_block, const std::string& message = \"\");\n+\n+    /**\n+     * Potentially disconnect and discourage a node based on the contents of a TxValidationState object\n+     *\n+     * @return Returns true if the peer was punished (probably disconnected)\n+     */\n+    bool MaybePunishNodeForTx(NodeId nodeid, const TxValidationState& state, const std::string& message = \"\");\n+\n+    /** Maybe disconnect a peer and discourage future connections from its address.\n+     *\n+     * @param[in]   pnode     The node to check.\n+     * @return                True if the peer was marked for disconnection in this function\n+     */\n+    bool MaybeDiscourageAndDisconnect(CNode& pnode);\n+\n+    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    /** Process a single headers message from a peer. */\n+    void ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n+                               const std::vector<CBlockHeader>& headers,\n+                               bool via_compact_block);\n+\n+    void SendBlockTransactions(CNode& pfrom, const CBlock& block, const BlockTransactionsRequest& req);\n+\n+    /** Register with TxRequestTracker that an INV has been received from a\n+     *  peer. The announcement parameters are decided in PeerManager and then\n+     *  passed to TxRequestTracker. */\n+    void AddTxAnnouncement(const CNode& node, const GenTxid& gtxid, std::chrono::microseconds current_time)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n+    /** Send a version message to a peer */\n+    void PushNodeVersion(CNode& pnode, int64_t nTime);\n+\n+    const CChainParams& m_chainparams;\n+    CConnman& m_connman;\n+    /** Pointer to this node's banman. May be nullptr - check existence before dereferencing. */\n+    BanMan* const m_banman;\n+    ChainstateManager& m_chainman;\n+    CTxMemPool& m_mempool;\n+    TxRequestTracker m_txrequest GUARDED_BY(::cs_main);\n+\n+    /** The height of the best chain */\n+    std::atomic<int> m_best_height{-1};\n+\n+    int64_t m_stale_tip_check_time; //!< Next time to check for stale tip\n+\n+    /** Whether this node is running in blocks only mode */\n+    const bool m_ignore_incoming_txs;\n+\n+    /** Whether we've completed initial sync yet, for determining when to turn\n+      * on extra block-relay-only peers. */\n+    bool m_initial_sync_finished{false};\n+\n+    /** Protects m_peer_map. This mutex must not be locked while holding a lock\n+     *  on any of the mutexes inside a Peer object. */\n+    mutable Mutex m_peer_mutex;\n+    /**\n+     * Map of all Peer objects, keyed by peer id. This map is protected\n+     * by the m_peer_mutex. Once a shared pointer reference is\n+     * taken, the lock may be released. Individual fields are protected by\n+     * their own locks.\n+     */\n+    std::map<NodeId, PeerRef> m_peer_map GUARDED_BY(m_peer_mutex);\n+};\n+} // namespace\n+\n namespace {",
      "path": "src/net_processing.cpp",
      "position": 192,
      "original_position": 192,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "in_reply_to_id": 555615240,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See #20758 -- that has patches that move the entries from those namespaces into PeerManager (and thus skips over unindenting them). Certainly could remove the redundant close/open, but it seemed a useful indicator of where the work's up to to me, and it doesn't seem harmful.",
      "created_at": "2021-01-12T11:57:03Z",
      "updated_at": "2021-01-12T11:57:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555717316",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/555717316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": 349,
      "original_start_line": 349,
      "start_side": "RIGHT",
      "line": 351,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557760040",
      "pull_request_review_id": 568702990,
      "id": 557760040,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzc2MDA0MA==",
      "diff_hunk": "@@ -94,50 +94,69 @@ struct Peer {\n \n using PeerRef = std::shared_ptr<Peer>;\n \n-class PeerManager final : public CValidationInterface, public NetEventsInterface {\n+class PeerManager : public CValidationInterface, public NetEventsInterface\n+{\n public:\n-    PeerManager(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n-                CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n-                bool ignore_incoming_txs);\n-\n-    /** Overridden from CValidationInterface. */\n-    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n-    void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n-    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n-    void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n-    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n-\n-    /** Implement NetEventsInterface */\n-    void InitializeNode(CNode* pnode) override;\n-    void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n-    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n-    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n+    static std::unique_ptr<PeerManager> make(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                                             CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                                             bool ignore_incoming_txs);\n+    virtual ~PeerManager() { }\n \n     /** Get statistics from node state */\n-    bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats);\n+    virtual bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) = 0;\n \n     /** Whether this node ignores txs received over p2p. */\n-    bool IgnoresIncomingTxs() { return m_ignore_incoming_txs; };\n+    virtual bool IgnoresIncomingTxs() = 0;\n \n     /** Set the best height */\n-    void SetBestHeight(int height) { m_best_height = height; };\n+    virtual void SetBestHeight(int height) = 0;\n \n     /**\n      * Increment peer's misbehavior score. If the new value >= DISCOURAGEMENT_THRESHOLD, mark the node\n      * to be discouraged, meaning the peer might be disconnected and added to the discouragement filter.\n      * Public for unit testing.\n      */\n-    void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message);\n+    virtual void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) = 0;\n \n     /**\n      * Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound.\n      * Public for unit testing.\n      */\n-    void CheckForStaleTipAndEvictPeers();\n+    virtual void CheckForStaleTipAndEvictPeers() = 0;\n \n     /** Process a single message from a peer. Public for fuzz testing */\n+    virtual void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                                const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) = 0;\n+};\n+\n+class PeerManagerImpl final : public PeerManager\n+{\n+public:\n+    PeerManagerImpl(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                    CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                    bool ignore_incoming_txs);\n+\n+    /** Overridden from CValidationInterface. */\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n+    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n+    void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n+    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n+\n+    /** Implement NetEventsInterface */\n+    void InitializeNode(CNode* pnode) override;\n+    void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n+    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n+    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n+\n+    /** Implement PeerManager */",
      "path": "src/net_processing.h",
      "position": null,
      "original_position": 81,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "a568b82febb3ecbd5ebb7c3f9da27e762b0c68f6",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think comment here and above should have been updated as \"Overriden from...\" now we have a final class.",
      "created_at": "2021-01-14T23:13:36Z",
      "updated_at": "2021-01-15T00:27:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r557760040",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557760040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557764144",
      "pull_request_review_id": 568702990,
      "id": 557764144,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzc2NDE0NA==",
      "diff_hunk": "@@ -167,6 +168,131 @@ std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUA\n void EraseOrphansFor(NodeId peer);\n \n // Internal stuff\n+namespace {\n+class PeerManagerImpl final : public PeerManager\n+{\n+public:\n+    PeerManagerImpl(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                    CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                    bool ignore_incoming_txs);\n+\n+    /** Overridden from CValidationInterface. */\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n+    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n+    void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n+    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n+\n+    /** Implement NetEventsInterface */\n+    void InitializeNode(CNode* pnode) override;\n+    void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n+    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n+    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n+\n+    /** Implement PeerManager */\n+    void CheckForStaleTipAndEvictPeers() override;\n+    bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) override;\n+    bool IgnoresIncomingTxs() override { return m_ignore_incoming_txs; }\n+    void SetBestHeight(int height) override { m_best_height = height; };\n+    void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n+    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+\n+private:\n+    /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n+    void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n+    void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n+    void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n+\n+    /** Get a shared pointer to the Peer object.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef GetPeerRef(NodeId id) const;\n+\n+    /** Get a shared pointer to the Peer object and remove it from m_peer_map.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef RemovePeer(NodeId id);\n+\n+    /**\n+     * Potentially mark a node discouraged based on the contents of a BlockValidationState object\n+     *\n+     * @param[in] via_compact_block this bool is passed in because net_processing should",
      "path": "src/net_processing.cpp",
      "position": 118,
      "original_position": 63,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "e0f2e6d2df7117a8dbf17c63c5149fc53a6fe2b2",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: This param name could be more precise, according to the BIP, the waiver around invalid transactions is restrained to high-bandwidth only, so could be `via_hb_compact_block`.",
      "created_at": "2021-01-14T23:24:28Z",
      "updated_at": "2021-01-15T00:27:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r557764144",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557764144"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 277,
      "original_line": 222,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557767872",
      "pull_request_review_id": 568702990,
      "id": 557767872,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzc2Nzg3Mg==",
      "diff_hunk": "@@ -167,6 +168,131 @@ std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUA\n void EraseOrphansFor(NodeId peer);\n \n // Internal stuff\n+namespace {\n+class PeerManagerImpl final : public PeerManager\n+{\n+public:\n+    PeerManagerImpl(const CChainParams& chainparams, CConnman& connman, BanMan* banman,\n+                    CScheduler& scheduler, ChainstateManager& chainman, CTxMemPool& pool,\n+                    bool ignore_incoming_txs);\n+\n+    /** Overridden from CValidationInterface. */\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected) override;\n+    void BlockDisconnected(const std::shared_ptr<const CBlock> &block, const CBlockIndex* pindex) override;\n+    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n+    void BlockChecked(const CBlock& block, const BlockValidationState& state) override;\n+    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n+\n+    /** Implement NetEventsInterface */\n+    void InitializeNode(CNode* pnode) override;\n+    void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\n+    bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n+    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n+\n+    /** Implement PeerManager */\n+    void CheckForStaleTipAndEvictPeers() override;\n+    bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats) override;\n+    bool IgnoresIncomingTxs() override { return m_ignore_incoming_txs; }\n+    void SetBestHeight(int height) override { m_best_height = height; };\n+    void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message) override;\n+    void ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRecv,\n+                        const std::chrono::microseconds time_received, const std::atomic<bool>& interruptMsgProc) override;\n+\n+private:\n+    /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n+    void ConsiderEviction(CNode& pto, int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** If we have extra outbound peers, try to disconnect the one with the oldest block announcement */\n+    void EvictExtraOutboundPeers(int64_t time_in_seconds) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /** Retrieve unbroadcast transactions from the mempool and reattempt sending to peers */\n+    void ReattemptInitialBroadcast(CScheduler& scheduler) const;\n+\n+    /** Get a shared pointer to the Peer object.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef GetPeerRef(NodeId id) const;\n+\n+    /** Get a shared pointer to the Peer object and remove it from m_peer_map.\n+     *  May return an empty shared_ptr if the Peer object can't be found. */\n+    PeerRef RemovePeer(NodeId id);\n+\n+    /**\n+     * Potentially mark a node discouraged based on the contents of a BlockValidationState object\n+     *\n+     * @param[in] via_compact_block this bool is passed in because net_processing should\n+     * punish peers differently depending on whether the data was provided in a compact\n+     * block message or not. If the compact block had a valid header, but contained invalid\n+     * txs, the peer should not be punished. See BIP 152.\n+     *\n+     * @return Returns true if the peer was punished (probably disconnected)\n+     */\n+    bool MaybePunishNodeForBlock(NodeId nodeid, const BlockValidationState& state,\n+                                 bool via_compact_block, const std::string& message = \"\");\n+\n+    /**\n+     * Potentially disconnect and discourage a node based on the contents of a TxValidationState object\n+     *\n+     * @return Returns true if the peer was punished (probably disconnected)\n+     */\n+    bool MaybePunishNodeForTx(NodeId nodeid, const TxValidationState& state, const std::string& message = \"\");\n+\n+    /** Maybe disconnect a peer and discourage future connections from its address.\n+     *\n+     * @param[in]   pnode     The node to check.\n+     * @return                True if the peer was marked for disconnection in this function\n+     */\n+    bool MaybeDiscourageAndDisconnect(CNode& pnode);\n+\n+    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    /** Process a single headers message from a peer. */\n+    void ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n+                               const std::vector<CBlockHeader>& headers,\n+                               bool via_compact_block);\n+\n+    void SendBlockTransactions(CNode& pfrom, const CBlock& block, const BlockTransactionsRequest& req);\n+\n+    /** Register with TxRequestTracker that an INV has been received from a\n+     *  peer. The announcement parameters are decided in PeerManager and then",
      "path": "src/net_processing.cpp",
      "position": 151,
      "original_position": 96,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "e0f2e6d2df7117a8dbf17c63c5149fc53a6fe2b2",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should say PeerManagerImpl now ?",
      "created_at": "2021-01-14T23:34:42Z",
      "updated_at": "2021-01-15T00:27:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r557767872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557767872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 310,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557781816",
      "pull_request_review_id": 568702990,
      "id": 557781816,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Nzc4MTgxNg==",
      "diff_hunk": "@@ -143,16 +129,26 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n      */\n     void Misbehaving(const NodeId pnode, const int howmuch, const std::string& message);\n \n-    /** Get statistics from node state */\n-    bool GetNodeStateStats(NodeId nodeid, CNodeStateStats& stats);\n-\n-    /** Set the best height */\n-    void SetBestHeight(int height) { m_best_height = height; };\n+    /**\n+     * Evict extra outbound peers. If we think our tip may be stale, connect to an extra outbound.\n+     * Public for unit testing.",
      "path": "src/net_processing.h",
      "position": 198,
      "original_position": 62,
      "commit_id": "c97f70c861ac6959b8116a9bca3031edeb2b2aaa",
      "original_commit_id": "0df3d3fd6bbbd0e06116797177ba797580553250",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could have been better to comment in commit message the re-ordering logic followed \"Move method exposed for test-only at the end of public method space declaration\" :) ?",
      "created_at": "2021-01-15T00:15:35Z",
      "updated_at": "2021-01-15T00:27:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20811#discussion_r557781816",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/557781816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20811"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 62,
      "original_line": 134,
      "side": "RIGHT"
    }
  ]
}