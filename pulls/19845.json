{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845",
    "id": 476291935,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDc2MjkxOTM1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19845",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19845.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19845.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
    "number": 19845,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net: CNetAddr: add support to (un)serialize as ADDRv2",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(chopped off from #19031 to ease review)\r\n\r\nAdd an optional support to serialize/unserialize `CNetAddr` in ADDRv2 format (BIP155). The new serialization is engaged by ORing a flag into the stream version.\r\n\r\nSo far this is only used in tests to ensure the new code works as expected.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-08-31T13:15:49Z",
    "updated_at": "2022-02-15T10:36:33Z",
    "closed_at": "2020-09-28T19:27:51Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-09-28T19:27:51Z",
    "merge_commit_sha": "655937ebcbf681ededf86b1f0f60aac45c73393d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "vasild:ser_addrv2_cnetaddr",
      "ref": "ser_addrv2_cnetaddr",
      "sha": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 211824,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:22:48Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2023-01-31T16:56:52Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b99a1633b270e0e89479b2bb2ae19a8a8dc0fa05",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 783,
    "deletions": 77,
    "changed_files": 12,
    "commits": 4,
    "review_comments": 103,
    "comments": 23
  },
  "events": [
    {
      "event": "labeled",
      "id": 3710164072,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3MTAxNjQwNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3710164072",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-31T14:32:38Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 3710164073,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3MTAxNjQwNzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3710164073",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-31T14:32:38Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 3710164075,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3MTAxNjQwNzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3710164075",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-31T14:32:38Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 683826463,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzgyNjQ2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/683826463",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-31T14:47:48Z",
      "updated_at": "2020-09-21T12:27:45Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19954 (tor: make a TORv3 hidden service instead of TORv2 by vasild)\n* #19031 (Implement ADDRv2 support (part of BIP155) by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-683826463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "unlabeled",
      "id": 3712806992,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzcxMjgwNjk5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3712806992",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T05:11:33Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "unlabeled",
      "id": 3712806993,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzcxMjgwNjk5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3712806993",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T05:11:33Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3713502281,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzcxMzUwMjI4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3713502281",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T08:15:42Z"
    },
    {
      "event": "commented",
      "id": 684742011,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDc0MjAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684742011",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T10:25:41Z",
      "updated_at": "2020-09-01T10:25:41Z",
      "author_association": "MEMBER",
      "body": "If https://github.com/bitcoin/bitcoin/pull/19503 gets merged then it could be used to configure the stream to (un)ser in V2 format instead of the currently used `ADDRV2_FORMAT` flag that is ORed into the stream version.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-684742011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "commented",
      "id": 684865867,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDg2NTg2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684865867",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T13:46:42Z",
      "updated_at": "2020-09-01T14:43:02Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. First read-through looks promising and happy to see the additional unit test coverage. \r\n\r\nEdit: noting here for myself that local debug build is clean and unit tests are green.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-684865867",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "commented",
      "id": 685427804,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTQyNzgwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/685427804",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-02T08:03:21Z",
      "updated_at": "2020-09-02T08:03:21Z",
      "author_association": "MEMBER",
      "body": "This PR now contains #19841, needed for the `SHA3_256` implementation.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-685427804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "commented",
      "id": 687608367,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzYwODM2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/687608367",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-05T13:03:57Z",
      "updated_at": "2020-09-05T13:03:57Z",
      "author_association": "MEMBER",
      "body": "Would it make sense to benchmark how fast addr2 messages are deserialized? Maybe we should even benchmark every message type?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-687608367",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "commented",
      "id": 688332202,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODMzMjIwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688332202",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-07T13:38:07Z",
      "updated_at": "2020-09-07T13:38:07Z",
      "author_association": "MEMBER",
      "body": "> Would it make sense to benchmark how fast addr2 messages are deserialized? Maybe we should even benchmark every message type?\r\n\r\n<details>\r\n<summary>benchmark</summary>\r\n\r\n```diff\r\ndiff --git i/src/bench/addrman.cpp w/src/bench/addrman.cpp\r\nindex ebdad5a4b..db6b1c9fa 100644\r\n--- i/src/bench/addrman.cpp\r\n+++ w/src/bench/addrman.cpp\r\n@@ -1,20 +1,24 @@\r\n // Copyright (c) 2020-2020 The Bitcoin Core developers\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n #include <addrman.h>\r\n #include <bench/bench.h>\r\n+#include <netaddress.h>\r\n #include <random.h>\r\n+#include <serialize.h>\r\n+#include <streams.h>\r\n #include <util/time.h>\r\n+#include <version.h>\r\n \r\n #include <vector>\r\n \r\n /* A \"source\" is a source address from which we have received a bunch of other addresses. */\r\n \r\n-static constexpr size_t NUM_SOURCES = 64;\r\n+static constexpr size_t NUM_SOURCES = 1000;\r\n static constexpr size_t NUM_ADDRESSES_PER_SOURCE = 256;\r\n \r\n static std::vector<CAddress> g_sources;\r\n static std::vector<std::vector<CAddress>> g_addresses;\r\n \r\n static void CreateAddresses()\r\n@@ -135,6 +139,36 @@ static void AddrManGood(benchmark::Bench& bench)\r\n }\r\n \r\n BENCHMARK(AddrManAdd);\r\n BENCHMARK(AddrManSelect);\r\n BENCHMARK(AddrManGetAddr);\r\n BENCHMARK(AddrManGood);\r\n+\r\n+static void AddressUnser(benchmark::Bench& bench, int add_to_version)\r\n+{\r\n+    CreateAddresses();\r\n+\r\n+    CDataStream s_orig(SER_NETWORK, PROTOCOL_VERSION | add_to_version);\r\n+    s_orig << g_sources;\r\n+\r\n+    bench.run([&] {\r\n+        CDataStream s(s_orig);\r\n+\r\n+        std::vector<CAddress> unserialized;\r\n+        s >> unserialized;\r\n+\r\n+        assert(s.empty());\r\n+    });\r\n+}\r\n+\r\n+static void AddressUnserV1(benchmark::Bench& bench)\r\n+{\r\n+    AddressUnser(bench, 0);\r\n+}\r\n+\r\n+static void AddressUnserV2(benchmark::Bench& bench)\r\n+{\r\n+    AddressUnser(bench, ADDRV2_FORMAT);\r\n+}\r\n+\r\n+BENCHMARK(AddressUnserV1);\r\n+BENCHMARK(AddressUnserV2);\r\n```\r\n</details>\r\n\r\nResults (one operation is \"unserialize 1000 addresses\"):\r\n```\r\n$ ./src/bench/bench_bitcoin -filter=\"AddressUnser.*\"\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|           39,362.00 |           25,405.21 |    0.3% |      0.00 | `AddressUnserV1`\r\n|           49,457.00 |           20,219.58 |    0.0% |      0.00 | `AddressUnserV2`\r\n```\r\n\r\nUnserialize in V2 is expected to be somewhat slower and it is indeed. Looks ok to me.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-688332202",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "labeled",
      "id": 3752080876,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM3NTIwODA4NzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3752080876",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T16:41:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3752597472,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc1MjU5NzQ3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3752597472",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T18:44:49Z"
    },
    {
      "event": "commented",
      "id": 690614950,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDYxNDk1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/690614950",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T18:45:50Z",
      "updated_at": "2020-09-10T18:45:50Z",
      "author_association": "MEMBER",
      "body": "Rebased now that the SHA3_256 implementation is in `master`.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-690614950",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "unlabeled",
      "id": 3752612305,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mzc1MjYxMjMwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3752612305",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T18:47:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "added_to_project",
      "id": 3752683658,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzNzUyNjgzNjU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3752683658",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-10T19:04:39Z",
      "project_card": {
        "id": 45258208,
        "url": "https://api.github.com/projects/columns/cards/45258208",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 486355793,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MzU1Nzkz",
      "url": null,
      "actor": null,
      "commit_id": "e57bedde3199a36ef558e1b8bd6e9278ad9b72ec",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept/approach ACK. Code looks good, with just a few nits.\r\n\r\nI'm a bit surprised that string serialization of TORv3 is implemented (`CNetAddr::ToStringIP`), but parsing (`CNetAddr::SetSpecial`) is not. The latter would enable passing TORv3 addresses in `-addnode` etc. Not a requirement for this PR, but I wanted to point it out as I also don't see it in a follow-up either.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-486355793",
      "submitted_at": "2020-09-10T23:02:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "reviewed",
      "id": 486684814,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2Njg0ODE0",
      "url": null,
      "actor": null,
      "commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept and approach ACK on first pass through the changeset. The unit tests are very helpful. I'm looking forward to this functionality.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-486684814",
      "submitted_at": "2020-09-11T10:59:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmJiNjgxZjk2ZmIzMjdiNGM0ZDViMmIxMTM2OTJjYTIyZmRmZmJm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2bb681f96fb327b4c4d5b2b113692ca22fdffbf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d2bb681f96fb327b4c4d5b2b113692ca22fdffbf",
      "tree": {
        "sha": "21e9dd765e4d7d389f55cc0b5c6fca7ddce2ff2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21e9dd765e4d7d389f55cc0b5c6fca7ddce2ff2d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 21e9dd765e4d7d389f55cc0b5c6fca7ddce2ff2d\nparent a47e5964861dfb98d61719c9852e12fd6da84c31\nauthor Vasil Dimov <vd@FreeBSD.org> 1598863140 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1599824139 +0200\n\nutil: move HasPrefix() so it can be reused\n\nMove the function `HasPrefix()` from `netaddress.cpp` to `util/string.h`\nso it can be reused by `CNetAddr` methods (and possibly others).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl9bYW4ACgkQVN8G9ktV\ny78SHB/+I3G+E8xYvMUdGkpUJwuD0jdzOKsSijGcCCvSY9m82ahDb5tj5wtFt4Mm\n3jAv4Nb2RGmaA4fUK/zFTBIZaIJKbEDG2DeWlqp4L3TebSv6fyrgQw4sZ2cZIy2z\nO7FsvZtZ+Et7tAGwf0mBEbEQL8Yf3xILoAnFjsnxYhFIvGn1GJdp/lFnohopfO7A\naX4RyqtnlZ/IKQeatWQwxYkfmB23hT78szoCuldxOhwOtuMiltwv0snUe7hMDFP7\nRu8rHWxWN5NSglwd9vTivfRKXQXAuHjhqpsMQs8mTERJ5sN3C9M8gycAkuhJYkda\nk8O+M9csbL38vVxepE0WTQErBYp2dnEnWJRT5eYZr4Lb58hDQpavi2X7KQUoCyI8\n0mJoujjlrlPw9ZFpuoZw14ko9phCjnV7uXmo4lg5bbqqB9irQdO4GvGT+X4O3/cC\n4iR1FXSP/z90ZwmK27uz7+58lamuoRmgU+ce7dSElsXxSc2Zj4FTRp+tgDuGi5IV\n40ZByEWmQ4iJ/JqkkA/ivGcDSSe2rl+4W4PEAkgG1D6a4kcdAI+48Od3Dffmh8XR\nNATwC76HAutYU0DadsL7LbYyZUEzpZPJaipji/swgWmm750VT1vFulJCCRrYwV6p\nE2hBbhifJirC51h11kR+o+Y9O26fIt1TUMhOyKwJvfD0CHo/rTray5SzRWrf5Tp1\nSYnpbixMsgHkAOsJVM/QPE0/XTWGKaduQb9PTzflylbHDPyIEOmiiBU9svS5BmeA\nqTxO2jrn26EkKzDNjW0/wYNghQXzfdXx7wi+GJVe2CQXNBRSZ+BhrxzJWSAEy1LG\nWrqoCwOYKTkpOxhA26f9oJuvFil6gE5iErgfqPF1tchsz8BViWVxMPwukWW3k9zI\nmgkIS3n8m6A7TU7CpFxVCvL4W6/1nTaoK7h77EhphwrTjIz8rv9nJqpXxJkl8eLc\nBP9sETwmaKKiAgwaO2Uwx/emeFJZAxh4xNr22+Ss9sQUnGLxP+xLWNJizR2X9SCf\ngnIUfYoxVaVDRcoF+og53NQwXfJfg1q0COFWmj0tHrXBo7zM799f1Bv6DEvpTUof\npHp0EVPFEVgzy4fCLv+dQta3RTVOOWMbi7hhllmXT0AcUKLhhnuYQwFaKTNqtNOW\np/I4X63YjPV4ofDYdAPvS3hfXCYCk+1aO6BDF4idx4ZS+ic5MlKIZxrPCblaTAMZ\nUoX0shLSPr0XQM/dsOC3Hquocqt81arJ2ZV29h9zeCpfg/lhVOpZk25QGFK/MnP9\n6OZFiXneSYQa+WVvD0BqIlRTtz9RbugBIDNTE4uN6b/0n8+GIDsccreG4f4QaWAn\nFae/QR09mNuSl5LJJ8GSGaZsMGcxuQ==\n=hMuq\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a47e5964861dfb98d61719c9852e12fd6da84c31",
          "sha": "a47e5964861dfb98d61719c9852e12fd6da84c31",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a47e5964861dfb98d61719c9852e12fd6da84c31"
        }
      ],
      "message": "util: move HasPrefix() so it can be reused\n\nMove the function `HasPrefix()` from `netaddress.cpp` to `util/string.h`\nso it can be reused by `CNetAddr` methods (and possibly others).",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-09-11T11:35:39Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-08-31T08:39:00Z"
      },
      "sha": "d2bb681f96fb327b4c4d5b2b113692ca22fdffbf"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3756264797,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc1NjI2NDc5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3756264797",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T13:36:53Z"
    },
    {
      "event": "commented",
      "id": 691104139,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTEwNDEzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691104139",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T13:44:54Z",
      "updated_at": "2020-09-11T13:44:54Z",
      "author_association": "MEMBER",
      "body": "Addressed review suggestions and added TORv3 address parsing with some tests.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691104139",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "commented",
      "id": 691235868,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTIzNTg2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691235868",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T18:01:24Z",
      "updated_at": "2020-09-11T18:01:24Z",
      "author_association": "MEMBER",
      "body": "As a test I created a TORv3 bitcoin service, and connected to it with this branch:\r\n\r\n```\r\n\r\n$ ./src/bitcoin-cli getpeerinfo\r\n[\r\n  {\r\n    \"id\": 1,\r\n    \"addr\": \"kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion\",\r\n```\r\n\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691235868",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "reviewed",
      "id": 487033621,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MDMzNjIx",
      "url": null,
      "actor": null,
      "commit_id": "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-487033621",
      "submitted_at": "2020-09-11T18:32:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "commented",
      "id": 691256306,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTI1NjMwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691256306",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T18:48:01Z",
      "updated_at": "2020-09-11T18:48:01Z",
      "author_association": "MEMBER",
      "body": "Connected to @sipa from my tor v2 address.\r\n\r\n```\r\n2020-09-11T18:44:21Z New outbound peer connected: version: 70016, blocks=647799, peer=5, peeraddr=kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion:8333 (full-relay)\r\n```\r\ngetpeerinfo:\r\n```\r\n  {\r\n    \"id\": 5,\r\n    \"addr\": \"kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion\",\r\n    \"addrbind\": \"127.0.0.1:36454\",\r\n    \"services\": \"0000000000000409\",\r\n```",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691256306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "mentioned",
      "id": 3757574406,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc1NzU3NDQwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3757574406",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T18:48:01Z"
    },
    {
      "event": "subscribed",
      "id": 3757574408,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3NTc1NzQ0MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3757574408",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T18:48:01Z"
    },
    {
      "event": "commented",
      "id": 691299573,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTI5OTU3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691299573",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T20:33:53Z",
      "updated_at": "2020-09-11T20:33:53Z",
      "author_association": "MEMBER",
      "body": "> from my tor v2 address.\r\n\r\nTor hidden service connections don't have a \"from\" address ;)",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691299573",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3757938454,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc1NzkzODQ1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3757938454",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-11T20:33:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3759040505,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc1OTA0MDUwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3759040505",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-12T07:58:07Z"
    },
    {
      "event": "commented",
      "id": 691439676,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTQzOTY3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/691439676",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-12T08:00:06Z",
      "updated_at": "2020-09-12T08:00:06Z",
      "author_association": "MEMBER",
      "body": "Ignored embedded IPv4 and TORv2 in IPv6 when unserializing in V2 format, as per BIP155 + tests to confirm they render as invalid.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-691439676",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "reviewed",
      "id": 487698118,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3Njk4MTE4",
      "url": null,
      "actor": null,
      "commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Almost-ACK, everything seems functional. A few comments below.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-487698118",
      "submitted_at": "2020-09-14T14:40:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3768513261,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc2ODUxMzI2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3768513261",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T14:01:39Z"
    },
    {
      "event": "reviewed",
      "id": 488774041,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4Nzc0MDQx",
      "url": null,
      "actor": null,
      "commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "The changes and added tests per `git diff 1046e17 8d2b60c` look good and this seems close.  I've been running a tor v3 service with this PR since a day now. \r\n\r\nA few nits below (feel free to ignore but happy to re-review if you update), and one suggestion to use `IsInternal()` rather than `m_net == NET_INTERNAL`.\r\n\r\nACK 8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-488774041",
      "submitted_at": "2020-09-15T15:58:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3770014945,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc3MDAxNDk0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3770014945",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-15T19:41:23Z"
    },
    {
      "event": "commented",
      "id": 693249494,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzI0OTQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/693249494",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T08:13:44Z",
      "updated_at": "2020-09-16T08:13:44Z",
      "author_association": "MEMBER",
      "body": "Code review re-ACK per `git diff 8d2b60c 3eef1e6`",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-693249494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "reviewed",
      "id": 489613987,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjEzOTg3",
      "url": null,
      "actor": null,
      "commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd\r\n\r\nI did not check NET_I2P and NET_CJDNS stuff.\r\n\r\nNote that the `ADDRV2_FORMAT` constant may be replaced with another mechanism, but that can easily be done in a followup PR.\r\n\r\nIf necessary the last commit, which adds v3 parsing and (implicitly) connecting, could be its own PR.\r\n\r\nI'm able to connect to sipa's (alleged) demo node. The peers window is confused by this, but that can wait.\r\n<img width=\"982\" alt=\"Schermafbeelding 2020-09-16 om 16 53 25\" src=\"https://user-images.githubusercontent.com/10217/93354410-40147f00-f83d-11ea-9f60-860c7ab8aefe.png\">\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-489613987",
      "submitted_at": "2020-09-16T15:30:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "commented",
      "id": 693522705,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzUyMjcwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/693522705",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-16T16:35:06Z",
      "updated_at": "2020-09-16T16:35:06Z",
      "author_association": "MEMBER",
      "body": "concept ACK, tested ACK: Built and tested unit and functional on OSX 10.14\r\nWas able to `addnode` onionV3 addresses and connect after launching with `-proxy=127.0.0.1:9050  -onlynet=onion`.\r\nReviewing code next...",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-693522705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "reviewed",
      "id": 490003117,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDAzMTE3",
      "url": null,
      "actor": null,
      "commit_id": "6ab0a741abf3a22f57e55728674a6fb0938c2505",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, light code-review ACK\r\n\r\nI didn't see any issues with the code but need a bit more time to review and test before I am comfortable giving a full ACK.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-490003117",
      "submitted_at": "2020-09-16T21:42:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTQyNDExYjRiMDdiOTljNTkxODU1ZjVmMDBhZDQ1ZGZlZWM4ZTMw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "tree": {
        "sha": "9b87f884e89db127a6580319c18868a7b9f74858",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b87f884e89db127a6580319c18868a7b9f74858"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9b87f884e89db127a6580319c18868a7b9f74858\nparent d2bb681f96fb327b4c4d5b2b113692ca22fdffbf\nauthor Vasil Dimov <vd@FreeBSD.org> 1598872573 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1600346717 +0200\n\ntest: move HasReason so it can be reused\n\nMove the class `HasReason` from `miner_tests.cpp` to\n`setup_common.h` so that it can be reused by other tests.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl9jWnYACgkQVN8G9ktV\ny7+GKiAAkWS8qyPNiB6FeFtepJM0l3WOG0Clp1OotvC6nCY3hgzmYVfveSKtiN18\nLYuGr+hW1zFyX9LnK+l4s4m/vns6BepP1Asu3oSUTiHrlgk0/dSmioxMdGY1iULi\n4ERJonBoHOKhO5b9QDu8ctkLiuFya1elxu0pqdaRhJF7iYkOGje8jzxsNsN30dJu\nAniMaSDbct7RBQ3dknuYAxLUqd8EdYU+HoOlgLa40WaUAgbjItd2gnwqpmpISlvW\nS4qEWfNl4EOWyQN9EBKajeAO73lg5PGlMqlPIzEzKe47vyL2M9Ik8P19z+wCk3qc\ntRwarpGg8+0iP4yRBcBP7PbJE0jvRJC6w3Z3MqBVPycPHxzNgyjU7pC3mLmAMSd5\n6BLT4bYweAJv6aQvWYnDJ65K369fTSV2bw4MuGyq+RTdo0tnmD6LyO1vTv0juZdA\njfs+UgbMyn3AKYskIBQSFHFGrZIzNhrhKZcjQJpqsp06XjRe8nRQqs++/ZoOSzdW\n89GFSFtOPw0etVyuu5XitEF/zcl2wpeuMmfF2wVugm/6NETLWgc7T/HcxROTQLY4\ndQFLQJJgEazSnNoxM7EAZiQ41hALYu4NdLdUDWooFNNL9UlF1XouPjRFrq2xE51e\no79RaEo1eEGh3d8rBn7LCBCiSvZbr/CvNbL1fXGvFnR3MPBW/E9+Egj4SyvQxzt5\ny1k91VHbtoO5nXcVnKF2dUpLcmHuxPF/p76npXnWt8qvyPuMPvZU4oQ95r/mj6gH\nF+QWYx6kb8B8+RXPBf6f6CbW2wYQTY0ia1nhnreBFykZJolrU/khzIexdAZTgWb+\nI5AGqyXPKweJZjTvXLndx3FclaCOxbRrsGCjdE0JF6L0CYF8Oko3Y1NlIofmCyt1\nGL0xAYTQBkqVhXlD8lImhfjdvgY8aS2melHLAAZCzOQRvPvnTqGNr5vXuXKiMt+S\ng2XzmcI4/2lKK4aPNSiPTf9NyPpq/ssIUFVlWlaF+DVf6s7Um385IYC8/OifnoxP\nAyjVAy68ihSRfS+eyxtgnfIoUnzmkVzGEKGShi7x08qTkf3OE48JUebYR69ZBDDo\nnrZ2RgQVZSA4jpaZ/GDxxZmXd33USK5rE1W52IKVXVTKHO5hmcf2CZi82UEVMGsX\nywOG8KuCcDUVW0XQyTY7JTEE5SFtnJUR9XOJeigIjQsmHJPVVczo20C4TRE/9DK5\nzmvJz887lmY94xsUoq0gx4wFO3KZySgZ+2VsS0+1oBygKPsujLi+PRsVnvm+jFy2\n8uzDbj599WFM/xFwww0/kGFKlla2s62tAJozrsIComkXTOM1uN5jnBA4hXXU37Vn\nLi373E8A3IdxpxYVB8zUxbo5bNnpkA==\n=fR47\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2bb681f96fb327b4c4d5b2b113692ca22fdffbf",
          "sha": "d2bb681f96fb327b4c4d5b2b113692ca22fdffbf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2bb681f96fb327b4c4d5b2b113692ca22fdffbf"
        }
      ],
      "message": "test: move HasReason so it can be reused\n\nMove the class `HasReason` from `miner_tests.cpp` to\n`setup_common.h` so that it can be reused by other tests.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-09-17T12:45:17Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-08-31T11:16:13Z"
      },
      "sha": "fe42411b4b07b99c591855f5f00ad45dfeec8e30"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3777819306,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc3NzgxOTMwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3777819306",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T12:55:15Z"
    },
    {
      "event": "commented",
      "id": 694214035,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDIxNDAzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694214035",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T12:58:59Z",
      "updated_at": "2020-09-17T12:58:59Z",
      "author_association": "MEMBER",
      "body": "> Note that the `ADDRV2_FORMAT` constant may be replaced with another mechanism, but that can easily be done in a followup PR.\r\n\r\nDo you mean this one: https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-684742011 or something else?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694214035",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "commented",
      "id": 694276899,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI3Njg5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694276899",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T14:32:45Z",
      "updated_at": "2020-09-17T14:32:45Z",
      "author_association": "MEMBER",
      "body": "[Filtered code coverage report](https://people.freebsd.org/~vd/pr19845_65a8d3199_coverage/) (files not modified by this PR are omitted and not modified lines in files that are otherwise modified are dimmed).\r\n\r\n[List of modified and not covered lines](https://people.freebsd.org/~vd/pr19845_65a8d3199_coverage/modified_and_not_covered.html).",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694276899",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "reviewed",
      "id": 490770782,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNzcwNzgy",
      "url": null,
      "actor": null,
      "commit_id": "65a8d3199d3b40da679a3cf225f37e80965f7615",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-490770782",
      "submitted_at": "2020-09-17T16:14:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "commented",
      "id": 694407882,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDQwNzg4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694407882",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T18:09:21Z",
      "updated_at": "2020-09-17T18:09:21Z",
      "author_association": "MEMBER",
      "body": "re-ACK 65a8d31 per `git diff 3eef1e6 65a8d31` modulo doc fix\r\n\r\nChanged all the bogus length tests to test the bounds values of 0, (address size - 1), and (address size + 1) to check behavior; it was the same.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694407882",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGQ3MzU3M2EzN2JmNGI1MTlmNmY2MWU1Njc4NTcyZDQ4YTY0NTE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0d73573a37bf4b519f6f61e5678572d48a64517",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e0d73573a37bf4b519f6f61e5678572d48a64517",
      "tree": {
        "sha": "62d7661d4afc81dc8b3547b4d57a31f49fd9cc8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/62d7661d4afc81dc8b3547b4d57a31f49fd9cc8f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 62d7661d4afc81dc8b3547b4d57a31f49fd9cc8f\nparent fe42411b4b07b99c591855f5f00ad45dfeec8e30\nauthor Vasil Dimov <vd@FreeBSD.org> 1589893310 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1600373837 +0200\n\nnet: CNetAddr: add support to (un)serialize as ADDRv2\n\nCo-authored-by: Carl Dong <contact@carldong.me>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl9jxE0ACgkQVN8G9ktV\ny79osR/7BgGBTUowK+FDaPF3pxE+Z9HEtSrruWqM0EyBmrn5rWuvflfSOvbo2eso\ntyH2VWp7aUgbKKHYiOTZNpaAgYZRVELxWMXORmO8G6wKU0pcM4kB+WhEeNQcDfhe\nX4eN8VL3Wzv/2t+Q0BcXA+EaeQjo9f9YLP9S7jfw2qwo1IzE2XCPe2Kp7+H4aH2X\nelN7DpFAyuRQm/QQCvyoa2aXEA9RIicCbnnE/ojUQ9/qJziBq5TBb4P+v3220UW4\n5oqfK31hEgQAMiIZ8tOP9RQxCLiwGPtgD9N7AdnYwriBZam6Wv2M3Bz5w5A9Te0p\nH0fUEmiH7j319vO6Ud5Sa5ZaGl6iO69wzJFDBqDuY1LORbT59u5TTiVAKg+WOGeR\nQrNVwbv2XtJg4M56CJFD23R8a4iDf3dxs6FFpUXniIfbOvTfKw2mgrJrWLauYD/S\no4ZHGR+TF0s9TkHqtM79CuF/XKwtVKAKVpNLGeFZ6BR5Lq35VhSA5MLJC+SB1lCu\nJsFTmdO1CLUVjiuFbWyDwuU+RIehRQZA94nvz+Y58+uJYsrbbQAJc06AgIQ6O1EH\nTRfK2OOQLVc9d4Bgvy/yO9GsNY9qXsjjVkshcNsF8eT1oU2RLJBrcvC2/npjARl0\nfIM8HFjaeXXXzoaiuvd0fEwG0qexhYydcgHplI+r6jkmNzN/By3QTpH52S/fEwt8\ntYVIF6EGVZpcQidUHr5bPD2aG6ozWOYTnfgtTJ+P3rVT5pzo3E0WKrvXOoDu25pL\nAJBmfMDKhJq86qIW9/ypTuj8fwFjwouSQ1o+QzlRN8n7y4cRBQqE77dd5OtQieCI\n81mmIEC1SlBiKYOlVJKrfdHVgm9+U+abM+GysbBs0peJ8ceqz4TFfC9bBgGMG0h2\n7/bvopjkXuarEthvfyk1o8iCmZy8V7BUgvpwtnb+hmBtCNbG875rXINIS1LllQxl\nbXPbl1u/4Ka/2fCW9eH0kkf6J1UNXrZrFQOHLyRUKBnhIZRtNpMpx+O9GqPYGSeR\n8OWAZitJX45DS7wEsLPF7ob3LbCfCxxkeBg4wrfpOtpbMn7WbVvyYLh42IDMYIZ1\nlQ10fOAQrNhICz8OjGHLnnTSvGm1ymAGX6RwyJizVVK30YfecujYgkVeuh97CGeV\nge/oLSIwPaVdpZIrwk3O3xGH7g9DQsiz/pWvZ7wH+wbJhcuYdAIjtdtMPEa5C4RO\n4xfCKdjrRCXyaVnBJqvsCFL3/s5mM/bU7o6LjqPggGen17K2xLd8juq3HqKYJbZO\nh0UKmSErAiDPh0aPfRvmls2Tn3OpIvIshn7nOGmV6r8232aZ7TKQS+X9k/FUxSQ8\nVEHJ+ptMFBnyvfgfE/oPD0EJclfSHw==\n=HYp0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe42411b4b07b99c591855f5f00ad45dfeec8e30",
          "sha": "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fe42411b4b07b99c591855f5f00ad45dfeec8e30"
        }
      ],
      "message": "net: CNetAddr: add support to (un)serialize as ADDRv2\n\nCo-authored-by: Carl Dong <contact@carldong.me>",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-09-17T20:17:17Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-05-19T13:01:50Z"
      },
      "sha": "e0d73573a37bf4b519f6f61e5678572d48a64517"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3779762093,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc3OTc2MjA5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3779762093",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-17T20:17:39Z"
    },
    {
      "event": "commented",
      "id": 694742633,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDc0MjYzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694742633",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T08:49:02Z",
      "updated_at": "2020-09-18T08:49:02Z",
      "author_association": "MEMBER",
      "body": "Should be all good for re-review.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694742633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "commented",
      "id": 694772999,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDc3Mjk5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/694772999",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T09:52:42Z",
      "updated_at": "2020-09-18T09:52:42Z",
      "author_association": "MEMBER",
      "body": "re-ACK b9c46e0a935a14063913f0c999922f8e22bce61d per `git diff 65a8d31 b9c46e0`",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-694772999",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3782281660,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc4MjI4MTY2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3782281660",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-18T11:59:32Z"
    },
    {
      "event": "reviewed",
      "id": 491740446,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzQwNDQ2",
      "url": null,
      "actor": null,
      "commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-491740446",
      "submitted_at": "2020-09-18T19:51:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "reviewed",
      "id": 491651673,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNjUxNjcz",
      "url": null,
      "actor": null,
      "commit_id": "e0d73573a37bf4b519f6f61e5678572d48a64517",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK b9c46e0a935a14063913f0c999922f8e22bce61d\r\n\r\nAlso did some mild testing with a previous version of the code, and have a (succesfully reachable) TorV3 hidden service node running with it.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-491651673",
      "submitted_at": "2020-09-18T20:22:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "reviewed",
      "id": 491783955,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzgzOTU1",
      "url": null,
      "actor": null,
      "commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-491783955",
      "submitted_at": "2020-09-18T21:12:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "reviewed",
      "id": 491794324,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNzk0MzI0",
      "url": null,
      "actor": null,
      "commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-491794324",
      "submitted_at": "2020-09-19T09:09:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmU2ZmY2MTg3NWE4ZDVkMjMzNWJmZjVkMWYxNmJhNDA1NTdhZGIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "tree": {
        "sha": "a2c60b8c3ad2144f697f334c05b6f6a508743459",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2c60b8c3ad2144f697f334c05b6f6a508743459"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a2c60b8c3ad2144f697f334c05b6f6a508743459\nparent e0d73573a37bf4b519f6f61e5678572d48a64517\nauthor Vasil Dimov <vd@FreeBSD.org> 1598519001 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1600676014 +0200\n\nnet: recognize TORv3/I2P/CJDNS networks\n\nRecognizing addresses from those networks allows us to accept and gossip\nthem, even though we don't know how to connect to them (yet).\n\nCo-authored-by: eriknylund <erik@daychanged.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl9oYNUACgkQVN8G9ktV\ny78XIR//adenx+n7P+joVzE0BNrnwcGI9iOzSD5XYLrQCMDnPdgOQ+wXL1+DH4al\naApl7+D5J+0vjWyUwvR/EzPSYrIFsTnYn28DeDFsLJT2As4bRogQdEbg/QTVKwYN\nTSUxGIfnVlrNqJqgVqW1QgT+8MDGI++QTPoD33A6B2ccp/jKYN6kGLhvnD9X/7yi\n6dmGZOE9YqVp+RNX1/XpPjdo71LD9oTDfKokFiSMqimsWor0/rUb/wc9viq2jDJL\nFmFbVHEMkmMCDCBiIEG6YxBi5ombiRmE1Lq6Xk5vtTcvAtBFsVhg8kHwB67iTCmQ\nyNiZlGsgwI/U/D+QchvZeQAbm6q1Y1iyu07P29aVcuXXWQuBrcMvCTMLXfT44LWB\ng38ktNfb3Kzh75NMQVUSNVNh8Moo8DM+0HeGsU1hAGo1tAeJWPGBN8c/CBpPQb8U\nVC6mTLFFkL94JXnT4gVwFA2NqsC6lFQ68IfnnPkiY1o3nr3AfklUirBybglVulUn\nYcNOHNh4hgYU1F50HeA1gDSErHe80MADSxdwe8XIyLVTBt0LUgWtgBPVmEe4Fw07\n2SDyMLXCkJzcMEjOSAP7rtaaEPXio0DAZERAhhSrIJHJiOYByVHovnIW8ZSYkFcw\nsTxC09QNvLw4SAPs4jI1+eft+CQhPYQiDUHn5gjlM19gFLEeK5AU3HIskhMcURvq\nbJYtZHR4+T6cRbu/8rYYWIDW2FDpk9PuSEj4uIMO6imq2r28ImduNxCHBkUHl8n6\nh+GAl11N55aOfvYPhmYImoVHjvDR0kjj4j2xettQab3Bbn2pJnj8TLhdon2Q/tZV\nRpjpXuSp1W/c8Kk4Uz3FGm8hXsfyiZUhFYZ4rqLdL3rDXSj9a5tM36gSfO03jxfK\nT5YueFyqzQ97PHzv947+hD0T+2INLv1gGlZQCTp5DmtGP553jXYE101i0S9g7kT+\nU41JImidRUndmsmmtS+BvrRaTOnjg1YK7DkebgmmPWOrYgjP7rAKgTcnU/B21Ig1\nPd56FHhvrYBTzL9TE/KiC1iHPYA0fn4zVWd4JQDec8yWxxsi+SVyJDrfNRvMf32z\nqztJFCLuiOGzI1lG7LjG82EX/Qa4FR0LaSWwoSEuvbnByXxXz898FLkGdRuMIUEp\nrHkp9WamXxlagIH1fmKS9CWFiCGowhb5LJKwfQ2u7E04ubq9KWjNYwdb0DMmHL6m\nxkXYQM8tYEYYZbLYBZPIzRtrPyDk7i3JoTR1XCygoV/53uLiY8+ZQ9sjePGmP5GM\nTEIrgIxgeC9aSGm9GNkbE6RPAhkrB8dQajgvbSTaacUvjW0XPlk/qVXkclgGL0bf\nM7fjzhdVivWH9JmhSxCZ3jNCRmctlw==\n=gBUI\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0d73573a37bf4b519f6f61e5678572d48a64517",
          "sha": "e0d73573a37bf4b519f6f61e5678572d48a64517",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e0d73573a37bf4b519f6f61e5678572d48a64517"
        }
      ],
      "message": "net: recognize TORv3/I2P/CJDNS networks\n\nRecognizing addresses from those networks allows us to accept and gossip\nthem, even though we don't know how to connect to them (yet).\n\nCo-authored-by: eriknylund <erik@daychanged.com>",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-09-21T08:13:34Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-08-27T09:03:21Z"
      },
      "sha": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3787439987,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzc4NzQzOTk4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3787439987",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T08:15:40Z"
    },
    {
      "event": "commented",
      "id": 695971663,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTk3MTY2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695971663",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T08:19:50Z",
      "updated_at": "2020-09-21T08:19:50Z",
      "author_association": "MEMBER",
      "body": "Added no-padding tests for `EncodeBase32()` by @eriknylund and a simplification around `torv3::VERSION` suggested by @sipa.\r\n\r\nThanks!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-695971663",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "mentioned",
      "id": 3787457153,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc4NzQ1NzE1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3787457153",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T08:19:50Z"
    },
    {
      "event": "subscribed",
      "id": 3787457155,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3ODc0NTcxNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3787457155",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T08:19:50Z"
    },
    {
      "event": "mentioned",
      "id": 3787457159,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzc4NzQ1NzE1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3787457159",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T08:19:50Z"
    },
    {
      "event": "subscribed",
      "id": 3787457164,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM3ODc0NTcxNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3787457164",
      "actor": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T08:19:50Z"
    },
    {
      "event": "commented",
      "id": 696162703,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjE2MjcwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/696162703",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-21T14:45:03Z",
      "updated_at": "2020-09-21T14:45:03Z",
      "author_association": "MEMBER",
      "body": "re-tACK 7be6ff61875a8d5d2335bff5d1f16ba40557adb0 ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-696162703",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "reviewed",
      "id": 493739846,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNzM5ODQ2",
      "url": null,
      "actor": null,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 7be6ff61875a8d5d2335bff5d1f16ba40557adb0 I built the PR on macOS Catalina 10.15.6, ran both tests and functional tests. I've reviewed the code and think the changes look good and according to BIP155. I verified that the added Base32 encoding test looks as proposed and working. I've run a node for a week only with Onion addresses `-onlynet=onion` without issues and I can connect to other peer reviewers running TorV3 on their nodes and I can connect both of my test nodes to each other.",
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-493739846",
      "submitted_at": "2020-09-22T18:32:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "reviewed",
      "id": 495667597,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjY3NTk3",
      "url": null,
      "actor": null,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 7be6ff61875a8d5d2335bff5d1f16ba40557adb0 per `git diff b9c46e0 7be6ff6`, debug build, ran/running bitcoind with this change and observed the log and `-netinfo` peer connections while connected as a tor v2 service to both tor v2 peers and also five tor v3 peers.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-495667597",
      "submitted_at": "2020-09-24T15:15:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "commented",
      "id": 699282486,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTI4MjQ4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/699282486",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-26T02:47:36Z",
      "updated_at": "2020-09-26T02:47:36Z",
      "author_association": "MEMBER",
      "body": "re-utACK 7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-699282486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "reviewed",
      "id": 497025535,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDI1NTM1",
      "url": null,
      "actor": null,
      "commit_id": "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 7be6ff61875a8d5d2335bff5d1f16ba40557adb0, tested on Linux Mint 20 (x86_64): on top of this pull and #19031 I'm able to connect to onion v3 addresses, and jonatack is able to connect to my created onion v3 address.\r\n\r\nVerified BIP155 requirements.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#pullrequestreview-497025535",
      "submitted_at": "2020-09-26T21:17:36Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
    },
    {
      "event": "merged",
      "id": 3816126159,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzgxNjEyNjE1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3816126159",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "655937ebcbf681ededf86b1f0f60aac45c73393d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/655937ebcbf681ededf86b1f0f60aac45c73393d",
      "created_at": "2020-09-28T19:27:51Z"
    },
    {
      "event": "closed",
      "id": 3816126189,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzgxNjEyNjE4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3816126189",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-28T19:27:52Z"
    },
    {
      "event": "commented",
      "id": 700235164,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDIzNTE2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/700235164",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-28T19:28:22Z",
      "updated_at": "2020-09-28T19:28:22Z",
      "author_association": "MEMBER",
      "body": "@hebasto I edited your ACK comment above to avoid having the `@jonatack` highlight and your onion address in the merge commit.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#issuecomment-700235164",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19845"
    },
    {
      "event": "mentioned",
      "id": 3816127983,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzgxNjEyNzk4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3816127983",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-28T19:28:22Z"
    },
    {
      "event": "subscribed",
      "id": 3816127985,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM4MTYxMjc5ODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3816127985",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-28T19:28:22Z"
    },
    {
      "event": "referenced",
      "id": 3817195488,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4MTcxOTU0ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3817195488",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "06cbbae452e8d1c018d3ce46bf51f7cafd9a7a4f",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/06cbbae452e8d1c018d3ce46bf51f7cafd9a7a4f",
      "created_at": "2020-09-29T02:39:46Z"
    },
    {
      "event": "removed_from_project",
      "id": 3817490319,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MzgxNzQ5MDMxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3817490319",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-29T05:16:13Z",
      "project_card": {
        "id": 45258208,
        "url": "https://api.github.com/projects/columns/cards/45258208",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "head_ref_deleted",
      "id": 3818133742,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQzODE4MTMzNzQy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3818133742",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-29T08:18:51Z"
    },
    {
      "event": "referenced",
      "id": 3818692838,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4MTg2OTI4Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3818692838",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7db9bf32257ab0f1e66f55966aa451622d49017f",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/7db9bf32257ab0f1e66f55966aa451622d49017f",
      "created_at": "2020-09-29T10:15:26Z"
    },
    {
      "event": "referenced",
      "id": 3944153360,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NDQxNTMzNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3944153360",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b76317461e4664ba2d2d06c528a67d8718aa7c63",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/b76317461e4664ba2d2d06c528a67d8718aa7c63",
      "created_at": "2020-10-31T14:08:24Z"
    },
    {
      "event": "referenced",
      "id": 3944258537,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NDQyNTg1Mzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3944258537",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "89836a82eec63f93bbe6c3bd6a52be26e71ab54d",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/89836a82eec63f93bbe6c3bd6a52be26e71ab54d",
      "created_at": "2020-10-31T16:03:33Z"
    },
    {
      "event": "referenced",
      "id": 3974546422,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NzQ1NDY0MjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3974546422",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "79a3b59cc70622fbadc43ade5fce31fcf94d852d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79a3b59cc70622fbadc43ade5fce31fcf94d852d",
      "created_at": "2020-11-09T16:07:41Z"
    },
    {
      "event": "referenced",
      "id": 3974803019,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5NzQ4MDMwMTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3974803019",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "55fb1886688b65b5ca1ac5701e5ab70f4a5e644c",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/55fb1886688b65b5ca1ac5701e5ab70f4a5e644c",
      "created_at": "2020-11-09T16:58:37Z"
    },
    {
      "event": "referenced",
      "id": 3998712759,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5OTg3MTI3NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3998712759",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2fa085a5d7522f9a045f6dab1cf0a4768b35715a",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/2fa085a5d7522f9a045f6dab1cf0a4768b35715a",
      "created_at": "2020-11-16T06:58:39Z"
    },
    {
      "event": "referenced",
      "id": 4000941048,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwMDA5NDEwNDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4000941048",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "806ac5fe66541ee7bb48eb08325cfd77d9365643",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/806ac5fe66541ee7bb48eb08325cfd77d9365643",
      "created_at": "2020-11-16T15:36:29Z"
    },
    {
      "event": "referenced",
      "id": 4105787369,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMDU3ODczNjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105787369",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5e6fe52c9045b06be5d17c075016d497a57c6044",
      "commit_url": "https://api.github.com/repos/janus/bitgesell/commits/5e6fe52c9045b06be5d17c075016d497a57c6044",
      "created_at": "2020-12-13T08:23:48Z"
    },
    {
      "event": "referenced",
      "id": 4310331554,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzMTAzMzE1NTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4310331554",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7af7f8499288a891b36f470e0c2732a02d7d3b8c",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/7af7f8499288a891b36f470e0c2732a02d7d3b8c",
      "created_at": "2021-02-09T17:05:10Z"
    },
    {
      "event": "referenced",
      "id": 4310331561,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzMTAzMzE1NjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4310331561",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c78ecba78410d75ee5b8548eb4d00d037b092260",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/c78ecba78410d75ee5b8548eb4d00d037b092260",
      "created_at": "2021-02-09T17:05:10Z"
    },
    {
      "event": "referenced",
      "id": 4310407485,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzMTA0MDc0ODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4310407485",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3705100b63418a57737c02c29fc28963aad2c11c",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/3705100b63418a57737c02c29fc28963aad2c11c",
      "created_at": "2021-02-09T17:20:11Z"
    },
    {
      "event": "referenced",
      "id": 4790179546,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3OTAxNzk1NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4790179546",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b5f18cefddb610a086b80334a3d8f24b61d63422",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/b5f18cefddb610a086b80334a3d8f24b61d63422",
      "created_at": "2021-05-25T05:36:40Z"
    },
    {
      "event": "referenced",
      "id": 4790187281,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3OTAxODcyODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4790187281",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "42872e53b85d4c72489f56d9e23c3625eedd9795",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/42872e53b85d4c72489f56d9e23c3625eedd9795",
      "created_at": "2021-05-25T05:38:59Z"
    },
    {
      "event": "referenced",
      "id": 4792988809,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3OTI5ODg4MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4792988809",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "41ed5a841af4e53ffe06758f9fb9111a0f45eabe",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/41ed5a841af4e53ffe06758f9fb9111a0f45eabe",
      "created_at": "2021-05-25T14:08:58Z"
    },
    {
      "event": "referenced",
      "id": 4793164357,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3OTMxNjQzNTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4793164357",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "777034184109ef65638b230d32b1d72622d9e809",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/777034184109ef65638b230d32b1d72622d9e809",
      "created_at": "2021-05-25T14:34:38Z"
    },
    {
      "event": "referenced",
      "id": 4810952589,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ4MTA5NTI1ODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4810952589",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "beac6df3208c565f1862120af5923933f6ea3b74",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/beac6df3208c565f1862120af5923933f6ea3b74",
      "created_at": "2021-05-28T08:40:19Z"
    },
    {
      "event": "referenced",
      "id": 4811748744,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ4MTE3NDg3NDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4811748744",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d4f908e8bd92129acb91808c7d28dec9dc3baf3",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/9d4f908e8bd92129acb91808c7d28dec9dc3baf3",
      "created_at": "2021-05-28T11:04:04Z"
    },
    {
      "event": "referenced",
      "id": 4816410223,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ4MTY0MTAyMjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4816410223",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "20bd3017b91e32bc920708f3e553d8a6ca13d7c1",
      "commit_url": "https://api.github.com/repos/UdjinM6/dash/commits/20bd3017b91e32bc920708f3e553d8a6ca13d7c1",
      "created_at": "2021-05-29T20:25:10Z"
    },
    {
      "event": "referenced",
      "id": 5141021496,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDEwMjE0OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5141021496",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "created_at": "2021-08-11T10:09:48Z"
    },
    {
      "event": "referenced",
      "id": 5804829046,
      "node_id": "REFE_lADOABII584pFFkzzwAAAAFZ_ql2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5804829046",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c50d2ac0715c41e526498e9b851718349f6860f6",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/c50d2ac0715c41e526498e9b851718349f6860f6",
      "created_at": "2021-12-22T13:39:41Z"
    },
    {
      "event": "referenced",
      "id": 5810047400,
      "node_id": "REFE_lADOABII584pFFkzzwAAAAFaTkmo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5810047400",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "df99eb6da0e83453ebb7ee6aa2ee7e1e113102e5",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/df99eb6da0e83453ebb7ee6aa2ee7e1e113102e5",
      "created_at": "2021-12-23T13:52:56Z"
    },
    {
      "event": "locked",
      "id": 6073827412,
      "node_id": "LOE_lADOABII584pFFkzzwAAAAFqB0BU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073827412",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:36:33Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486669845",
      "pull_request_review_id": 486355793,
      "id": 486669845,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY2OTg0NQ==",
      "diff_hunk": "@@ -192,6 +192,17 @@ class CNetAddr\n         friend class CSubNet;\n \n     private:\n+        /**\n+         * Check whether a container begins with the given prefix.\n+         */\n+        template <typename T1, size_t PREFIX_LEN>",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 7,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "e57bedde3199a36ef558e1b8bd6e9278ad9b72ec",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just a nit, feel free to leave as is.\r\n\r\nNo real reason why this needs to be in netaddress.h or restricted to `CNetAddr`. Maybe it can move to one of the util/*.h files or even a new one. It's probably useful elsewhere.",
      "created_at": "2020-09-10T22:32:17Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486669845",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486669845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486671228",
      "pull_request_review_id": 486355793,
      "id": 486671228,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3MTIyOA==",
      "diff_hunk": "@@ -177,16 +188,27 @@ class CNetAddr\n         template <typename Stream>\n         void Serialize(Stream& s) const\n         {\n-            SerializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                SerializeV2Stream(s);\n+            } else {\n+                SerializeV1Stream(s);\n+            }\n         }\n \n         /**\n          * Unserialize from a stream.\n+         * @throws std::ios_base::failure if the stream is in ADDRv2 format and\n+         * the data is invalid and cannot be unserialized; ADDRv1 format",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 39,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That's not technically true; EOF can be reached in ADDRv1 mode.\r\n\r\nI don't think this comment adds much; every deserializer can always fail.",
      "created_at": "2020-09-10T22:35:57Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486671228",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486671228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486672929",
      "pull_request_review_id": 486355793,
      "id": 486672929,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3MjkyOQ==",
      "diff_hunk": "@@ -203,11 +225,41 @@ class CNetAddr\n                    std::equal(std::begin(prefix), std::end(prefix), std::begin(obj));\n         }\n \n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum Bip155Network : uint8_t {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 61,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: you're using both \"Bip155\" and \"BIP155\" is this commit. I prefer \"BIP155\".",
      "created_at": "2020-09-10T22:40:32Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486672929",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486672929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486674423",
      "pull_request_review_id": 486355793,
      "id": 486674423,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjY3NDQyMw==",
      "diff_hunk": "@@ -400,6 +400,70 @@ BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n     BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n     s.clear();\n \n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment is wrong here, I think (I2P, not TORv2).",
      "created_at": "2020-09-10T22:44:46Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486674423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486674423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952064",
      "pull_request_review_id": 486684814,
      "id": 486952064,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk1MjA2NA==",
      "diff_hunk": "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 203,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "9eb5b089 s/I2P/CJDNS/",
      "created_at": "2020-09-11T10:19:09Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952064",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 448,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952355",
      "pull_request_review_id": 486684814,
      "id": 486952355,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk1MjM1NQ==",
      "diff_hunk": "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)\n+                           \"10\"                               // address length\n+                           \"fc000001000200030004000500060007\" // address\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"fc00:1:2:3:4:5:6:7\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid CJDNS, with bogus length.\n+    s << MakeSpan(ParseHex(\"06\" // network type (TORv2)",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 213,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "9eb5b089 s/TORv2/CJDNS/",
      "created_at": "2020-09-11T10:19:43Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486952355",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486952355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 458,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486961774",
      "pull_request_review_id": 486684814,
      "id": 486961774,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk2MTc3NA==",
      "diff_hunk": "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "path": "src/netaddress.h",
      "position": 31,
      "original_position": 30,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it make sense to have `NET_ONION_V2` and `NET_ONION_V3`, with associated `IsOnionV2()` and `IsOnionV3()` bool helpers as subsets of `IsTor()/IsOnion()`?\r\n\r\nDoing so might also clean up `GetBip155Network()`, `SetIP()`, and `ToStringIP()` by removing the size checks to a better place.",
      "created_at": "2020-09-11T10:39:49Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486961774",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486961774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486973456",
      "pull_request_review_id": 486712046,
      "id": 486973456,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk3MzQ1Ng==",
      "diff_hunk": "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "path": "src/netaddress.h",
      "position": 31,
      "original_position": 30,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": 486961774,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Semi-related, at some point it might be helpful to be able to expose network types in `getpeerinfo`, rather than clients trying to guess like we currently have to do in #19643.",
      "created_at": "2020-09-11T11:06:05Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486973456",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486973456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486989858",
      "pull_request_review_id": 486732794,
      "id": 486989858,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk4OTg1OA==",
      "diff_hunk": "@@ -192,6 +192,17 @@ class CNetAddr\n         friend class CSubNet;\n \n     private:\n+        /**\n+         * Check whether a container begins with the given prefix.\n+         */\n+        template <typename T1, size_t PREFIX_LEN>",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 7,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "e57bedde3199a36ef558e1b8bd6e9278ad9b72ec",
      "in_reply_to_id": 486669845,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I did consider making it more visible but refrained because of the wretched `std::array` argument (which was imposed by gcc 4.8) - I think it is not very friendly like this.\r\n\r\nMoved now to `util/string.h` since you mention this. Once support for gcc 4.8 is dropped we can improve it to take some more generic argument.",
      "created_at": "2020-09-11T11:43:01Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486989858",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486989858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486992188",
      "pull_request_review_id": 486735839,
      "id": 486992188,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MjE4OA==",
      "diff_hunk": "@@ -203,11 +225,41 @@ class CNetAddr\n                    std::equal(std::begin(prefix), std::end(prefix), std::begin(obj));\n         }\n \n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum Bip155Network : uint8_t {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 61,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "in_reply_to_id": 486672929,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to \"BIP155\", that way its also more consistent with the rest of the code.",
      "created_at": "2020-09-11T11:48:15Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486992188",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486992188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993463",
      "pull_request_review_id": 486737526,
      "id": 486993463,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MzQ2Mw==",
      "diff_hunk": "@@ -400,6 +400,70 @@ BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n     BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n     s.clear();\n \n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": 486674423,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-09-11T11:51:06Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993463",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993794",
      "pull_request_review_id": 486737951,
      "id": 486993794,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5Mzc5NA==",
      "diff_hunk": "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 203,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": 486952064,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-09-11T11:51:55Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486993794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486993794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 448,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486994154",
      "pull_request_review_id": 486738417,
      "id": 486994154,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDE1NA==",
      "diff_hunk": "@@ -261,17 +263,227 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid TORv3.\n+    s << MakeSpan(ParseHex(\"04\"                               // network type (TORv3)\n+                           \"20\"                               // address length\n+                           \"79bcc625184b05194975c28b66b66b04\" // address\n+                           \"69f7f6556fb1ac3189a79b40dda32f1f\"\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv3, with bogus length.\n+    s << MakeSpan(ParseHex(\"04\" // network type (TORv2)\n+                           \"00\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv3 address with length 0 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid I2P.\n+    s << MakeSpan(ParseHex(\"05\"                               // network type (I2P)\n+                           \"20\"                               // address length\n+                           \"a2894dabaec08c0051a481a6dac88b64\" // address\n+                           \"f98232ae42d4b6fd2fa81952dfe36a87\"));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(),\n+                      \"ukeu3k5oycgaauneqgtnvselmt4yemvoilkln7jpvamvfx7dnkdq.b32.i2p\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid I2P, with bogus length.\n+    s << MakeSpan(ParseHex(\"05\" // network type (TORv2)\n+                           \"03\" // address length\n+                           \"00\" // address\n+                           ));\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 I2P address with length 3 (should be 32)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid CJDNS.\n+    s << MakeSpan(ParseHex(\"06\"                               // network type (I2P)\n+                           \"10\"                               // address length\n+                           \"fc000001000200030004000500060007\" // address\n+                           ));\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"fc00:1:2:3:4:5:6:7\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid CJDNS, with bogus length.\n+    s << MakeSpan(ParseHex(\"06\" // network type (TORv2)",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 213,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": 486952355,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-09-11T11:52:48Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486994154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486994154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 458,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486997592",
      "pull_request_review_id": 486742903,
      "id": 486997592,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NzU5Mg==",
      "diff_hunk": "@@ -177,16 +188,27 @@ class CNetAddr\n         template <typename Stream>\n         void Serialize(Stream& s) const\n         {\n-            SerializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                SerializeV2Stream(s);\n+            } else {\n+                SerializeV1Stream(s);\n+            }\n         }\n \n         /**\n          * Unserialize from a stream.\n+         * @throws std::ios_base::failure if the stream is in ADDRv2 format and\n+         * the data is invalid and cannot be unserialized; ADDRv1 format",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 39,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "c73ea45e12d42a3a79bc4610d98f731465e4327e",
      "in_reply_to_id": 486671228,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed.",
      "created_at": "2020-09-11T12:00:08Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r486997592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/486997592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487054042",
      "pull_request_review_id": 486818128,
      "id": 487054042,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1NDA0Mg==",
      "diff_hunk": "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "path": "src/netaddress.h",
      "position": 31,
      "original_position": 30,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": 486961774,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I did consider this but did not make them separate because:\r\n\r\n* Intrinsically, TORv2 and TORv3 addresses belong to the same network - the TOR network. It is more like odd and even IPv4 addresses, not so much as IPv4 and IPv6 addresses.\r\n* Given that TORv2 is going to be dropped soon, we would have to clean up our code and remove any remains from it which would be easier if this is kept just as `NET_ONION`.",
      "created_at": "2020-09-11T13:43:40Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487054042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487054042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487203263",
      "pull_request_review_id": 487012496,
      "id": 487203263,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIwMzI2Mw==",
      "diff_hunk": "@@ -39,9 +50,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,",
      "path": "src/netaddress.h",
      "position": 31,
      "original_position": 30,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "9eb5b089c5852ba569fc879786b3b01be7596273",
      "in_reply_to_id": 486961774,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I considered suggesting this too, but outside of netaddress.*, the distinction probably doesn't matter (e.g. the decision whether to use a proxy and which one doesn't need to distinguish between TorV2 and TorV3), so this approach allows keeping the changes more local.",
      "created_at": "2020-09-11T17:59:44Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487203263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487203263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 55,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487219577",
      "pull_request_review_id": 487033621,
      "id": 487219577,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIxOTU3Nw==",
      "diff_hunk": "@@ -272,6 +341,48 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                // Recognize NET_INTERNAL embedded in IPv6.\n+                if (m_net == NET_IPV6 && HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 144,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why do this for NET_INTERNAL, but not for IPv4 or TORv2?",
      "created_at": "2020-09-11T18:32:36Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487219577",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487219577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487246685",
      "pull_request_review_id": 487068302,
      "id": 487246685,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI0NjY4NQ==",
      "diff_hunk": "@@ -272,6 +341,48 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                // Recognize NET_INTERNAL embedded in IPv6.\n+                if (m_net == NET_IPV6 && HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 144,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "in_reply_to_id": 487219577,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because IPv4 and TORv2 have their own BIP155 network ids and should not be disguised as IPv6.\r\n\r\n`NET_INTERNAL` is not gossiped, but addrman may keep such addresses as \"source\" of other addresses and thus end up (un)serializing them when saving its database to disk in a V2 stream (not in this PR).\r\n\r\nIn this PR we may end up having some TORv3 addresses in addrman and try to serialize them in V1 stream. They will go as 16 zeroes.",
      "created_at": "2020-09-11T19:26:34Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487246685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487246685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487279246",
      "pull_request_review_id": 487109939,
      "id": 487279246,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3OTI0Ng==",
      "diff_hunk": "@@ -272,6 +341,48 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                // Recognize NET_INTERNAL embedded in IPv6.\n+                if (m_net == NET_IPV6 && HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 144,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "3472f6444205edf15f00ecc31f5b8749110fecaa",
      "in_reply_to_id": 487219577,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Following an [IRC discussion](http://www.erisian.com.au/bitcoin-core-dev/log-2020-09-11.html#l-406) - I changed it to recognize and ignore (unserialize as invalid) embedded IPv4 and TORv2 in IPv6 (when in addrv2 message).",
      "created_at": "2020-09-11T20:38:07Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487279246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487279246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 367,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487869783",
      "pull_request_review_id": 487698118,
      "id": 487869783,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg2OTc4Mw==",
      "diff_hunk": "@@ -5,18 +5,111 @@\n \n #include <netaddress.h>\n \n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::RecognizeBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8036a267 Perhaps call this function `SetBIP155Network` as it sets `m_net` whereas `GetBIP155Network` reads it.",
      "created_at": "2020-09-14T12:24:19Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487869783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487869783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487871749",
      "pull_request_review_id": 487698118,
      "id": 487871749,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3MTc0OQ==",
      "diff_hunk": "@@ -186,20 +220,56 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Deduce the BIP155 network id of this address.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 127,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8036a267 These two \"Deduce\" words make the two functions seem similar, whereas one function reads `m_net` and the other sets `m_net`.",
      "created_at": "2020-09-14T12:27:26Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487871749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487871749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487880342",
      "pull_request_review_id": 487698118,
      "id": 487880342,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg4MDM0Mg==",
      "diff_hunk": "@@ -272,6 +368,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                if (m_net != NET_IPV6) {\n+                    return;\n+                }\n+\n+                // Do some special checks on IPv6 addresses.\n+\n+                // Recognize NET_INTERNAL embedded in IPv6, such addresses are not\n+                // gossiped but could be coming from addrman, when unserializing from\n+                // disk.\n+                if (HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {\n+                    m_net = NET_INTERNAL;\n+                    memmove(m_addr.data(), m_addr.data() + INTERNAL_IN_IPV6_PREFIX.size(),\n+                            ADDR_INTERNAL_SIZE);\n+                    m_addr.resize(ADDR_INTERNAL_SIZE);\n+                    return;\n+                }\n+\n+                if (!HasPrefix(m_addr, IPV4_IN_IPV6_PREFIX) &&\n+                    !HasPrefix(m_addr, TORV2_IN_IPV6_PREFIX)) {\n+                    return;\n+                }\n+\n+                // IPv4 and TORv2 are not supposed to be embedded in IPv6 (like in V1\n+                // encoding). Unserialize as !IsValid(), thus ignoring them.\n+            } else {\n+                // If we receive an unknown BIP155 network id (from the future?) then\n+                // ignore the address - unserialize as !IsValid().\n+                s.ignore(address_size);\n+            }\n+\n+            // Mimic a default-constructed object which is !IsValid() and thus will not",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 258,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8036a267 nit, perhaps s/object/IPV6 object/",
      "created_at": "2020-09-14T12:41:34Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487880342",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487880342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487887872",
      "pull_request_review_id": 487698118,
      "id": 487887872,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg4Nzg3Mg==",
      "diff_hunk": "@@ -261,17 +278,243 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8036a267 suggest s/Sneak/Bitwise-OR the/ (here and line 348) as this operation isn't covert or sneaky :)",
      "created_at": "2020-09-14T12:53:16Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487887872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487887872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487930052",
      "pull_request_review_id": 487698118,
      "id": 487930052,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkzMDA1Mg==",
      "diff_hunk": "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 188,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1046e17c perhaps\r\n```diff\r\n-    static const char* suffix = \".onion\";\r\n-    static constexpr size_t suffix_len = 6;\r\n+    static const std::string suffix{\".onion\"};\r\n+    static const size_t suffix_len{suffix.size()};\r\n```\r\n",
      "created_at": "2020-09-14T13:46:08Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487930052",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487930052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487941591",
      "pull_request_review_id": 487698118,
      "id": 487941591,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk0MTU5MQ==",
      "diff_hunk": "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;\n+\n+    if (str.size() <= suffix_len || str.substr(str.size() - suffix_len) != suffix) {\n+        return false;\n+    }\n+\n+    const auto& input = DecodeBase32(str.substr(0, str.size() - suffix_len).c_str());",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 194,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1046e17 the previous code used `c_str()`, but maybe use `data()` while retouching this \r\n\r\n-----\r\n\r\nDeveloper notes on `c_str()` just in case (ignore if this is noise):\r\n\r\n- Use `.c_str()` sparingly. Its only valid use is to pass C++ strings to C functions that take NULL-terminated\r\n  strings.\r\n\r\n  - Do not use it when passing a sized array (so along with `.size()`). Use `.data()` instead to get a pointer to the raw data.\r\n\r\n    - *Rationale*: Although this is guaranteed to be safe starting with C++11, `.data()` communicates the intent better.\r\n\r\n  - In cases where do you call `.c_str()`, you might want to additionally check that the string does not contain embedded '\\0' characters, because it will (necessarily) truncate the string. This might be used to hide parts of the string from logging or to circumvent checks. If a use of strings is sensitive to this, take care to check the string for embedded NULL characters first and reject it if there are any (see `ParsePrechecks` in `strencodings.cpp` for an example).\r\n",
      "created_at": "2020-09-14T13:57:04Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487941591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487941591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487964378",
      "pull_request_review_id": 487698118,
      "id": 487964378,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NDM3OA==",
      "diff_hunk": "@@ -328,28 +480,65 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     a[0] << 8 | a[1], a[2] << 8 | a[3],\n+                     a[4] << 8 | a[5], a[6] << 8 | a[7],\n+                     a[8] << 8 | a[9], a[10] << 8 | a[11],\n+                     a[12] << 8 | a[13], a[14] << 8 | a[15]);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 259,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1046e17c nit, this might be more readable with one element per line:\r\n```diff\r\n-                     a[0] << 8 | a[1], a[2] << 8 | a[3],\r\n-                     a[4] << 8 | a[5], a[6] << 8 | a[7],\r\n-                     a[8] << 8 | a[9], a[10] << 8 | a[11],\r\n-                     a[12] << 8 | a[13], a[14] << 8 | a[15]);\r\n+                      a[0] << 8 | a[1],\r\n+                      a[2] << 8 | a[3],\r\n+                      a[4] << 8 | a[5],\r\n+                      a[6] << 8 | a[7],\r\n+                      a[8] << 8 | a[9],\r\n+                     a[10] << 8 | a[11],\r\n+                     a[12] << 8 | a[13],\r\n+                     a[14] << 8 | a[15]);\r\n```",
      "created_at": "2020-09-14T14:16:21Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487964378",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487964378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487966148",
      "pull_request_review_id": 487698118,
      "id": 487966148,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NjE0OA==",
      "diff_hunk": "@@ -328,28 +480,65 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     a[0] << 8 | a[1], a[2] << 8 | a[3],\n+                     a[4] << 8 | a[5], a[6] << 8 | a[7],\n+                     a[8] << 8 | a[9], a[10] << 8 | a[11],\n+                     a[12] << 8 | a[13], a[14] << 8 | a[15]);\n+}\n+\n std::string CNetAddr::ToStringIP() const\n {\n-    if (IsTor())\n-        return EncodeBase32(m_addr) + \".onion\";\n-    if (IsInternal())\n+    switch (m_net) {\n+    case NET_IPV4:\n+    case NET_IPV6: {\n+        CService serv(*this, 0);\n+        struct sockaddr_storage sockaddr;\n+        socklen_t socklen = sizeof(sockaddr);\n+        if (serv.GetSockAddr((struct sockaddr*)&sockaddr, &socklen)) {\n+            char name[1025] = \"\";\n+            if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name,\n+                             sizeof(name), nullptr, 0, NI_NUMERICHOST))\n+                return std::string(name);\n+        }\n+        if (m_net == NET_IPV4) {\n+            return strprintf(\"%u.%u.%u.%u\", m_addr[0], m_addr[1], m_addr[2], m_addr[3]);\n+        }\n+        return IPv6ToString(m_addr);\n+    }\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return EncodeBase32(m_addr) + \".onion\";\n+        case ADDR_TORV3_SIZE: {\n+\n+            uint8_t checksum[torv3::CHECKSUM_LEN];\n+            torv3::Checksum(m_addr, checksum);\n+\n+            // onion_address = base32(PUBKEY | CHECKSUM | VERSION) + \".onion\"",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 293,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1046e17c nit suggestion if you retouch: s/onion_address/tor v3 onion address/",
      "created_at": "2020-09-14T14:17:53Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487966148",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487966148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 520,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487967348",
      "pull_request_review_id": 487698118,
      "id": 487967348,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk2NzM0OA==",
      "diff_hunk": "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 155,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1046e17c nit suggestion if you retouch: s/CHECKSUM/tor v3 checksum/",
      "created_at": "2020-09-14T14:19:02Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487967348",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487967348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487979053",
      "pull_request_review_id": 487698118,
      "id": 487979053,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk3OTA1Mw==",
      "diff_hunk": "@@ -742,7 +931,7 @@ std::string CService::ToStringPort() const\n \n std::string CService::ToStringIPPort() const\n {\n-    if (IsIPv4() || IsTor() || IsInternal()) {\n+    if (IsIPv4() || IsTor() || IsI2P() || IsInternal()) {",
      "path": "src/netaddress.cpp",
      "position": 397,
      "original_position": 381,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1046e17c `IsCJDNS()`...should CJDNS IP strings be in IPv4 dotted-quad or IPv6 colon-hexadecimal notation?",
      "created_at": "2020-09-14T14:31:58Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487979053",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487979053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 947,
      "original_line": 947,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487983214",
      "pull_request_review_id": 487698118,
      "id": 487983214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk4MzIxNA==",
      "diff_hunk": "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {\n+        while (str.size() % 8) {\n+            str += '=';\n+        }\n+    }",
      "path": "src/util/strencodings.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1046e17c would be good to add an explanation of why `pad` is needed, maybe in a doxygen doc for the function in the header file `strencodings.h`",
      "created_at": "2020-09-14T14:37:31Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r487983214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487983214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 215,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488699095",
      "pull_request_review_id": 488725498,
      "id": 488699095,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5OTA5NQ==",
      "diff_hunk": "@@ -5,18 +5,111 @@\n \n #include <netaddress.h>\n \n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::RecognizeBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487869783,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`SetBIP155Network` would be incorrect because `m_net`, which is being set, is of type `Network`, not `BIP155Network`.\r\n\r\nRenamed to this function to `SetNetFromBIP155Network()` to imply \"set m_net from variable of type BIP155Network\".",
      "created_at": "2020-09-15T14:10:17Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488699095",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488699095"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488699524",
      "pull_request_review_id": 488726102,
      "id": 488699524,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5OTUyNA==",
      "diff_hunk": "@@ -186,20 +220,56 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Deduce the BIP155 network id of this address.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 127,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487871749,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reworded.",
      "created_at": "2020-09-15T14:10:55Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488699524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488699524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700181",
      "pull_request_review_id": 488727003,
      "id": 488700181,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMDE4MQ==",
      "diff_hunk": "@@ -272,6 +368,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;\n+\n+            if (RecognizeBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                if (m_net != NET_IPV6) {\n+                    return;\n+                }\n+\n+                // Do some special checks on IPv6 addresses.\n+\n+                // Recognize NET_INTERNAL embedded in IPv6, such addresses are not\n+                // gossiped but could be coming from addrman, when unserializing from\n+                // disk.\n+                if (HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {\n+                    m_net = NET_INTERNAL;\n+                    memmove(m_addr.data(), m_addr.data() + INTERNAL_IN_IPV6_PREFIX.size(),\n+                            ADDR_INTERNAL_SIZE);\n+                    m_addr.resize(ADDR_INTERNAL_SIZE);\n+                    return;\n+                }\n+\n+                if (!HasPrefix(m_addr, IPV4_IN_IPV6_PREFIX) &&\n+                    !HasPrefix(m_addr, TORV2_IN_IPV6_PREFIX)) {\n+                    return;\n+                }\n+\n+                // IPv4 and TORv2 are not supposed to be embedded in IPv6 (like in V1\n+                // encoding). Unserialize as !IsValid(), thus ignoring them.\n+            } else {\n+                // If we receive an unknown BIP155 network id (from the future?) then\n+                // ignore the address - unserialize as !IsValid().\n+                s.ignore(address_size);\n+            }\n+\n+            // Mimic a default-constructed object which is !IsValid() and thus will not",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 258,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487880342,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to \"default-constructed CNetAddr object\".",
      "created_at": "2020-09-15T14:11:47Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700181",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700491",
      "pull_request_review_id": 488727462,
      "id": 488700491,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMDQ5MQ==",
      "diff_hunk": "@@ -261,17 +278,243 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Sneak ADDRV2_FORMAT into the version so that the CNetAddr",
      "path": "src/test/net_tests.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487887872,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to just \"Add ADDRV2_FORMAT ...\"",
      "created_at": "2020-09-15T14:12:13Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 315,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700691",
      "pull_request_review_id": 488727710,
      "id": 488700691,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMDY5MQ==",
      "diff_hunk": "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 188,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487930052,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed.",
      "created_at": "2020-09-15T14:12:29Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488700691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488700691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488703662",
      "pull_request_review_id": 488731848,
      "id": 488703662,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwMzY2Mg==",
      "diff_hunk": "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;\n+\n+    if (str.size() <= suffix_len || str.substr(str.size() - suffix_len) != suffix) {\n+        return false;\n+    }\n+\n+    const auto& input = DecodeBase32(str.substr(0, str.size() - suffix_len).c_str());",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 194,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487941591,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, both `c_str()` and `data()` return the same thing. I kept it to `c_str()` because `DecodeBase32()` expects a nul-terminated string and `c_str()` has always been returning such string, whereas `data()` does so only after C++11. I.e. `c_str()` is more widely known to return a nul-terminated string.\r\n\r\nAnyway, I added a check whether the string contains an embedded `'\\0'` plus a test for it.",
      "created_at": "2020-09-15T14:16:25Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488703662",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488703662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488704636",
      "pull_request_review_id": 488733174,
      "id": 488704636,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNDYzNg==",
      "diff_hunk": "@@ -328,28 +480,65 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     a[0] << 8 | a[1], a[2] << 8 | a[3],\n+                     a[4] << 8 | a[5], a[6] << 8 | a[7],\n+                     a[8] << 8 | a[9], a[10] << 8 | a[11],\n+                     a[12] << 8 | a[13], a[14] << 8 | a[15]);\n+}\n+\n std::string CNetAddr::ToStringIP() const\n {\n-    if (IsTor())\n-        return EncodeBase32(m_addr) + \".onion\";\n-    if (IsInternal())\n+    switch (m_net) {\n+    case NET_IPV4:\n+    case NET_IPV6: {\n+        CService serv(*this, 0);\n+        struct sockaddr_storage sockaddr;\n+        socklen_t socklen = sizeof(sockaddr);\n+        if (serv.GetSockAddr((struct sockaddr*)&sockaddr, &socklen)) {\n+            char name[1025] = \"\";\n+            if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name,\n+                             sizeof(name), nullptr, 0, NI_NUMERICHOST))\n+                return std::string(name);\n+        }\n+        if (m_net == NET_IPV4) {\n+            return strprintf(\"%u.%u.%u.%u\", m_addr[0], m_addr[1], m_addr[2], m_addr[3]);\n+        }\n+        return IPv6ToString(m_addr);\n+    }\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return EncodeBase32(m_addr) + \".onion\";\n+        case ADDR_TORV3_SIZE: {\n+\n+            uint8_t checksum[torv3::CHECKSUM_LEN];\n+            torv3::Checksum(m_addr, checksum);\n+\n+            // onion_address = base32(PUBKEY | CHECKSUM | VERSION) + \".onion\"",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 293,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487966148,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I copied that verbatim from https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135, but anyway - I now prefixed it with \"TORv3\".",
      "created_at": "2020-09-15T14:17:40Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488704636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488704636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 520,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488704804",
      "pull_request_review_id": 488733386,
      "id": 488704804,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNDgwNA==",
      "diff_hunk": "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 155,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487967348,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I copied that verbatim from https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135, but anyway - I now prefixed it with \"TORv3\".",
      "created_at": "2020-09-15T14:17:52Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488704804",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488704804"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488705470",
      "pull_request_review_id": 488734346,
      "id": 488705470,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNTQ3MA==",
      "diff_hunk": "@@ -742,7 +931,7 @@ std::string CService::ToStringPort() const\n \n std::string CService::ToStringIPPort() const\n {\n-    if (IsIPv4() || IsTor() || IsInternal()) {\n+    if (IsIPv4() || IsTor() || IsI2P() || IsInternal()) {",
      "path": "src/netaddress.cpp",
      "position": 397,
      "original_position": 381,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487979053,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To my understanding CJDNS addresses have the same representation as IPv6, just different meaning.",
      "created_at": "2020-09-15T14:18:43Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488705470",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488705470"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 947,
      "original_line": 947,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488706011",
      "pull_request_review_id": 488735051,
      "id": 488706011,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNjAxMQ==",
      "diff_hunk": "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {\n+        while (str.size() % 8) {\n+            str += '=';\n+        }\n+    }",
      "path": "src/util/strencodings.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487983214,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't know why the padding is needed! :) But I added a comment on what the newly added parameter does.",
      "created_at": "2020-09-15T14:19:25Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488706011",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488706011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 215,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488707063",
      "pull_request_review_id": 488736423,
      "id": 488707063,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcwNzA2Mw==",
      "diff_hunk": "@@ -328,28 +480,65 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     a[0] << 8 | a[1], a[2] << 8 | a[3],\n+                     a[4] << 8 | a[5], a[6] << 8 | a[7],\n+                     a[8] << 8 | a[9], a[10] << 8 | a[11],\n+                     a[12] << 8 | a[13], a[14] << 8 | a[15]);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 259,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487964378,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to `ReadBE16()`, must be more readable now.",
      "created_at": "2020-09-15T14:20:43Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488707063",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488707063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488735488",
      "pull_request_review_id": 488774041,
      "id": 488735488,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczNTQ4OA==",
      "diff_hunk": "@@ -5,18 +5,112 @@\n \n #include <netaddress.h>\n \n+#include <crypto/common.h>\n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)\n+{\n+    switch (possible_bip155_net) {\n+    case BIP155Network::IPV4:\n+        if (address_size == ADDR_IPV4_SIZE) {\n+           m_net = NET_IPV4;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv4 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV4_SIZE));\n+    case BIP155Network::IPV6:\n+        if (address_size == ADDR_IPV6_SIZE) {\n+           m_net = NET_IPV6;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv6 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV6_SIZE));\n+    case BIP155Network::TORV2:\n+        if (address_size == ADDR_TORV2_SIZE) {\n+           m_net = NET_ONION;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 TORv2 address with length %u (should be %u)\", address_size,\n+                      ADDR_TORV2_SIZE));\n+    case BIP155Network::TORV3:\n+        if (address_size == ADDR_TORV3_SIZE) {\n+            m_net = NET_ONION;\n+            return true;",
      "path": "src/netaddress.cpp",
      "position": 83,
      "original_position": 83,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "80c77c31 nit, indenting is off by one for the NET_IPV4, NET_IPV6, and NET_ONION cases",
      "created_at": "2020-09-15T14:56:43Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488735488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488735488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 86,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488736535",
      "pull_request_review_id": 488774041,
      "id": 488736535,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODczNjUzNQ==",
      "diff_hunk": "@@ -101,24 +194,77 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // TORv3 CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n- * Parse a TORv2 address and set this object to it.\n+ * Parse a TOR address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 184,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8d2b60cb nit, while touching this line\r\n```suggestion\r\nbool CNetAddr::SetSpecial(const std::string& str)\r\n```",
      "created_at": "2020-09-15T14:58:03Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488736535",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488736535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488741844",
      "pull_request_review_id": 488774041,
      "id": 488741844,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0MTg0NA==",
      "diff_hunk": "@@ -328,28 +482,71 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8d2b60cb nit, clang format\r\n```diff\r\n-static std::string IPv6ToString(Span<const uint8_t> a) {\r\n+static std::string IPv6ToString(Span<const uint8_t> a)\r\n+{\r\n```",
      "created_at": "2020-09-15T15:04:36Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488741844",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488741844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488743740",
      "pull_request_review_id": 488774041,
      "id": 488743740,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0Mzc0MA==",
      "diff_hunk": "@@ -429,20 +626,20 @@ uint32_t CNetAddr::GetLinkedIPv4() const\n }\n \n uint32_t CNetAddr::GetNetClass() const {\n-    uint32_t net_class = NET_IPV6;\n-    if (IsLocal()) {\n-        net_class = 255;\n-    }\n+    // Make sure that if we return NET_IPV6, then IsIPv6() is true. The callers expect that.",
      "path": "src/netaddress.cpp",
      "position": 358,
      "original_position": 351,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8d2b60cb nit, clang format while touching this\r\n```diff\r\n-uint32_t CNetAddr::GetNetClass() const {\r\n+uint32_t CNetAddr::GetNetClass() const\r\n+{\r\n```",
      "created_at": "2020-09-15T15:07:04Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488743740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488743740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 634,
      "original_line": 634,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488747663",
      "pull_request_review_id": 488774041,
      "id": 488747663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0NzY2Mw==",
      "diff_hunk": "@@ -328,28 +482,71 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    // clang-format off\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     ReadBE16(&a[0]),\n+                     ReadBE16(&a[2]),\n+                     ReadBE16(&a[4]),\n+                     ReadBE16(&a[6]),\n+                     ReadBE16(&a[8]),\n+                     ReadBE16(&a[10]),\n+                     ReadBE16(&a[12]),\n+                     ReadBE16(&a[14]));\n+    // clang-format on",
      "path": "src/netaddress.cpp",
      "position": 272,
      "original_position": 268,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8d2b60cb With clang-format-12 these two `clang-format` declarations don't seem needed for me; ignore me if they are needed for other versions.",
      "created_at": "2020-09-15T15:12:12Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488747663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488747663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488755139",
      "pull_request_review_id": 488774041,
      "id": 488755139,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NTEzOQ==",
      "diff_hunk": "@@ -245,33 +247,300 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"1122:3344:5566:7788:9900:aabb:ccdd:eeff\");\n \n     // TORv2\n-    addr.SetSpecial(\"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n     BOOST_REQUIRE(addr.IsValid());\n     BOOST_REQUIRE(addr.IsTor());\n \n     BOOST_CHECK(!addr.IsBindAny());\n     BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n \n+    // TORv3\n+    const char* torv3_addr = \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\";\n+    BOOST_REQUIRE(addr.SetSpecial(torv3_addr));\n+    BOOST_REQUIRE(addr.IsValid());\n+    BOOST_REQUIRE(addr.IsTor());\n+\n+    BOOST_CHECK(!addr.IsBindAny());\n+    BOOST_CHECK_EQUAL(addr.ToString(), torv3_addr);\n+\n+    // TORv3, broken, with wrong checksum\n+    BOOST_CHECK(!addr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscsad.onion\"));\n+\n+    // TORv3, broken, with wrong version\n+    BOOST_CHECK(!addr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscrye.onion\"));\n+\n+    // TORv3, malicious\n+    BOOST_CHECK(!addr.SetSpecial(std::string{\n+        \"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd\\0wtf.onion\", 66}));\n+\n     // Internal\n     addr.SetInternal(\"esffpp\");\n     BOOST_REQUIRE(!addr.IsValid()); // \"internal\" is considered invalid\n     BOOST_REQUIRE(addr.IsInternal());\n \n     BOOST_CHECK(!addr.IsBindAny());\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n+\n+    // Totally bogus\n+    BOOST_CHECK(!addr.SetSpecial(\"totally bogus\"));\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"pg6mmjiyjmcrsslvykfwnntlaru7p5svn6y2ymmju6nubxndf4pscryd.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"kpgvmscirrdqpekbqjsvw5teanhatztpp2gl6eee4zkowvwfxwenqaid.onion\"));",
      "path": "src/test/net_tests.cpp",
      "position": 128,
      "original_position": 122,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Heh, I recognize that address ;)",
      "created_at": "2020-09-15T15:22:05Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488755139",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488755139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 356,
      "original_line": 356,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488773437",
      "pull_request_review_id": 488774041,
      "id": 488773437,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3MzQzNw==",
      "diff_hunk": "@@ -250,6 +328,25 @@ class CNetAddr\n             s << serialized;\n         }\n \n+        /**\n+         * Serialize as ADDRv2 / BIP155.\n+         */\n+        template <typename Stream>\n+        void SerializeV2Stream(Stream& s) const\n+        {\n+            if (m_net == NET_INTERNAL) {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 185,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "80c77c31 \r\n```suggestion\r\n            if (IsInternal()) {\r\n```",
      "created_at": "2020-09-15T15:47:02Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488773437",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488773437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488782076",
      "pull_request_review_id": 488834601,
      "id": 488782076,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4MjA3Ng==",
      "diff_hunk": "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {\n+        while (str.size() % 8) {\n+            str += '=';\n+        }\n+    }",
      "path": "src/util/strencodings.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487983214,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks.",
      "created_at": "2020-09-15T15:59:10Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488782076",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488782076"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 215,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488782327",
      "pull_request_review_id": 488834905,
      "id": 488782327,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4MjMyNw==",
      "diff_hunk": "@@ -5,18 +5,111 @@\n \n #include <netaddress.h>\n \n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::RecognizeBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487869783,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "SGTM.",
      "created_at": "2020-09-15T15:59:29Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488782327",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488782327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488783575",
      "pull_request_review_id": 488836506,
      "id": 488783575,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc4MzU3NQ==",
      "diff_hunk": "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 188,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487930052,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My comment wasn't about the syntax, but rather why not use std::string and size().",
      "created_at": "2020-09-15T16:01:19Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488783575",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488783575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488925305",
      "pull_request_review_id": 489011149,
      "id": 488925305,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNTMwNQ==",
      "diff_hunk": "@@ -328,28 +482,71 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    // clang-format off\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     ReadBE16(&a[0]),\n+                     ReadBE16(&a[2]),\n+                     ReadBE16(&a[4]),\n+                     ReadBE16(&a[6]),\n+                     ReadBE16(&a[8]),\n+                     ReadBE16(&a[10]),\n+                     ReadBE16(&a[12]),\n+                     ReadBE16(&a[14]));\n+    // clang-format on",
      "path": "src/netaddress.cpp",
      "position": 272,
      "original_position": 268,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": 488747663,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "clang-format 12 puts everything in one line for me.",
      "created_at": "2020-09-15T19:38:25Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488925305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488925305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 501,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488927739",
      "pull_request_review_id": 489013065,
      "id": 488927739,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyNzczOQ==",
      "diff_hunk": "@@ -5,18 +5,112 @@\n \n #include <netaddress.h>\n \n+#include <crypto/common.h>\n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)\n+{\n+    switch (possible_bip155_net) {\n+    case BIP155Network::IPV4:\n+        if (address_size == ADDR_IPV4_SIZE) {\n+           m_net = NET_IPV4;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv4 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV4_SIZE));\n+    case BIP155Network::IPV6:\n+        if (address_size == ADDR_IPV6_SIZE) {\n+           m_net = NET_IPV6;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv6 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV6_SIZE));\n+    case BIP155Network::TORV2:\n+        if (address_size == ADDR_TORV2_SIZE) {\n+           m_net = NET_ONION;\n+           return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 TORv2 address with length %u (should be %u)\", address_size,\n+                      ADDR_TORV2_SIZE));\n+    case BIP155Network::TORV3:\n+        if (address_size == ADDR_TORV3_SIZE) {\n+            m_net = NET_ONION;\n+            return true;",
      "path": "src/netaddress.cpp",
      "position": 83,
      "original_position": 83,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": 488735488,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-09-15T19:41:16Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488927739",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488927739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 86,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928062",
      "pull_request_review_id": 489013311,
      "id": 488928062,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyODA2Mg==",
      "diff_hunk": "@@ -101,24 +194,77 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // TORv3 CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n- * Parse a TORv2 address and set this object to it.\n+ * Parse a TOR address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 184,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": 488736535,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-09-15T19:41:38Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928234",
      "pull_request_review_id": 489013439,
      "id": 488928234,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyODIzNA==",
      "diff_hunk": "@@ -429,20 +626,20 @@ uint32_t CNetAddr::GetLinkedIPv4() const\n }\n \n uint32_t CNetAddr::GetNetClass() const {\n-    uint32_t net_class = NET_IPV6;\n-    if (IsLocal()) {\n-        net_class = 255;\n-    }\n+    // Make sure that if we return NET_IPV6, then IsIPv6() is true. The callers expect that.",
      "path": "src/netaddress.cpp",
      "position": 358,
      "original_position": 351,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": 488743740,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-09-15T19:41:49Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 634,
      "original_line": 634,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928476",
      "pull_request_review_id": 489013641,
      "id": 488928476,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyODQ3Ng==",
      "diff_hunk": "@@ -250,6 +328,25 @@ class CNetAddr\n             s << serialized;\n         }\n \n+        /**\n+         * Serialize as ADDRv2 / BIP155.\n+         */\n+        template <typename Stream>\n+        void SerializeV2Stream(Stream& s) const\n+        {\n+            if (m_net == NET_INTERNAL) {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 185,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": 488773437,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-09-15T19:42:06Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928476",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928831",
      "pull_request_review_id": 489013910,
      "id": 488928831,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkyODgzMQ==",
      "diff_hunk": "@@ -328,28 +482,71 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "8d2b60cbd737f9c27a7b42cf3373264fff6acf42",
      "in_reply_to_id": 488741844,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-09-15T19:42:31Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r488928831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488928831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489373250",
      "pull_request_review_id": 489540751,
      "id": 489373250,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM3MzI1MA==",
      "diff_hunk": "@@ -101,24 +193,76 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + VERSION_LEN;\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(MakeSpan(torv3::VERSION).first(torv3::VERSION_LEN));\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n  * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string &str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix = \".onion\";\n+    static constexpr size_t suffix_len = 6;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 188,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487930052,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, now I see `std::string` instead of `char*`. There is no need to create a `std::string` object.",
      "created_at": "2020-09-16T11:45:44Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489373250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489373250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489428777",
      "pull_request_review_id": 489613987,
      "id": 489428777,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQyODc3Nw==",
      "diff_hunk": "@@ -186,20 +220,56 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Deduce the BIP155 network id of this address.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 127,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "1046e17c1360a083a16ac45ed6324347ebf4444a",
      "in_reply_to_id": 487871749,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The word \"deduce\" in the doc here is still confusing. Suggestion:\r\n> Set `m_net` after validating the serialised address. This currently checks if the address length matches what is expected for the serialised BIP155 id.",
      "created_at": "2020-09-16T13:17:32Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489428777",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489428777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489430515",
      "pull_request_review_id": 489613987,
      "id": 489430515,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQzMDUxNQ==",
      "diff_hunk": "@@ -186,17 +202,52 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.\n+         * @returns true if the network was recognized and `m_net` was set",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 83,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add:\r\n> returns false for unrecognised (future) network ids, which must be ignored (BIP155).",
      "created_at": "2020-09-16T13:19:48Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489430515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489430515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 245,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489481220",
      "pull_request_review_id": 489613987,
      "id": 489481220,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4MTIyMA==",
      "diff_hunk": "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();",
      "path": "src/test/net_tests.cpp",
      "position": 181,
      "original_position": 118,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe add a test where `address` is shorter than the announced `address length` (which itself is valid). Is this code covered by fuzzing?",
      "created_at": "2020-09-16T14:27:35Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489481220",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489481220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 409,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489486995",
      "pull_request_review_id": 489613987,
      "id": 489486995,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ4Njk5NQ==",
      "diff_hunk": "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Valid IPv6, contains embedded \"internal\".\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"fd6b88c08724ca978112ca1bbdcafac2\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsInternal());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"zklycewkdo64v6wc.internal\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv6, contains embedded IPv4.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"00000000000000000000ffff01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(!addr.IsValid());\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, contains embedded TORv2.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"fd87d87eeb430102030405060708090a\")); // address\n+    s >> addr;\n+    BOOST_CHECK(!addr.IsValid());\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Unknown, with extreme length.",
      "path": "src/test/net_tests.cpp",
      "position": 312,
      "original_position": 183,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Suggest adding a test for unknown with reasonable length.",
      "created_at": "2020-09-16T14:34:51Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489486995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489486995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 540,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489493199",
      "pull_request_review_id": 489613987,
      "id": 489493199,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5MzE5OQ==",
      "diff_hunk": "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");",
      "path": "src/test/net_tests.cpp",
      "position": 135,
      "original_position": 80,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I get that:\r\n1. `0210` indicates IPv6 (in which the internal is embedded)\r\n2. `0xFD + sha256(\"bitcoin\")[0:5]` is the prefix for internal, which explains `fd6b88c08724`\r\n\r\nBut how is the rest (`ca978112ca1bbdcafac2`) generated? Might be worth a comment. Either way, it matches the pre-existing v1 test.",
      "created_at": "2020-09-16T14:42:45Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489493199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489493199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 363,
      "original_line": 363,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489499300",
      "pull_request_review_id": 489613987,
      "id": 489499300,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ5OTMwMA==",
      "diff_hunk": "@@ -29,7 +32,18 @@ CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n     case NET_IPV6:\n         return BIP155Network::IPV6;\n     case NET_ONION:\n-        return BIP155Network::TORV2;\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);",
      "path": "src/netaddress.cpp",
      "position": 38,
      "original_position": 22,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This needs a strong warning:\r\n```\r\n// length should have been checked before calling this function\r\n```",
      "created_at": "2020-09-16T14:50:23Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489499300",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489499300"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489740694",
      "pull_request_review_id": 490003117,
      "id": 489740694,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0MDY5NA==",
      "diff_hunk": "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {",
      "path": "src/test/util/setup_common.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "6ab0a741abf3a22f57e55728674a6fb0938c2505",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `HasReason` is a class but the commit message is talking about moving a function.",
      "created_at": "2020-09-16T20:39:31Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489740694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489740694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 161,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489748399",
      "pull_request_review_id": 490003117,
      "id": 489748399,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc0ODM5OQ==",
      "diff_hunk": "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": 53,
      "original_position": 29,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit\r\n```suggestion\r\nbool CNetAddr::SetNetFromBIP155Network(const uint8_t possible_bip155_net, const size_t address_size)\r\n```",
      "created_at": "2020-09-16T20:54:52Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489748399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489748399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489764805",
      "pull_request_review_id": 490003117,
      "id": 489764805,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc2NDgwNQ==",
      "diff_hunk": "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)",
      "path": "src/util/strencodings.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: same with the string one below\r\n```suggestion\r\nstd::string EncodeBase32(Span<const unsigned char> input, const bool pad)\r\n```",
      "created_at": "2020-09-16T21:28:12Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489764805",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489764805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 204,
      "original_line": 204,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489776345",
      "pull_request_review_id": 490047344,
      "id": 489776345,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3NjM0NQ==",
      "diff_hunk": "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": 53,
      "original_position": 29,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489748399,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this and https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489764805 below are  following these two guidelines:\r\n\r\n- https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#S-const\r\n```cpp\r\nvoid g(const int i);        // pedantic\r\n```\r\n- https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-in",
      "created_at": "2020-09-16T21:54:38Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489776345",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489776345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489806866",
      "pull_request_review_id": 490082933,
      "id": 489806866,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgwNjg2Ng==",
      "diff_hunk": "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": 53,
      "original_position": 29,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489748399,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Then I disagree with that guideline :) Using const in function arguments unlocks potential compiler optimizations and clarifies the code of that function. Not doing it just to ensure that people are not confused when they afterward encounter another function that does not follow that practice seems backward. We are also already using const in function args in many places of the codebase, so \"rarely declared const\" doesn't apply.",
      "created_at": "2020-09-16T23:23:42Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489806866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489806866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489811092",
      "pull_request_review_id": 490087575,
      "id": 489811092,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgxMTA5Mg==",
      "diff_hunk": "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": 53,
      "original_position": 29,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489748399,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Anyway, it's just a nit so feel free to ignore obviously.",
      "created_at": "2020-09-16T23:37:19Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489811092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489811092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489972622",
      "pull_request_review_id": 490244920,
      "id": 489972622,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3MjYyMg==",
      "diff_hunk": "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": 53,
      "original_position": 29,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489748399,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, fair points. Curious what people think.",
      "created_at": "2020-09-17T05:04:45Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489972622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/489972622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490240329",
      "pull_request_review_id": 490589585,
      "id": 490240329,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MDMyOQ==",
      "diff_hunk": "@@ -186,17 +202,52 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Deduce the network type from BIP155 network id and size and set `m_net`.\n+         * @returns true if the network was recognized and `m_net` was set",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 83,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489430515,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[reworded a little](https://github.com/bitcoin/bitcoin/compare/3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd..65a8d3199d3b40da679a3cf225f37e80965f7615#diff-76d15e11a95be7a4aee1eb89de6098caR267)",
      "created_at": "2020-09-17T13:23:31Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490240329",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490240329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 245,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490246733",
      "pull_request_review_id": 490596297,
      "id": 490246733,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NjczMw==",
      "diff_hunk": "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();",
      "path": "src/test/net_tests.cpp",
      "position": 181,
      "original_position": 118,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489481220,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added [a new test](https://github.com/bitcoin/bitcoin/compare/3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd..65a8d3199d3b40da679a3cf225f37e80965f7615#diff-03fc2f333374fd229824451793c40462R385).\r\n\r\nYes, it is fuzzed:\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/test/fuzz/deserialize.cpp#L185",
      "created_at": "2020-09-17T13:30:26Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490246733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490246733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 409,
      "original_line": 409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490248299",
      "pull_request_review_id": 490598009,
      "id": 490248299,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0ODI5OQ==",
      "diff_hunk": "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");\n+    s.clear();\n+}\n+\n+BOOST_AUTO_TEST_CASE(cnetaddr_unserialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // unserialize method expects an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    // Valid IPv4.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"04\"          // address length\n+                           \"01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv4());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"1.2.3.4\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv4, with bogus length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"05\"          // address length\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv4 address with length 5 (should be 4)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv4, with extreme length.\n+    s << MakeSpan(ParseHex(\"01\"          // network type (IPv4)\n+                           \"fd0102\"      // address length (513 as CompactSize)\n+                           \"01020304\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"Address too long: 513 > 512\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Valid IPv6.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"0102030405060708090a0b0c0d0e0f10\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsIPv6());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"102:304:506:708:90a:b0c:d0e:f10\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Valid IPv6, contains embedded \"internal\".\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"fd6b88c08724ca978112ca1bbdcafac2\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsInternal());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"zklycewkdo64v6wc.internal\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, with bogus length.\n+    s << MakeSpan(ParseHex(\"02\"    // network type (IPv6)\n+                           \"04\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 IPv6 address with length 4 (should be 16)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Invalid IPv6, contains embedded IPv4.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"00000000000000000000ffff01020304\")); // address\n+    s >> addr;\n+    BOOST_CHECK(!addr.IsValid());\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid IPv6, contains embedded TORv2.\n+    s << MakeSpan(ParseHex(\"02\"                                  // network type (IPv6)\n+                           \"10\"                                  // address length\n+                           \"fd87d87eeb430102030405060708090a\")); // address\n+    s >> addr;\n+    BOOST_CHECK(!addr.IsValid());\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Valid TORv2.\n+    s << MakeSpan(ParseHex(\"03\"                      // network type (TORv2)\n+                           \"0a\"                      // address length\n+                           \"f1f2f3f4f5f6f7f8f9fa\")); // address\n+    s >> addr;\n+    BOOST_CHECK(addr.IsValid());\n+    BOOST_CHECK(addr.IsTor());\n+    BOOST_CHECK_EQUAL(addr.ToString(), \"6hzph5hv6337r6p2.onion\");\n+    BOOST_REQUIRE(s.empty());\n+\n+    // Invalid TORv2, with bogus length.\n+    s << MakeSpan(ParseHex(\"03\"    // network type (TORv2)\n+                           \"07\"    // address length\n+                           \"00\")); // address\n+    BOOST_CHECK_EXCEPTION(s >> addr, std::ios_base::failure,\n+                          HasReason(\"BIP155 TORv2 address with length 7 (should be 10)\"));\n+    BOOST_REQUIRE(!s.empty()); // The stream is not consumed on invalid input.\n+    s.clear();\n+\n+    // Unknown, with extreme length.",
      "path": "src/test/net_tests.cpp",
      "position": 312,
      "original_position": 183,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489486995,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Added new test](https://github.com/bitcoin/bitcoin/compare/3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd..65a8d3199d3b40da679a3cf225f37e80965f7615#diff-03fc2f333374fd229824451793c40462R550)",
      "created_at": "2020-09-17T13:32:15Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490248299",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490248299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 540,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490250124",
      "pull_request_review_id": 490600035,
      "id": 490250124,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1MDEyNA==",
      "diff_hunk": "@@ -261,17 +263,188 @@ BOOST_AUTO_TEST_CASE(cnetaddr_basic)\n     BOOST_CHECK_EQUAL(addr.ToString(), \"esffpvrt3wpeaygy.internal\");\n }\n \n-BOOST_AUTO_TEST_CASE(cnetaddr_serialize)\n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v1)\n {\n     CNetAddr addr;\n     CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n \n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"00000000000000000000ffff01020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"1a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"fd87d87eeb43f1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n     addr.SetInternal(\"a\");\n     s << addr;\n     BOOST_CHECK_EQUAL(HexStr(s), \"fd6b88c08724ca978112ca1bbdcafac2\");\n     s.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(cnetaddr_serialize_v2)\n+{\n+    CNetAddr addr;\n+    CDataStream s(SER_NETWORK, PROTOCOL_VERSION);\n+    // Add ADDRV2_FORMAT to the version so that the CNetAddr\n+    // serialize method produces an address in v2 format.\n+    s.SetVersion(s.GetVersion() | ADDRV2_FORMAT);\n+\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"021000000000000000000000000000000000\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1.2.3.4\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"010401020304\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(LookupHost(\"1a1b:2a2b:3a3b:4a4b:5a5b:6a6b:7a7b:8a8b\", addr, false));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"02101a1b2a2b3a3b4a4b5a5b6a6b7a7b8a8b\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetSpecial(\"6hzph5hv6337r6p2.onion\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"030af1f2f3f4f5f6f7f8f9fa\");\n+    s.clear();\n+\n+    BOOST_REQUIRE(addr.SetInternal(\"a\"));\n+    s << addr;\n+    BOOST_CHECK_EQUAL(HexStr(s), \"0210fd6b88c08724ca978112ca1bbdcafac2\");",
      "path": "src/test/net_tests.cpp",
      "position": 135,
      "original_position": 80,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489493199,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added some comments: https://github.com/bitcoin/bitcoin/compare/3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd..65a8d3199d3b40da679a3cf225f37e80965f7615#diff-03fc2f333374fd229824451793c40462R425",
      "created_at": "2020-09-17T13:34:17Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490250124",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490250124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 363,
      "original_line": 363,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490274796",
      "pull_request_review_id": 490632799,
      "id": 490274796,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NDc5Ng==",
      "diff_hunk": "@@ -29,7 +32,18 @@ CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n     case NET_IPV6:\n         return BIP155Network::IPV6;\n     case NET_ONION:\n-        return BIP155Network::TORV2;\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);",
      "path": "src/netaddress.cpp",
      "position": 38,
      "original_position": 22,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "in_reply_to_id": 489499300,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The length cannot be something else than `ADDR_TORV2_SIZE` or `ADDR_TORV3_SIZE`. There is no code path that would lead to such scenario and if it happens it means some memory corruption or some future bug. It is the same as `m_net` being equal to `NET_MAX` for example.",
      "created_at": "2020-09-17T14:06:33Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490274796",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490274796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490275161",
      "pull_request_review_id": 490633407,
      "id": 490275161,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3NTE2MQ==",
      "diff_hunk": "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {",
      "path": "src/test/util/setup_common.h",
      "position": 9,
      "original_position": 9,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "6ab0a741abf3a22f57e55728674a6fb0938c2505",
      "in_reply_to_id": 489740694,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2020-09-17T14:07:02Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490275161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490275161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 161,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490289235",
      "pull_request_review_id": 490652111,
      "id": 490289235,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4OTIzNQ==",
      "diff_hunk": "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": 53,
      "original_position": 29,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489748399,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My take is the same as the isocpp guidelines - no `const` for function arguments that are passed by value.\r\n\r\nWhenever I see `void func(const int x);` my reaction is \"Huh!? Did the author realize that no matter what the function body is it cannot modify the caller's variable given as an argument? Or did the author mean `const int* x` or `const int& x`?\r\n\r\nYes, the compiler may do some optimizations inside the function body, but that is out-weighted by the above. And I guess modern compilers may do the optimizations even without the presence of `const`.",
      "created_at": "2020-09-17T14:24:50Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490289235",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490289235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490289645",
      "pull_request_review_id": 490652633,
      "id": 490289645,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI4OTY0NQ==",
      "diff_hunk": "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)",
      "path": "src/util/strencodings.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "in_reply_to_id": 489764805,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Lets have the conversation in just one place: https://github.com/bitcoin/bitcoin/pull/19845#discussion_r489748399",
      "created_at": "2020-09-17T14:25:17Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490289645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490289645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 204,
      "original_line": 204,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490380216",
      "pull_request_review_id": 490770782,
      "id": 490380216,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM4MDIxNg==",
      "diff_hunk": "@@ -186,20 +220,58 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Set `m_net` from the provided BIP155 network id and size after validation.\n+         * @retval true the network was recognized, is valid and `m_net` was set\n+         * @retval false not unrecognised (from future?) and should be silently ignored",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 130,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "65a8d3199d3b40da679a3cf225f37e80965f7615",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"not unrecognised\" -> \"not recognised\" or \"unrecognised\"",
      "created_at": "2020-09-17T16:14:48Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490380216",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490380216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 267,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490536683",
      "pull_request_review_id": 490956496,
      "id": 490536683,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUzNjY4Mw==",
      "diff_hunk": "@@ -186,20 +220,58 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Set `m_net` from the provided BIP155 network id and size after validation.\n+         * @retval true the network was recognized, is valid and `m_net` was set\n+         * @retval false not unrecognised (from future?) and should be silently ignored",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 130,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "65a8d3199d3b40da679a3cf225f37e80965f7615",
      "in_reply_to_id": 490380216,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2020-09-17T20:17:41Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r490536683",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/490536683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 267,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491089742",
      "pull_request_review_id": 491651673,
      "id": 491089742,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTA4OTc0Mg==",
      "diff_hunk": "@@ -14,10 +14,65 @@\n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        return BIP155Network::TORV2;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)",
      "path": "src/netaddress.cpp",
      "position": 53,
      "original_position": 29,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fdfa3c6d4b2dcbdf596afaaae32d8f5e45ebdf70",
      "in_reply_to_id": 489748399,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree with @vasild; using `const` for by-value arguments looks strange.\r\n\r\nI would be very surprised if it enables any optimization in common cases. In the SSA transformation every assignment is treated as a new constant value, regardless of the variables that hold it or their types. This works especially well for small values, which tend to be the ones that are passed around by value.\r\n\r\nAll const does in this case is prevent accidentally modifying the *local copy* of the parameter during execution of the function. It's similar to just declaring a local variable defined in the body of the function const, but in a way that can be confused to look like it's part of the function's contract.",
      "created_at": "2020-09-18T17:24:43Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491089742",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491089742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 56,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491135795",
      "pull_request_review_id": 491651673,
      "id": 491135795,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTEzNTc5NQ==",
      "diff_hunk": "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 151,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: If you write this as `= {3};` instead, the write below can become `hasher.Write(VERSION);`.\r\n\r\nYou could even do something similar with `prefix`, writing the initializer as `= {'.', 'o', 'n', 'i', 'o', 'n', ' ', ...`, but that looks kind of ugly.",
      "created_at": "2020-09-18T18:58:45Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491135795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491135795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491158657",
      "pull_request_review_id": 491740446,
      "id": 491158657,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1ODY1Nw==",
      "diff_hunk": "@@ -272,6 +370,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;",
      "path": "src/netaddress.h",
      "position": 224,
      "original_position": 224,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": null,
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't see the `scopeId` variable being used in this block, could it be removed? Or is it required to be set here for something else down the line?",
      "created_at": "2020-09-18T19:50:17Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491158657",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491158657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 391,
      "original_line": 391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491163005",
      "pull_request_review_id": 491651673,
      "id": 491163005,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2MzAwNQ==",
      "diff_hunk": "@@ -272,6 +370,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;",
      "path": "src/netaddress.h",
      "position": 224,
      "original_position": 224,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": 491158657,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's a member variable of `CNetAddr`, so yes, it is used later.",
      "created_at": "2020-09-18T20:00:35Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491163005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491163005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 391,
      "original_line": 391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491168611",
      "pull_request_review_id": 491651673,
      "id": 491168611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE2ODYxMQ==",
      "diff_hunk": "@@ -29,7 +32,18 @@ CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n     case NET_IPV6:\n         return BIP155Network::IPV6;\n     case NET_ONION:\n-        return BIP155Network::TORV2;\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);",
      "path": "src/netaddress.cpp",
      "position": 38,
      "original_position": 22,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "3eef1e65c2ac6cbbddd734f3b192861d9e73ecfd",
      "in_reply_to_id": 489499300,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> // length should have been checked before calling this function\r\n\r\nI disagree; length is part of the `CNetAddr` objects, so this precondition is just restating an implicit \"can only be called on a valid `CNetAddr` object\".",
      "created_at": "2020-09-18T20:13:48Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491168611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491168611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491192996",
      "pull_request_review_id": 491783955,
      "id": 491192996,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE5Mjk5Ng==",
      "diff_hunk": "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {",
      "path": "src/netaddress.cpp",
      "position": 147,
      "original_position": 147,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": null,
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To my (limited) understanding the use of namespaces are rare in the project, is there a specific reason it has to be used here?",
      "created_at": "2020-09-18T21:12:20Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491192996",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491192996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491201418",
      "pull_request_review_id": 491794324,
      "id": 491201418,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMTQxOA==",
      "diff_hunk": "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {",
      "path": "src/util/strencodings.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": null,
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have improved the test for this method to cover both branches. Is that something worth having in this PR already? Here's the diff and I'm happy to adjust if there's a better way to test it https://gist.github.com/eriknylund/cd2bcaf9c3b4ada8a304001c2df0bfbd",
      "created_at": "2020-09-18T21:36:35Z",
      "updated_at": "2020-09-21T08:15:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491201418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491201418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491862766",
      "pull_request_review_id": 492366849,
      "id": 491862766,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2Mjc2Ng==",
      "diff_hunk": "@@ -201,20 +201,24 @@ std::string DecodeBase64(const std::string& str, bool* pf_invalid)\n     return std::string((const char*)vchRet.data(), vchRet.size());\n }\n \n-std::string EncodeBase32(Span<const unsigned char> input)\n+std::string EncodeBase32(Span<const unsigned char> input, bool pad)\n {\n     static const char *pbase32 = \"abcdefghijklmnopqrstuvwxyz234567\";\n \n     std::string str;\n     str.reserve(((input.size() + 4) / 5) * 8);\n     ConvertBits<8, 5, true>([&](int v) { str += pbase32[v]; }, input.begin(), input.end());\n-    while (str.size() % 8) str += '=';\n+    if (pad) {",
      "path": "src/util/strencodings.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": 491201418,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added the test, thanks!",
      "created_at": "2020-09-21T08:16:38Z",
      "updated_at": "2020-09-21T08:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491862766",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491862766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491866446",
      "pull_request_review_id": 492371682,
      "id": 491866446,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg2NjQ0Ng==",
      "diff_hunk": "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static constexpr size_t VERSION_LEN = 1;\n+static const unsigned char VERSION[] = \"\\x03\";",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 151,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": 491135795,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to `{3}`, this also made it possible to remove the `VERSION_LEN` variable.\r\n\r\nYeah, `{'.', 'o', ...` makes it too weird. Given that `Write(MakeSpan(prefix).first(prefix_len))` (which could have been simplified to `Write(prefix)`) is used in just one place, I left it as is.",
      "created_at": "2020-09-21T08:23:28Z",
      "updated_at": "2020-09-21T08:23:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491866446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491866446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491873688",
      "pull_request_review_id": 492380849,
      "id": 491873688,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg3MzY4OA==",
      "diff_hunk": "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {",
      "path": "src/netaddress.cpp",
      "position": 147,
      "original_position": 147,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": 491192996,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The primary reason to use a namespace - things belong together.\r\n\r\nEvery time I spot myself prefixing symbols with a common prefix I ask myself whether I am implementing a poor man's namespace. In this case, without a namespace, I would have had to prefix all the symbols with a `torv3_` prefix. E.g. `TORV3_CHECKSUM_LEN`, `TORV3_VERSION`, `Torv3Checksum()`.",
      "created_at": "2020-09-21T08:36:24Z",
      "updated_at": "2020-09-21T08:36:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491873688",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491873688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491896287",
      "pull_request_review_id": 492409697,
      "id": 491896287,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5NjI4Nw==",
      "diff_hunk": "@@ -101,24 +194,82 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {",
      "path": "src/netaddress.cpp",
      "position": 147,
      "original_position": 147,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "b9c46e0a935a14063913f0c999922f8e22bce61d",
      "in_reply_to_id": 491192996,
      "user": {
        "login": "eriknylund",
        "id": 20860124,
        "node_id": "MDQ6VXNlcjIwODYwMTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/20860124?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eriknylund",
        "html_url": "https://github.com/eriknylund",
        "followers_url": "https://api.github.com/users/eriknylund/followers",
        "following_url": "https://api.github.com/users/eriknylund/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eriknylund/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eriknylund/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eriknylund/subscriptions",
        "organizations_url": "https://api.github.com/users/eriknylund/orgs",
        "repos_url": "https://api.github.com/users/eriknylund/repos",
        "events_url": "https://api.github.com/users/eriknylund/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eriknylund/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I completely agree, I think it makes things more contained, well structured and easier to comprehend. It seems to me a lot of new code would benefit from namespacing and perhaps worth considering when touching old code as well?",
      "created_at": "2020-09-21T09:15:50Z",
      "updated_at": "2020-09-21T09:15:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r491896287",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/491896287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 197,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494391140",
      "pull_request_review_id": 495667597,
      "id": 494391140,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM5MTE0MA==",
      "diff_hunk": "@@ -13,10 +13,13 @@ BOOST_AUTO_TEST_CASE(base32_testvectors)\n {\n     static const std::string vstrIn[]  = {\"\",\"f\",\"fo\",\"foo\",\"foob\",\"fooba\",\"foobar\"};\n     static const std::string vstrOut[] = {\"\",\"my======\",\"mzxq====\",\"mzxw6===\",\"mzxw6yq=\",\"mzxw6ytb\",\"mzxw6ytboi======\"};\n+    static const std::string vstrOutNoPadding[] = {\"\",\"my\",\"mzxq\",\"mzxw6\",\"mzxw6yq\",\"mzxw6ytb\",\"mzxw6ytboi\"};\n     for (unsigned int i=0; i<sizeof(vstrIn)/sizeof(vstrIn[0]); i++)\n     {\n         std::string strEnc = EncodeBase32(vstrIn[i]);\n         BOOST_CHECK_EQUAL(strEnc, vstrOut[i]);\n+        strEnc = EncodeBase32(vstrIn[i], false);\n+        BOOST_CHECK_EQUAL(strEnc, vstrOutNoPadding[i]);",
      "path": "src/test/base32_tests.cpp",
      "position": 10,
      "original_position": 10,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sanity-checked that the new test fails with\r\n```diff\r\n-        strEnc = EncodeBase32(vstrIn[i], false);\r\n+        strEnc = EncodeBase32(vstrIn[i], true);\r\n```\r\n",
      "created_at": "2020-09-24T15:00:59Z",
      "updated_at": "2020-09-24T15:15:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r494391140",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/494391140"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495486760",
      "pull_request_review_id": 497025535,
      "id": 495486760,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4Njc2MA==",
      "diff_hunk": "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>\n+    bool operator() (const E& e) const {\n+        return std::string(e.what()).find(m_reason) != std::string::npos;\n+    };\n+private:\n+    const std::string m_reason;\n+};",
      "path": "src/test/util/setup_common.h",
      "position": 18,
      "original_position": 18,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fe42411b4b07b99c591855f5f00ad45dfeec8e30\r\n\r\nnanonit -- clang-format suggests:\r\n```suggestion\r\nclass HasReason\r\n{\r\npublic:\r\n    explicit HasReason(const std::string& reason) : m_reason(reason) {}\r\n    template <typename E>\r\n    bool operator()(const E& e) const\r\n    {\r\n        return std::string(e.what()).find(m_reason) != std::string::npos;\r\n    };\r\n\r\nprivate:\r\n    const std::string m_reason;\r\n};\r\n```",
      "created_at": "2020-09-26T19:16:37Z",
      "updated_at": "2020-09-26T21:17:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495486760",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495486760"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": 161,
      "original_start_line": 161,
      "start_side": "RIGHT",
      "line": 170,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495487234",
      "pull_request_review_id": 497025535,
      "id": 495487234,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4NzIzNA==",
      "diff_hunk": "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>",
      "path": "src/test/util/setup_common.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fe42411b4b07b99c591855f5f00ad45dfeec8e30\r\n\r\nWhy introduce a template in \"move\" commit?\r\nThis pull compiles with the previous `std::runtime_error` parameter.",
      "created_at": "2020-09-26T19:22:51Z",
      "updated_at": "2020-09-26T21:17:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495487234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495487234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495488051",
      "pull_request_review_id": 497025535,
      "id": 495488051,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ4ODA1MQ==",
      "diff_hunk": "@@ -13,12 +13,24 @@\n #include <compat.h>\n #include <prevector.h>\n #include <serialize.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <string>\n #include <vector>\n \n+/**\n+ * A flag that is ORed into the protocol version to designate that addresses\n+ * should be serialized in (unserialized from) v2 format (BIP155).\n+ * Make sure that this does not collide with any of the values in `version.h`\n+ * or with `SERIALIZE_TRANSACTION_NO_WITNESS`.\n+ */\n+static const int ADDRV2_FORMAT = 0x20000000;",
      "path": "src/netaddress.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "e0d73573a37bf4b519f6f61e5678572d48a64517",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e0d73573a37bf4b519f6f61e5678572d48a64517\r\n\r\nnit:\r\n```suggestion\r\nstatic constexpr int ADDRV2_FORMAT = 0x20000000;\r\n```",
      "created_at": "2020-09-26T19:32:37Z",
      "updated_at": "2020-09-26T21:17:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495488051",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495488051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495730125",
      "pull_request_review_id": 497238142,
      "id": 495730125,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMDEyNQ==",
      "diff_hunk": "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>",
      "path": "src/test/util/setup_common.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "in_reply_to_id": 495487234,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We are now passing `std::ios_base::failure` as well. Now that you say it compiles with `std::runtime_error` I realized that the [former inherits the latter](https://en.cppreference.com/w/cpp/io/ios_base/failure) in C++11.",
      "created_at": "2020-09-28T07:09:01Z",
      "updated_at": "2020-09-28T07:09:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495730125",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495730125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495730990",
      "pull_request_review_id": 497239226,
      "id": 495730990,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMDk5MA==",
      "diff_hunk": "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>\n+    bool operator() (const E& e) const {\n+        return std::string(e.what()).find(m_reason) != std::string::npos;\n+    };\n+private:\n+    const std::string m_reason;\n+};",
      "path": "src/test/util/setup_common.h",
      "position": 18,
      "original_position": 18,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "in_reply_to_id": 495486760,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, I should deploy some automatic pre-push clang-format here. Not worth invalidating ACKs though.",
      "created_at": "2020-09-28T07:10:53Z",
      "updated_at": "2020-09-28T07:10:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495730990",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495730990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": 161,
      "original_start_line": 161,
      "start_side": "RIGHT",
      "line": 170,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495731892",
      "pull_request_review_id": 497240448,
      "id": 495731892,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczMTg5Mg==",
      "diff_hunk": "@@ -13,12 +13,24 @@\n #include <compat.h>\n #include <prevector.h>\n #include <serialize.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <string>\n #include <vector>\n \n+/**\n+ * A flag that is ORed into the protocol version to designate that addresses\n+ * should be serialized in (unserialized from) v2 format (BIP155).\n+ * Make sure that this does not collide with any of the values in `version.h`\n+ * or with `SERIALIZE_TRANSACTION_NO_WITNESS`.\n+ */\n+static const int ADDRV2_FORMAT = 0x20000000;",
      "path": "src/netaddress.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "e0d73573a37bf4b519f6f61e5678572d48a64517",
      "in_reply_to_id": 495488051,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right! But I will leave it as is, because of the amount of ACKs it is buried under.",
      "created_at": "2020-09-28T07:12:49Z",
      "updated_at": "2020-09-28T07:12:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r495731892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/495731892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496603855",
      "pull_request_review_id": 498319968,
      "id": 496603855,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwMzg1NQ==",
      "diff_hunk": "@@ -153,4 +153,20 @@ CBlock getBlock13b8a();\n // define an implicit conversion here so that uint256 may be used directly in BOOST_CHECK_*\n std::ostream& operator<<(std::ostream& os, const uint256& num);\n \n+/**\n+ * BOOST_CHECK_EXCEPTION predicates to check the specific validation error.\n+ * Use as\n+ * BOOST_CHECK_EXCEPTION(code that throws, exception type, HasReason(\"foo\"));\n+ */\n+class HasReason {\n+public:\n+    explicit HasReason(const std::string& reason) : m_reason(reason) {}\n+    template <typename E>\n+    bool operator() (const E& e) const {\n+        return std::string(e.what()).find(m_reason) != std::string::npos;\n+    };\n+private:\n+    const std::string m_reason;\n+};",
      "path": "src/test/util/setup_common.h",
      "position": 18,
      "original_position": 18,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "fe42411b4b07b99c591855f5f00ad45dfeec8e30",
      "in_reply_to_id": 495486760,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/bitcoin/bitcoin/pull/20033",
      "created_at": "2020-09-29T10:17:17Z",
      "updated_at": "2020-09-29T10:17:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r496603855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496603855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": 161,
      "original_start_line": 161,
      "start_side": "RIGHT",
      "line": 170,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496603941",
      "pull_request_review_id": 498320096,
      "id": 496603941,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwMzk0MQ==",
      "diff_hunk": "@@ -13,12 +13,24 @@\n #include <compat.h>\n #include <prevector.h>\n #include <serialize.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <string>\n #include <vector>\n \n+/**\n+ * A flag that is ORed into the protocol version to designate that addresses\n+ * should be serialized in (unserialized from) v2 format (BIP155).\n+ * Make sure that this does not collide with any of the values in `version.h`\n+ * or with `SERIALIZE_TRANSACTION_NO_WITNESS`.\n+ */\n+static const int ADDRV2_FORMAT = 0x20000000;",
      "path": "src/netaddress.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "7be6ff61875a8d5d2335bff5d1f16ba40557adb0",
      "original_commit_id": "e0d73573a37bf4b519f6f61e5678572d48a64517",
      "in_reply_to_id": 495488051,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addressed in https://github.com/bitcoin/bitcoin/pull/20033",
      "created_at": "2020-09-29T10:17:26Z",
      "updated_at": "2020-09-29T10:17:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19845#discussion_r496603941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/496603941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19845"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    }
  ]
}