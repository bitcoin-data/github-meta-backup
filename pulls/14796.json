{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796",
    "id": 233287387,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjMzMjg3Mzg3",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14796",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14796.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14796.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14796",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14796/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
    "number": 14796,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "rpc: Pass argument descriptions to RPCHelpMan",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This will normalize the type names and formatting for the rpc arguments",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      },
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-11-23T22:50:40Z",
    "updated_at": "2021-09-08T12:00:06Z",
    "closed_at": "2018-12-05T16:06:24Z",
    "mergeable_state": "unknown",
    "merged_at": "2018-12-05T16:06:24Z",
    "merge_commit_sha": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:Mf1810-rpcHelpMan",
      "ref": "Mf1810-rpcHelpMan",
      "sha": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205775,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:17Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "86ff0413bb8f8173d3b3a1987875ff40b1094926",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 805,
    "deletions": 1036,
    "changed_files": 10,
    "commits": 3,
    "review_comments": 18,
    "comments": 2
  },
  "events": [
    {
      "event": "labeled",
      "id": 1984771186,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5ODQ3NzExODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1984771186",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-23T22:50:48Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 1984771219,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5ODQ3NzEyMTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1984771219",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-23T22:50:52Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "labeled",
      "id": 1984771237,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5ODQ3NzEyMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1984771237",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-23T22:50:56Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "commented",
      "id": 441334578,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMzNDU3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/441334578",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-24T01:03:50Z",
      "updated_at": "2018-11-24T01:03:50Z",
      "author_association": "MEMBER",
      "body": ":clap: ",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#issuecomment-441334578",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14796"
    },
    {
      "event": "commented",
      "id": 441336111,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMzNjExMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/441336111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-24T01:37:59Z",
      "updated_at": "2018-11-30T00:13:56Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14707](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14707.html) ([RPC] Include coinbase transactions in receivedby RPCs by andrewtoth)\n* [#14641](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14641.html) (rpc: Add min_conf option to fund transaction calls by promag)\n* [#14601](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14601.html) ([rpc] Descriptions: Consistent arg labels for types 'object', 'array', 'boolean', and 'string' by ch4ot1c)\n* [#13756](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13756.html) (wallet: \"avoid_reuse\" wallet flag for improved privacy by kallewoof)\n* [#13541](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/13541.html) (wallet/rpc: sendrawtransaction maxfeerate by kallewoof)\n* [#12096](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/12096.html) ([rpc] [wallet] Allow specifying the output index when using bumpfee by kallewoof)\n* [#11484](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11484.html) (Optional update rescan option in importmulti RPC by pedrobranco)\n* [#11413](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/11413.html) ([wallet] [rpc] sendtoaddress/sendmany: Add explicit feerate option by kallewoof)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#issuecomment-441336111",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14796"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1985190665,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4NTE5MDY2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1985190665",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-25T00:20:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1985194197,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4NTE5NDE5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1985194197",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-25T00:37:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1985204265,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4NTIwNDI2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1985204265",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-25T01:24:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1985213280,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4NTIxMzI4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1985213280",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-25T02:09:46Z"
    },
    {
      "event": "reviewed",
      "id": 178097136,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTc4MDk3MTM2",
      "url": null,
      "actor": null,
      "commit_id": "1609da6cb35911a66330c5d343b5920a34631edb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#pullrequestreview-178097136",
      "submitted_at": "2018-11-25T21:04:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
    },
    {
      "event": "reviewed",
      "id": 178097140,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTc4MDk3MTQw",
      "url": null,
      "actor": null,
      "commit_id": "1609da6cb35911a66330c5d343b5920a34631edb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#pullrequestreview-178097140",
      "submitted_at": "2018-11-25T21:04:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1987185045,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4NzE4NTA0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1987185045",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-26T16:02:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1987203128,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4NzIwMzEyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1987203128",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-26T16:08:50Z"
    },
    {
      "event": "labeled",
      "id": 1987318417,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5ODczMTg0MTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1987318417",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-26T16:49:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1987326322,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4NzMyNjMyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1987326322",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-26T16:52:07Z"
    },
    {
      "event": "unlabeled",
      "id": 1987329400,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTk4NzMyOTQwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1987329400",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-26T16:53:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 1990490841,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5OTA0OTA4NDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1990490841",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-27T19:04:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGIwMDk2ZjYxNjgwZDJiMmE5Y2ZlNDU0MTU0ZGUzYWQxMjFhOWQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "tree": {
        "sha": "0c6e79b59ed1822cf86ac97866d0c67a2aea29b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c6e79b59ed1822cf86ac97866d0c67a2aea29b8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c119b27551f56db72bfbdb9ed632b4deb19e161",
          "sha": "8c119b27551f56db72bfbdb9ed632b4deb19e161",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8c119b27551f56db72bfbdb9ed632b4deb19e161"
        }
      ],
      "message": "rpc: Pass argument descriptions to RPCHelpMan",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-11-27T19:18:19Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-11-23T16:21:38Z"
      },
      "sha": "1db0096f61680d2b2a9cfe454154de3ad121a9d3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1990523044,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk5MDUyMzA0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1990523044",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-27T19:18:40Z"
    },
    {
      "event": "unlabeled",
      "id": 1990607184,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTk5MDYwNzE4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1990607184",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-27T19:54:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 180968011,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgwOTY4MDEx",
      "url": null,
      "actor": null,
      "commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 1db0096f61680d2b2a9cfe454154de3ad121a9d3. Verified output using hack from https://github.com/bitcoin/bitcoin/pull/14726#pullrequestreview-175423309.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#pullrequestreview-180968011",
      "submitted_at": "2018-12-03T22:24:21Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2004904053,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjAwNDkwNDA1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2004904053",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-04T17:06:04Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWZkMDQwZjczMjEyOTRkNWU0MzM1Yjk1ODFhNmJkNDZhNzE0YzM3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafd040f7321294d5e4335b9581a6bd46a714c37",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fafd040f7321294d5e4335b9581a6bd46a714c37",
      "tree": {
        "sha": "773622c99501bb0412b336ae757e797cd430064d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/773622c99501bb0412b336ae757e797cd430064d"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 773622c99501bb0412b336ae757e797cd430064d\nparent 1db0096f61680d2b2a9cfe454154de3ad121a9d3\nauthor MarcoFalke <falke.marco@gmail.com> 1543942786 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1543943173 -0500\n\nrpc: Add description to fundrawtransaction vout_index\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcBrQFAAoJEM4rdWl+aaVIsnkMAKhfN2vKOzgBVjMjuHJs/wPq\nFHdWe8VMjy7lNIyXkgozgdRIUq9ZhRdVPtXRMdQfu9Sjqv7TYKqCCyl5fVP8aZOS\nRgOjLuo6YXOxyTX9Xfk3iWvtAhykvGGtGX43XNn7R7y5NBvGyR/rJPR+wgepBAHX\nM2zOsI5YA5Lf9v+hwRY/2guDL7f8YMA2y2fMAg9GJ1j2Gj225SklQgaiNgluXkp2\nKPVzi18B7259ga1VFlXlByxVLQMxOoTT0V87jXZNs1cCDQEfKHR6iqhcBlB3EjFi\n1JbIDiRgp0CVnfHnNsU6XS8Opeljo9C5U1K8Y+1iNitjZDlXBWQNROGHu09kHVaR\nUjfh7FBFcVDE419lJASKI+m/wOVfWoAiMYCh2utWEyGSrf5eWTXVxdTKIumTajVU\nBG5fc5c2tid8I/N2JjraXcOptOG5aFdpE/T8UMfeQzE1c2VcTTKCxwbWma68gpBL\neZBj0Sj4Xw8r7o9ikTDMlNkMQIc8pLNrG/qcMfH/0g==\n=ILtC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1db0096f61680d2b2a9cfe454154de3ad121a9d3",
          "sha": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1db0096f61680d2b2a9cfe454154de3ad121a9d3"
        }
      ],
      "message": "rpc: Add description to fundrawtransaction vout_index",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-04T17:06:13Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-04T16:59:46Z"
      },
      "sha": "fafd040f7321294d5e4335b9581a6bd46a714c37"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2004904897,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjAwNDkwNDg5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2004904897",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-04T17:06:21Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJjYTQyYzY4ZWU0Y2RmZjA4ZDMwZTkxNDEyY2NmMWRlNmQ3YjQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "tree": {
        "sha": "aeaab7e7d2bbba758858daa52f7b91580a8c6636",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aeaab7e7d2bbba758858daa52f7b91580a8c6636"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree aeaab7e7d2bbba758858daa52f7b91580a8c6636\nparent fafd040f7321294d5e4335b9581a6bd46a714c37\nauthor MarcoFalke <falke.marco@gmail.com> 1543948206 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1543949269 -0500\n\nRPCHelpMan: Add space after colons in extended description\n\nAlso, add doxygen comment to ToDescriptionString\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcBsvVAAoJEM4rdWl+aaVIQ5gL/j1ereYhhL2TZZaxABtQRJ0q\nbVlQrctUve8VlLOCWnlH9dDE9YXFYufpBXnZtpkg4ZzcEaIaMkGBAjTRFrZmb+xW\nw0qBMaS9IOu68GkAEk2UL3Re4iOj/FtGngzcx9fmg01hYzMf/zZ9MS1Xf7bh0KNK\nstcgCXr57yvboQey2u31eU1EQYqenT6yQC98yWyiAQFmzOlM3WF9J4mRj50DFtyP\n1w//EmYIY1M/ep2RLkQEU9bsPd+ChYemgMxfhpSPY15JnOIbhW328NR5aEGX3B/W\nIq/NWTIk20xwKQWY3yylpqd+ixSuqXPdj0iTr3SXdWnJFcdZ3VLbea+3AI8L8Wfy\nMnokLfnKkhz9KF9if/c8sTeiGB5paQL7IiqPpfWTexv9ruXqGcY3asj+QfwrRozP\nY3UuxzF6WVLu+VuWbZ0Vgo1ULgWkKFQWyGiX2ygbSU9nNLQpGR+hU3Cmr9tbPmx2\nRmIrajNwRxZuOysPa5vqEsBMrSNUgY2c4vULUfTS1g==\n=HAJm\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafd040f7321294d5e4335b9581a6bd46a714c37",
          "sha": "fafd040f7321294d5e4335b9581a6bd46a714c37",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fafd040f7321294d5e4335b9581a6bd46a714c37"
        }
      ],
      "message": "RPCHelpMan: Add space after colons in extended description\n\nAlso, add doxygen comment to ToDescriptionString",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-04T18:47:49Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-12-04T18:30:06Z"
      },
      "sha": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2005153518,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjAwNTE1MzUxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2005153518",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-04T18:48:03Z"
    },
    {
      "event": "reviewed",
      "id": 181469196,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgxNDY5MTk2",
      "url": null,
      "actor": null,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK fabca42c68ee4cdff08d30e91412ccf1de6d7b41. Only changes since last review are adding `vout_index` description (should maybe be followed up by removing redundant text from `subtractFeeFromOutputs` description), adding space after colon in json formatting, and adding some code comments.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#pullrequestreview-181469196",
      "submitted_at": "2018-12-04T20:42:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
    },
    {
      "event": "merged",
      "id": 2007542484,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjAwNzU0MjQ4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2007542484",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "created_at": "2018-12-05T16:06:24Z"
    },
    {
      "event": "closed",
      "id": 2007542486,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjAwNzU0MjQ4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2007542486",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-05T16:06:24Z"
    },
    {
      "event": "referenced",
      "id": 2007542931,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIwMDc1NDI5MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2007542931",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e2c473ff75f9ec272ab23e0ee30728b72aecd8f2",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2c473ff75f9ec272ab23e0ee30728b72aecd8f2",
      "created_at": "2018-12-05T16:06:33Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 2007545363,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQyMDA3NTQ1MzYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2007545363",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-05T16:07:19Z"
    },
    {
      "event": "referenced",
      "id": 3227897780,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMjc4OTc3ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3227897780",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "578deeb08e19957433661c31d5c250c34b861034",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/578deeb08e19957433661c31d5c250c34b861034",
      "created_at": "2020-04-13T17:35:07Z"
    },
    {
      "event": "referenced",
      "id": 3232395784,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzIzOTU3ODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3232395784",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "969731122b25481f237eaad32d9ad2386ac0cf32",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/969731122b25481f237eaad32d9ad2386ac0cf32",
      "created_at": "2020-04-14T18:35:07Z"
    },
    {
      "event": "referenced",
      "id": 3232450339,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzI0NTAzMzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3232450339",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f7eb5edff8aae786ed2b649eba776dc6bc2878e5",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/f7eb5edff8aae786ed2b649eba776dc6bc2878e5",
      "created_at": "2020-04-14T18:50:07Z"
    },
    {
      "event": "referenced",
      "id": 3232450343,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzI0NTAzNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3232450343",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3413afd1ce58d72ae1bbb9b3be8664e30292262c",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/3413afd1ce58d72ae1bbb9b3be8664e30292262c",
      "created_at": "2020-04-14T18:50:07Z"
    },
    {
      "event": "referenced",
      "id": 3232504875,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzI1MDQ4NzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3232504875",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b17d1db1baaf34e8eb0df3bb5090af95780e6635",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/b17d1db1baaf34e8eb0df3bb5090af95780e6635",
      "created_at": "2020-04-14T19:05:07Z"
    },
    {
      "event": "referenced",
      "id": 3236614045,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzY2MTQwNDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3236614045",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5850294bc6e7248a75e547df96f6c5e018bc435c",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/5850294bc6e7248a75e547df96f6c5e018bc435c",
      "created_at": "2020-04-15T17:50:10Z"
    },
    {
      "event": "referenced",
      "id": 3236667337,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzY2NjczMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3236667337",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c69d41b2bc44d190dd3d115303024c5e222368fa",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/c69d41b2bc44d190dd3d115303024c5e222368fa",
      "created_at": "2020-04-15T18:05:06Z"
    },
    {
      "event": "referenced",
      "id": 3236719043,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzY3MTkwNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3236719043",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b8e343ee301f07ae7b2a90704f4ccdefb295b7a1",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/b8e343ee301f07ae7b2a90704f4ccdefb295b7a1",
      "created_at": "2020-04-15T18:20:06Z"
    },
    {
      "event": "referenced",
      "id": 3237225310,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzcyMjUzMTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237225310",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "245bf8cc7f0abe52092911f6e9e319c24aa542f9",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/245bf8cc7f0abe52092911f6e9e319c24aa542f9",
      "created_at": "2020-04-15T20:50:09Z"
    },
    {
      "event": "referenced",
      "id": 3237476189,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzc0NzYxODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237476189",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a0950966fd8578ac25f54eadcefd27daf103a6f7",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/a0950966fd8578ac25f54eadcefd27daf103a6f7",
      "created_at": "2020-04-15T22:20:07Z"
    },
    {
      "event": "referenced",
      "id": 3237509541,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzc1MDk1NDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237509541",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "02ab89366a5a6623835b65038544e4e061b44031",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/02ab89366a5a6623835b65038544e4e061b44031",
      "created_at": "2020-04-15T22:35:07Z"
    },
    {
      "event": "locked",
      "id": 5271832021,
      "node_id": "LOE_lADOABII584W4m5tzwAAAAE6OcXV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271832021",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:00:06Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236089980",
      "pull_request_review_id": 178097136,
      "id": 236089980,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA4OTk4MA==",
      "diff_hunk": "@@ -129,10 +129,124 @@ UniValue DescribeAddress(const CTxDestination& dest)\n     return boost::apply_visitor(DescribeAddressVisitor(), dest);\n }\n \n+struct Section {\n+    Section(const std::string& left, const std::string& right)\n+        : m_left{left}, m_right{right} {}\n+    const std::string m_left;\n+    const std::string m_right;\n+};\n+\n+struct Sections {\n+    std::vector<Section> m_sections;\n+    size_t m_max_pad{0};\n+\n+    void PushSection(const Section& s)\n+    {\n+        m_max_pad = std::max(m_max_pad, s.m_left.size());\n+        m_sections.push_back(s);\n+    }\n+\n+    enum class OuterType {\n+        ARR,\n+        OBJ,\n+        NAMED_ARG, // Only set on first recursion\n+    };\n+\n+    void Push(const RPCArg& arg, const size_t current_indent = 5, const OuterType outer_type = OuterType::NAMED_ARG)\n+    {\n+        const auto indent = std::string(current_indent, ' ');\n+        const auto indent_next = std::string(current_indent + 2, ' ');\n+        switch (arg.m_type) {\n+        case RPCArg::Type::STR_HEX:\n+        case RPCArg::Type::STR:\n+        case RPCArg::Type::NUM:\n+        case RPCArg::Type::AMOUNT:\n+        case RPCArg::Type::BOOL: {\n+            if (outer_type == OuterType::NAMED_ARG) return; // Nothing more to do for non-recursive types on first recursion\n+            auto left = indent;\n+            if (arg.m_type_str.size() != 0 && outer_type == OuterType::OBJ) {\n+                left += \"\\\"\" + arg.m_name + \"\\\":\" + arg.m_type_str.at(0);\n+            } else {\n+                left += outer_type == OuterType::OBJ ? arg.ToStringObj() : arg.ToString();\n+            }\n+            left += \",\";\n+            PushSection({left, arg.ToDescriptionString(/* implicitly_required */ outer_type == OuterType::ARR)});\n+            break;\n+        }\n+        case RPCArg::Type::OBJ:\n+        case RPCArg::Type::OBJ_USER_KEYS: {\n+            const auto right = outer_type == OuterType::NAMED_ARG ? \"\" : arg.ToDescriptionString(/* implicitly_required */ outer_type == OuterType::ARR);\n+            PushSection({indent + \"{\", right});\n+            for (const auto& arg : arg.m_inner) {",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1609da6cb35911a66330c5d343b5920a34631edb",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shadows `const RPCArg& arg` :-)",
      "created_at": "2018-11-25T21:04:49Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r236089980",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236089980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 180,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236089985",
      "pull_request_review_id": 178097140,
      "id": 236089985,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjA4OTk4NQ==",
      "diff_hunk": "@@ -129,10 +129,124 @@ UniValue DescribeAddress(const CTxDestination& dest)\n     return boost::apply_visitor(DescribeAddressVisitor(), dest);\n }\n \n+struct Section {\n+    Section(const std::string& left, const std::string& right)\n+        : m_left{left}, m_right{right} {}\n+    const std::string m_left;\n+    const std::string m_right;\n+};\n+\n+struct Sections {\n+    std::vector<Section> m_sections;\n+    size_t m_max_pad{0};\n+\n+    void PushSection(const Section& s)\n+    {\n+        m_max_pad = std::max(m_max_pad, s.m_left.size());\n+        m_sections.push_back(s);\n+    }\n+\n+    enum class OuterType {\n+        ARR,\n+        OBJ,\n+        NAMED_ARG, // Only set on first recursion\n+    };\n+\n+    void Push(const RPCArg& arg, const size_t current_indent = 5, const OuterType outer_type = OuterType::NAMED_ARG)\n+    {\n+        const auto indent = std::string(current_indent, ' ');\n+        const auto indent_next = std::string(current_indent + 2, ' ');\n+        switch (arg.m_type) {\n+        case RPCArg::Type::STR_HEX:\n+        case RPCArg::Type::STR:\n+        case RPCArg::Type::NUM:\n+        case RPCArg::Type::AMOUNT:\n+        case RPCArg::Type::BOOL: {\n+            if (outer_type == OuterType::NAMED_ARG) return; // Nothing more to do for non-recursive types on first recursion\n+            auto left = indent;\n+            if (arg.m_type_str.size() != 0 && outer_type == OuterType::OBJ) {\n+                left += \"\\\"\" + arg.m_name + \"\\\":\" + arg.m_type_str.at(0);\n+            } else {\n+                left += outer_type == OuterType::OBJ ? arg.ToStringObj() : arg.ToString();\n+            }\n+            left += \",\";\n+            PushSection({left, arg.ToDescriptionString(/* implicitly_required */ outer_type == OuterType::ARR)});\n+            break;\n+        }\n+        case RPCArg::Type::OBJ:\n+        case RPCArg::Type::OBJ_USER_KEYS: {\n+            const auto right = outer_type == OuterType::NAMED_ARG ? \"\" : arg.ToDescriptionString(/* implicitly_required */ outer_type == OuterType::ARR);\n+            PushSection({indent + \"{\", right});\n+            for (const auto& arg : arg.m_inner) {\n+                Push(arg, current_indent + 2, OuterType::OBJ);\n+            }\n+            if (arg.m_type != RPCArg::Type::OBJ) {\n+                PushSection({indent_next + \"...\", \"\"});\n+            }\n+            PushSection({indent + \"}\" + (outer_type != OuterType::NAMED_ARG ? \",\" : \"\"), \"\"});\n+            break;\n+        }\n+        case RPCArg::Type::ARR: {\n+            auto left = indent;\n+            left += outer_type == OuterType::OBJ ? \"\\\"\" + arg.m_name + \"\\\":\" : \"\";\n+            left += \"[\";\n+            const auto right = outer_type == OuterType::NAMED_ARG ? \"\" : arg.ToDescriptionString(/* implicitly_required */ outer_type == OuterType::ARR);\n+            PushSection({left, right});\n+            for (const auto& arg : arg.m_inner) {",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1609da6cb35911a66330c5d343b5920a34631edb",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here.",
      "created_at": "2018-11-25T21:04:58Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r236089985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236089985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236317854",
      "pull_request_review_id": 178368691,
      "id": 236317854,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjMxNzg1NA==",
      "diff_hunk": "@@ -129,10 +129,124 @@ UniValue DescribeAddress(const CTxDestination& dest)\n     return boost::apply_visitor(DescribeAddressVisitor(), dest);\n }\n \n+struct Section {\n+    Section(const std::string& left, const std::string& right)\n+        : m_left{left}, m_right{right} {}\n+    const std::string m_left;\n+    const std::string m_right;\n+};\n+\n+struct Sections {\n+    std::vector<Section> m_sections;\n+    size_t m_max_pad{0};\n+\n+    void PushSection(const Section& s)\n+    {\n+        m_max_pad = std::max(m_max_pad, s.m_left.size());\n+        m_sections.push_back(s);\n+    }\n+\n+    enum class OuterType {\n+        ARR,\n+        OBJ,\n+        NAMED_ARG, // Only set on first recursion\n+    };\n+\n+    void Push(const RPCArg& arg, const size_t current_indent = 5, const OuterType outer_type = OuterType::NAMED_ARG)\n+    {\n+        const auto indent = std::string(current_indent, ' ');\n+        const auto indent_next = std::string(current_indent + 2, ' ');\n+        switch (arg.m_type) {\n+        case RPCArg::Type::STR_HEX:\n+        case RPCArg::Type::STR:\n+        case RPCArg::Type::NUM:\n+        case RPCArg::Type::AMOUNT:\n+        case RPCArg::Type::BOOL: {\n+            if (outer_type == OuterType::NAMED_ARG) return; // Nothing more to do for non-recursive types on first recursion\n+            auto left = indent;\n+            if (arg.m_type_str.size() != 0 && outer_type == OuterType::OBJ) {\n+                left += \"\\\"\" + arg.m_name + \"\\\":\" + arg.m_type_str.at(0);\n+            } else {\n+                left += outer_type == OuterType::OBJ ? arg.ToStringObj() : arg.ToString();\n+            }\n+            left += \",\";\n+            PushSection({left, arg.ToDescriptionString(/* implicitly_required */ outer_type == OuterType::ARR)});\n+            break;\n+        }\n+        case RPCArg::Type::OBJ:\n+        case RPCArg::Type::OBJ_USER_KEYS: {\n+            const auto right = outer_type == OuterType::NAMED_ARG ? \"\" : arg.ToDescriptionString(/* implicitly_required */ outer_type == OuterType::ARR);\n+            PushSection({indent + \"{\", right});\n+            for (const auto& arg : arg.m_inner) {\n+                Push(arg, current_indent + 2, OuterType::OBJ);\n+            }\n+            if (arg.m_type != RPCArg::Type::OBJ) {\n+                PushSection({indent_next + \"...\", \"\"});\n+            }\n+            PushSection({indent + \"}\" + (outer_type != OuterType::NAMED_ARG ? \",\" : \"\"), \"\"});\n+            break;\n+        }\n+        case RPCArg::Type::ARR: {\n+            auto left = indent;\n+            left += outer_type == OuterType::OBJ ? \"\\\"\" + arg.m_name + \"\\\":\" : \"\";\n+            left += \"[\";\n+            const auto right = outer_type == OuterType::NAMED_ARG ? \"\" : arg.ToDescriptionString(/* implicitly_required */ outer_type == OuterType::ARR);\n+            PushSection({left, right});\n+            for (const auto& arg : arg.m_inner) {",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1609da6cb35911a66330c5d343b5920a34631edb",
      "in_reply_to_id": 236089985,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thx. Fixed both",
      "created_at": "2018-11-26T16:09:50Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r236317854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236317854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238427969",
      "pull_request_review_id": 180968011,
      "id": 238427969,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQyNzk2OQ==",
      "diff_hunk": "@@ -4184,99 +3999,64 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n                 \"\\nCreates and funds a transaction in the Partially Signed Transaction format. Inputs will be added if supplied inputs are not enough\\n\"\n                 \"Implements the Creator and Updater roles.\\n\",\n                 {\n-                    {\"inputs\", RPCArg::Type::ARR,\n+                    {\"inputs\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"A json array of json objects\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ false, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"txid\", RPCArg::Type::STR_HEX, false},\n-                                    {\"vout\", RPCArg::Type::NUM, false},\n-                                    {\"sequence\", RPCArg::Type::NUM, false},\n+                                    {\"txid\", RPCArg::Type::STR_HEX, /* opt */ false, /* default_val */ \"\", \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"The output number\"},\n+                                    {\"sequence\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"The sequence number\"},\n                                 },\n-                                false},\n+                            },\n+                        },\n                         },\n-                        false},\n-                    {\"outputs\", RPCArg::Type::ARR,\n+                    {\"outputs\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"a json array with outputs (key-value pairs).\\n\"\n+                            \"For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n+                            \"                             accepted as second parameter.\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"address\", RPCArg::Type::AMOUNT, true},\n+                                    {\"address\", RPCArg::Type::AMOUNT, /* opt */ true, /* default_val */ \"\", \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT + \"\"},\n                                 },\n-                                true},\n-                            {\"\", RPCArg::Type::OBJ,\n-                                {\n-                                    {\"data\", RPCArg::Type::STR_HEX, true},\n                                 },\n-                                true},\n-                        },\n-                        false},\n-                    {\"locktime\", RPCArg::Type::NUM, true},\n-                    {\"options\", RPCArg::Type::OBJ,\n-                        {\n-                            {\"changeAddress\", RPCArg::Type::STR_HEX, true},\n-                            {\"changePosition\", RPCArg::Type::NUM, true},\n-                            {\"change_type\", RPCArg::Type::STR, true},\n-                            {\"includeWatching\", RPCArg::Type::BOOL, true},\n-                            {\"lockUnspents\", RPCArg::Type::BOOL, true},\n-                            {\"feeRate\", RPCArg::Type::AMOUNT, true},\n-                            {\"subtractFeeFromOutputs\", RPCArg::Type::ARR,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"int\", RPCArg::Type::NUM, true},\n+                                    {\"data\", RPCArg::Type::STR_HEX, /* opt */ true, /* default_val */ \"\", \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},\n                                 },\n-                                true},\n-                            {\"replaceable\", RPCArg::Type::BOOL, true},\n-                            {\"conf_target\", RPCArg::Type::NUM, true},\n-                            {\"estimate_mode\", RPCArg::Type::STR, true},\n+                            },\n                         },\n-                        true, \"options\"},\n-                    {\"bip32derivs\", RPCArg::Type::BOOL, true},\n-                }}\n-                .ToString() +\n-                            \"\\nArguments:\\n\"\n-                            \"1. \\\"inputs\\\"                (array, required) A json array of json objects\\n\"\n-                            \"     [\\n\"\n-                            \"       {\\n\"\n-                            \"         \\\"txid\\\":\\\"id\\\",      (string, required) The transaction id\\n\"\n-                            \"         \\\"vout\\\":n,         (numeric, required) The output number\\n\"\n-                            \"         \\\"sequence\\\":n      (numeric, optional) The sequence number\\n\"\n-                            \"       } \\n\"\n-                            \"       ,...\\n\"\n-                            \"     ]\\n\"\n-                            \"2. \\\"outputs\\\"               (array, required) a json array with outputs (key-value pairs)\\n\"\n-                            \"   [\\n\"\n-                            \"    {\\n\"\n-                            \"      \\\"address\\\": x.xxx,    (obj, optional) A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT + \"\\n\"\n-                            \"    },\\n\"\n-                            \"    {\\n\"\n-                            \"      \\\"data\\\": \\\"hex\\\"        (obj, optional) A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\\n\"\n-                            \"    }\\n\"\n-                            \"    ,...                     More key-value pairs of the above form. For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n-                            \"                             accepted as second parameter.\\n\"\n-                            \"   ]\\n\"\n-                            \"3. locktime                  (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n-                            \"                             Allows this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\\n\"\n-                            \"4. options                 (object, optional)\\n\"\n-                            \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"          (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n-                            \"     \\\"changePosition\\\"         (numeric, optional, default random) The index of the change output\\n\"\n-                            \"     \\\"change_type\\\"            (string, optional) The output type to use. Only valid if changeAddress is not specified. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\". Default is set by -changetype.\\n\"\n-                            \"     \\\"includeWatching\\\"        (boolean, optional, default false) Also select inputs which are watch only\\n\"\n-                            \"     \\\"lockUnspents\\\"           (boolean, optional, default false) Lock selected unspent outputs\\n\"\n-                            \"     \\\"feeRate\\\"                (numeric, optional, default not set: makes wallet determine the fee) Set a specific fee rate in \" + CURRENCY_UNIT + \"/kB\\n\"\n-                            \"     \\\"subtractFeeFromOutputs\\\" (array, optional) A json array of integers.\\n\"\n+                    },\n+                    {\"locktime\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"0\", \"Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n+                            \"                             Allows this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\"},\n+                    {\"options\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n+                        {\n+                            {\"changeAddress\", RPCArg::Type::STR_HEX, /* opt */ true, /* default_val */ \"pool address\", \"The bitcoin address to receive the change\"},\n+                            {\"changePosition\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"random\", \"The index of the change output\"},\n+                            {\"change_type\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"\", \"The output type to use. Only valid if changeAddress is not specified. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\". Default is set by -changetype.\"},\n+                            {\"includeWatching\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Also select inputs which are watch only\"},\n+                            {\"lockUnspents\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Lock selected unspent outputs\"},\n+                            {\"feeRate\", RPCArg::Type::AMOUNT, /* opt */ true, /* default_val */ \"not set: makes wallet determine the fee\", \"Set a specific fee rate in \" + CURRENCY_UNIT + \"/kB\"},\n+                            {\"subtractFeeFromOutputs\", RPCArg::Type::ARR, /* opt */ true, /* default_val */ \"\", \"A json array of integers.\\n\"\n                             \"                              The fee will be equally deducted from the amount of each specified output.\\n\"\n                             \"                              The outputs are specified by their zero-based index, before any change output is added.\\n\"\n                             \"                              Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n-                            \"                              If no outputs are specified here, the sender pays the fee.\\n\"\n-                            \"                                  [vout_index,...]\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 1076,
      "original_position": 1076,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "New help seems little strange with vout_index on its own line and with no description.\r\n\r\n```\r\n       \"subtractFeeFromOutputs\":[    (json array, optional) A json array of integers.\r\n                                     The fee will be equally deducted from the amount of each specified output.\r\n                                     The outputs are specified by their zero-based index, before any change output is added.\r\n                                     Those recipients will receive less bitcoins than you enter in their corresponding amount field.\r\n                                     If no outputs are specified here, the sender pays the fee.\r\n         vout_index,                 (numeric)\r\n         ...\r\n       ],\r\n```\r\n\r\nMaybe vout_index should be given a description like \"The zero-based output index, before a change output is added\"",
      "created_at": "2018-12-03T20:38:53Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238427969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238427969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4270,
      "original_line": 4270,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238436189",
      "pull_request_review_id": 180968011,
      "id": 238436189,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQzNjE4OQ==",
      "diff_hunk": "@@ -1127,57 +1103,49 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     if (mainRequest.fHelp || mainRequest.params.size() < 1 || mainRequest.params.size() > 2)\n         throw std::runtime_error(\n             RPCHelpMan{\"importmulti\",\n-                \"\\nImport addresses/scripts (with private or public keys, redeem script (P2SH)), rescanning all addresses in one-shot-only (rescan can be disabled via options). Requires a new wallet backup.\\n\\n\",\n+                \"\\nImport addresses/scripts (with private or public keys, redeem script (P2SH)), rescanning all addresses in one-shot-only (rescan can be disabled via options). Requires a new wallet backup.\\n\",\n                 {\n-                    {\"requests\", RPCArg::Type::ARR,\n+                    {\"requests\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"Data to be imported\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ false, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\n-                                        {\"scriptPubKey\", RPCArg::Type::STR, false},\n-                                        {\"timestamp\", RPCArg::Type::NUM, false},\n-                                        {\"redeemscript\", RPCArg::Type::STR, true},\n-                                        {\"witnessscript\", RPCArg::Type::STR, true},\n-                                        {\"internal\", RPCArg::Type::BOOL, true},\n-                                        {\"watchonly\", RPCArg::Type::BOOL, true},\n-                                        {\"label\", RPCArg::Type::STR, true},\n+                                    {\"scriptPubKey\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"Type of scriptPubKey (string for script, json for address)\",\n+                                        /* oneline_description */ \"\", {\"\\\"<script>\\\" | { \\\"address\\\":\\\"<address>\\\" }\", \"string / json\"}\n+                                    },\n+                                    {\"timestamp\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"Creation time of the key in seconds since epoch (Jan 1 1970 GMT),\\n\"\n+        \"                                                              or the string \\\"now\\\" to substitute the current synced blockchain time. The timestamp of the oldest\\n\"\n+        \"                                                              key will determine how far back blockchain rescans need to begin for missing wallet transactions.\\n\"\n+        \"                                                              \\\"now\\\" can be specified to bypass scanning, for keys which are known to never have been used, and\\n\"\n+        \"                                                              0 can be specified to scan the entire blockchain. Blocks up to 2 hours before the earliest key\\n\"\n+        \"                                                              creation time of all keys being imported by the importmulti call will be scanned.\",\n+                                        /* oneline_description */ \"\", {\"timestamp | \\\"now\\\"\", \"integer / string\"}\n+                                    },\n+                                    {\"redeemscript\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"\", \"Allowed only if the scriptPubKey is a P2SH or P2SH-P2WSH address/scriptPubKey\"},\n+                                    {\"witnessscript\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"\", \"Allowed only if the scriptPubKey is a P2SH-P2WSH or P2WSH address/scriptPubKey\"},\n+                                    {\"pubkeys\", RPCArg::Type::ARR, /* opt */ true, /* default_val */ \"\", \"Array of strings giving pubkeys that must occur in the output or redeemscript\",\n+                                        {\n+                                            {\"pubKey\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"\"},\n+                                        }\n+                                    },\n+                                    {\"keys\", RPCArg::Type::ARR, /* opt */ true, /* default_val */ \"\", \"Array of strings giving private keys whose corresponding public keys must occur in the output or redeemscript\",\n+                                        {\n+                                            {\"key\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"\"},\n+                                        }\n                                     },\n+                                    {\"internal\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Stating whether matching outputs should be treated as not incoming payments aka change\"},\n+                                    {\"watchonly\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Stating whether matching outputs should be considered watched even when they're not spendable, only allowed if keys are empty\"},\n+                                    {\"label\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"''\", \"Label to assign to the address, only allowed with internal=false\"},\n                                 },\n-                                false},\n+                            },\n                         },\n-                        false, \"\\\"requests\\\"\"},\n-                    {\"options\", RPCArg::Type::OBJ,\n+                        \"\\\"requests\\\"\"},\n+                    {\"options\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                         {\n-                            {\"rescan\", RPCArg::Type::BOOL, true},\n+                            {\"rescan\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"true\", \"Stating if should rescan the blockchain after all imports\"},\n                         },\n-                        true, \"\\\"options\\\"\"},\n+                        \"\\\"options\\\"\"},\n                 }}\n                 .ToString() +\n-            \"Arguments:\\n\"",
      "path": "src/wallet/rpcdump.cpp",
      "position": 197,
      "original_position": 197,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Output is changing here as follows:\r\n\r\n```diff\r\n-\"redeemscript\": \"<script>\"  \r\n+\"redeemscript\":\"str\",\r\n```\r\n\r\nBut previous output seems better, and it would be nice if the same pattern could be used in other places.\r\n\r\nThe \"\\<variable>\" notation is nice because it allows distinguishing variable strings from literal strings. The current convention where you're supposed to magically know that \"redeemscript\" is a literal string, while \"str\" is a variable string is unnecessarily confusing, and the confusion is worse in other cases. For example \"height\" from getblockstats is a literal string:\r\n\r\n```\r\n\"height\",     (string) Selected statistic\r\n```\r\n\r\nwhile \"key\" from createmultisig is a variable string:\r\n\r\n```\r\n\"key\",        (string) The hex-encoded public key\r\n```\r\n\r\nAnd \"address\" from createpsbt is a variable string:\r\n\r\n```\r\n \"address\":amount,\r\n```\r\n\r\nWhile \"data\" from createpsbt is a literal string:\r\n\r\n```\r\n\"data\":\"hex\"\r\n```\r\n\r\nAnd of course \"hex\" is a variable string.\r\n\r\nIt would be nicer to show \"redeemscript\", \"\\<script>\", \"height\", \"\\<key>\", \"\\<address>\", \"data\", and \"\\<hex>\" respectively in these cases to make documentation more clear and obvious. And it would be good if RPCHelpMan could help with formatting and maintaining the literal/variable distinction.",
      "created_at": "2018-12-03T21:04:04Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238436189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238436189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1156,
      "original_line": 1156,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238441745",
      "pull_request_review_id": 180968011,
      "id": 238441745,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQ0MTc0NQ==",
      "diff_hunk": "@@ -247,19 +240,15 @@ static UniValue prioritisetransaction(const JSONRPCRequest& request)\n             RPCHelpMan{\"prioritisetransaction\",\n                 \"Accepts the transaction into mined blocks at a higher (or lower) priority\\n\",\n                 {\n-                    {\"txid\", RPCArg::Type::STR, false},\n-                    {\"dummy\", RPCArg::Type::NUM, false},\n-                    {\"fee_delta\", RPCArg::Type::NUM, false},\n-                }}\n-                .ToString() +\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"txid\\\"       (string, required) The transaction id.\\n\"\n-            \"2. dummy          (numeric, optional) API-Compatibility for previous API. Must be zero or null.\\n\"\n-            \"                  DEPRECATED. For forward compatibility use named arguments and omit this parameter.\\n\"\n-            \"3. fee_delta      (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\\n\"\n+                    {\"txid\", RPCArg::Type::STR_HEX, /* opt */ false, /* default_val */ \"\", \"The transaction id.\"},\n+                    {\"dummy\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"API-Compatibility for previous API. Must be zero or null.\\n\"",
      "path": "src/rpc/mining.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Output is:\r\n\r\n```\r\n2. dummy        (numeric, required) API-Compatibility for previous API. Must be zero or null.\r\n```\r\n\r\nShould this say optional instead of required since value can be null?",
      "created_at": "2018-12-03T21:21:08Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238441745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238441745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238448708",
      "pull_request_review_id": 180968011,
      "id": 238448708,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQ0ODcwOA==",
      "diff_hunk": "@@ -1650,59 +1597,38 @@ UniValue createpsbt(const JSONRPCRequest& request)\n                 \"\\nCreates a transaction in the Partially Signed Transaction format.\\n\"\n                 \"Implements the Creator role.\\n\",\n                 {\n-                    {\"inputs\", RPCArg::Type::ARR,\n+                    {\"inputs\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"A json array of json objects\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ false, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"txid\", RPCArg::Type::STR_HEX, false},\n-                                    {\"vout\", RPCArg::Type::NUM, false},\n-                                    {\"sequence\", RPCArg::Type::NUM, true},\n+                                    {\"txid\", RPCArg::Type::STR_HEX, /* opt */ false, /* default_val */ \"\", \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"The output number\"},\n+                                    {\"sequence\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"The sequence number\"},\n                                 },\n-                                false},\n+                                },\n+                        },\n                         },\n-                        false},\n-                    {\"outputs\", RPCArg::Type::ARR,\n+                    {\"outputs\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"a json array with outputs (key-value pairs).\\n\"\n+                            \"For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n+                            \"                             accepted as second parameter.\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"address\", RPCArg::Type::AMOUNT, false},\n+                                    {\"address\", RPCArg::Type::AMOUNT, /* opt */ false, /* default_val */ \"\", \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT},\n                                 },\n-                                true},\n-                            {\"\", RPCArg::Type::OBJ,\n+                                },\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"data\", RPCArg::Type::STR_HEX, false},\n+                                    {\"data\", RPCArg::Type::STR_HEX, /* opt */ false, /* default_val */ \"\", \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 436,
      "original_position": 436,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Output changes as follows:\r\n\r\n```diff\r\n-\"address\": x.xxx\r\n+\"address\":amount,\r\n-\"data\": \"hex\"\r\n+\"data\":\"hex\",\r\n```\r\n\r\nI think it would be a little nicer to keep the spaces after colons. If you look for JSON examples on the internet they tend to include spaces e.g., https://en.wikipedia.org/wiki/JSON#JSON_sample, https://json.org/example.html, and tools like `jq` and javascript devtools also show spaces when pretty printing.\r\n\r\n",
      "created_at": "2018-12-03T21:43:15Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238448708",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238448708"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1622,
      "original_line": 1622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238452498",
      "pull_request_review_id": 180968011,
      "id": 238452498,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQ1MjQ5OA==",
      "diff_hunk": "@@ -43,24 +43,54 @@ struct RPCArg {\n     const Type m_type;\n     const std::vector<RPCArg> m_inner; //!< Only used for arrays or dicts\n     const bool m_optional;\n+    const std::string m_default_value; //!< Only used for optional args\n+    const std::string m_description;\n     const std::string m_oneline_description; //!< Should be empty unless it is supposed to override the auto-generated summary line\n-\n-    RPCArg(const std::string& name, const Type& type, const bool optional, const std::string& oneline_description = \"\")\n-        : m_name{name}, m_type{type}, m_optional{optional}, m_oneline_description{oneline_description}\n+    const std::vector<std::string> m_type_str; //!< Should be empty unless it is supposed to override the auto-generated type strings. Vector length is either 0 or 2, m_type_str.at(0) will override the type of the value in a key-value pair, m_type_str.at(1) will override the type in the argument description.\n+\n+    RPCArg(\n+        const std::string& name,",
      "path": "src/rpc/util.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be more optimal to take strings by value instead of const reference to avoid copying:\r\n\r\n```c++\r\nRPCArg(std::string name) : m_name(std::move(name)) {}\r\n```\r\n\r\nIn general this a better pattern to follow when a function inserts a value into a structure.",
      "created_at": "2018-12-03T21:54:57Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238452498",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238452498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238454099",
      "pull_request_review_id": 180968011,
      "id": 238454099,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQ1NDA5OQ==",
      "diff_hunk": "@@ -43,24 +43,54 @@ struct RPCArg {\n     const Type m_type;\n     const std::vector<RPCArg> m_inner; //!< Only used for arrays or dicts\n     const bool m_optional;\n+    const std::string m_default_value; //!< Only used for optional args\n+    const std::string m_description;\n     const std::string m_oneline_description; //!< Should be empty unless it is supposed to override the auto-generated summary line\n-\n-    RPCArg(const std::string& name, const Type& type, const bool optional, const std::string& oneline_description = \"\")\n-        : m_name{name}, m_type{type}, m_optional{optional}, m_oneline_description{oneline_description}\n+    const std::vector<std::string> m_type_str; //!< Should be empty unless it is supposed to override the auto-generated type strings. Vector length is either 0 or 2, m_type_str.at(0) will override the type of the value in a key-value pair, m_type_str.at(1) will override the type in the argument description.",
      "path": "src/rpc/util.h",
      "position": 10,
      "original_position": 10,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might be more appropriate to use `optional<tuple<string, string>>`",
      "created_at": "2018-12-03T21:59:24Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238454099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238454099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 49,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238454535",
      "pull_request_review_id": 180968011,
      "id": 238454535,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQ1NDUzNQ==",
      "diff_hunk": "@@ -43,24 +43,54 @@ struct RPCArg {\n     const Type m_type;\n     const std::vector<RPCArg> m_inner; //!< Only used for arrays or dicts\n     const bool m_optional;\n+    const std::string m_default_value; //!< Only used for optional args\n+    const std::string m_description;\n     const std::string m_oneline_description; //!< Should be empty unless it is supposed to override the auto-generated summary line\n-\n-    RPCArg(const std::string& name, const Type& type, const bool optional, const std::string& oneline_description = \"\")\n-        : m_name{name}, m_type{type}, m_optional{optional}, m_oneline_description{oneline_description}\n+    const std::vector<std::string> m_type_str; //!< Should be empty unless it is supposed to override the auto-generated type strings. Vector length is either 0 or 2, m_type_str.at(0) will override the type of the value in a key-value pair, m_type_str.at(1) will override the type in the argument description.\n+\n+    RPCArg(\n+        const std::string& name,\n+        const Type& type,\n+        const bool opt,\n+        const std::string& default_val,\n+        const std::string& description,\n+        const std::string& oneline_description = \"\",\n+        const std::vector<std::string>& type_str = {})\n+        : m_name{name},\n+          m_type{type},\n+          m_optional{opt},\n+          m_default_value{default_val},\n+          m_description{description},\n+          m_oneline_description{oneline_description},\n+          m_type_str{type_str}\n     {\n         assert(type != Type::ARR && type != Type::OBJ);\n     }\n \n-    RPCArg(const std::string& name, const Type& type, const std::vector<RPCArg>& inner, const bool optional, const std::string& oneline_description = \"\")\n-        : m_name{name}, m_type{type}, m_inner{inner}, m_optional{optional}, m_oneline_description{oneline_description}\n+    RPCArg(\n+        const std::string& name,\n+        const Type& type,\n+        const bool opt,\n+        const std::string& default_val,\n+        const std::string& description,\n+        const std::vector<RPCArg>& inner,\n+        const std::string& oneline_description = \"\",\n+        const std::vector<std::string>& type_str = {})\n+        : m_name{name},\n+          m_type{type},\n+          m_inner{inner},\n+          m_optional{opt},\n+          m_default_value{default_val},\n+          m_description{description},\n+          m_oneline_description{oneline_description},\n+          m_type_str{type_str}\n     {\n         assert(type == Type::ARR || type == Type::OBJ);\n     }\n \n-    std::string ToString() const;\n-\n-private:\n+    std::string ToString(bool oneline = false) const;\n     std::string ToStringObj() const;\n+    std::string ToDescriptionString(bool implicitly_required = false) const;",
      "path": "src/rpc/util.h",
      "position": 73,
      "original_position": 59,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you add a comment saying what implicitly_required means?",
      "created_at": "2018-12-03T22:00:48Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238454535",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238454535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238456186",
      "pull_request_review_id": 180968011,
      "id": 238456186,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQ1NjE4Ng==",
      "diff_hunk": "@@ -129,10 +129,124 @@ UniValue DescribeAddress(const CTxDestination& dest)\n     return boost::apply_visitor(DescribeAddressVisitor(), dest);\n }\n \n+struct Section {\n+    Section(const std::string& left, const std::string& right)\n+        : m_left{left}, m_right{right} {}\n+    const std::string m_left;\n+    const std::string m_right;\n+};\n+\n+struct Sections {\n+    std::vector<Section> m_sections;\n+    size_t m_max_pad{0};\n+\n+    void PushSection(const Section& s)",
      "path": "src/rpc/util.cpp",
      "position": 15,
      "original_position": 15,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Generally a better pattern anytime you have a function which inserts a value into a larger data structure is to take the argument by value instead of reference, and use std::move() to avoid copying.",
      "created_at": "2018-12-03T22:05:56Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238456186",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238456186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 143,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238459116",
      "pull_request_review_id": 180968011,
      "id": 238459116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODQ1OTExNg==",
      "diff_hunk": "@@ -43,24 +43,54 @@ struct RPCArg {\n     const Type m_type;\n     const std::vector<RPCArg> m_inner; //!< Only used for arrays or dicts\n     const bool m_optional;",
      "path": "src/rpc/util.h",
      "position": 3,
      "original_position": 3,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why keep this member? It seems like keeping it could only lead to inconsistencies or omissions in the  output. It would be easy to define an `bool IsOptional() const { return !m_default.value.empty(); }` helper if needed for convenience.",
      "created_at": "2018-12-03T22:14:54Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238459116",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238459116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238744740",
      "pull_request_review_id": 181361911,
      "id": 238744740,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODc0NDc0MA==",
      "diff_hunk": "@@ -43,24 +43,54 @@ struct RPCArg {\n     const Type m_type;\n     const std::vector<RPCArg> m_inner; //!< Only used for arrays or dicts\n     const bool m_optional;",
      "path": "src/rpc/util.h",
      "position": 3,
      "original_position": 3,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": 238459116,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure, but this will be a follow up pull request, since it needs someone to actually supply the default value when the argument is optional. See also the comment in the cpp file:\r\n\r\n```cpp\r\n// TODO enable this assert, when all optional parameters have their default value documented\r\n//assert(false);",
      "created_at": "2018-12-04T16:44:48Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238744740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238744740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 45,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238750824",
      "pull_request_review_id": 181369755,
      "id": 238750824,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODc1MDgyNA==",
      "diff_hunk": "@@ -4184,99 +3999,64 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n                 \"\\nCreates and funds a transaction in the Partially Signed Transaction format. Inputs will be added if supplied inputs are not enough\\n\"\n                 \"Implements the Creator and Updater roles.\\n\",\n                 {\n-                    {\"inputs\", RPCArg::Type::ARR,\n+                    {\"inputs\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"A json array of json objects\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ false, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"txid\", RPCArg::Type::STR_HEX, false},\n-                                    {\"vout\", RPCArg::Type::NUM, false},\n-                                    {\"sequence\", RPCArg::Type::NUM, false},\n+                                    {\"txid\", RPCArg::Type::STR_HEX, /* opt */ false, /* default_val */ \"\", \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"The output number\"},\n+                                    {\"sequence\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"The sequence number\"},\n                                 },\n-                                false},\n+                            },\n+                        },\n                         },\n-                        false},\n-                    {\"outputs\", RPCArg::Type::ARR,\n+                    {\"outputs\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"a json array with outputs (key-value pairs).\\n\"\n+                            \"For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n+                            \"                             accepted as second parameter.\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"address\", RPCArg::Type::AMOUNT, true},\n+                                    {\"address\", RPCArg::Type::AMOUNT, /* opt */ true, /* default_val */ \"\", \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT + \"\"},\n                                 },\n-                                true},\n-                            {\"\", RPCArg::Type::OBJ,\n-                                {\n-                                    {\"data\", RPCArg::Type::STR_HEX, true},\n                                 },\n-                                true},\n-                        },\n-                        false},\n-                    {\"locktime\", RPCArg::Type::NUM, true},\n-                    {\"options\", RPCArg::Type::OBJ,\n-                        {\n-                            {\"changeAddress\", RPCArg::Type::STR_HEX, true},\n-                            {\"changePosition\", RPCArg::Type::NUM, true},\n-                            {\"change_type\", RPCArg::Type::STR, true},\n-                            {\"includeWatching\", RPCArg::Type::BOOL, true},\n-                            {\"lockUnspents\", RPCArg::Type::BOOL, true},\n-                            {\"feeRate\", RPCArg::Type::AMOUNT, true},\n-                            {\"subtractFeeFromOutputs\", RPCArg::Type::ARR,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"int\", RPCArg::Type::NUM, true},\n+                                    {\"data\", RPCArg::Type::STR_HEX, /* opt */ true, /* default_val */ \"\", \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},\n                                 },\n-                                true},\n-                            {\"replaceable\", RPCArg::Type::BOOL, true},\n-                            {\"conf_target\", RPCArg::Type::NUM, true},\n-                            {\"estimate_mode\", RPCArg::Type::STR, true},\n+                            },\n                         },\n-                        true, \"options\"},\n-                    {\"bip32derivs\", RPCArg::Type::BOOL, true},\n-                }}\n-                .ToString() +\n-                            \"\\nArguments:\\n\"\n-                            \"1. \\\"inputs\\\"                (array, required) A json array of json objects\\n\"\n-                            \"     [\\n\"\n-                            \"       {\\n\"\n-                            \"         \\\"txid\\\":\\\"id\\\",      (string, required) The transaction id\\n\"\n-                            \"         \\\"vout\\\":n,         (numeric, required) The output number\\n\"\n-                            \"         \\\"sequence\\\":n      (numeric, optional) The sequence number\\n\"\n-                            \"       } \\n\"\n-                            \"       ,...\\n\"\n-                            \"     ]\\n\"\n-                            \"2. \\\"outputs\\\"               (array, required) a json array with outputs (key-value pairs)\\n\"\n-                            \"   [\\n\"\n-                            \"    {\\n\"\n-                            \"      \\\"address\\\": x.xxx,    (obj, optional) A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT + \"\\n\"\n-                            \"    },\\n\"\n-                            \"    {\\n\"\n-                            \"      \\\"data\\\": \\\"hex\\\"        (obj, optional) A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\\n\"\n-                            \"    }\\n\"\n-                            \"    ,...                     More key-value pairs of the above form. For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n-                            \"                             accepted as second parameter.\\n\"\n-                            \"   ]\\n\"\n-                            \"3. locktime                  (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n-                            \"                             Allows this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\\n\"\n-                            \"4. options                 (object, optional)\\n\"\n-                            \"   {\\n\"\n-                            \"     \\\"changeAddress\\\"          (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n-                            \"     \\\"changePosition\\\"         (numeric, optional, default random) The index of the change output\\n\"\n-                            \"     \\\"change_type\\\"            (string, optional) The output type to use. Only valid if changeAddress is not specified. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\". Default is set by -changetype.\\n\"\n-                            \"     \\\"includeWatching\\\"        (boolean, optional, default false) Also select inputs which are watch only\\n\"\n-                            \"     \\\"lockUnspents\\\"           (boolean, optional, default false) Lock selected unspent outputs\\n\"\n-                            \"     \\\"feeRate\\\"                (numeric, optional, default not set: makes wallet determine the fee) Set a specific fee rate in \" + CURRENCY_UNIT + \"/kB\\n\"\n-                            \"     \\\"subtractFeeFromOutputs\\\" (array, optional) A json array of integers.\\n\"\n+                    },\n+                    {\"locktime\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"0\", \"Raw locktime. Non-0 value also locktime-activates inputs\\n\"\n+                            \"                             Allows this transaction to be replaced by a transaction with higher fees. If provided, it is an error if explicit sequence numbers are incompatible.\"},\n+                    {\"options\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n+                        {\n+                            {\"changeAddress\", RPCArg::Type::STR_HEX, /* opt */ true, /* default_val */ \"pool address\", \"The bitcoin address to receive the change\"},\n+                            {\"changePosition\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"random\", \"The index of the change output\"},\n+                            {\"change_type\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"\", \"The output type to use. Only valid if changeAddress is not specified. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\". Default is set by -changetype.\"},\n+                            {\"includeWatching\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Also select inputs which are watch only\"},\n+                            {\"lockUnspents\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Lock selected unspent outputs\"},\n+                            {\"feeRate\", RPCArg::Type::AMOUNT, /* opt */ true, /* default_val */ \"not set: makes wallet determine the fee\", \"Set a specific fee rate in \" + CURRENCY_UNIT + \"/kB\"},\n+                            {\"subtractFeeFromOutputs\", RPCArg::Type::ARR, /* opt */ true, /* default_val */ \"\", \"A json array of integers.\\n\"\n                             \"                              The fee will be equally deducted from the amount of each specified output.\\n\"\n                             \"                              The outputs are specified by their zero-based index, before any change output is added.\\n\"\n                             \"                              Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n-                            \"                              If no outputs are specified here, the sender pays the fee.\\n\"\n-                            \"                                  [vout_index,...]\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 1076,
      "original_position": 1076,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": 238427969,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2018-12-04T16:59:13Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238750824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238750824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4270,
      "original_line": 4270,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238764895",
      "pull_request_review_id": 181387644,
      "id": 238764895,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODc2NDg5NQ==",
      "diff_hunk": "@@ -1127,57 +1103,49 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     if (mainRequest.fHelp || mainRequest.params.size() < 1 || mainRequest.params.size() > 2)\n         throw std::runtime_error(\n             RPCHelpMan{\"importmulti\",\n-                \"\\nImport addresses/scripts (with private or public keys, redeem script (P2SH)), rescanning all addresses in one-shot-only (rescan can be disabled via options). Requires a new wallet backup.\\n\\n\",\n+                \"\\nImport addresses/scripts (with private or public keys, redeem script (P2SH)), rescanning all addresses in one-shot-only (rescan can be disabled via options). Requires a new wallet backup.\\n\",\n                 {\n-                    {\"requests\", RPCArg::Type::ARR,\n+                    {\"requests\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"Data to be imported\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ false, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\n-                                        {\"scriptPubKey\", RPCArg::Type::STR, false},\n-                                        {\"timestamp\", RPCArg::Type::NUM, false},\n-                                        {\"redeemscript\", RPCArg::Type::STR, true},\n-                                        {\"witnessscript\", RPCArg::Type::STR, true},\n-                                        {\"internal\", RPCArg::Type::BOOL, true},\n-                                        {\"watchonly\", RPCArg::Type::BOOL, true},\n-                                        {\"label\", RPCArg::Type::STR, true},\n+                                    {\"scriptPubKey\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"Type of scriptPubKey (string for script, json for address)\",\n+                                        /* oneline_description */ \"\", {\"\\\"<script>\\\" | { \\\"address\\\":\\\"<address>\\\" }\", \"string / json\"}\n+                                    },\n+                                    {\"timestamp\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"Creation time of the key in seconds since epoch (Jan 1 1970 GMT),\\n\"\n+        \"                                                              or the string \\\"now\\\" to substitute the current synced blockchain time. The timestamp of the oldest\\n\"\n+        \"                                                              key will determine how far back blockchain rescans need to begin for missing wallet transactions.\\n\"\n+        \"                                                              \\\"now\\\" can be specified to bypass scanning, for keys which are known to never have been used, and\\n\"\n+        \"                                                              0 can be specified to scan the entire blockchain. Blocks up to 2 hours before the earliest key\\n\"\n+        \"                                                              creation time of all keys being imported by the importmulti call will be scanned.\",\n+                                        /* oneline_description */ \"\", {\"timestamp | \\\"now\\\"\", \"integer / string\"}\n+                                    },\n+                                    {\"redeemscript\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"\", \"Allowed only if the scriptPubKey is a P2SH or P2SH-P2WSH address/scriptPubKey\"},\n+                                    {\"witnessscript\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"\", \"Allowed only if the scriptPubKey is a P2SH-P2WSH or P2WSH address/scriptPubKey\"},\n+                                    {\"pubkeys\", RPCArg::Type::ARR, /* opt */ true, /* default_val */ \"\", \"Array of strings giving pubkeys that must occur in the output or redeemscript\",\n+                                        {\n+                                            {\"pubKey\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"\"},\n+                                        }\n+                                    },\n+                                    {\"keys\", RPCArg::Type::ARR, /* opt */ true, /* default_val */ \"\", \"Array of strings giving private keys whose corresponding public keys must occur in the output or redeemscript\",\n+                                        {\n+                                            {\"key\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"\"},\n+                                        }\n                                     },\n+                                    {\"internal\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Stating whether matching outputs should be treated as not incoming payments aka change\"},\n+                                    {\"watchonly\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"false\", \"Stating whether matching outputs should be considered watched even when they're not spendable, only allowed if keys are empty\"},\n+                                    {\"label\", RPCArg::Type::STR, /* opt */ true, /* default_val */ \"''\", \"Label to assign to the address, only allowed with internal=false\"},\n                                 },\n-                                false},\n+                            },\n                         },\n-                        false, \"\\\"requests\\\"\"},\n-                    {\"options\", RPCArg::Type::OBJ,\n+                        \"\\\"requests\\\"\"},\n+                    {\"options\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                         {\n-                            {\"rescan\", RPCArg::Type::BOOL, true},\n+                            {\"rescan\", RPCArg::Type::BOOL, /* opt */ true, /* default_val */ \"true\", \"Stating if should rescan the blockchain after all imports\"},\n                         },\n-                        true, \"\\\"options\\\"\"},\n+                        \"\\\"options\\\"\"},\n                 }}\n                 .ToString() +\n-            \"Arguments:\\n\"",
      "path": "src/wallet/rpcdump.cpp",
      "position": 197,
      "original_position": 197,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": 238436189,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should be done in a separate pull request, since it will change most of the existing documentation and this pull request's goal is to normalize all documentation to a single standard.",
      "created_at": "2018-12-04T17:36:00Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238764895",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238764895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1156,
      "original_line": 1156,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238765557",
      "pull_request_review_id": 181388431,
      "id": 238765557,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODc2NTU1Nw==",
      "diff_hunk": "@@ -247,19 +240,15 @@ static UniValue prioritisetransaction(const JSONRPCRequest& request)\n             RPCHelpMan{\"prioritisetransaction\",\n                 \"Accepts the transaction into mined blocks at a higher (or lower) priority\\n\",\n                 {\n-                    {\"txid\", RPCArg::Type::STR, false},\n-                    {\"dummy\", RPCArg::Type::NUM, false},\n-                    {\"fee_delta\", RPCArg::Type::NUM, false},\n-                }}\n-                .ToString() +\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"txid\\\"       (string, required) The transaction id.\\n\"\n-            \"2. dummy          (numeric, optional) API-Compatibility for previous API. Must be zero or null.\\n\"\n-            \"                  DEPRECATED. For forward compatibility use named arguments and omit this parameter.\\n\"\n-            \"3. fee_delta      (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\\n\"\n+                    {\"txid\", RPCArg::Type::STR_HEX, /* opt */ false, /* default_val */ \"\", \"The transaction id.\"},\n+                    {\"dummy\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"API-Compatibility for previous API. Must be zero or null.\\n\"",
      "path": "src/rpc/mining.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": 238441745,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This conflicts the existing one-line summary, so I'd prefer to keep the changes to the documentation minimal and only normalize everything and then do the cleanup in follow up pull requests.\r\n\r\nThis is among the changes I have queued up.",
      "created_at": "2018-12-04T17:37:42Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238765557",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238765557"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238765995",
      "pull_request_review_id": 181389009,
      "id": 238765995,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODc2NTk5NQ==",
      "diff_hunk": "@@ -1650,59 +1597,38 @@ UniValue createpsbt(const JSONRPCRequest& request)\n                 \"\\nCreates a transaction in the Partially Signed Transaction format.\\n\"\n                 \"Implements the Creator role.\\n\",\n                 {\n-                    {\"inputs\", RPCArg::Type::ARR,\n+                    {\"inputs\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"A json array of json objects\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ false, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"txid\", RPCArg::Type::STR_HEX, false},\n-                                    {\"vout\", RPCArg::Type::NUM, false},\n-                                    {\"sequence\", RPCArg::Type::NUM, true},\n+                                    {\"txid\", RPCArg::Type::STR_HEX, /* opt */ false, /* default_val */ \"\", \"The transaction id\"},\n+                                    {\"vout\", RPCArg::Type::NUM, /* opt */ false, /* default_val */ \"\", \"The output number\"},\n+                                    {\"sequence\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"The sequence number\"},\n                                 },\n-                                false},\n+                                },\n+                        },\n                         },\n-                        false},\n-                    {\"outputs\", RPCArg::Type::ARR,\n+                    {\"outputs\", RPCArg::Type::ARR, /* opt */ false, /* default_val */ \"\", \"a json array with outputs (key-value pairs).\\n\"\n+                            \"For compatibility reasons, a dictionary, which holds the key-value pairs directly, is also\\n\"\n+                            \"                             accepted as second parameter.\",\n                         {\n-                            {\"\", RPCArg::Type::OBJ,\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"address\", RPCArg::Type::AMOUNT, false},\n+                                    {\"address\", RPCArg::Type::AMOUNT, /* opt */ false, /* default_val */ \"\", \"A key-value pair. The key (string) is the bitcoin address, the value (float or string) is the amount in \" + CURRENCY_UNIT},\n                                 },\n-                                true},\n-                            {\"\", RPCArg::Type::OBJ,\n+                                },\n+                            {\"\", RPCArg::Type::OBJ, /* opt */ true, /* default_val */ \"\", \"\",\n                                 {\n-                                    {\"data\", RPCArg::Type::STR_HEX, false},\n+                                    {\"data\", RPCArg::Type::STR_HEX, /* opt */ false, /* default_val */ \"\", \"A key-value pair. The key must be \\\"data\\\", the value is hex-encoded data\"},",
      "path": "src/rpc/rawtransaction.cpp",
      "position": 436,
      "original_position": 436,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": 238448708,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point.",
      "created_at": "2018-12-04T17:38:59Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238765995",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238765995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1622,
      "original_line": 1622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238783514",
      "pull_request_review_id": 181411052,
      "id": 238783514,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODc4MzUxNA==",
      "diff_hunk": "@@ -43,24 +43,54 @@ struct RPCArg {\n     const Type m_type;\n     const std::vector<RPCArg> m_inner; //!< Only used for arrays or dicts\n     const bool m_optional;\n+    const std::string m_default_value; //!< Only used for optional args\n+    const std::string m_description;\n     const std::string m_oneline_description; //!< Should be empty unless it is supposed to override the auto-generated summary line\n-\n-    RPCArg(const std::string& name, const Type& type, const bool optional, const std::string& oneline_description = \"\")\n-        : m_name{name}, m_type{type}, m_optional{optional}, m_oneline_description{oneline_description}\n+    const std::vector<std::string> m_type_str; //!< Should be empty unless it is supposed to override the auto-generated type strings. Vector length is either 0 or 2, m_type_str.at(0) will override the type of the value in a key-value pair, m_type_str.at(1) will override the type in the argument description.\n+\n+    RPCArg(\n+        const std::string& name,\n+        const Type& type,\n+        const bool opt,\n+        const std::string& default_val,\n+        const std::string& description,\n+        const std::string& oneline_description = \"\",\n+        const std::vector<std::string>& type_str = {})\n+        : m_name{name},\n+          m_type{type},\n+          m_optional{opt},\n+          m_default_value{default_val},\n+          m_description{description},\n+          m_oneline_description{oneline_description},\n+          m_type_str{type_str}\n     {\n         assert(type != Type::ARR && type != Type::OBJ);\n     }\n \n-    RPCArg(const std::string& name, const Type& type, const std::vector<RPCArg>& inner, const bool optional, const std::string& oneline_description = \"\")\n-        : m_name{name}, m_type{type}, m_inner{inner}, m_optional{optional}, m_oneline_description{oneline_description}\n+    RPCArg(\n+        const std::string& name,\n+        const Type& type,\n+        const bool opt,\n+        const std::string& default_val,\n+        const std::string& description,\n+        const std::vector<RPCArg>& inner,\n+        const std::string& oneline_description = \"\",\n+        const std::vector<std::string>& type_str = {})\n+        : m_name{name},\n+          m_type{type},\n+          m_inner{inner},\n+          m_optional{opt},\n+          m_default_value{default_val},\n+          m_description{description},\n+          m_oneline_description{oneline_description},\n+          m_type_str{type_str}\n     {\n         assert(type == Type::ARR || type == Type::OBJ);\n     }\n \n-    std::string ToString() const;\n-\n-private:\n+    std::string ToString(bool oneline = false) const;\n     std::string ToStringObj() const;\n+    std::string ToDescriptionString(bool implicitly_required = false) const;",
      "path": "src/rpc/util.h",
      "position": 73,
      "original_position": 59,
      "commit_id": "fabca42c68ee4cdff08d30e91412ccf1de6d7b41",
      "original_commit_id": "1db0096f61680d2b2a9cfe454154de3ad121a9d3",
      "in_reply_to_id": 238454535,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is set to true for arguments in an array, because those are commonly omitted in the current help texts.\r\n\r\n* I presume this is because they are implicitly required if you pass an array, but are still optional because you can pass different number of args in. I think it should be clear from context what the interface looks like.",
      "created_at": "2018-12-04T18:28:58Z",
      "updated_at": "2018-12-04T18:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14796#discussion_r238783514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238783514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14796"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 93,
      "side": "RIGHT"
    }
  ]
}