{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
    "id": 1138101751,
    "node_id": "PR_kwDOABII585D1g33",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26593",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26593.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26593.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
    "number": 26593,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "tracing: Only prepare tracepoint arguments when actually tracing",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently, if the tracepoints are compiled (e.g. in depends and release builds), we always prepare the tracepoint arguments regardless of the tracepoints being used or not. We made sure that the argument preparation is as cheap as possible, but we can almost completely eliminate any overhead for users not interested in the tracepoints (the vast majority), by gating the tracepoint argument preparation with an `if(something is attached to this tracepoint)`. To achieve this, we use the optional semaphore feature provided by SystemTap.\r\n\r\nThe first commit simplifies and deduplicates our tracepoint macros from 12 TRACEn macros to a single TRACEPOINT macro. The `TRACE(context, event)` macro (without arguments) is renamed to `TRACEPOINT0(context, event)`. This makes them easier to use and also avoids more duplicate macro definitions in the second commit. These changes should be compatible with https://github.com/bitcoin/bitcoin/pull/25541 and both https://github.com/bitcoin/bitcoin/pull/25832 and https://github.com/bitcoin/bitcoin/pull/26531 should be trivial to rebase and adopt to this.\r\n\r\nThe Linux tracing tools I'm aware of (bcc, bpftrace, libbpf, and systemtap) all support the semaphore gating feature. Thus, all existing tracepoints and their argument preparation is gated in the second commit. For details, please refer to the commit messages and the updated documentation in `doc/tracing.md`.\r\n\r\nAlso adding unit tests that include all tracepoint macros to make sure there are no compiler problems with them (e.g. some varadiac extension not supported). \r\n\r\nReviewers might want to check:\r\n- Do the tracepoints still work for you? Do the examples in `contrib/tracing/` run on your system (as bpftrace frequently breaks on every new version, please test master too if it should't work for you)? Do the CI interface tests still pass?\r\n- Is the new documentation clear? \r\n- As a demonstration that the tracepoint gating works, https://github.com/0xB10C/bitcoin/commit/21774ab9618932a4df68baa36de11c7788adf143 extends the PR branch. Here is the [Cirrus CI output](https://cirrus-ci.com/task/5278617885212672) for the task running the USDT interface tests on this commit. Do you agree that this demonstrates that the semaphore gating works?\r\n- The `TRACEPOINT_SEMAPHORE(event, context)` macros places global variables in our global namespace. Is this something we strictly want to avoid or maybe move to all `TRACEPOINT_SEMAPHORE`s to a separate .cpp file or even namespace? I like having the `TRACEPOINT_SEMAPHORE()` in same file as the `TRACEPOINT()`, but open for suggestion on alternative approaches. \r\n- Are newly added tracepoints in the unit tests visible when using `readelf -n /src/test/test_bitcoin`? You can run the new unit tests with `./src/test/test_bitcoin --run_test=util_trace_tests* --log_level=all`.\r\n\r\nThese links might provide more contextual information for reviewers:\r\n- [How SystemTap Userspace Probes Work by eklitzke](https://eklitzke.org/how-sytemtap-userspace-probes-work) (actually an example on Bitcoin Core; mentions that with semaphores \"the overhead for an untraced process is effectively zero.\")\r\n- [libbpf comment on USDT semaphore handling](https://github.com/libbpf/libbpf/blob/1596a09b5de2a50ab8d44218fc29b6d42f886305/src/usdt.c#L83-L92) (can recommend the whole comment for background on how the tracepoints and tracing tools work together)\r\n- https://sourceware.org/systemtap/wiki/UserSpaceProbeImplementation#Semaphore_Handling",
    "labels": [
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2022-11-28T20:50:26Z",
    "updated_at": "2023-05-19T09:18:51Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "a9b9323a99ca8117de50e5e822c9a94ffb88eeb8",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "0xB10C:2022-11-only-prepare-tracepoint-arguments-when-tracing",
      "ref": "2022-11-only-prepare-tracepoint-arguments-when-tracing",
      "sha": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 184896538,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODQ4OTY1Mzg=",
        "name": "bitcoin",
        "full_name": "0xB10C/bitcoin",
        "owner": {
          "login": "0xB10C",
          "id": 19157360,
          "node_id": "MDQ6VXNlcjE5MTU3MzYw",
          "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/0xB10C",
          "html_url": "https://github.com/0xB10C",
          "followers_url": "https://api.github.com/users/0xB10C/followers",
          "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
          "organizations_url": "https://api.github.com/users/0xB10C/orgs",
          "repos_url": "https://api.github.com/users/0xB10C/repos",
          "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/0xB10C/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/0xB10C/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/0xB10C/bitcoin",
        "archive_url": "https://api.github.com/repos/0xB10C/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/0xB10C/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/0xB10C/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/0xB10C/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/0xB10C/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/0xB10C/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/0xB10C/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/0xB10C/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/0xB10C/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/0xB10C/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/0xB10C/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/0xB10C/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/0xB10C/bitcoin/events",
        "forks_url": "https://api.github.com/repos/0xB10C/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/0xB10C/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/0xB10C/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/0xB10C/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/0xB10C/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/0xB10C/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/0xB10C/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/0xB10C/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/0xB10C/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/0xB10C/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/0xB10C/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/0xB10C/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/0xB10C/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/0xB10C/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/0xB10C/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/0xB10C/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:0xB10C/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/0xB10C/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/0xB10C/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/0xB10C/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/0xB10C/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/0xB10C/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/0xB10C/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/0xB10C/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/0xB10C/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/0xB10C/bitcoin/hooks",
        "svn_url": "https://github.com/0xB10C/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 219975,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:23:02Z",
        "created_at": "2019-05-04T13:11:05Z",
        "updated_at": "2022-08-30T07:36:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "23e2bfcbc42849daa8e2b69f9bbdc526bc8743a7",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:15:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 229,
    "deletions": 105,
    "changed_files": 14,
    "commits": 3,
    "review_comments": 14,
    "comments": 10
  },
  "events": [
    {
      "event": "commented",
      "id": 1329746317,
      "node_id": "IC_kwDOABII585PQlGN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1329746317",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-28T20:50:29Z",
      "updated_at": "2023-05-19T01:46:36Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jb55](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1331016229), [vasild](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1334856799), [kouloumos](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1353541450), [willcl-ark](https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1345973179) |\n| Approach ACK | [virtu](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27458](https://github.com/bitcoin/bitcoin/pull/27458) (build: Detect USDT the same way how it is used in the code by hebasto)\n* [#27407](https://github.com/bitcoin/bitcoin/pull/27407) (net, refactor: Privatise CNode send queue by dergoegge)\n* [#27401](https://github.com/bitcoin/bitcoin/pull/27401) (tracepoints: Disables `-Wgnu-zero-variadic-macro-arguments` to compile without warnings by martinus)\n* [#25541](https://github.com/bitcoin/bitcoin/pull/25541) (tracing: macOS USDT support by kouloumos)\n* [#25273](https://github.com/bitcoin/bitcoin/pull/25273) (wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1329746317",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7906760881,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHXR5ix",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7906760881",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-28T20:54:02Z"
    },
    {
      "event": "reviewed",
      "id": 1196700835,
      "node_id": "PRR_kwDOABII585HVDSj",
      "url": null,
      "actor": null,
      "commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1196700835",
      "submitted_at": "2022-11-28T23:39:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "reviewed",
      "id": 1197254044,
      "node_id": "PRR_kwDOABII585HXKWc",
      "url": null,
      "actor": null,
      "commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1197254044",
      "submitted_at": "2022-11-29T10:08:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7913913585,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHXtLzx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7913913585",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T15:44:52Z"
    },
    {
      "event": "commented",
      "id": 1330914436,
      "node_id": "IC_kwDOABII585PVCSE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1330914436",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T16:28:37Z",
      "updated_at": "2022-11-29T17:27:31Z",
      "author_association": "MEMBER",
      "body": "- Addressed https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141 by using `__VA_ARGS__`. Also using a separate TRACEPOINT0 macro for tracepoints without arguments, as using the TRACEPOINT macro without arguments is only be possible with GCC (clang warns that we are using gcc extensions). Tested with both clang and gcc.\r\n- Adressed https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034548969 by dropping the `TRACEPOINT_UNCHECKED` macro.\r\n- Added unit tests for the TRACEPOINT macros. The tracepoints in the unit tests don't do anything in particular, but the tests show that the macros work. Through the CI we cover `ENABLE_TRACING` being defined and undefined. The test case `test_tracepoint_check_if_attached` also shows that the `TRACEPOINT_ACTIVE` macro is not broken (it's tested that it's working in the functional tests).",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1330914436",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7914342722,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHXu0lC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7914342722",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T16:29:22Z"
    },
    {
      "event": "commented",
      "id": 1331016229,
      "node_id": "IC_kwDOABII585PVbIl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1331016229",
      "actor": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T17:25:55Z",
      "updated_at": "2022-11-29T17:25:55Z",
      "author_association": "MEMBER",
      "body": "genius. Concept ACK",
      "user": {
        "login": "jb55",
        "id": 45598,
        "node_id": "MDQ6VXNlcjQ1NTk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/45598?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jb55",
        "html_url": "https://github.com/jb55",
        "followers_url": "https://api.github.com/users/jb55/followers",
        "following_url": "https://api.github.com/users/jb55/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jb55/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jb55/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
        "organizations_url": "https://api.github.com/users/jb55/orgs",
        "repos_url": "https://api.github.com/users/jb55/repos",
        "events_url": "https://api.github.com/users/jb55/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jb55/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1331016229",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1334856799,
      "node_id": "IC_kwDOABII585PkExf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1334856799",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-02T07:30:12Z",
      "updated_at": "2022-12-02T07:30:12Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1334856799",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1346186050,
      "node_id": "IC_kwDOABII585QPStC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1346186050",
      "actor": {
        "login": "virtu",
        "id": 72414353,
        "node_id": "MDQ6VXNlcjcyNDE0MzUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/72414353?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/virtu",
        "html_url": "https://github.com/virtu",
        "followers_url": "https://api.github.com/users/virtu/followers",
        "following_url": "https://api.github.com/users/virtu/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/virtu/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/virtu/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/virtu/subscriptions",
        "organizations_url": "https://api.github.com/users/virtu/orgs",
        "repos_url": "https://api.github.com/users/virtu/repos",
        "events_url": "https://api.github.com/users/virtu/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/virtu/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-12T09:52:55Z",
      "updated_at": "2022-12-12T09:52:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK\r\n\r\nSuper cool stuff. This effectively removes **any** runtime overhead of tracepoints on modern processors with branch prediction and speculative execution when no probes are attached .\r\n\r\nSome feedback on testing with [61ca0f9](https://github.com/bitcoin/bitcoin/commit/61ca0f99dbbe7c83495c4f346bc91eceaf07e7ea):\r\n\r\n- functional tests executed successfully on x86_64 and arm64\r\n- demo scripts in `contrib/tracing`: right now, `bpftrace` scripts work, `bcc` scripts don't\r\n- generated assembly looks as expected:\r\n    - tracing code is semaphore-gated using compare and branch instructions:\r\n \r\n        ```\r\n        # x86_64\r\n       cmp    WORD PTR [rip+0x8f816b],0x0        # 0x55d32c25d6c0 <net_outbound_message_semaphore>\r\n       jne    0x55d32b965800 <_ZN8CConnman11PushMessageEP5CNodeO17CSerializedNetMsg+1488>\r\n\r\n       # arm64\r\n       ldrh    w1, [x0, #1776]\r\n       cbnz    w1, 0xaaaab2413fa4 <_ZN8CConnman11PushMessageEP5CNodeO17CSerializedNetMsg+1228>\r\n       ```\r\n    - tracing code uses `nop` when no probe is attached vs. `int3` (x86_64) / `brk` (arm64) to trap when probe is attached\r\n\r\n- used `gdb` to inspect semaphores: they are correctly initialized to zero and set to one if one or more(!) probes are attached. The documentation I read stated semaphores act as probe reference counters, so I was expecting semaphore values to reflect the number of probes. However, it looks like semaphores and counters were separated. This does not impact correct behavior though:\r\n\r\n  ```\r\n  (gdb) # no probe attached\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0000\r\n  (gdb) # started one instance of contrib/tracing/log_p2p_traffic.bt\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # started another instance of contrib/tracing/log_p2p_traffic.bt\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # stopped first instance\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # stopped second instance\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0000\r\n  ```",
      "user": {
        "login": "virtu",
        "id": 72414353,
        "node_id": "MDQ6VXNlcjcyNDE0MzUz",
        "avatar_url": "https://avatars.githubusercontent.com/u/72414353?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/virtu",
        "html_url": "https://github.com/virtu",
        "followers_url": "https://api.github.com/users/virtu/followers",
        "following_url": "https://api.github.com/users/virtu/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/virtu/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/virtu/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/virtu/subscriptions",
        "organizations_url": "https://api.github.com/users/virtu/orgs",
        "repos_url": "https://api.github.com/users/virtu/repos",
        "events_url": "https://api.github.com/users/virtu/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/virtu/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1347928306,
      "node_id": "IC_kwDOABII585QV8Dy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1347928306",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-13T08:34:36Z",
      "updated_at": "2022-12-13T08:34:36Z",
      "author_association": "MEMBER",
      "body": "Thanks for the detailed review and testing. I've too noticed that the current example bcc scripts have a problem with the semaphores. The functional tests, also using bcc, work as intended as they use the PID to attach to the bitcoind process. Will add a commit to allow running the example scripts by specifying a PID.\r\n\r\n",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1347928306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "commented",
      "id": 1353541450,
      "node_id": "IC_kwDOABII585QrWdK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1353541450",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-15T18:37:52Z",
      "updated_at": "2022-12-15T18:37:52Z",
      "author_association": "MEMBER",
      "body": "Concept ACK!\r\nI've though about something similar while working on https://github.com/bitcoin/bitcoin/pull/25541 and even more when you mentioned performance impact on https://github.com/bitcoin/bitcoin/pull/25832.",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1353541450",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8078009981,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHhfKZ9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8078009981",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:31:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8078065815,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHhfYCX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8078065815",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:39:11Z"
    },
    {
      "event": "commented",
      "id": 1359298538,
      "node_id": "IC_kwDOABII585RBT_q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1359298538",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:41:14Z",
      "updated_at": "2022-12-20T12:41:14Z",
      "author_association": "MEMBER",
      "body": "> demo scripts in contrib/tracing: right now, bpftrace scripts work, bcc scripts don't -- (https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050)\r\n\r\nRebased and added a commit that fixes the bcc example scripts by using the PID of bitcoind instead of the file path. We already do this in the tests (https://github.com/bitcoin/bitcoin/commit/220a5a2841172a07d6d7849596316f0e0933e272).",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1359298538",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8078104686,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHhfhhu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8078104686",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:44:42Z"
    },
    {
      "event": "labeled",
      "id": 8146988456,
      "node_id": "LE_lADOABII585XccUyzwAAAAHlmS2o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8146988456",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T00:28:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8149862699,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAHlxQkr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8149862699",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T10:32:37Z"
    },
    {
      "event": "unlabeled",
      "id": 8150089428,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAHlyH7U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8150089428",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-04T11:02:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 8694381832,
      "node_id": "LE_lADOABII585XccUyzwAAAAIGOb0I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8694381832",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-08T08:56:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM4ZGY4ZGQwNjUxNjU3NmU5ZGIyMWZmMjg5OWQwODMyMzJjZTg4NDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38df8dd06516576e9db21ff2899d083232ce8846",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/38df8dd06516576e9db21ff2899d083232ce8846",
      "tree": {
        "sha": "8e8f3ea97037b83fcbc6e231b4ff358ce938be31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e8f3ea97037b83fcbc6e231b4ff358ce938be31"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8e8f3ea97037b83fcbc6e231b4ff358ce938be31\nparent 23e2bfcbc42849daa8e2b69f9bbdc526bc8743a7\nauthor 0xb10c <b10c@b10c.me> 1669397902 +0100\ncommitter 0xb10c <b10c@b10c.me> 1678369580 +0100\n\ntracing: dedup TRACE macros & rename to TRACEPOINT\n\nThis deduplicates the TRACEx macros by using systemtaps [STAP_PROBEV]\nvariadic macro instead of the [DTrace compability DTRACE_PROBE] macros.\nBitcoin Core never had DTrace tracepoints, so we don't need to use the\ndrop-in replacement for it. As noted in #25541[1], these macros aren't\ncompatibile with DTrace on macOS anyway. The (currently unused)\nTRACE() macro is renamed to TRACEPOINT0().\n\nThe deduplication is helpful for the next commit too.\n\nThis also renames the TRACEx macro to TRACEPOINT to clarify what the\nmacro does: inserting a tracepoint vs tracing (logging) something.\n\n[STAP_PROBEV]: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hb=ecab2afea46099b4e7dfd551462689224afdbe3a#l407\n[DTrace compability DTRACE_PROBE]: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hb=ecab2afea46099b4e7dfd551462689224afdbe3a#l490\n[1]: https://github.com/bitcoin/bitcoin/pull/25541/files#diff-553886c5f808e01e3452c7b21e879cc355da388ef7680bf310f6acb926d43266R30-R31\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDMuq/Xai7OLM0xQd4v/VsdiMqX0FAmQJ4y8ACgkQ4v/VsdiM\nqX0DMw//RdceQm/tiPlc+qpFkGPmdlsUxSJRGCCDNa77nVVTDHtxVojGkPHRl9QX\nj3J7pGp/ROSX1BVgZ0vaUMxxy686PyIJqOWcpInNecwbEN0BhYGypsQVU6Or8Sgg\nrwcctpsrmkLuTGzvDUDs0MKleHW54V6a4zSHKlOtod58wqDeXKRbcE5+vNu+90tB\nQPApjBUxAi5rARXakubdBj+GJiN0afG+b/BfiEJmWPVXc9GC2Exp1pbMJqz7ZVxP\ndrOYpiLgBgOCPVk4ochnx1eAjIDukY1QP/t2T6e7aMjbZEJmAlJALohgwyiJSPl0\nKfOu0CgyrHpNIX+5IT7nzsoofygGfeLf0x1o8Sb1qnqCVSMnz5m61/xVRP/4L5Xm\nk95/chZMH9ZCdbfNHnN/WJK9aV1rVfBBBYm7dx8BncgJ7iKxknblim0A6kKhxps2\nQS4QhtxaH481RaqY0aAMd2WyYYwTQiWVsiPdt0meWyqenL2XBxcDElOcD655ob9o\n8ZokfPhTOqd1RWVZjyuHT5HMIT5cQTfVWmbvh2H81nVx16Lf3NDd69O0Ph1W99oT\nNOpmOnRwbrwvisc712M38ztsELWg32sVXc3H99lyyNwQRqV0zS/1PKcXHArPXUHt\npXT5zupLkShkIHsPI5wTuLUqOBztbuWra6MWzhN38C8yWMewr+A=\n=j8F0\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKYgTUBkW4W363cu79w93dwRcqKeArGSC/iEnVu2sgGnCP/wEHB9p5UtPFgY\nIgTdgCXFkeQI8SAoldToStoLMj64QKpodNuwE9XSsiG9uTxjP9lh+Hkr6AjxBGQJ\n4znwCE2XYkosMX8tAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQnW5CNi93uUgUBZbOAmQLKQjxBGQJ4znwCHCa3I47\n8+ucAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn//AQq9yFS6Ub9tz9TpvTxGOxOQjwIOihC4YLBE+8uZJHQIcWCX6h\nZIWDuaEdWUSmWHarpGvYCPAgv5wi8i7xjLm2FQy6W6vBmCMUJ7GL3AP4qpjQefAZ\nfLAI8CC0hlIA0fbhT6GAHT+1hGadNaF8fDhFlgA1MP1fVCfDkgjxBGQJ4znwCBKB\nSK254YMPAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmfwENpUYQCd5gFztkemeNpjdmQI8QRkCeM58Ai6XHt+tNo4\nywCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23e2bfcbc42849daa8e2b69f9bbdc526bc8743a7",
          "sha": "23e2bfcbc42849daa8e2b69f9bbdc526bc8743a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/23e2bfcbc42849daa8e2b69f9bbdc526bc8743a7"
        }
      ],
      "message": "tracing: dedup TRACE macros & rename to TRACEPOINT\n\nThis deduplicates the TRACEx macros by using systemtaps [STAP_PROBEV]\nvariadic macro instead of the [DTrace compability DTRACE_PROBE] macros.\nBitcoin Core never had DTrace tracepoints, so we don't need to use the\ndrop-in replacement for it. As noted in #25541[1], these macros aren't\ncompatibile with DTrace on macOS anyway. The (currently unused)\nTRACE() macro is renamed to TRACEPOINT0().\n\nThe deduplication is helpful for the next commit too.\n\nThis also renames the TRACEx macro to TRACEPOINT to clarify what the\nmacro does: inserting a tracepoint vs tracing (logging) something.\n\n[STAP_PROBEV]: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hb=ecab2afea46099b4e7dfd551462689224afdbe3a#l407\n[DTrace compability DTRACE_PROBE]: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=24d5e01c37805e55c36f7202e5d4e821b85167a1;hb=ecab2afea46099b4e7dfd551462689224afdbe3a#l490\n[1]: https://github.com/bitcoin/bitcoin/pull/25541/files#diff-553886c5f808e01e3452c7b21e879cc355da388ef7680bf310f6acb926d43266R30-R31",
      "committer": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-03-09T13:46:20Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2022-11-25T17:38:22Z"
      },
      "sha": "38df8dd06516576e9db21ff2899d083232ce8846"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY5MmJiNTk1ZDk1ZTI3Mzg1ZWUzNjFmZDdiYTFmYTA1MDJmZTY2OWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f92bb595d95e27385ee361fd7ba1fa0502fe669e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f92bb595d95e27385ee361fd7ba1fa0502fe669e",
      "tree": {
        "sha": "a428565da85753309f1a0ba824926f5907450d9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a428565da85753309f1a0ba824926f5907450d9c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a428565da85753309f1a0ba824926f5907450d9c\nparent 38df8dd06516576e9db21ff2899d083232ce8846\nauthor 0xb10c <b10c@b10c.me> 1669401018 +0100\ncommitter 0xb10c <b10c@b10c.me> 1678369594 +0100\n\ntracing: only prepare tracepoint args if attached\n\nBefore this commit, we would always prepare tracepoint arguments\nregardless of the tracepoint being used or not. While we already made\nsure not to include expensive arguments in our tracepoints, this\ncommit introduces gating to make sure the arguments are only prepared\nif the tracepoints are actually used. This is a win-win improvement\nto our tracing framework. For users not interested in tracing, the\noverhead is reduced to a cheap 'greater than 0' compare. As the\nsemaphore-gating technique used here is available in bpftrace, bcc,\nand libbpf, users interested in tracing don't have to change their\ntracing scripts while profiting from potential future tracepoints\npassing slightly more expensive arguments. In the context of #26531's\nmempool tracepoints, one example could be passing serialized\ntransactions for RBF replacements.\n\nUnder the hood, the semaphore-gating works by placing a 2-byte\nsemaphore in the '.probes' ELF section. The address of the semaphore\nis contained in the ELF note providing the tracepoint information\n(`readelf -n ./src/bitcoind | grep NT_STAPSDT`). Tracing toolkits\nlike bpftrace, bcc, and libbpf increase the semaphore at the address\nupon attaching to the tracepoint. We only prepare the arguments and\nreach the tracepoint if the semaphore is greater than zero. The\nsemaphore is decreased when detaching from the tracepoint.\n\nThe implementation of the TRACEPOINT_ACTIVE macro is flexible enough\nthat it can be adapted for macOS dtrace tracing (#25541). With dtrace,\n[CONTEXT]_[EVENT]_ENABLED() can be used to gate the tracepoints.\n\nWhile the TRACEPOINT0(context, event) macro without arguments\ndoesn't need a check if it's active or not (no arguments can be\nprepared and passed), it does require a TRACEPOINT_SEMAPHORE() due\nto _SDT_HAS_SEMAPHORES requiring all tracepoints to have a semaphore.\nAs the check is cheap, a check is added to not cause problems with\nthe semaphore being unused.\n\nThis also extends the \"Adding a new tracepoint\" documentation to\ninclude information about the semaphores and updated step-by-step\ninstructions on how to add a new tracepoint.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDMuq/Xai7OLM0xQd4v/VsdiMqX0FAmQJ4zoACgkQ4v/VsdiM\nqX19Jw/7Bpc7F3EOL3VfBd0nU/GN3DSme7Cree+BuJy7QnFqMj2dQRY6pWkqGRD0\nbSXIyQpZQkJhYMeP0LQ90GyN8oseKcNmnyeLpTCdRzrjUo4GDUrCTY+vASEDKH1F\niCdBdy011xASTuX94Aumm671rZxOyEVD+KOyPsHJaH06ljfaJEheYoDYLUTS600c\n4ekFD9FFnBgfNMROxJG5+XOV9ZAi8Www61GyCY8GPpNqjoNu/iVz2MlNx+ERqdPx\n0wiqCxHCFBTDRS2x9JMCjORBze4ZRzESRYQUORZFZ+KIeb560UWONk1jE3VZTAH0\nODCyskdSLWp988ge1JYZbCHEkxVEGxmE+I6316D9bJX0lS2UQRMiTLJAz31eWpcr\nVgyfjp2ybOtYicHFPnAzHedR4FOZMpM4vq8NvPmBlIY3W5ANSM9qilG5ebRGzPWW\nPnr7YWoh3FHfQhehYYvDp+/2y0/UOPz/vETk9QBbmkTGw+HWCzOHIZiVHpqiU/0j\nZ9w7U3ctbXDopPu5rawPrEi/a+M82C3+piOe2WqzrZ0w2ZCExWN9bqsKCjrPtW2V\ny9dJ3hltuBJmdLBWRtyS8bNlEgI1Hyf0eEtULOhs+ReIVvnLcLDaGLsbzE7XKI/A\nePiSX8v66ObB6zyyI67LBT+wiqIFDK+7O/053FJB/RiwvCwnEeo=\n=EQQv\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILJ7Vv9l3XRhzpOkt7dl7ogXjaXGpPhySDs6zc66TKT6CP/wECaviNqQoZ5y\nXT0A7fIRYNAI8QRkCeM98AjiMcK0sAKJTACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEGiSQNlTwZqAQpjchPBH\ny00I8CAID28so2tfEKveR8cJnVLJdU4r+3lmPrjvKBYIVc4tEwjxBGQJ4z7wCFxg\n3293dXjDAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BCKLzBOFT7MaXPpokP/MQnRCPAgwLZ2/re+6aLMhtmg\nCvd0gqNCdzhYMAlxQxhL7AOUavAI8QRkCeM+8Aj6bdjmXtFLnwCD3+MNLvkMjiko\naHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQrkUen8Zr\nG0ZAPSgS07brtgjxBGQJ4z7wCP+olcwIhAVQAIPf4w0u+QyOIyJodHRwczovL2J0\nYy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38df8dd06516576e9db21ff2899d083232ce8846",
          "sha": "38df8dd06516576e9db21ff2899d083232ce8846",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/38df8dd06516576e9db21ff2899d083232ce8846"
        }
      ],
      "message": "tracing: only prepare tracepoint args if attached\n\nBefore this commit, we would always prepare tracepoint arguments\nregardless of the tracepoint being used or not. While we already made\nsure not to include expensive arguments in our tracepoints, this\ncommit introduces gating to make sure the arguments are only prepared\nif the tracepoints are actually used. This is a win-win improvement\nto our tracing framework. For users not interested in tracing, the\noverhead is reduced to a cheap 'greater than 0' compare. As the\nsemaphore-gating technique used here is available in bpftrace, bcc,\nand libbpf, users interested in tracing don't have to change their\ntracing scripts while profiting from potential future tracepoints\npassing slightly more expensive arguments. In the context of #26531's\nmempool tracepoints, one example could be passing serialized\ntransactions for RBF replacements.\n\nUnder the hood, the semaphore-gating works by placing a 2-byte\nsemaphore in the '.probes' ELF section. The address of the semaphore\nis contained in the ELF note providing the tracepoint information\n(`readelf -n ./src/bitcoind | grep NT_STAPSDT`). Tracing toolkits\nlike bpftrace, bcc, and libbpf increase the semaphore at the address\nupon attaching to the tracepoint. We only prepare the arguments and\nreach the tracepoint if the semaphore is greater than zero. The\nsemaphore is decreased when detaching from the tracepoint.\n\nThe implementation of the TRACEPOINT_ACTIVE macro is flexible enough\nthat it can be adapted for macOS dtrace tracing (#25541). With dtrace,\n[CONTEXT]_[EVENT]_ENABLED() can be used to gate the tracepoints.\n\nWhile the TRACEPOINT0(context, event) macro without arguments\ndoesn't need a check if it's active or not (no arguments can be\nprepared and passed), it does require a TRACEPOINT_SEMAPHORE() due\nto _SDT_HAS_SEMAPHORES requiring all tracepoints to have a semaphore.\nAs the check is cheap, a check is added to not cause problems with\nthe semaphore being unused.\n\nThis also extends the \"Adding a new tracepoint\" documentation to\ninclude information about the semaphores and updated step-by-step\ninstructions on how to add a new tracepoint.",
      "committer": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-03-09T13:46:34Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2022-11-25T18:30:18Z"
      },
      "sha": "f92bb595d95e27385ee361fd7ba1fa0502fe669e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJmZDk3ZWZmZGZiYzZiOGM5YWQ5ZGU4ODlhYTYyYmQwNzYwZGY1YTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "tree": {
        "sha": "069ba3494432347391a4efed16781429ddda9fee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/069ba3494432347391a4efed16781429ddda9fee"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 069ba3494432347391a4efed16781429ddda9fee\nparent f92bb595d95e27385ee361fd7ba1fa0502fe669e\nauthor 0xb10c <b10c@b10c.me> 1671537073 +0100\ncommitter 0xb10c <b10c@b10c.me> 1678369599 +0100\n\ntracing: use bitcoind pid in bcc tracing examples\n\nBCC needs the PID of a bitcoind process to attach to the tracepoints\n(instead of the binary path used before) when the tracepoints have a\nsemaphore.\n\nFor reference, we already use the PID in our tracepoint interface\ntests. See 220a5a2841172a07d6d7849596316f0e0933e272.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDMuq/Xai7OLM0xQd4v/VsdiMqX0FAmQJ4z8ACgkQ4v/VsdiM\nqX1mrA//RM5HXMA334NLhXcDG1jZd029NYEg1PLR7MeMBsXh+4c2/H111NkFuFwe\ndziAHYIWM6cDgmANQteajZdJUsBRYJdaQkhUwsjNjuwnGlCqynIaHh9QayL/+4gU\nRCCXE5j358RdVzx0r7qBd9hBxSMD6+/CrOFwT9DSLqllkC8ef3sakE1j4lF0SAgf\nMv5MCrvC0b7VPtvBTqyb6ynQSx4eGsSIiZX2b8JduIdHEnGWRBHAv95CUjSQ8KXJ\nv95x+GjauTmXMFDC+eettWPW409S1Ieft17oKLIL7NJyHtQYKeabOfTh5IAPIAfT\navEo+q1cxuVYrEnoqpdDZ31qBgpks3g8D9QCZAg64/pBcA9RJfgXA9YKFQxxOHr8\n2OKhaKjHiRMTQ66/thnoG9FjPdtr+kg9WNIoJsLgCQiGA/v1FajzJHJc3zCIdJwT\nq+cZPcJ0s67dRfeAjZmN7xm2acdoHMDzmHeRmKCDH4MZAUI3dHnkgR6Z7u0FYFoR\n0VNa+/XHdyqJVELS2/X0DbMaCLJZIPD1C0e00Vd0j2xb4RVr9S8rm0oKNnjkRbR2\nKfeUSSjNMNwmV52GDUh5NVjRWR/OLUip1+JFS/HIOx2qEjHhHkE/ZZRx/q4lFHyD\nyfsA60fWQvMXS8gcjchopp6PB/YCjtnZ87nXHtCzYBrVaxUApnw=\n=kNcE\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIBAZSt69hHoDF+L9TrY3EhuVuaPQ+dcKkAUycdFZTXoyCP/wEDMjkujbKLVO\nIy3w2WcTaYoI8SDVhP5iMq5U5Ls/3wr4OYgMHE7K3SONkYA2zcZfLvspIgjxBGQJ\n40HwCMajUMGhZ5waAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQZ5GFbFKi3zguZiBioJb8hwjxIMXwK0gPgGQdS3HC\nH1jKB31hD6XvPDPmnRJ1+pzeeTmfCPEEZAnjQfAInrYP+FSxfKoAg9/jDS75DI4j\nImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23/8BBujdAfqUgJEjrL\nwWVK1KKFCPEgAluJa5BRN8OMaM3dfsvln/3rFrRov8itHx354uyDfGwI8QRkCeNB\n8AgUwLRBAtyOcQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQbxK+es+TEeIInJyO+Ri1wQjxIHndam+leOsKYQak\npgh7n4oHNsB/G4YI40K4aOz3mBNvCPEEZAnjQfAInJ1cUkwJulQAg9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f92bb595d95e27385ee361fd7ba1fa0502fe669e",
          "sha": "f92bb595d95e27385ee361fd7ba1fa0502fe669e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f92bb595d95e27385ee361fd7ba1fa0502fe669e"
        }
      ],
      "message": "tracing: use bitcoind pid in bcc tracing examples\n\nBCC needs the PID of a bitcoind process to attach to the tracepoints\n(instead of the binary path used before) when the tracepoints have a\nsemaphore.\n\nFor reference, we already use the PID in our tracepoint interface\ntests. See 220a5a2841172a07d6d7849596316f0e0933e272.",
      "committer": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2023-03-09T13:46:39Z"
      },
      "author": {
        "name": "0xb10c",
        "email": "b10c@b10c.me",
        "date": "2022-12-20T11:51:13Z"
      },
      "sha": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8708338428,
      "node_id": "HRFPE_lADOABII585XccUyzwAAAAIHDrL8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8708338428",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T13:46:57Z"
    },
    {
      "event": "unlabeled",
      "id": 8708832022,
      "node_id": "UNLE_lADOABII585XccUyzwAAAAIHFjsW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8708832022",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-09T14:32:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1345973179,
      "node_id": "PRR_kwDOABII585QOeu7",
      "url": null,
      "actor": null,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Lightly tested ACK.\r\n\r\n1. I didn't manage to get `bpftrace` itself running on my Ubuntu system [yet](https://hackmd.io/@willcl-ark/SyZgMRbg3), but I was able to get the python scripts `log_raw_p2p_msgs.py`, `log_utxocache_flush.py` and `p2p_monitor.py` (using `bcc`) to run successfully under `sudo`.  \r\n  (I do wonder about the viability of the `bpftrace` scripts in this project, seeing as they seem to be so brittle/difficult to use.)\r\n2. The usdt tests all passed successfully:\r\n  ```log\r\n  interface_usdt_coinselection.py                        | ✓ Passed  | 5 s\r\n  interface_usdt_net.py                                  | ✓ Passed  | 4 s\r\n  interface_usdt_utxocache.py                            | ✓ Passed  | 11 s\r\n  interface_usdt_validation.py                           | ✓ Passed  | 3 s\r\n  ```\r\n3. The new variadic macro is much simpler to reason about and I agree seems like a nice win all round. \r\n4. I was also able to see the semaphores being loaded from memory, compared to zero, and conditionally jumped to, as detailed in the PR description, e.g. for `CCoinsViewCache::AddCoin()`\r\n  ```gdb\r\n     ...\r\n     0x0000000000b60927 <+615>:   movzwl 0xa64bea(%rip),%eax        # 0x15c5518 <utxocache_add_semaphore>\r\n     0x0000000000b6092e <+622>:   cmp    $0x0,%eax\r\n     0x0000000000b60931 <+625>:   jle    0xb609d6 <_ZN15CCoinsViewCache7AddCoinERK9COutPointO4Coinb+790>\r\n     ...\r\n  ```\r\n5. I don't think having these semaphores in the global namespace should be a big issue for debugging or namespacing. So really it comes down to organisational priorities, where I'd agree with you that having them in the same file as the tracepoint feels cleaner.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1345973179",
      "submitted_at": "2023-03-17T16:31:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "reviewed",
      "id": 1348309775,
      "node_id": "PRR_kwDOABII585QXZMP",
      "url": null,
      "actor": null,
      "commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1348309775",
      "submitted_at": "2023-03-20T11:18:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "reviewed",
      "id": 1376804705,
      "node_id": "PRR_kwDOABII585SEF9h",
      "url": null,
      "actor": null,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "<details><summary> I've measured the number of executed instructions for each tracepoint based on the current and new implementation and verified that the overhead for tracepoints' arguments preparation - when enabled but not hooked - has been eliminated. Click to expand for details. </summary>\r\n<br/>\r\n\r\nmaster (49b87bfe7e2799d25ce709123ecafa872b36e87a)\r\n\r\nTracepoint|Disabled|Enabled (not hooked)|Enabled (hooked)\r\n:---|:---|:---|:---\r\nmempool:added|1|24|24\r\nmempool:removed|1|136|136\r\nmempool:replaced|4|60|60\r\nmempool:rejected|2|250|250\r\nnet:inbound_message|1|50|50\r\nnet:outbound_message|3|43|43\r\nvalidation:block_connected|1|8|8\r\nutxocache:flush|2|95|95\r\nutxocache:add|1|6|6\r\nutxocache:spent|1|6|6\r\nutxocache:uncache|1|6|6\r\ncoin_selection:selected_coins|4|107|107\r\ncoin_selection:normal_create_tx_internal|1|10|10\r\ncoin_selection:attempting_aps_create_tx|1|2|2\r\ncoin_selection:aps_create_tx_internal|-|11|11\r\n\r\nPR (rebased as part of [26593-additions](https://github.com/kouloumos/bitcoin/tree/26593-additions))\r\n\r\nTracepoint|Disabled|Enabled (not hooked)|Enabled (hooked)\r\n:---|:---|:---|:---\r\nmempool:added|1|2|29\r\nmempool:removed|1|7|146\r\nmempool:replaced|4|3|60\r\nmempool:rejected|2|3|254\r\nnet:inbound_message|1|2|54\r\nnet:outbound_message|3|3|52\r\nvalidation:block_connected|1|3|10\r\nutxocache:flush|2|2|98\r\nutxocache:add|1|3|8\r\nutxocache:spent|1|3|8\r\nutxocache:uncache|1|3|9\r\ncoin_selection:selected_coins|4|3|109\r\ncoin_selection:normal_create_tx_internal|1|3|12\r\ncoin_selection:attempting_aps_create_tx|1|4|6\r\ncoin_selection:aps_create_tx_internal|-|3|12\r\n\r\nThe data are from my python gdb script that automatically measures executed instructions for all scenarios. You can find it in my [26593-additions](https://github.com/kouloumos/bitcoin/tree/26593-additions) branch alongside usage details in order to reproduce the results.\r\n```\r\n# extend_gdb.py\r\nTo make this file available to your gdb process:\r\n1. Make sure that this file and `tracepoint_helper.py` are in the same dir\r\n2. (gdb) source extend_gdb.py\r\n\r\nYou can now run the custom commands of this file.\r\nThe main command is:\r\n(gdb) scenario run <scenario> <tracepoint> (--no-build)\r\n\r\nRunning it with no arguments will run all scenarios:\r\n- tracepoints disabled\r\n- tracepoints enabled\r\n- tracepoints enabled (hooked)\r\n\r\nThe records are then saved in \"output_<commit-hash>.txt\"\r\n```\r\n\r\nNotes for the preliminary work on that branch:\r\n- it's a rebased vesion of this PR in order to include the newly added mempool tracepoints.\r\n- includes \"missing\" bpftrace scripts because these are what I'm using in my script to enable probes/hook on tracepoints.\r\n</details>\r\n\r\n Regarding the `TRACEPOINT_SEMAPHORE(event, context)` macros: I don't see any advantage on having them in the same file. I consider them as part of tracepoints' inner workings which are already abstracted in another file. But still not opposing the current implementation as (based on my attempts) having them in `trace.h` is not possible and the inclusion of an extra file probably adds unnecessary complexity at this point. However, with my alternative approach (explained below) those are not needed.\r\n\r\n#### macos support compatibility\r\n\r\nI've rebased https://github.com/bitcoin/bitcoin/pull/25541 on top of this PR in [macos-usdt-support-26593](https://github.com/kouloumos/bitcoin/commits/macos-usdt-support-26593) and it works; there is only an issue with the new unit test. Because the macos implementation doesn't support arbitrary tracepoints, the `TRACEPOINT` macro expands to \"undeclared identifier\" error. To solve it, I made a change to conditionally include that test file to the build process. As this test case is only conditionally applicable (empty if not linux), maybe this can also apply to this PR.\r\n\r\n#### Another approach(?)\r\n\r\nThis PR's gated approach reminded me of the [auto-generated header file](https://gist.github.com/kouloumos/df773b1e0896adca827e7960eace1d21) from `probes.d` in https://github.com/bitcoin/bitcoin/pull/25541. In https://github.com/bitcoin/bitcoin/pull/25541#issuecomment-1174858051 you mentioned how that file could also be generated on Linux with dtrace supplied by Systemtap, so I replicated this sempahor-gated functionality using the semaphores of the [linux auto-generated `probes.h` file](https://gist.github.com/0xB10C/655e506e9e53092f4becf412284f572a). The main advantage of this alternative approach is the unified build process for linux and macos as the current (pending) implementation for macos already uses the `probes.d` file. It then becomes trivial to also support tracepoints on macos. What do you think of this approach? This is essentially a mashup of your work, the macos support branch and [eklitzke's probes_sdt branch](https://github.com/eklitzke/bitcoin/tree/probes_sdt). You can find my changes at the [26593-another-approach](https://github.com/kouloumos/bitcoin/tree/26593-another-approach) branch ([diff](https://github.com/kouloumos/bitcoin/compare/26593-additions...26593-another-approach)) , feel free to pick whatever you like.",
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1376804705",
      "submitted_at": "2023-04-08T21:41:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
    },
    {
      "event": "commented",
      "id": 1502863992,
      "node_id": "IC_kwDOABII585Zk-J4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1502863992",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:16Z",
      "updated_at": "2023-04-25T15:56:32Z",
      "author_association": "MEMBER",
      "body": "Thanks for the helpful comments @willcl-ark, @martinus and @kouloumos! I plan to address these and update this PR with your suggestions. Currently, I'm prioritizing other projects during the feature freeze, so it might take a few more weeks.\r\n\r\nMarking this as in draft until I address the feedback.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1502863992",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "mentioned",
      "id": 8970473442,
      "node_id": "MEE_lADOABII585XccUyzwAAAAIWro_i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473442",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "subscribed",
      "id": 8970473463,
      "node_id": "SE_lADOABII585XccUyzwAAAAIWro_3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473463",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "mentioned",
      "id": 8970473512,
      "node_id": "MEE_lADOABII585XccUyzwAAAAIWrpAo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473512",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "subscribed",
      "id": 8970473530,
      "node_id": "SE_lADOABII585XccUyzwAAAAIWrpA6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473530",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "mentioned",
      "id": 8970473556,
      "node_id": "MEE_lADOABII585XccUyzwAAAAIWrpBU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473556",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "subscribed",
      "id": 8970473573,
      "node_id": "SE_lADOABII585XccUyzwAAAAIWrpBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8970473573",
      "actor": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-11T07:58:17Z"
    },
    {
      "event": "convert_to_draft",
      "id": 9094102614,
      "node_id": "CTDE_lADOABII585XccUyzwAAAAIeDP5W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9094102614",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-25T15:56:40Z"
    },
    {
      "event": "commented",
      "id": 1554285202,
      "node_id": "IC_kwDOABII585cpIKS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1554285202",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T09:18:50Z",
      "updated_at": "2023-05-19T09:18:50Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1554285202",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26593"
    },
    {
      "event": "labeled",
      "id": 9287470786,
      "node_id": "LE_lADOABII585XccUyzwAAAAIpk47C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9287470786",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T09:18:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unsubscribed",
      "id": 9287903869,
      "node_id": "UE_lADOABII585XccUyzwAAAAIpmip9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9287903869",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-19T10:12:34Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034160141",
      "pull_request_review_id": 1196700835,
      "id": 1034160141,
      "node_id": "PRRC_kwDOABII5849pAgN",
      "diff_hunk": "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 59,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Aren't variadic macros (at least in this form) an extension, not standard C++?",
      "created_at": "2022-11-28T23:39:04Z",
      "updated_at": "2022-11-28T23:39:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034160141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034419006",
      "pull_request_review_id": 1197057845,
      "id": 1034419006,
      "node_id": "PRRC_kwDOABII5849p_s-",
      "diff_hunk": "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 59,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "in_reply_to_id": 1034160141,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TIL, could change to `...` and `__VA_ARGS__` if needed",
      "created_at": "2022-11-29T08:11:15Z",
      "updated_at": "2022-11-29T08:11:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034419006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034419006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034548969",
      "pull_request_review_id": 1197254044,
      "id": 1034548969,
      "node_id": "PRRC_kwDOABII5849qfbp",
      "diff_hunk": "@@ -11,16 +11,54 @@\n // the optional variadic macros to define tracepoints.\n #define SDT_USE_VARIADIC 1\n \n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-// A USDT tracepoint with zero to twelve arguments.\n-#define TRACEPOINT(context, event, args...) STAP_PROBEV(context, event, args)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 44,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "in_reply_to_id": null,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thinking about it: We might not need an extra `TRACEPOINT_UNCHECKED` macro. We can also use the `TRACEPOINT` in all places where we'd use the unchecked one. This would mean would do two `TRACEPOINT_ACTIVE` checks, but these are extremely cheap and might even be optimized to one by the compiler. \r\n\r\nDropping the unchecked version results in is a smaller, better internal tracepoint API and removes the possibility that someone uses the unchecked version but doesn't gate it.",
      "created_at": "2022-11-29T10:08:06Z",
      "updated_at": "2022-11-29T10:21:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034548969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034548969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034564335",
      "pull_request_review_id": 1197276566,
      "id": 1034564335,
      "node_id": "PRRC_kwDOABII5849qjLv",
      "diff_hunk": "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "path": "src/util/trace.h",
      "position": null,
      "original_position": 59,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "in_reply_to_id": 1034160141,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We want to avoid extensions where possible: https://github.com/bitcoin/bitcoin/blob/d415b7261c05dafbc3e65eea72d270b2bed0958b/configure.ac#L94",
      "created_at": "2022-11-29T10:22:21Z",
      "updated_at": "2022-11-29T10:22:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034564335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034564335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140252968",
      "pull_request_review_id": 1345973179,
      "id": 1140252968,
      "node_id": "PRRC_kwDOABII585D9uEo",
      "diff_hunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <util/trace.h>\n+\n+TRACEPOINT_SEMAPHORE(test, zero_args);\n+TRACEPOINT_SEMAPHORE(test, one_arg);\n+TRACEPOINT_SEMAPHORE(test, six_args);\n+TRACEPOINT_SEMAPHORE(test, twelve_args);\n+\n+BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\n+{\n+  TRACEPOINT0(test, zero_args);\n+  BOOST_CHECK(true);\n+}\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_n_args)\n+{\n+  TRACEPOINT(test, one_arg, 1);\n+  TRACEPOINT(test, six_args, 1, 2, 3, 4, 5, 6);\n+  TRACEPOINT(test, twelve_args, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n+  BOOST_CHECK(true);",
      "path": "src/test/util_trace_tests.cpp",
      "position": 30,
      "original_position": 29,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this test just checking that there is no error thrown when using the macro in this way?",
      "created_at": "2023-03-17T13:40:48Z",
      "updated_at": "2023-03-17T16:31:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140252968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140252968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140555021",
      "pull_request_review_id": 1346453107,
      "id": 1140555021,
      "node_id": "PRRC_kwDOABII585D-30N",
      "diff_hunk": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <util/trace.h>\n+\n+TRACEPOINT_SEMAPHORE(test, zero_args);\n+TRACEPOINT_SEMAPHORE(test, one_arg);\n+TRACEPOINT_SEMAPHORE(test, six_args);\n+TRACEPOINT_SEMAPHORE(test, twelve_args);\n+\n+BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\n+{\n+  TRACEPOINT0(test, zero_args);\n+  BOOST_CHECK(true);\n+}\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_n_args)\n+{\n+  TRACEPOINT(test, one_arg, 1);\n+  TRACEPOINT(test, six_args, 1, 2, 3, 4, 5, 6);\n+  TRACEPOINT(test, twelve_args, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n+  BOOST_CHECK(true);",
      "path": "src/test/util_trace_tests.cpp",
      "position": 30,
      "original_position": 29,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1140252968,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, from the OP: \"Also adding unit tests that include all tracepoint macros to make sure there are no compiler problems with them (e.g. some varadiac extension not supported).\" I added them after addressing https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141\r\n\r\nBut I think it makes sense to document this in the unit tests with a comment too. Will add on next push.",
      "created_at": "2023-03-17T18:06:38Z",
      "updated_at": "2023-03-17T18:06:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140555021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140555021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 30,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141968668",
      "pull_request_review_id": 1348309775,
      "id": 1141968668,
      "node_id": "PRRC_kwDOABII585EEQ8c",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": 42,
      "original_position": 24,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": null,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why do we need this special-cased 0 arg tracepoint? ISTM that the systemtap variadic supports 0 arg calls:\r\n\r\nhttps://github.com/jav/systemtap/blob/2da355dd02a18bf4f67e2ceeb504b351b4bd5b83/includes/sys/sdt.h#L291-L303",
      "created_at": "2023-03-20T11:18:45Z",
      "updated_at": "2023-03-20T11:19:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1141968668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141968668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142351647",
      "pull_request_review_id": 1348901713,
      "id": 1142351647,
      "node_id": "PRRC_kwDOABII585EFucf",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": 42,
      "original_position": 24,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fwiw: This is the \"source\", I think the repo you linked to is an outdated fork: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=4075a5ff1c3f09c3913615e62840595efe003c6d;hb=HEAD#l404\r\n\r\nBut yes, reading that comment I'd agree that it should work. I've added the following to try it but it doesn't compile. IIRC that's the reason why I added the `TRACEPOINT0()`.\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4..488d7b669 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -9,6 +9,7 @@\r\n #include <util/trace.h>\r\n\r\n TRACEPOINT_SEMAPHORE(test, zero_args);\r\n+TRACEPOINT_SEMAPHORE(test, zero_args2);\r\n TRACEPOINT_SEMAPHORE(test, one_arg);\r\n TRACEPOINT_SEMAPHORE(test, six_args);\r\n TRACEPOINT_SEMAPHORE(test, twelve_args);\r\n@@ -19,6 +20,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n   TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args2);\r\n   BOOST_CHECK(true);\r\n }\r\n```\r\n\r\n```console\r\nIn file included from ./util/trace.h:22,\r\n                 from test/util_trace_tests.cpp:9:\r\ntest/util_trace_tests.cpp: In member function ‘void util_trace_tests::test_tracepoint_zero_args::test_method()’:\r\n./util/trace.h:43:9: error: expected primary-expression before ‘)’ token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro ‘TRACEPOINT’\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: template argument 1 is invalid\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro ‘TRACEPOINT’\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: expected primary-expression before ‘)’ token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro ‘TRACEPOINT’\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: expected primary-expression before ‘)’ token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro ‘TRACEPOINT’\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\nmake[2]: *** [Makefile:18883: test/test_bitcoin-util_trace_tests.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[2]: Leaving directory '..'\r\nmake[1]: *** [Makefile:19418: all-recursive] Error 1\r\nmake[1]: Leaving directory '..'\r\nmake: *** [Makefile:816: all-recursive] Error 1\r\n```",
      "created_at": "2023-03-20T15:58:51Z",
      "updated_at": "2023-03-20T16:00:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1142351647",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142351647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142353299",
      "pull_request_review_id": 1348904160,
      "id": 1142353299,
      "node_id": "PRRC_kwDOABII585EFu2T",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": 42,
      "original_position": 24,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Plan to revisit this once I have the time to experiment",
      "created_at": "2023-03-20T15:59:57Z",
      "updated_at": "2023-03-20T15:59:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1142353299",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142353299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351001",
      "pull_request_review_id": 1368120240,
      "id": 1155351001,
      "node_id": "PRRC_kwDOABII585E3UHZ",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": 42,
      "original_position": 24,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Macro magic to the rescue! This works for me:\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4f..952b9cc6e4 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -18,7 +18,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n \r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n-  TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args);\r\n   BOOST_CHECK(true);\r\n }\r\n \r\ndiff --git a/src/util/trace.h b/src/util/trace.h\r\nindex 816d8c295d..3a0aed391b 100644\r\n--- a/src/util/trace.h\r\n+++ b/src/util/trace.h\r\n@@ -29,25 +29,19 @@\r\n     unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\r\n \r\n // Returns true if something is attached to the tracepoint.\r\n-#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\r\n-\r\n-// A USDT tracepoint with no arguments.\r\n-#define TRACEPOINT0(context, event) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBE(context, event)\r\n+#define TRACEPOINT_ACTIVE(context, event, ...) context##_##event##_semaphore > 0\r\n \r\n // A USDT tracepoint with one to twelve arguments. It's checked that the\r\n // tracepoint is active before preparing its arguments.\r\n-#define TRACEPOINT(context, event, ...) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBEV(context, event, __VA_ARGS__)\r\n+#define TRACEPOINT(context, ...) \\\r\n+    if (TRACEPOINT_ACTIVE(context, __VA_ARGS__)) \\\r\n+        STAP_PROBEV(context, __VA_ARGS__)\r\n \r\n #else\r\n \r\n #define TRACEPOINT_SEMAPHORE(context, event)\r\n #define TRACEPOINT_ACTIVE(context, event) false\r\n-#define TRACEPOINT0(context, event)\r\n-#define TRACEPOINT(context, event, ...)\r\n+#define TRACEPOINT(context, ...)\r\n \r\n #endif // ENABLE_TRACING\r\n ```\r\n\r\nThe trick is to make `event` part of the variadic macro, so that there's always at least 1 argument in the variadic",
      "created_at": "2023-04-02T17:52:32Z",
      "updated_at": "2023-04-02T17:52:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155351001",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155488768",
      "pull_request_review_id": 1368298423,
      "id": 1155488768,
      "node_id": "PRRC_kwDOABII585E31wA",
      "diff_hunk": "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "path": "src/util/trace.h",
      "position": 42,
      "original_position": 24,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "38df8dd06516576e9db21ff2899d083232ce8846",
      "in_reply_to_id": 1141968668,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Based on @willcl-ark's comment https://github.com/bitcoin/bitcoin/issues/26916#issuecomment-1480997053 here is a version that works without any warnings in clang and gcc:\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4f..952b9cc6e4 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -18,7 +18,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n \r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n-  TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args);\r\n   BOOST_CHECK(true);\r\n }\r\n \r\ndiff --git a/src/util/trace.h b/src/util/trace.h\r\nindex 816d8c295d..aa88771b1e 100644\r\n--- a/src/util/trace.h\r\n+++ b/src/util/trace.h\r\n@@ -26,28 +26,41 @@\r\n // upon attaching to the tracepoint and decremented when detaching. This needs\r\n // to be a global variable. It's placed in the '.probes' ELF section.\r\n #define TRACEPOINT_SEMAPHORE(context, event) \\\r\n-    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\r\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\r\n+\r\n+// Extract the first argument of a variable number of arguments, even without warning\r\n+// when only 1 argument is provided\r\n+#define TRACEPOINT_FIRST_ARG(...) TRACEPOINT_FIRST_ARG_HELPER(__VA_ARGS__, dummy)\r\n+#define TRACEPOINT_FIRST_ARG_HELPER(arg1, ...) arg1\r\n \r\n // Returns true if something is attached to the tracepoint.\r\n-#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\r\n+#define TRACEPOINT_ACTIVE(context, event) TRACEPOINT_ACTIVE_HELPER(context, event)\r\n+#define TRACEPOINT_ACTIVE_HELPER(context, event) context##_##event##_semaphore > 0\r\n \r\n-// A USDT tracepoint with no arguments.\r\n-#define TRACEPOINT0(context, event) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBE(context, event)\r\n+#if defined(__clang__)\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH _Pragma(\"clang diagnostic push\") _Pragma(\"clang diagnostic ignored \\\"-Wgnu-zero-variadic-macro-arguments\\\"\")\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP _Pragma(\"clang diagnostic pop\")\r\n+#else\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP\r\n+#endif\r\n \r\n // A USDT tracepoint with one to twelve arguments. It's checked that the\r\n // tracepoint is active before preparing its arguments.\r\n-#define TRACEPOINT(context, event, ...) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBEV(context, event, __VA_ARGS__)\r\n+#define TRACEPOINT(context, ...)                                             \\\r\n+    do {                                                                     \\\r\n+        if (TRACEPOINT_ACTIVE(context, TRACEPOINT_FIRST_ARG(__VA_ARGS__))) { \\\r\n+            TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH                       \\\r\n+            STAP_PROBEV(context, __VA_ARGS__);                               \\\r\n+            TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP                        \\\r\n+        }                                                                    \\\r\n+    } while (0)\r\n \r\n #else\r\n \r\n #define TRACEPOINT_SEMAPHORE(context, event)\r\n #define TRACEPOINT_ACTIVE(context, event) false\r\n-#define TRACEPOINT0(context, event)\r\n-#define TRACEPOINT(context, event, ...)\r\n+#define TRACEPOINT(context, ...)\r\n \r\n #endif // ENABLE_TRACING\r\n```",
      "created_at": "2023-04-03T05:15:14Z",
      "updated_at": "2023-04-03T05:15:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155488768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155488768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161156029",
      "pull_request_review_id": 1376804705,
      "id": 1161156029,
      "node_id": "PRRC_kwDOABII585FNdW9",
      "diff_hunk": "@@ -336,7 +387,7 @@ Displaying notes found in: .note.stapsdt\n   stapsdt              0x0000005d\tNT_STAPSDT (SystemTap probe descriptors)\n     Provider: net\n     Name: outbound_message\n-    Location: 0x0000000000107c05, Base: 0x0000000000579c90, Semaphore: 0x0000000000000000\n+    Location: 0x0000000000107c05, Base: 0x0000000000579c90, Semaphore: 0x0000000000a69780",
      "path": "doc/tracing.md",
      "position": 173,
      "original_position": 173,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "in_reply_to_id": null,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Regarding listing available tracepoints, there is another addition when using `info probes` in `gdb`, which now also shows semaphores. A snippet from my binary:\r\n```\r\n(gdb) info probes\r\nType Provider   Name             Where              Semaphore          Object\r\nstap net        inbound_message  0x00005625b02d4106 0x0000000000ab1724 /src/bitcoind\r\nstap net        outbound_message 0x00005625b029f395 0x0000000000ab1722  /src/bitcoind\r\nstap validation block_connected  0x00005625b04b914d 0x0000000000ab1720 /src/bitcoind\r\n```",
      "created_at": "2023-04-08T20:44:07Z",
      "updated_at": "2023-04-08T21:41:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161156029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161156029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 390,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161158136",
      "pull_request_review_id": 1376804705,
      "id": 1161158136,
      "node_id": "PRRC_kwDOABII585FNd34",
      "diff_hunk": "@@ -7,39 +7,48 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0",
      "path": "src/util/trace.h",
      "position": 39,
      "original_position": 39,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "in_reply_to_id": null,
      "user": {
        "login": "kouloumos",
        "id": 18506343,
        "node_id": "MDQ6VXNlcjE4NTA2MzQz",
        "avatar_url": "https://avatars.githubusercontent.com/u/18506343?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kouloumos",
        "html_url": "https://github.com/kouloumos",
        "followers_url": "https://api.github.com/users/kouloumos/followers",
        "following_url": "https://api.github.com/users/kouloumos/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kouloumos/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kouloumos/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kouloumos/subscriptions",
        "organizations_url": "https://api.github.com/users/kouloumos/orgs",
        "repos_url": "https://api.github.com/users/kouloumos/repos",
        "events_url": "https://api.github.com/users/kouloumos/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kouloumos/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see that there is a `PASTE` macro that can be used instead of directly using the token-pasting operator (##), but I can't figure out why it exists and if it offers any advantage. \r\nhttps://github.com/bitcoin/bitcoin/blob/db720b5a703c90625fa7a4773bd2db5672427cbe/src/util/macros.h#L8 ",
      "created_at": "2023-04-08T21:06:02Z",
      "updated_at": "2023-04-08T21:41:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161158136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161158136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162043929",
      "pull_request_review_id": 1378063247,
      "id": 1162043929,
      "node_id": "PRRC_kwDOABII585FQ2IZ",
      "diff_hunk": "@@ -7,39 +7,48 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0",
      "path": "src/util/trace.h",
      "position": 39,
      "original_position": 39,
      "commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_commit_id": "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "in_reply_to_id": 1161158136,
      "user": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I see that there is a PASTE macro that can be used instead of directly using the token-pasting operator (##), but I can't figure out why it exists and if it offers any advantage.\nhttps://github.com/bitcoin/bitcoin/blob/db720b5a703c90625fa7a4773bd2db5672427cbe/src/util/macros.h#L8\n\nThe macro is a bit badly named, the main one here is `PASTE2`. The advantage is that due to the indirection you can use macros as arguments in the macro and they will be expanded before concatenation.\nSee e.g. https://stackoverflow.com/questions/24708006/c-macro-indirection",
      "created_at": "2023-04-10T20:06:21Z",
      "updated_at": "2023-04-10T20:06:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1162043929",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162043929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    }
  ]
}