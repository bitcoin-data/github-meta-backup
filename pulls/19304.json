{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304",
    "id": 435912895,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1OTEyODk1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19304",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19304.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19304.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
    "number": 19304,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: Check that message sends successfully when header is split across two buffers",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR is a tweak of #19302.  This sends a valid message.\r\n\r\nAdditionally, this test includes logging in the same vein as #19272.\r\n",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-06-17T15:03:40Z",
    "updated_at": "2022-02-15T10:32:42Z",
    "closed_at": "2020-06-18T11:41:46Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-06-18T11:41:46Z",
    "merge_commit_sha": "343c0bfbf1e56dd4b2919bc98215367922926f3c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "troygiorshev:2020-06-test-partial",
      "ref": "2020-06-test-partial",
      "sha": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 265625232,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNjU2MjUyMzI=",
        "name": "bitcoin",
        "full_name": "troygiorshev/bitcoin",
        "owner": {
          "login": "troygiorshev",
          "id": 5553787,
          "node_id": "MDQ6VXNlcjU1NTM3ODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/troygiorshev",
          "html_url": "https://github.com/troygiorshev",
          "followers_url": "https://api.github.com/users/troygiorshev/followers",
          "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
          "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
          "repos_url": "https://api.github.com/users/troygiorshev/repos",
          "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/troygiorshev/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/troygiorshev/bitcoin",
        "archive_url": "https://api.github.com/repos/troygiorshev/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/troygiorshev/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/troygiorshev/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/troygiorshev/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/troygiorshev/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/troygiorshev/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/troygiorshev/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/troygiorshev/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/troygiorshev/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/troygiorshev/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/troygiorshev/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/troygiorshev/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/troygiorshev/bitcoin/events",
        "forks_url": "https://api.github.com/repos/troygiorshev/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/troygiorshev/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/troygiorshev/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/troygiorshev/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/troygiorshev/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/troygiorshev/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/troygiorshev/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/troygiorshev/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/troygiorshev/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/troygiorshev/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/troygiorshev/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/troygiorshev/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/troygiorshev/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/troygiorshev/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/troygiorshev/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/troygiorshev/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:troygiorshev/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/troygiorshev/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/troygiorshev/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/troygiorshev/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/troygiorshev/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/troygiorshev/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/troygiorshev/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/troygiorshev/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/troygiorshev/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/troygiorshev/bitcoin/hooks",
        "svn_url": "https://github.com/troygiorshev/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 160214,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2021-02-16T18:44:16Z",
        "created_at": "2020-05-20T16:33:16Z",
        "updated_at": "2021-02-16T18:44:50Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "35ed88f187c9bc7eedc3a1cf12193e0fbf222057",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 29,
    "deletions": 3,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 37,
    "comments": 8
  },
  "events": [
    {
      "event": "labeled",
      "id": 3454057128,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM0NTQwNTcxMjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3454057128",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T15:04:14Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 432503750,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTAzNzUw",
      "url": null,
      "actor": null,
      "commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#pullrequestreview-432503750",
      "submitted_at": "2020-06-17T15:21:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
    },
    {
      "event": "reviewed",
      "id": 432528258,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTI4MjU4",
      "url": null,
      "actor": null,
      "commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#pullrequestreview-432528258",
      "submitted_at": "2020-06-17T15:36:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
    },
    {
      "event": "reviewed",
      "id": 432530048,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTMwMDQ4",
      "url": null,
      "actor": null,
      "commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#pullrequestreview-432530048",
      "submitted_at": "2020-06-17T15:41:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
    },
    {
      "event": "commented",
      "id": 645453492,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTQ1MzQ5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645453492",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T15:41:37Z",
      "updated_at": "2020-06-17T15:41:37Z",
      "author_association": "MEMBER",
      "body": "ACK. Thanks for adding the test, will test after assert_equal nit is addressed",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#issuecomment-645453492",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3454338431,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ1NDMzODQzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3454338431",
      "actor": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T16:05:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3454344088,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ1NDM0NDA4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3454344088",
      "actor": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T16:07:14Z"
    },
    {
      "event": "commented",
      "id": 645470937,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTQ3MDkzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645470937",
      "actor": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T16:13:07Z",
      "updated_at": "2020-06-17T16:13:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Compare c5904c82e05cb4f5856cc55877f9fa268a9cd031 to 3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1.  Changed to assert_equal and made log more descriptive.  Disconnects peer at the end of the test, I'll keep that discussion in #19272 and I'll follow the status quo here.\r\n\r\nHad to add a short sleep, as I was finding my RPC call occationally went before the first half of the message was received by the node.",
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#issuecomment-645470937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304"
    },
    {
      "event": "reviewed",
      "id": 432594507,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTk0NTA3",
      "url": null,
      "actor": null,
      "commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#pullrequestreview-432594507",
      "submitted_at": "2020-06-17T16:55:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
    },
    {
      "event": "reviewed",
      "id": 432634262,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjM0MjYy",
      "url": null,
      "actor": null,
      "commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, hi Troy 👋  😁 ! \r\nCame here because I made a suggestion that impacts this test in #19272 - oops. I definitely see the need to make sure all peers are disconnected since `getnettotals` aggregates information across all peers.\r\n\r\nI wrote some suggestions that build off of Marco's comment about races.\r\n\r\nSide note: not sure if you already considered this, but if there's no other peers, you can also use `getpeerinfo` to see information on pings received from `conn` only.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#pullrequestreview-432634262",
      "submitted_at": "2020-06-17T18:28:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3455043940,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ1NTA0Mzk0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3455043940",
      "actor": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T19:17:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3455054282,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ1NTA1NDI4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3455054282",
      "actor": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T19:20:51Z"
    },
    {
      "event": "reviewed",
      "id": 432704493,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzA0NDkz",
      "url": null,
      "actor": null,
      "commit_id": "cac346ce9f5f4c4ace19796e055ced2082f3b3ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#pullrequestreview-432704493",
      "submitted_at": "2020-06-17T19:21:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
    },
    {
      "event": "commented",
      "id": 645572880,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTU3Mjg4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645572880",
      "actor": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T19:21:30Z",
      "updated_at": "2020-06-17T19:21:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Implemented `wait_until` as discussed.",
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#issuecomment-645572880",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MGQ0NDIzZjk5N2UxNTc4MGJmYTNmOTFiZjRiNGJmNjU2YjhlYTQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "tree": {
        "sha": "9f564977992158a7be98873a76a031e71cda0544",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f564977992158a7be98873a76a031e71cda0544"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39bd9ddb8783807b9cde6288233e86ad7c85d61f",
          "sha": "39bd9ddb8783807b9cde6288233e86ad7c85d61f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/39bd9ddb8783807b9cde6288233e86ad7c85d61f"
        }
      ],
      "message": "Test buffered valid message\n\nA message can be broken across two buffers, with the split inside its\nheader.  Usually this will occur when sending many messages, such that\nthe first buffer fills.\n\nThis test uses the RPC to verify that the message is actually being\nreceived in two pieces.\n\nThere is a very rare chance of a race condition where the test framework\nsends a message in between the two halves of the message under test.  In\nthis case the peer will almost certainly disconnect and the test will\nfail.  An assert has been added to help debugging that rare case.",
      "committer": {
        "name": "Troy Giorshev",
        "email": "troygiorshev@gmail.com",
        "date": "2020-06-17T19:23:06Z"
      },
      "author": {
        "name": "Troy Giorshev",
        "email": "troygiorshev@gmail.com",
        "date": "2020-06-17T14:41:48Z"
      },
      "sha": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3455063525,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzQ1NTA2MzUyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3455063525",
      "actor": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T19:23:25Z"
    },
    {
      "event": "commented",
      "id": 645573945,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTU3Mzk0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645573945",
      "actor": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T19:23:42Z",
      "updated_at": "2020-06-17T19:23:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "And removed unused import.",
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#issuecomment-645573945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304"
    },
    {
      "event": "commented",
      "id": 645576792,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTU3Njc5Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645576792",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T19:29:35Z",
      "updated_at": "2020-06-17T19:29:35Z",
      "author_association": "MEMBER",
      "body": "tested ACK 80d4423f997e15780bfa3f91bf4b4bf656b8ea45 (added an assert(false) to observe deterministic coverage) 🌦\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\ntested ACK 80d4423f997e15780bfa3f91bf4b4bf656b8ea45 (added an assert(false) to observe deterministic coverage) 🌦\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUg1fgwAr3kntpEQs2aiIVSBgAO5mxLPeIy/CfdZirlGL0VYvHOPl2BvcIwBOSXt\r\n/mjQVNutfafKTcpxz5pvMMX934qEA0K49aX92hU2jt+q5q5zggMsBjd996Cwm6ww\r\nJ5+Zz3AJFWSU2CVHll0vHIjNolBBe+HnB5w8enUgdz8TPGf4mS1LWtS9uE36a0ja\r\nUor7i7wdN46jV+c35KXfH8gxVNyEirHlDAdDfQkHZpjdFBoMmEK4yML3PflEqkpy\r\nCVoKNfVr7ziGfjUDAG2JNl7wSDSJtomvBRcBsSwP0h0lPBONjv6JntoLSjeTHaY2\r\nwzx/mwB2lXx1QWw3E/VU/H1ivNiwcI5uIt8EdiVNhficdOUwhEgVGhI6TREpn8W1\r\nDgriZXSNI0v9SDhWM8fWV7MBR6XElZC5m31pM4aqknD5+4gftrZxUiI7Hg4t4tVC\r\nGz/G1FEAo2icWAgmodUbSp+ti87Y2HhPi+9rDdvuHgWG2BPFviGO55tbLta14tiO\r\nU7YBmVXz\r\n=QULl\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `1e2f468bf771db8cdab09da071ec81ccf7eb4d5341ad83699ce0369e01a45610  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401081e2f468bf771db8cdab09da071ec81ccf7eb4d5341ad83699ce0369e01a45610f010500a465bb4170e8ab401c6db6df06d9008fff01041d41c50c5d56005737b78ba2e9a091008f1045eea6f15f0084149b21fb0ab95280083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010620ee4d1577822c3706d274bf2447c3708f0208cda61240ebc4bd138e43f9f516c8dbf92a3d4a889c3cc08e9de1ffff29f5ca608f1045eea6f15f008320c390edfe4a6060083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010c6cb32e1ec07bc5b0e183488502a513c08f1045eea6f15f00840169c4479b40af80083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010f8b5fe8aa823030a561d356201c1dee808f0208285aef4fa8edaf406da147c328183a71994007014e1e0a9cdc7a0350b552f9c08f1045eea6f15f008df1675983c6a2b200083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#issuecomment-645576792",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304"
    },
    {
      "event": "reviewed",
      "id": 432708255,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzA4MjU1",
      "url": null,
      "actor": null,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin/bitcoin/commit/80d4423f997e15780bfa3f91bf4b4bf656b8ea45 👊 \r\n\r\nLooks good to me, nits if you touch again and happy to re-ACK if you do.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#pullrequestreview-432708255",
      "submitted_at": "2020-06-17T19:51:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
    },
    {
      "event": "commented",
      "id": 645601508,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTYwMTUwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645601508",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T20:17:17Z",
      "updated_at": "2020-06-17T23:24:25Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19272 (test: p2p_invalid_messages and test framework improvements by jonatack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.<!--2502f1a698b3751726fa55edcda76cd3-->\n\n### Coverage\n\n| Coverage  | Change ([pull 19304](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/19304/total.coverage/index.html), 181023380aeabcf62a25f7a546b465626c5be3d4) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html), 35ed88f187c9bc7eedc3a1cf12193e0fbf222057)   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.0249 %            | 90.7991 %        |\n| Functions | +0.0818 %            | 85.6072 %        |\n| Branches  | +0.0126 %            | 51.9831 %        |\n\n<sup>Updated at: 2020-06-17T20:17:17.128362.</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#issuecomment-645601508",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304"
    },
    {
      "event": "commented",
      "id": 645641849,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTY0MTg0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645641849",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-17T21:45:06Z",
      "updated_at": "2020-06-17T21:45:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK: good to have this code path tested deterministically!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#issuecomment-645641849",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304"
    },
    {
      "event": "reviewed",
      "id": 432952164,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTUyMTY0",
      "url": null,
      "actor": null,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#pullrequestreview-432952164",
      "submitted_at": "2020-06-18T05:32:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
    },
    {
      "event": "commented",
      "id": 645960502,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTk2MDUwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645960502",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-18T11:37:22Z",
      "updated_at": "2020-06-18T11:37:22Z",
      "author_association": "MEMBER",
      "body": "Going to merge this. I think it is more important to have this test than it is to find the exact right location for this test. I picked an invalid message in #19302 to accomodate the file name, but if it really turns out to be problematic, one could add a comment like `# This test can equivalently be done with an invalid or valid message, for simplicity it is done here with a valid message`",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#issuecomment-645960502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19304"
    },
    {
      "event": "merged",
      "id": 3457715722,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzQ1NzcxNTcyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3457715722",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "343c0bfbf1e56dd4b2919bc98215367922926f3c",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/343c0bfbf1e56dd4b2919bc98215367922926f3c",
      "created_at": "2020-06-18T11:41:46Z"
    },
    {
      "event": "closed",
      "id": 3457715735,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzQ1NzcxNTczNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3457715735",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-18T11:41:46Z"
    },
    {
      "event": "referenced",
      "id": 3479112538,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NzkxMTI1Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3479112538",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "67881de0e3b1cef1d0f978582765a8aeeb09c21a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67881de0e3b1cef1d0f978582765a8aeeb09c21a",
      "created_at": "2020-06-24T19:58:34Z"
    },
    {
      "event": "referenced",
      "id": 4741633540,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NDE2MzM1NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4741633540",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7300d7291145177c0101af8caf6f9fd2f2688fb3",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/7300d7291145177c0101af8caf6f9fd2f2688fb3",
      "created_at": "2021-05-13T12:35:07Z"
    },
    {
      "event": "locked",
      "id": 6073799129,
      "node_id": "LOE_lADOABII584mLYLezwAAAAFqBtHZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073799129",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:32:42Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441621704",
      "pull_request_review_id": 432503750,
      "id": 441621704,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMTcwNA==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = self.nodes[0].getnettotals()['totalbytesrecv']\n+        conn.send_raw_message(msg[:cut_pos])\n+        middle = self.nodes[0].getnettotals()['totalbytesrecv']\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert middle == before + cut_pos",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 32,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "use `assert_equal`",
      "created_at": "2020-06-17T15:10:27Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441621704",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441621704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441623383",
      "pull_request_review_id": 432503750,
      "id": 441623383,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMzM4Mw==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 21,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "suggestion: perhaps describe the expected result",
      "created_at": "2020-06-17T15:12:29Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441623383",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441623383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441624037",
      "pull_request_review_id": 432503750,
      "id": 441624037,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNDAzNw==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = self.nodes[0].getnettotals()['totalbytesrecv']\n+        conn.send_raw_message(msg[:cut_pos])\n+        middle = self.nodes[0].getnettotals()['totalbytesrecv']\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert middle == before + cut_pos",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 32,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441621704,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not test the debug log output as well, e.g. `Incomplete headerReceived`. I think this works; maybe it can be improved on:\r\n\r\n```diff\r\n-        msg = conn.build_message(msg_ping(nonce=12345))\r\n-        cut_pos = 12    # Chosen at an arbitrary position within the header\r\n-        # Send message in two pieces\r\n-        before = self.nodes[0].getnettotals()['totalbytesrecv']\r\n-        conn.send_raw_message(msg[:cut_pos])\r\n-        middle = self.nodes[0].getnettotals()['totalbytesrecv']\r\n-        # If this assert fails, we've hit an unlikely race\r\n-        # where the test framework sent a message in between the two halves\r\n-        assert middle == before + cut_pos\r\n-        conn.send_raw_message(msg[cut_pos:])\r\n-        conn.sync_with_ping(timeout=1)\r\n+        with self.nodes[0].assert_debug_log(['Incomplete headerReceived']):\r\n+            msg = conn.build_message(msg_ping(nonce=12345))\r\n+            cut_pos = 12    # Chosen at an arbitrary position within the header\r\n+            # Send message in two pieces\r\n+            before = self.nodes[0].getnettotals()['totalbytesrecv']\r\n+            conn.send_raw_message(msg[:cut_pos])\r\n+            middle = self.nodes[0].getnettotals()['totalbytesrecv']\r\n+            # If this assert fails, we've hit an unlikely race\r\n+            # where the test framework sent a message in between the two halves\r\n+            assert middle == before + cut_pos\r\n+            conn.send_raw_message(msg[cut_pos:])\r\n+            conn.sync_with_ping(timeout=1)\r\n\r\nwith self.nodes[0].assert_debug_log(['[net] Incomplete headerReceived']):\r\n```",
      "created_at": "2020-06-17T15:13:12Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441624037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441624037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441639243",
      "pull_request_review_id": 432526952,
      "id": 441639243,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYzOTI0Mw==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = self.nodes[0].getnettotals()['totalbytesrecv']\n+        conn.send_raw_message(msg[:cut_pos])\n+        middle = self.nodes[0].getnettotals()['totalbytesrecv']\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert middle == before + cut_pos",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 32,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441621704,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Why not test the debug log output as well\r\n\r\nI'd prefer not to do this. My view is that functional tests should be as black box as possible, and test the functionality rather than the implementation. Using the debug log to test that an event has happened should be used only when there's no other way to test, since doing so binds the test to the exact implementation, and any changes to control flow or logging in the product mean that the tests need to be updated.\r\n\r\n> use assert_equal\r\n\r\n:+1: ",
      "created_at": "2020-06-17T15:34:41Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441639243",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441639243"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441640185",
      "pull_request_review_id": 432528258,
      "id": 441640185,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MDE4NQ==",
      "diff_hunk": "@@ -95,13 +113,13 @@ def test_msgtype(self):\n \n     def test_large_inv(self):\n         conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (0 -> 20): message inv size() = 50001']):\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n             msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n             conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (20 -> 40): message getdata size() = 50001']):\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n             msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n             conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (40 -> 60): headers message size = 2001']):\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 73,
      "original_position": 52,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If #19272 if merged first, these changes in `test_large_inv()` won't be needed.",
      "created_at": "2020-06-17T15:36:04Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441640185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441640185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 130,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441640309",
      "pull_request_review_id": 432528431,
      "id": 441640309,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MDMwOQ==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 21,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441623383,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We don't currently log that an incomplete header was received.  IMO we shouldn't, it's just an implementation detail of sockets, it doesn't really mean anything on any Bitcoin level.  At the very least maybe changing bitcoind logging is out of scope for this PR?",
      "created_at": "2020-06-17T15:36:15Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441640309",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441640309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441640372",
      "pull_request_review_id": 432528518,
      "id": 441640372,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MDM3Mg==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = self.nodes[0].getnettotals()['totalbytesrecv']\n+        conn.send_raw_message(msg[:cut_pos])\n+        middle = self.nodes[0].getnettotals()['totalbytesrecv']\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert middle == before + cut_pos",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 32,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441621704,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "See below",
      "created_at": "2020-06-17T15:36:21Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441640372",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441640372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441641495",
      "pull_request_review_id": 432530048,
      "id": 441641495,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MTQ5NQ==",
      "diff_hunk": "@@ -17,6 +17,7 @@\n     P2PInterface,\n )\n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.messages import msg_ping",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 4,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Please join this with the import from `test_framework.messages` above.",
      "created_at": "2020-06-17T15:38:03Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441641495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441641495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441641575",
      "pull_request_review_id": 432530153,
      "id": 441641575,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MTU3NQ==",
      "diff_hunk": "@@ -95,13 +113,13 @@ def test_msgtype(self):\n \n     def test_large_inv(self):\n         conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (0 -> 20): message inv size() = 50001']):\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n             msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n             conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (20 -> 40): message getdata size() = 50001']):\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n             msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n             conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (40 -> 60): headers message size = 2001']):\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 73,
      "original_position": 52,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441640185,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "+1, I'm more than happy to rebase this one if #19272 goes in first",
      "created_at": "2020-06-17T15:38:10Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441641575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441641575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 130,
      "original_line": 130,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441643412",
      "pull_request_review_id": 432530048,
      "id": 441643412,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0MzQxMg==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = self.nodes[0].getnettotals()['totalbytesrecv']\n+        conn.send_raw_message(msg[:cut_pos])\n+        middle = self.nodes[0].getnettotals()['totalbytesrecv']\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert middle == before + cut_pos\n+        conn.send_raw_message(msg[cut_pos:])\n+        conn.sync_with_ping(timeout=1)",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 54,
      "original_position": 34,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suggest you disconnect the connection at the end of this subtest, so that the node and test fixture are the same state at the end of each subtest as at the start.\r\n\r\nIdeally, it should be possible to permute subtests in any order and have the test pass. That prevents brittleness like the asserts on peer numbers that you've had to change in an unrelated subtest here.",
      "created_at": "2020-06-17T15:40:58Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441643412",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441643412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 75,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441645507",
      "pull_request_review_id": 432535295,
      "id": 441645507,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NTUwNw==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 21,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441623383,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In https://github.com/bitcoin/bitcoin/pull/19302#discussion_r441521857 you added `LogPrintf(\"Incomplete header\");`\r\n\r\n",
      "created_at": "2020-06-17T15:43:59Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441645507",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441645507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441645591",
      "pull_request_review_id": 432535406,
      "id": 441645591,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NTU5MQ==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 21,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441623383,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@jonatack are you sure? I don't see anywhere in the product code that logs \"Incomplete headerReceived\" (and would be surprised to, since this is purely an implementation detail)",
      "created_at": "2020-06-17T15:44:06Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441645591",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441645591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441645947",
      "pull_request_review_id": 432535884,
      "id": 441645947,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY0NTk0Nw==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 21,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441623383,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> \r\n> \r\n> The idea is to mention the expected result. The rest was an example, success, failure, disconnects peer, etc.\r\n\r\nAh I agree, I'll make this a bit more descriptive",
      "created_at": "2020-06-17T15:44:40Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441645947",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441645947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441657274",
      "pull_request_review_id": 432550163,
      "id": 441657274,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NzI3NA==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = self.nodes[0].getnettotals()['totalbytesrecv']\n+        conn.send_raw_message(msg[:cut_pos])\n+        middle = self.nodes[0].getnettotals()['totalbytesrecv']\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert middle == before + cut_pos",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 32,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441621704,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh right, if it's just sockets then agreed.",
      "created_at": "2020-06-17T16:01:37Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441657274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441657274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441661988",
      "pull_request_review_id": 432556200,
      "id": 441661988,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY2MTk4OA==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 21,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441623383,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> @jonatack are you sure? I don't see anywhere in the product code that logs \"Incomplete headerReceived\" (and would be surprised to, since this is purely an implementation detail)\r\n\r\nWeird. I think it was a non-consistent result. Sorry about that.",
      "created_at": "2020-06-17T16:09:17Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441661988",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441661988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441670483",
      "pull_request_review_id": 432567237,
      "id": 441670483,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY3MDQ4Mw==",
      "diff_hunk": "@@ -42,13 +43,30 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers\")",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 21,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "c5904c82e05cb4f5856cc55877f9fa268a9cd031",
      "in_reply_to_id": 441623383,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> In [#19302 (comment)](https://github.com/bitcoin/bitcoin/pull/19302#discussion_r441521857) you added `LogPrintf(\"Incomplete header\");`\r\n\r\nHm, it's possible I didn't rebuild properly. It's late here :) will finish review of your net headers refactoring tomorrow fresh and early",
      "created_at": "2020-06-17T16:23:21Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441670483",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441670483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441690648",
      "pull_request_review_id": 432594507,
      "id": 441690648,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY5MDY0OA==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think a sleep will consistently avoid races. Any reason why a `sync_with_ping` (on a different connection) or a `wait_until` is not working?",
      "created_at": "2020-06-17T16:55:55Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441690648",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441690648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441720939",
      "pull_request_review_id": 432634262,
      "id": 441720939,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcyMDkzOQ==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `getnettotals` returns information about all peers, so `sync_with_ping` would affect `totalbytesrecv` right? You could take that into account too, something like:\r\n\r\n```py\r\npinger = node.add_p2p_connection()\r\n...\r\nconn.send_raw_message(msg[:cut_pos])\r\npinger.sync_with_ping()\r\n...\r\nassert_equal(middle, before + cut_pos + PING_SIZE)\r\n```\r\nI don't think this guarantees that `conn`'s message has been processed just because `pinger`'s ping has been though...?",
      "created_at": "2020-06-17T17:47:08Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441720939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441720939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441723603",
      "pull_request_review_id": 432634262,
      "id": 441723603,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcyMzYwMw==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early\n+        middle = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert_equal(middle, before + cut_pos)\n+        conn.send_raw_message(msg[cut_pos:])",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 53,
      "original_position": 51,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you want to make an assertion about `totalbytesrecv` here too? Or is it unnecessary?\r\nAlso, I know this just tests that the 2 halves are received so this might be out of scope, but do you expect a `pong` in return? Could be tested using `conn.message_count`?",
      "created_at": "2020-06-17T17:51:44Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441723603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441723603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441729612",
      "pull_request_review_id": 432634262,
      "id": 441729612,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcyOTYxMg==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": 441720939,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actually, I think `wait_until` might be better:\r\n```suggestion\r\n       wait_until(lambda: self.nodes[0].getnettotals()['totalbytesrecv'] == before + cut_pos)\r\n```\r\nWishful thinking, it'd be nice if `cut_pos` is a size that couldn't possibly be = another message (does this exist?). It will still fail if the node receives another message in between the halves, but can't pass if it isn't received.",
      "created_at": "2020-06-17T18:01:18Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441729612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441729612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441746483",
      "pull_request_review_id": 432667616,
      "id": 441746483,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0NjQ4Mw==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": 441690648,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, I like `wait_until` better.  More expressive at the very least.  How do you like this?\r\n```suggestion\r\n        # Prevent the RPC call from going too early\r\n        conn.wait_util(int(self.nodes[0].getnettotals()['totalbytesrecv']) != before)\r\n```",
      "created_at": "2020-06-17T18:31:36Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441746483",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441746483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441747548",
      "pull_request_review_id": 432669038,
      "id": 441747548,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc0NzU0OA==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": 441690648,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be fine. In case it fails the `assert_equal(middle, before + cut_pos)` should trigger",
      "created_at": "2020-06-17T18:33:36Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441747548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441747548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441755606",
      "pull_request_review_id": 432681527,
      "id": 441755606,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1NTYwNg==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": 441720939,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah we came up with almost the same thing!  I thought of this https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441746483.  Regarding `cut_pos`, we actually have what you're looking for.  `cut_pos = 12` and the size of the smallest message (any of the messages with no payload) is 24 😄 \r\n\r\nI'll think about `getpeerinfo` vs `getnettotals`",
      "created_at": "2020-06-17T18:47:45Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441755606",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441755606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441758738",
      "pull_request_review_id": 432683684,
      "id": 441758738,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1ODczOA==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early\n+        middle = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        # If this assert fails, we've hit an unlikely race\n+        # where the test framework sent a message in between the two halves\n+        assert_equal(middle, before + cut_pos)\n+        conn.send_raw_message(msg[cut_pos:])",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 53,
      "original_position": 51,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": 441723603,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We do expect a `pong` in return, but it doesn't really matter in this test.  I've just chosen `ping` because it's really simple, any valid message would have worked.",
      "created_at": "2020-06-17T18:50:43Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441758738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441758738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 74,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441761870",
      "pull_request_review_id": 432685762,
      "id": 441761870,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2MTg3MA==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": 441720939,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">I don't think this guarantees that conn's message has been processed just because pinger's ping has been though...?\r\n\r\nI'm pretty sure you're right.  However, we're looking at a race in a test for a race inside a test at this point, so I'm going to prefer the simpler fix.",
      "created_at": "2020-06-17T18:53:35Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441761870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441761870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441764282",
      "pull_request_review_id": 432687395,
      "id": 441764282,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc2NDI4Mg==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": 441720939,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TWINSIES 👯 \r\n(If I may, I think `== before + cut_pos` is stronger than  `>= before` or `!= before`)\r\n> we actually have what you're looking for\r\n\r\nOoh!! Genius, should be in the comment.",
      "created_at": "2020-06-17T18:55:58Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441764282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441764282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441771871",
      "pull_request_review_id": 432694778,
      "id": 441771871,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3MTg3MQ==",
      "diff_hunk": "@@ -42,13 +47,32 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header\n+        # Send message in two pieces\n+        before = int(self.nodes[0].getnettotals()['totalbytesrecv'])\n+        conn.send_raw_message(msg[:cut_pos])\n+        time.sleep(0.01) # Prevent the RPC call from going too early",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 46,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "3cd538a1a6c64c8ab4b6f02be72f45d2c865b9f1",
      "in_reply_to_id": 441720939,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`== before + cut_pos` is stronger, but I see three possible situations that I would rather be caught by different asserts.  This is possible with `!=` and the later `assert_equal`\r\n\r\n1. Something terrible happens and the first half of the message is never processed.  `wait_until` times out and throws an exception.\r\n2. The node takes a while but eventually processes the first half of the message (and only that).  `wait_until` tries `getnettotals` a few times and then we continue past, and the test passes.\r\n3.  The race occurs and the node processes more than just the first half of the message.  The `assert_equals` fails and we see the exception there.\r\n\r\nChoosing `== before + cut_pos` or `>= before` could make both 1. and 3. fail on the `wait_until`, which is just a little harder to debug.",
      "created_at": "2020-06-17T19:06:50Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441771871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441771871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441779231",
      "pull_request_review_id": 432704493,
      "id": 441779231,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3OTIzMQ==",
      "diff_hunk": "@@ -3,12 +3,16 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"\n+\n+import time",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 5,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "cac346ce9f5f4c4ace19796e055ced2082f3b3ed",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n```",
      "created_at": "2020-06-17T19:21:06Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441779231",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441779231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441779924",
      "pull_request_review_id": 432705403,
      "id": 441779924,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc3OTkyNA==",
      "diff_hunk": "@@ -3,12 +3,16 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"\n+\n+import time",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 5,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "cac346ce9f5f4c4ace19796e055ced2082f3b3ed",
      "in_reply_to_id": 441779231,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "MarcoFalke = faster than linter",
      "created_at": "2020-06-17T19:22:22Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441779924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441779924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441780225",
      "pull_request_review_id": 432705795,
      "id": 441780225,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MDIyNQ==",
      "diff_hunk": "@@ -3,12 +3,16 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"\n+\n+import time",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": null,
      "original_position": 5,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "cac346ce9f5f4c4ace19796e055ced2082f3b3ed",
      "in_reply_to_id": 441779231,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "_glares at pylint_\r\n\r\nthx",
      "created_at": "2020-06-17T19:22:54Z",
      "updated_at": "2020-06-17T19:23:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441780225",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441780225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 7,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441782105",
      "pull_request_review_id": 432708255,
      "id": 441782105,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MjEwNQ==",
      "diff_hunk": "@@ -3,12 +3,14 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"\n+",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: extra newline here?\r\n```suggestion\r\n```",
      "created_at": "2020-06-17T19:26:36Z",
      "updated_at": "2020-06-17T19:51:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441782105",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441782105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441784071",
      "pull_request_review_id": 432708255,
      "id": 441784071,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NDA3MQ==",
      "diff_hunk": "@@ -42,13 +48,33 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 43,
      "original_position": 43,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think the fact that `cut_pos` < smallest message size is pretty smart and non-arbitrary :)\r\n```suggestion\r\n        cut_pos = 12    # Smaller than any other P2P message and thus easily distinguishable\r\n```",
      "created_at": "2020-06-17T19:30:29Z",
      "updated_at": "2020-06-17T19:51:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441784071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441784071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441794356",
      "pull_request_review_id": 432708255,
      "id": 441794356,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5NDM1Ng==",
      "diff_hunk": "@@ -3,12 +3,14 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 3,
      "original_position": 3,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This sends a valid message.\r\n\r\nEr... I'm very sorry if I'm being a pain in the ass, but why is this in p2p_invalid_messages?",
      "created_at": "2020-06-17T19:50:05Z",
      "updated_at": "2020-06-17T19:51:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441794356",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441794356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441823785",
      "pull_request_review_id": 432762770,
      "id": 441823785,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyMzc4NQ==",
      "diff_hunk": "@@ -3,12 +3,14 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 3,
      "original_position": 3,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "in_reply_to_id": 441794356,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I'm very sorry if I'm being a pain in the ass, but why is this in p2p_invalid_messages?\r\n\r\nYou're not. Because we couldn't think of anywhere better to put it 🤷‍♂️ ",
      "created_at": "2020-06-17T20:45:31Z",
      "updated_at": "2020-06-17T20:45:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441823785",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441823785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441845573",
      "pull_request_review_id": 432790863,
      "id": 441845573,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0NTU3Mw==",
      "diff_hunk": "@@ -3,12 +3,14 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"\n+",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "in_reply_to_id": 441782105,
      "user": {
        "login": "troygiorshev",
        "id": 5553787,
        "node_id": "MDQ6VXNlcjU1NTM3ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/troygiorshev",
        "html_url": "https://github.com/troygiorshev",
        "followers_url": "https://api.github.com/users/troygiorshev/followers",
        "following_url": "https://api.github.com/users/troygiorshev/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/troygiorshev/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/troygiorshev/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
        "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
        "repos_url": "https://api.github.com/users/troygiorshev/repos",
        "events_url": "https://api.github.com/users/troygiorshev/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Using [PEP 257](https://www.python.org/dev/peps/pep-0257/#id17) as a basis, this could be argued either way.  I like this better, and it's consistent with the 7 or so other test files that I just checked.",
      "created_at": "2020-06-17T21:30:22Z",
      "updated_at": "2020-06-17T21:32:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441845573",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441845573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 6,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441977469",
      "pull_request_review_id": 432952164,
      "id": 441977469,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk3NzQ2OQ==",
      "diff_hunk": "@@ -42,13 +48,33 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 30,
      "original_position": 30,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This would allow not changing `test_large_inv()`:\r\n```diff\r\n     def run_test(self):\r\n-        self.test_buffer()\r\n         self.test_magic_bytes()\r\n         self.test_checksum()\r\n         self.test_size()\r\n         self.test_msgtype()\r\n         self.test_large_inv()\r\n+        self.test_buffer()\r\n         self.test_resource_exhaustion()\r\n```",
      "created_at": "2020-06-18T05:32:42Z",
      "updated_at": "2020-06-18T05:32:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441977469",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441977469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441977803",
      "pull_request_review_id": 432952555,
      "id": 441977803,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk3NzgwMw==",
      "diff_hunk": "@@ -42,13 +48,33 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        self.test_buffer()\n         self.test_magic_bytes()\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n         self.test_large_inv()\n         self.test_resource_exhaustion()\n \n+    def test_buffer(self):\n+        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        # Create valid message\n+        msg = conn.build_message(msg_ping(nonce=12345))\n+        cut_pos = 12    # Chosen at an arbitrary position within the header",
      "path": "test/functional/p2p_invalid_messages.py",
      "position": 43,
      "original_position": 43,
      "commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "original_commit_id": "80d4423f997e15780bfa3f91bf4b4bf656b8ea45",
      "in_reply_to_id": 441784071,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ":+1: ",
      "created_at": "2020-06-18T05:33:59Z",
      "updated_at": "2020-06-18T05:33:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441977803",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/441977803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    }
  ]
}