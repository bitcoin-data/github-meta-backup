{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359",
    "id": 1094975107,
    "node_id": "PR_kwDOABII585BQ_6D",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26359",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26359.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26359.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26359",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26359/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/46339d29b10c9fb597af928c21c34945d76bbd22",
    "number": 26359,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "p2p: Erlay support signaling follow-ups",
    "user": {
      "login": "naumenkogs",
      "id": 7975071,
      "node_id": "MDQ6VXNlcjc5NzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naumenkogs",
      "html_url": "https://github.com/naumenkogs",
      "followers_url": "https://api.github.com/users/naumenkogs/followers",
      "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
      "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
      "repos_url": "https://api.github.com/users/naumenkogs/repos",
      "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\r\n\r\nNon-trivial changes include:\r\n- Getting rid of roles in `sendtxrcncl` message (summarized in the [BIP PR](https://github.com/bitcoin/bips/pull/1376));\r\n- Disconnect the peer if it send `sendtxrcncl` although we are in `blocksonly` and notified the peer with `fRelay=0`;\r\n- Don't send `sendtxrcncl` to feeler connections.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2022-10-21T08:08:43Z",
    "updated_at": "2022-11-30T10:53:09Z",
    "closed_at": "2022-11-30T10:53:08Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-11-30T10:53:08Z",
    "merge_commit_sha": "bcee94d1078ccb7812dc12bfcb0c9d9a799a6d3b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "naumenkogs:2021-11-erlay1_followup",
      "ref": "2021-11-erlay1_followup",
      "sha": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 115054139,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTUwNTQxMzk=",
        "name": "bitcoin",
        "full_name": "naumenkogs/bitcoin",
        "owner": {
          "login": "naumenkogs",
          "id": 7975071,
          "node_id": "MDQ6VXNlcjc5NzUwNzE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/naumenkogs",
          "html_url": "https://github.com/naumenkogs",
          "followers_url": "https://api.github.com/users/naumenkogs/followers",
          "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
          "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
          "repos_url": "https://api.github.com/users/naumenkogs/repos",
          "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/naumenkogs/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/naumenkogs/bitcoin",
        "archive_url": "https://api.github.com/repos/naumenkogs/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/naumenkogs/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/naumenkogs/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/naumenkogs/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/naumenkogs/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/naumenkogs/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/naumenkogs/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/naumenkogs/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/naumenkogs/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/naumenkogs/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/naumenkogs/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/naumenkogs/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/naumenkogs/bitcoin/events",
        "forks_url": "https://api.github.com/repos/naumenkogs/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/naumenkogs/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/naumenkogs/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/naumenkogs/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/naumenkogs/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/naumenkogs/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/naumenkogs/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/naumenkogs/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/naumenkogs/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/naumenkogs/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/naumenkogs/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/naumenkogs/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/naumenkogs/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/naumenkogs/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/naumenkogs/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/naumenkogs/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:naumenkogs/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/naumenkogs/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/naumenkogs/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/naumenkogs/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/naumenkogs/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/naumenkogs/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/naumenkogs/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/naumenkogs/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/naumenkogs/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/naumenkogs/bitcoin/hooks",
        "svn_url": "https://github.com/naumenkogs/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 213338,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-02-23T10:57:41Z",
        "created_at": "2017-12-21T22:52:17Z",
        "updated_at": "2021-03-02T13:21:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "59e00c7e03107e7d2582a0c14431bb4e62cccd77",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:15:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 169,
    "deletions": 166,
    "changed_files": 8,
    "commits": 8,
    "review_comments": 33,
    "comments": 4
  },
  "events": [
    {
      "event": "labeled",
      "id": 7638317254,
      "node_id": "LE_lADOABII585Ug_9TzwAAAAHHR3jG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7638317254",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-21T08:09:36Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "reviewed",
      "id": 1150648334,
      "node_id": "PRR_kwDOABII585ElYAO",
      "url": null,
      "actor": null,
      "commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1150648334",
      "submitted_at": "2022-10-21T09:30:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "commented",
      "id": 1286753334,
      "node_id": "IC_kwDOABII585Mskw2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1286753334",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-21T10:18:19Z",
      "updated_at": "2022-11-29T21:41:42Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1178832869), [ariard](https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1181722780), [mzumsande](https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1198306717) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26283](https://github.com/bitcoin/bitcoin/pull/26283) (p2p: Fill reconciliation sets and request reconciliation (Erlay) by naumenkogs)\n* [#25572](https://github.com/bitcoin/bitcoin/pull/25572) (refactor: Introduce EvictionManager and use it for the inbound eviction logic by dergoegge)\n* [#25268](https://github.com/bitcoin/bitcoin/pull/25268) (refactor: Introduce EvictionManager by dergoegge)\n* [#21515](https://github.com/bitcoin/bitcoin/pull/21515) (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#issuecomment-1286753334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26359"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7661349269,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHIpumV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7661349269",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-25T08:44:26Z"
    },
    {
      "event": "convert_to_draft",
      "id": 7670633428,
      "node_id": "CTDE_lADOABII585Ug_9TzwAAAAHJNJPU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7670633428",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-26T08:46:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7670635022,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHJNJoO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7670635022",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-26T08:47:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7671700283,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHJRNs7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7671700283",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-26T11:02:34Z"
    },
    {
      "event": "ready_for_review",
      "id": 7671700789,
      "node_id": "RFRE_lADOABII585Ug_9TzwAAAAHJRN01",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7671700789",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-26T11:02:38Z"
    },
    {
      "event": "reviewed",
      "id": 1159830143,
      "node_id": "PRR_kwDOABII585FIZp_",
      "url": null,
      "actor": null,
      "commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK 2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1159830143",
      "submitted_at": "2022-10-28T11:47:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "reviewed",
      "id": 1161214019,
      "node_id": "PRR_kwDOABII585FNrhD",
      "url": null,
      "actor": null,
      "commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1161214019",
      "submitted_at": "2022-10-30T23:59:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "reviewed",
      "id": 1164182581,
      "node_id": "PRR_kwDOABII585FZAQ1",
      "url": null,
      "actor": null,
      "commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK\r\n\r\nI reviewed the code, and all points I found were already mentioned by others, so I'd be happy to ACK after the oustanding comments are addressed.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1164182581",
      "submitted_at": "2022-11-01T23:32:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7722357396,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHMSdKU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7722357396",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-02T11:22:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7722481452,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHMS7cs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7722481452",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-02T11:38:22Z"
    },
    {
      "event": "labeled",
      "id": 7742274779,
      "node_id": "LE_lADOABII585Ug_9TzwAAAAHNebzb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7742274779",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T16:28:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7743079363,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHNhgPD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7743079363",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T18:30:12Z"
    },
    {
      "event": "unlabeled",
      "id": 7743215181,
      "node_id": "UNLE_lADOABII585Ug_9TzwAAAAHNiBZN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7743215181",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T18:54:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1170841389,
      "node_id": "PRR_kwDOABII585FyZ8t",
      "url": null,
      "actor": null,
      "commit_id": "2193344280c53cfd2145d5c5e60f774b5a73b1ea",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 2193344280c53cfd2145d5c5e60f774b5a73b1ea modulo the failing test which seems to need some tweaking and the comment below wrt `assert()`.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1170841389",
      "submitted_at": "2022-11-07T17:56:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY3NzJjYmY2OWNmMDc1YWM4ZGZmMzUwN2JmOTE1MTQwMGVkMjU1Yjc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6772cbf69cf075ac8dff3507bf9151400ed255b7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6772cbf69cf075ac8dff3507bf9151400ed255b7",
      "tree": {
        "sha": "0ace66237d05b3f02ffc5809da6f41da42b4f994",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ace66237d05b3f02ffc5809da6f41da42b4f994"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae6bb6e71e3082dd783e78c52b3af649fd5256cc",
          "sha": "ae6bb6e71e3082dd783e78c52b3af649fd5256cc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6bb6e71e3082dd783e78c52b3af649fd5256cc"
        }
      ],
      "message": "tests: stabilize sendtxrcncl test",
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-08T10:18:48Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-08T10:18:40Z"
      },
      "sha": "6772cbf69cf075ac8dff3507bf9151400ed255b7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7761133178,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHOmX56",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7761133178",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T10:19:03Z"
    },
    {
      "event": "renamed",
      "id": 7761173145,
      "node_id": "RTE_lADOABII585Ug_9TzwAAAAHOmhqZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7761173145",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T10:22:33Z",
      "rename": {
        "from": "p2p, refactor: #23443 (Erlay support signaling) follow-ups",
        "to": "p2p: Erlay support signaling follow-ups"
      }
    },
    {
      "event": "reviewed",
      "id": 1172205606,
      "node_id": "PRR_kwDOABII585F3nAm",
      "url": null,
      "actor": null,
      "commit_id": "1597210a6d244927651b6a4b573b884cc6f9236c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 1597210a6d244927651b6a4b573b884cc6f9236c",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1172205606",
      "submitted_at": "2022-11-08T14:25:43Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7770660957,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHPKuBd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7770660957",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-09T08:08:22Z"
    },
    {
      "event": "reviewed",
      "id": 1174704107,
      "node_id": "PRR_kwDOABII585GBI_r",
      "url": null,
      "actor": null,
      "commit_id": "58786a102ae716332c2d56a00a10726fb7e305f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code Review ACK 58786a102ae716332c2d56a00a10726fb7e305f1",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1174704107",
      "submitted_at": "2022-11-09T20:43:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "reviewed",
      "id": 1174917066,
      "node_id": "PRR_kwDOABII585GB8_K",
      "url": null,
      "actor": null,
      "commit_id": "58786a102ae716332c2d56a00a10726fb7e305f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 58786a1\r\n\r\nVerified the test coverage updates in removal of initiator/responder and after defining better `sendtxrcncl` policy.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1174917066",
      "submitted_at": "2022-11-10T00:18:34Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE2MGY3MjllMjkzZGNkMTFjYTA3N2I3YzFjNzJiMDYxMTk0MzdmYWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a60f729e293dcd11ca077b7c1c72b06119437faa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a60f729e293dcd11ca077b7c1c72b06119437faa",
      "tree": {
        "sha": "e53aee4c414f624d61006dd2ae121a839c813ea4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e53aee4c414f624d61006dd2ae121a839c813ea4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6772cbf69cf075ac8dff3507bf9151400ed255b7",
          "sha": "6772cbf69cf075ac8dff3507bf9151400ed255b7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6772cbf69cf075ac8dff3507bf9151400ed255b7"
        }
      ],
      "message": "p2p: Drop roles from sendtxrcncl\n\nThis feature was currently redundant (although could have provided\nmore flexibility in the future), and already been causing confusion.",
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-10T07:21:57Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-10-20T13:38:50Z"
      },
      "sha": "a60f729e293dcd11ca077b7c1c72b06119437faa"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7780336145,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHPvoIR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7780336145",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T07:26:08Z"
    },
    {
      "event": "commented",
      "id": 1309877555,
      "node_id": "IC_kwDOABII585OEyUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1309877555",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T07:26:46Z",
      "updated_at": "2022-11-10T07:26:46Z",
      "author_association": "MEMBER",
      "body": "Applied clang-format everywhere.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#issuecomment-1309877555",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26359"
    },
    {
      "event": "reviewed",
      "id": 1177764547,
      "node_id": "PRR_kwDOABII585GM0LD",
      "url": null,
      "actor": null,
      "commit_id": "d44438c7d7b98d790052f8848de4aaa6d0ea7704",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK d44438c7\r\n\r\nNote the new commit d44438c reodering functional tests for readability.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1177764547",
      "submitted_at": "2022-11-11T19:07:34Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "commented",
      "id": 1312500989,
      "node_id": "IC_kwDOABII585OOyz9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1312500989",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-12T15:01:35Z",
      "updated_at": "2022-11-12T15:01:35Z",
      "author_association": "MEMBER",
      "body": "The cumulative diff as of d44438c7d7b98d790052f8848de4aaa6d0ea7704 looks ok, but the individual commits seem somewhat messed up:\r\n\r\n* d7239b5d84f7f658c504002a8a7df75d1f90792b `test: Expand unit and functional tests for txreconciliation`\r\ncontains non-test changes related to the return value of `RegisterPeer()`.\r\n\r\n* 9cb6b33c62a6d3afe478727f782ae676f78bed07 `p2p, refactor: Switch to enum class for ReconciliationRegisterResult`\r\nhas some indentation changes, and _not_ the enum class changes\r\n\r\n* 29df2d79d1b48621829b98d667c1c899d94d2ed5 `p2p, refactor: Minor code improvements`\r\nhas some adverse indentation changes and introduces the unnecessary `{` `}`\r\n\r\n* 5a183ddd8d8f46e6b89cce3a24ab3d8c9b5ddac4 `p2p, refactor: Extend logs for unexpected sendtxrcncl`\r\nfixes the adverse indentation from 29df2d79d1b48621829b98d667c1c899d94d2ed5 but not the unnecessary `{` `}`",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#issuecomment-1312500989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26359"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJjODRlMjRhNGYwNzM2OTE5ZWE0YTc2ZjdkNDUwODU1ODc2MjVhYmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc84e24a4f0736919ea4a76f7d45085587625aba",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bc84e24a4f0736919ea4a76f7d45085587625aba",
      "tree": {
        "sha": "6c76f7863275491bf8ab758222df8f194b1838d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c76f7863275491bf8ab758222df8f194b1838d2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a60f729e293dcd11ca077b7c1c72b06119437faa",
          "sha": "a60f729e293dcd11ca077b7c1c72b06119437faa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a60f729e293dcd11ca077b7c1c72b06119437faa"
        }
      ],
      "message": "p2p, refactor: Switch to enum class for ReconciliationRegisterResult\n\nWhile doing this, add a new value: ALREADY_REGISTERED.",
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T09:37:28Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T09:37:28Z"
      },
      "sha": "bc84e24a4f0736919ea4a76f7d45085587625aba"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFjNmVlNWJhMjExZDA1ODY5ODAwNDk3ZDZiNTE4ZWExZGRkMmM3MTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac6ee5ba211d05869800497d6b518ea1ddd2c718",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ac6ee5ba211d05869800497d6b518ea1ddd2c718",
      "tree": {
        "sha": "b02d0814084de4b1f52e2c0c8107fd212f8035e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b02d0814084de4b1f52e2c0c8107fd212f8035e5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc84e24a4f0736919ea4a76f7d45085587625aba",
          "sha": "bc84e24a4f0736919ea4a76f7d45085587625aba",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bc84e24a4f0736919ea4a76f7d45085587625aba"
        }
      ],
      "message": "test: Expand unit and functional tests for txreconciliation",
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T09:40:15Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T09:11:52Z"
      },
      "sha": "ac6ee5ba211d05869800497d6b518ea1ddd2c718"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwYzVkZWM4MThmNjBlODI5N2Q0MmI0OWE5MTlhYTgyYzQyODIxYjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00c5dec818f60e8297d42b49a919aa82c42821b5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/00c5dec818f60e8297d42b49a919aa82c42821b5",
      "tree": {
        "sha": "eb5565dadaf58d860421bf9449de2c0b82182d9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb5565dadaf58d860421bf9449de2c0b82182d9a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac6ee5ba211d05869800497d6b518ea1ddd2c718",
          "sha": "ac6ee5ba211d05869800497d6b518ea1ddd2c718",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ac6ee5ba211d05869800497d6b518ea1ddd2c718"
        }
      ],
      "message": "p2p: Clarify sendtxrcncl policies",
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T09:40:17Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T09:18:31Z"
      },
      "sha": "00c5dec818f60e8297d42b49a919aa82c42821b5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg3NDkzZTExMmVlOTE5MjNhZGYzOGI3NTQ5MWJlZGViNDVmODdjODA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87493e112ee91923adf38b75491bedeb45f87c80",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/87493e112ee91923adf38b75491bedeb45f87c80",
      "tree": {
        "sha": "c63485b009b762b4038e24d6a95e983b43705689",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c63485b009b762b4038e24d6a95e983b43705689"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00c5dec818f60e8297d42b49a919aa82c42821b5",
          "sha": "00c5dec818f60e8297d42b49a919aa82c42821b5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/00c5dec818f60e8297d42b49a919aa82c42821b5"
        }
      ],
      "message": "p2p, test, refactor: Minor code improvements",
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T09:49:49Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T09:45:52Z"
      },
      "sha": "87493e112ee91923adf38b75491bedeb45f87c80"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE0MjYzYzEzZjE1M2I4NGU1MDE5MTM2NmE2ZjY0Zjg4NGVkNGRkZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14263c13f153b84e50191366a6f64f884ed4ddd9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/14263c13f153b84e50191366a6f64f884ed4ddd9",
      "tree": {
        "sha": "ae0ca5d8dfbde96cc3a85efae0f9e1fd08337d3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae0ca5d8dfbde96cc3a85efae0f9e1fd08337d3d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87493e112ee91923adf38b75491bedeb45f87c80",
          "sha": "87493e112ee91923adf38b75491bedeb45f87c80",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/87493e112ee91923adf38b75491bedeb45f87c80"
        }
      ],
      "message": "p2p, refactor: Extend logs for unexpected sendtxrcncl",
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T10:04:07Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-10-25T08:44:11Z"
      },
      "sha": "14263c13f153b84e50191366a6f64f884ed4ddd9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2MzM5ZDI5YjEwYzlmYjU5N2FmOTI4YzIxYzM0OTQ1ZDc2YmJkMjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46339d29b10c9fb597af928c21c34945d76bbd22",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/46339d29b10c9fb597af928c21c34945d76bbd22",
      "tree": {
        "sha": "29973ea22e3dd724ebd3c78b615388a0e41b81ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29973ea22e3dd724ebd3c78b615388a0e41b81ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14263c13f153b84e50191366a6f64f884ed4ddd9",
          "sha": "14263c13f153b84e50191366a6f64f884ed4ddd9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/14263c13f153b84e50191366a6f64f884ed4ddd9"
        }
      ],
      "message": "test, refactor: Reorder sendtxrcncl tests for better readability",
      "committer": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-14T10:04:08Z"
      },
      "author": {
        "name": "Gleb Naumenko",
        "email": "naumenko.gs@gmail.com",
        "date": "2022-11-02T11:16:19Z"
      },
      "sha": "46339d29b10c9fb597af928c21c34945d76bbd22"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7802429180,
      "node_id": "HRFPE_lADOABII585Ug_9TzwAAAAHRD578",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7802429180",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-14T10:04:42Z"
    },
    {
      "event": "commented",
      "id": 1313411392,
      "node_id": "IC_kwDOABII585OSRFA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1313411392",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-14T10:04:57Z",
      "updated_at": "2022-11-14T10:04:57Z",
      "author_association": "MEMBER",
      "body": "@vasild sorry for that mess, addressed everything without introducing behavior changes.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#issuecomment-1313411392",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26359"
    },
    {
      "event": "mentioned",
      "id": 7802431619,
      "node_id": "MEE_lADOABII585Ug_9TzwAAAAHRD6iD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7802431619",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-14T10:04:57Z"
    },
    {
      "event": "subscribed",
      "id": 7802431631,
      "node_id": "SE_lADOABII585Ug_9TzwAAAAHRD6iP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7802431631",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-14T10:04:57Z"
    },
    {
      "event": "reviewed",
      "id": 1178832869,
      "node_id": "PRR_kwDOABII585GQ4_l",
      "url": null,
      "actor": null,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 46339d29b10c9fb597af928c21c34945d76bbd22\r\n\r\n:sun_with_face: ",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1178832869",
      "submitted_at": "2022-11-14T10:42:38Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "reviewed",
      "id": 1181722780,
      "node_id": "PRR_kwDOABII585Gb6ic",
      "url": null,
      "actor": null,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 46339d2\r\n\r\nDid another parse of the code changes to verify there wasn't functional modification.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1181722780",
      "submitted_at": "2022-11-16T00:30:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "review_requested",
      "id": 7822203291,
      "node_id": "RRE_lADOABII585Ug_9TzwAAAAHSPVmb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7822203291",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-16T10:07:40Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1198306717,
      "node_id": "PRR_kwDOABII585HbLWd",
      "url": null,
      "actor": null,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code Review ACK 46339d29b10c9fb597af928c21c34945d76bbd22",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#pullrequestreview-1198306717",
      "submitted_at": "2022-11-29T20:26:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
    },
    {
      "event": "merged",
      "id": 7920851873,
      "node_id": "ME_lADOABII585Ug_9TzwAAAAHYHpuh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7920851873",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bcee94d1078ccb7812dc12bfcb0c9d9a799a6d3b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bcee94d1078ccb7812dc12bfcb0c9d9a799a6d3b",
      "created_at": "2022-11-30T10:53:08Z"
    },
    {
      "event": "closed",
      "id": 7920851919,
      "node_id": "CE_lADOABII585Ug_9TzwAAAAHYHpvP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7920851919",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-30T10:53:09Z"
    },
    {
      "event": "referenced",
      "id": 7932959748,
      "node_id": "REFE_lADOABII585Ug_9TzwAAAAHY11wE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7932959748",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "69de47c40d2ac658998257bd445137589a6525d0",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/69de47c40d2ac658998257bd445137589a6525d0",
      "created_at": "2022-12-01T15:19:58Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001578644",
      "pull_request_review_id": 1150648334,
      "id": 1001578644,
      "node_id": "PRRC_kwDOABII5847suCU",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f:\r\n\r\nThere are several unrelated things:\r\n\r\n* If this feeler check isn't dead code here, it should probably be moved to the previous section that initializes the TxRelay struct. (And maybe in a separate pull request, as it would change non-erlay code?) This would mean that the tx relay struct isn't initialized and also m_relays_txs isn't set, which is then checked in this line here.\r\n* Unrelated, I wonder if `RejectIncomingTxs` should be used here. The difference is that the `Relay` permission will be carved out. I don't know the answer, I just wanted to raise the point.",
      "created_at": "2022-10-21T09:30:08Z",
      "updated_at": "2022-10-21T09:30:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1001578644",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001578644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001625212",
      "pull_request_review_id": 1150717088,
      "id": 1001625212,
      "node_id": "PRRC_kwDOABII5847s5Z8",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "in_reply_to_id": 1001578644,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good point, i'll look closer.",
      "created_at": "2022-10-21T10:20:13Z",
      "updated_at": "2022-10-21T10:20:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1001625212",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001625212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001842102",
      "pull_request_review_id": 1151036674,
      "id": 1001842102,
      "node_id": "PRRC_kwDOABII5847tuW2",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "in_reply_to_id": 1001578644,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1. From my understanding, this code isn't dead. The feeler check could indeed be moved above. Not sure what's the best way to attack this w.r.t. this PR (surely, a separate PR is the best option, but is that gonna get merged sooner...)\r\n2. Yeah checking for tx relay support is kinda ugly in general. `RejectIncomingTxs` is of course relevant, but not 100% match, if you just look at the name. I'd better keep the code as-is now, and refactor this separately (dunno how yet)",
      "created_at": "2022-10-21T14:14:38Z",
      "updated_at": "2022-10-21T14:14:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1001842102",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001842102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1002071153",
      "pull_request_review_id": 1151382479,
      "id": 1002071153,
      "node_id": "PRRC_kwDOABII5847umRx",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "in_reply_to_id": 1001578644,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "By the latter I mean that even `RejectIncomingTxs`-ing (whatever that could mean) doesn't necessarily mean we should reject reconciling. Might be useful to reconcile even if we \"should reject\". Not 100% sure (certainly not how Erlay intends to work in the default case).\r\n\r\nAnyway, not changing the code until further consideration.",
      "created_at": "2022-10-21T18:20:16Z",
      "updated_at": "2022-10-21T18:31:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1002071153",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1002071153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004664239",
      "pull_request_review_id": 1155070256,
      "id": 1004664239,
      "node_id": "PRRC_kwDOABII58474fWv",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "in_reply_to_id": 1001578644,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Not sure what's the best way to attack this w.r.t. this PR \r\n\r\nHappy to work on this, unless you want to",
      "created_at": "2022-10-25T15:47:47Z",
      "updated_at": "2022-10-25T15:47:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1004664239",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004664239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004919267",
      "pull_request_review_id": 1155432194,
      "id": 1004919267,
      "node_id": "PRRC_kwDOABII58475dnj",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "in_reply_to_id": 1001578644,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was waiting for another opinion to show up here :)\r\nFeel free to open a separate PR with that stuff, I will ack. Or, if you think it makes more sense here,, then I can just add a commit here, that i can do.",
      "created_at": "2022-10-25T20:08:48Z",
      "updated_at": "2022-10-25T20:08:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1004919267",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1004919267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1005876083",
      "pull_request_review_id": 1156842842,
      "id": 1005876083,
      "node_id": "PRRC_kwDOABII58479HNz",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "in_reply_to_id": 1001578644,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Heh, maybe it should be left as-is here. We also send a lot of other messages, such as `GETADDR`, so the `SENDTXRCNCL` message seems to be consistent. Changing the tx-relay allocation could still be done, though. See https://github.com/bitcoin/bitcoin/pull/26396",
      "created_at": "2022-10-26T15:59:48Z",
      "updated_at": "2022-10-26T15:59:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1005876083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1005876083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007907629",
      "pull_request_review_id": 1159830143,
      "id": 1007907629,
      "node_id": "PRRC_kwDOABII5848E3Mt",
      "diff_hunk": "@@ -12,71 +12,65 @@ BOOST_FIXTURE_TEST_SUITE(txreconciliation_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(RegisterPeerTest)\n {\n-    TxReconciliationTracker tracker(1);\n+    TxReconciliationTracker tracker(TXRECONCILIATION_VERSION);\n     const uint64_t salt = 0;\n \n     // Prepare a peer for reconciliation.\n     tracker.PreRegisterPeer(0);\n \n-    // Both roles are false, don't register.\n-    BOOST_CHECK(tracker.RegisterPeer(/*peer_id=*/0, /*is_peer_inbound=*/true,\n-                                      /*is_peer_recon_initiator=*/false,\n-                                      /*is_peer_recon_responder=*/false,\n-                                      /*peer_recon_version=*/1, salt) ==\n-                    ReconciliationRegisterResult::PROTOCOL_VIOLATION);\n-\n-    // Invalid roles for the given connection direction.\n-    BOOST_CHECK(tracker.RegisterPeer(0, true, false, true, 1, salt) == ReconciliationRegisterResult::PROTOCOL_VIOLATION);\n-    BOOST_CHECK(tracker.RegisterPeer(0, false, true, false, 1, salt) == ReconciliationRegisterResult::PROTOCOL_VIOLATION);\n-\n     // Invalid version.\n-    BOOST_CHECK(tracker.RegisterPeer(0, true, true, false, 0, salt) == ReconciliationRegisterResult::PROTOCOL_VIOLATION);\n+    BOOST_CHECK_EQUAL(tracker.RegisterPeer(/*peer_id=*/0, /*is_peer_inbound=*/true,\n+                                        /*peer_recon_version=*/0, salt), ReconciliationRegisterResult::PROTOCOL_VIOLATION);\n \n-    // Valid registration.\n+    // Valid registration (inbound and outbound peers).\n     BOOST_REQUIRE(!tracker.IsPeerRegistered(0));\n-    BOOST_REQUIRE(tracker.RegisterPeer(0, true, true, false, 1, salt) == ReconciliationRegisterResult::SUCCESS);\n+    BOOST_REQUIRE_EQUAL(tracker.RegisterPeer(0, true, 1, salt), ReconciliationRegisterResult::SUCCESS);\n     BOOST_CHECK(tracker.IsPeerRegistered(0));\n-\n-    // Reconciliation version is higher than ours, should be able to register.",
      "path": "src/test/txreconciliation_tests.cpp",
      "position": 35,
      "original_position": 34,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit 2269d91d2a `p2p: Drop roles from sendtxrcncl` there is this change:\r\n\r\n```diff\r\n     // Reconciliation version is higher than ours, should be able to register.\r\n     BOOST_REQUIRE(!tracker.IsPeerRegistered(1));\r\n     tracker.PreRegisterPeer(1);\r\n-    BOOST_REQUIRE(tracker.RegisterPeer(1, true, true, false, 2, salt) == ReconciliationRegisterResult::SUCCESS);\r\n+    BOOST_REQUIRE(tracker.RegisterPeer(1, false, 1, salt) == ReconciliationRegisterResult::SUCCESS);\r\n     BOOST_CHECK(tracker.IsPeerRegistered(1));\r\n```\r\n\r\nI think that should be\r\n\r\n```diff\r\n+    BOOST_REQUIRE(tracker.RegisterPeer(1, true, 2, salt) == ReconciliationRegisterResult::SUCCESS);\r\n```\r\n\r\n(it is further modified by subsequent commits and I think that the cumulative diff is ok, but still each commit should make sense on its own)",
      "created_at": "2022-10-28T10:22:23Z",
      "updated_at": "2022-10-28T11:47:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1007907629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007907629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007934092",
      "pull_request_review_id": 1159830143,
      "id": 1007934092,
      "node_id": "PRRC_kwDOABII5848E9qM",
      "diff_hunk": "@@ -3497,45 +3494,41 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit 60a066da70 `p2p: Disconnect peer after sendtxrcncl if we are in blocksonly`\r\n\r\nIt could happen that `m_ignore_incoming_txs` is `true` (thus we disconnect the peer), but we did _not_ indicate no tx relay to that peer as mentioned in the log message. That is - we sent `relay=true` in the `VERSION` message.\r\n\r\nThis could happen if the peer has `NetPermissionFlags::Relay` permission.\r\n\r\nOr the other way around - we may send `relay=false` in the `VERSION` message, but not disconnect the peer here (block-only or feeler connections).\r\n\r\nWould it be better to use `PeerManagerImpl::RejectIncomingTxs()` here instead of `m_ignore_incoming_txs`? The relay flag in the `VERSION` message is set based on it in `PeerManagerImpl::PushNodeVersion()`.",
      "created_at": "2022-10-28T10:55:26Z",
      "updated_at": "2022-10-28T11:47:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1007934092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007934092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": 3502,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007948789",
      "pull_request_review_id": 1159830143,
      "id": 1007948789,
      "node_id": "PRRC_kwDOABII5848FBP1",
      "diff_hunk": "@@ -3497,45 +3494,41 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }",
      "path": "src/net_processing.cpp",
      "position": 41,
      "original_position": 35,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may also happen that we disconnect the peer because `peer->GetTxRelay()` is not set because the peer did not sent us relay=true in their `VERSION` message and we don't provide bloom filter to them. I think this warrants a separate log message, something like:\r\n\r\n\"sendtxrcncl received from peer=%d that indicated no tx relay; disconnecting\\n\"",
      "created_at": "2022-10-28T11:15:10Z",
      "updated_at": "2022-10-28T11:47:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1007948789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007948789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3510,
      "original_line": 3510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007948957",
      "pull_request_review_id": 1159830143,
      "id": 1007948957,
      "node_id": "PRRC_kwDOABII5848FBSd",
      "diff_hunk": "@@ -3497,45 +3494,41 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }",
      "path": "src/net_processing.cpp",
      "position": 41,
      "original_position": 35,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about peers that send us relay=false in the VERSION message but we provide bloom filters to them. The code in this PR would not disconnect such a peer, but I think it should, right?",
      "created_at": "2022-10-28T11:15:24Z",
      "updated_at": "2022-10-28T11:47:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1007948957",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007948957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3510,
      "original_line": 3510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007975709",
      "pull_request_review_id": 1159830143,
      "id": 1007975709,
      "node_id": "PRRC_kwDOABII5848FH0d",
      "diff_hunk": "@@ -3497,45 +3494,41 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        bool is_peer_initiator, is_peer_responder;\n-        uint32_t peer_txreconcl_version;\n-        uint64_t remote_salt;\n-        vRecv >> is_peer_initiator >> is_peer_responder >> peer_txreconcl_version >> remote_salt;\n-\n         if (m_txreconciliation->IsPeerRegistered(pfrom.GetId())) {\n-            // A peer is already registered, meaning we already received SENDTXRCNCL from them.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d (sendtxrcncl received from already registered peer); disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n+        uint32_t peer_txreconcl_version;\n+        uint64_t remote_salt;\n+        vRecv >> peer_txreconcl_version >> remote_salt;\n+\n         const ReconciliationRegisterResult result = m_txreconciliation->RegisterPeer(pfrom.GetId(), pfrom.IsInboundConn(),\n-                                                                                is_peer_initiator, is_peer_responder,\n-                                                                                peer_txreconcl_version,\n-                                                                                remote_salt);\n+                                                                                peer_txreconcl_version, remote_salt);\n \n-        // If it's a protocol violation, disconnect.\n-        // If the peer was not found (but something unexpected happened) or it was registered,\n-        // nothing to be done.\n         if (result == ReconciliationRegisterResult::PROTOCOL_VIOLATION) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n+\n+        if (result == ReconciliationRegisterResult::NOT_FOUND) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"Ignore unexpected txreconciliation signal from peer=%d\\n\", pfrom.GetId());\n+            return;\n+        }\n+\n         return;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: the `return` inside the `if` is unnecessary",
      "created_at": "2022-10-28T11:46:55Z",
      "updated_at": "2022-10-28T11:47:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1007975709",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007975709"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": 3527,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007983022",
      "pull_request_review_id": 1159940931,
      "id": 1007983022,
      "node_id": "PRRC_kwDOABII5848FJmu",
      "diff_hunk": "@@ -3497,45 +3494,41 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        bool is_peer_initiator, is_peer_responder;\n-        uint32_t peer_txreconcl_version;\n-        uint64_t remote_salt;\n-        vRecv >> is_peer_initiator >> is_peer_responder >> peer_txreconcl_version >> remote_salt;\n-\n         if (m_txreconciliation->IsPeerRegistered(pfrom.GetId())) {\n-            // A peer is already registered, meaning we already received SENDTXRCNCL from them.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d (sendtxrcncl received from already registered peer); disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n+        uint32_t peer_txreconcl_version;\n+        uint64_t remote_salt;\n+        vRecv >> peer_txreconcl_version >> remote_salt;\n+\n         const ReconciliationRegisterResult result = m_txreconciliation->RegisterPeer(pfrom.GetId(), pfrom.IsInboundConn(),\n-                                                                                is_peer_initiator, is_peer_responder,\n-                                                                                peer_txreconcl_version,\n-                                                                                remote_salt);\n+                                                                                peer_txreconcl_version, remote_salt);\n \n-        // If it's a protocol violation, disconnect.\n-        // If the peer was not found (but something unexpected happened) or it was registered,\n-        // nothing to be done.\n         if (result == ReconciliationRegisterResult::PROTOCOL_VIOLATION) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n+\n+        if (result == ReconciliationRegisterResult::NOT_FOUND) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"Ignore unexpected txreconciliation signal from peer=%d\\n\", pfrom.GetId());\n+            return;\n+        }\n+\n         return;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": 1007975709,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "i thought this improves readability somehow... good to drop.",
      "created_at": "2022-10-28T11:56:07Z",
      "updated_at": "2022-10-28T11:56:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1007983022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007983022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": 3527,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007989670",
      "pull_request_review_id": 1159951251,
      "id": 1007989670,
      "node_id": "PRRC_kwDOABII5848FLOm",
      "diff_hunk": "@@ -3497,45 +3494,41 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }",
      "path": "src/net_processing.cpp",
      "position": 41,
      "original_position": 35,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": 1007948957,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "These flags are confusing :(\r\nIndeed, having `fRelay=false` I think is not currently compatible with reconciliations.\r\n\r\nSo, instead of `GetTxRelay()`, we better look at `pfrom.m_relays_txs`, right?",
      "created_at": "2022-10-28T12:04:12Z",
      "updated_at": "2022-10-28T12:04:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1007989670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1007989670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3510,
      "original_line": 3510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1008028799",
      "pull_request_review_id": 1160010089,
      "id": 1008028799,
      "node_id": "PRRC_kwDOABII5848FUx_",
      "diff_hunk": "@@ -3497,45 +3494,41 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }",
      "path": "src/net_processing.cpp",
      "position": 41,
      "original_position": 35,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": 1007948957,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> These flags are confusing :(\r\n\r\nYes! :frowning_face:\r\n\r\n> Indeed, having `fRelay=false` I think is not currently compatible with reconciliations.\r\n\r\nI guess you mean the relay flag in the either VERSION message - sent or received, right?\r\n\r\nWhat about clarifying the BIP:\r\n\r\n```diff\r\n-sendtxrcncl ... Must not be sent if peer specified no support for transaction relay (fRelay=0) in \"version\". Otherwise, the sender should be disconnected.\r\n+sendtxrcncl ... Must not be sent if either peer specified no support for transaction relay (fRelay=0) in \"version\". Otherwise, the sender should be disconnected.\r\n```\r\n\r\n> So, instead of `GetTxRelay()`, we better look at `pfrom.m_relays_txs`, right?\r\n\r\nYes, this is closer to checking whether the peer sent us `relay=false` in `VERSION`. However it is not identical - `fRelay` may be `true`, but `pfrom.m_relays_txs` be `false` if `pfrom.IsBlockOnlyConn()`. It is ok to accept this discrepancy because for block-only connections we sent `relay=false` in our `VERSION` message.\r\n\r\nThat said, maybe the condition should be:\r\n\r\n```diff\r\n-if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\r\n+if (!pfrom.m_relays_txs /* they sent relay=false */ ||\r\n+    RejectIncomingTxs(pfrom) /* we sent relay=false */) {\r\n```",
      "created_at": "2022-10-28T12:49:25Z",
      "updated_at": "2022-10-28T12:49:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1008028799",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1008028799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3510,
      "original_line": 3510,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1008948272",
      "pull_request_review_id": 1161214019,
      "id": 1008948272,
      "node_id": "PRRC_kwDOABII5848I1Qw",
      "diff_hunk": "@@ -116,24 +115,11 @@ class TxReconciliationTracker::Impl\n         // v1 is the lowest version, so suggesting something below must be a protocol violation.\n         if (recon_version < 1) return PROTOCOL_VIOLATION;\n \n-        // Must match SENDTXRCNCL logic.\n-        const bool they_initiate = is_peer_recon_initiator && is_peer_inbound;\n-        const bool we_initiate = !is_peer_inbound && is_peer_recon_responder;\n-\n-        // If we ever announce support for both requesting and responding, this will need\n-        // tie-breaking. For now, this is mutually exclusive because both are based on the\n-        // inbound flag.\n-        assert(!(they_initiate && we_initiate));\n-\n-        // The peer set both flags to false, we treat it as a protocol violation.\n-        if (!(they_initiate || we_initiate)) return PROTOCOL_VIOLATION;\n-\n-        LogPrintLevel(BCLog::TXRECONCILIATION, BCLog::Level::Debug, \"Register peer=%d with the following params: \" /* Continued */\n-                                                                    \"we_initiate=%i, they_initiate=%i.\\n\",\n-                      peer_id, we_initiate, they_initiate);",
      "path": "src/node/txreconciliation.cpp",
      "position": 73,
      "original_position": 28,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2269d91d2a5653116e0b2a4937d1c2e85413e92f",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you should update `SENDTXRCNCL` , this still mentioning the role assignment based on booleans. I would also suggest to document somewhere, in `protocol.h` or `txreconciliation.cpp`, near to `m_we_initiate` how the role assignment is made. ",
      "created_at": "2022-10-30T23:52:14Z",
      "updated_at": "2022-10-30T23:59:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1008948272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1008948272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1008949154",
      "pull_request_review_id": 1161214019,
      "id": 1008949154,
      "node_id": "PRRC_kwDOABII5848I1ei",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "d2b402ca64375e65d15fb6d9ee871012f6eeb68b",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What about `IsAddrFetchConn()` ? I think we should restrain ourselves to send `ConnectionType::ADDR_FETCH`. ",
      "created_at": "2022-10-30T23:57:34Z",
      "updated_at": "2022-10-30T23:59:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1008949154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1008949154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009134521",
      "pull_request_review_id": 1161474759,
      "id": 1009134521,
      "node_id": "PRRC_kwDOABII5848Jiu5",
      "diff_hunk": "@@ -3497,45 +3494,41 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        if (!peer->GetTxRelay() || m_ignore_incoming_txs) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        bool is_peer_initiator, is_peer_responder;\n-        uint32_t peer_txreconcl_version;\n-        uint64_t remote_salt;\n-        vRecv >> is_peer_initiator >> is_peer_responder >> peer_txreconcl_version >> remote_salt;\n-\n         if (m_txreconciliation->IsPeerRegistered(pfrom.GetId())) {\n-            // A peer is already registered, meaning we already received SENDTXRCNCL from them.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d (sendtxrcncl received from already registered peer); disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n+        uint32_t peer_txreconcl_version;\n+        uint64_t remote_salt;\n+        vRecv >> peer_txreconcl_version >> remote_salt;\n+\n         const ReconciliationRegisterResult result = m_txreconciliation->RegisterPeer(pfrom.GetId(), pfrom.IsInboundConn(),\n-                                                                                is_peer_initiator, is_peer_responder,\n-                                                                                peer_txreconcl_version,\n-                                                                                remote_salt);\n+                                                                                peer_txreconcl_version, remote_salt);\n \n-        // If it's a protocol violation, disconnect.\n-        // If the peer was not found (but something unexpected happened) or it was registered,\n-        // nothing to be done.\n         if (result == ReconciliationRegisterResult::PROTOCOL_VIOLATION) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n+\n+        if (result == ReconciliationRegisterResult::NOT_FOUND) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"Ignore unexpected txreconciliation signal from peer=%d\\n\", pfrom.GetId());\n+            return;\n+        }\n+\n         return;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2b9cd5f7b6c0cba03da7b234eb638296eeb05cfa",
      "in_reply_to_id": 1007975709,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I decided to keep it unless there are strong objections.",
      "created_at": "2022-10-31T08:16:20Z",
      "updated_at": "2022-10-31T08:16:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1009134521",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009134521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": 3527,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009168380",
      "pull_request_review_id": 1161522905,
      "id": 1009168380,
      "node_id": "PRRC_kwDOABII5848Jq_8",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "d2b402ca64375e65d15fb6d9ee871012f6eeb68b",
      "in_reply_to_id": 1008949154,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Similarly to #26396, i think this should be fixed above (`m_relays_tx`), and done in a separate PR :)\r\nLet's hope Marco updates that one for now.",
      "created_at": "2022-10-31T08:57:27Z",
      "updated_at": "2022-10-31T08:57:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1009168380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009168380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010993852",
      "pull_request_review_id": 1164181319,
      "id": 1010993852,
      "node_id": "PRRC_kwDOABII5848Qoq8",
      "diff_hunk": "@@ -3273,8 +3273,9 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             // - protocol version per the VERSION message supports WTXID_RELAY;\n             // - we intended to exchange transactions over this connection while establishing it\n             //   and the peer indicated support for transaction relay in the VERSION message;\n-            // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            // - we are not in -blocksonly mode;\n+            // - this is not a feeler.\n+            if (pfrom.m_relays_txs && !m_ignore_incoming_txs && !pfrom.IsFeelerConn()) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "cfd5c27dcdc39cf7a65c56c3dbf3bf60ea0c475f",
      "in_reply_to_id": 1001578644,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "#26396 seems likely to be accepted, so I agree that the commit can be removed here.",
      "created_at": "2022-11-01T23:30:46Z",
      "updated_at": "2022-11-01T23:30:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1010993852",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010993852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1015725959",
      "pull_request_review_id": 1170841389,
      "id": 1015725959,
      "node_id": "PRRC_kwDOABII5848ir-H",
      "diff_hunk": "@@ -81,31 +82,28 @@ class TxReconciliationTracker::Impl\n     {\n         AssertLockNotHeld(m_txreconciliation_mutex);\n         LOCK(m_txreconciliation_mutex);\n-        // We do not support txreconciliation salt/version updates.\n-        assert(m_states.find(peer_id) == m_states.end());\n \n         LogPrintLevel(BCLog::TXRECONCILIATION, BCLog::Level::Debug, \"Pre-register peer=%d\\n\", peer_id);\n         const uint64_t local_salt{GetRand(UINT64_MAX)};\n \n         // We do this exactly once per peer (which are unique by NodeId, see GetNewNodeId) so it's\n         // safe to assume we don't have this record yet.\n-        Assert(m_states.emplace(peer_id, local_salt).second);\n+        Assume(m_states.emplace(peer_id, local_salt).second);\n         return local_salt;\n     }\n \n-    ReconciliationRegisterResult RegisterPeer(NodeId peer_id, bool is_peer_inbound, bool is_peer_recon_initiator,\n-                                     bool is_peer_recon_responder, uint32_t peer_recon_version,\n+    ReconciliationRegisterResult RegisterPeer(NodeId peer_id, bool is_peer_inbound, uint32_t peer_recon_version,\n                                      uint64_t remote_salt) EXCLUSIVE_LOCKS_REQUIRED(!m_txreconciliation_mutex)\n     {\n         AssertLockNotHeld(m_txreconciliation_mutex);\n         LOCK(m_txreconciliation_mutex);\n         auto recon_state = m_states.find(peer_id);\n \n         // A peer should be in the pre-registered state to proceed here.\n-        if (recon_state == m_states.end()) return NOT_FOUND;\n+        if (recon_state == m_states.end()) return ReconciliationRegisterResult::NOT_FOUND;\n         uint64_t* local_salt = std::get_if<uint64_t>(&recon_state->second);\n         // A peer is already registered. This should be checked by the caller.\n-        Assume(local_salt);\n+        assert(local_salt);",
      "path": "src/node/txreconciliation.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2193344280c53cfd2145d5c5e60f774b5a73b1ea",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is some inconsistency between handling these edge cases. This `assert()` also looks a bit dangerous to me wrt to future changes - it seems that if the peer sends us two times `SENDTXRCNCL` that could trigger a remote crash by tripping this `assert()`. The only thing that is stopping this now is the `IsPeerRegistered()` in the caller, but it is not obvious there that if it is removed, grave things will ensue. I can imagine it getting wiped away by a future \"refactor\".\r\n\r\nIf the caller has checked `IsPeerRegistered()` before this, then we will never return `NOT_FOUND` from here either. So that may as well be an assert too :fire: \r\n\r\nWhat about not having such an assert at all and returning `ReconciliationRegisterResult::NOT_FOUND` if the peer is not pre-registered (like now) and `ReconciliationRegisterResult::ALREADY_REGISTERED` if the peer is already registered? Then the caller need not to check `IsPeerRegistered()` before calling this method.",
      "created_at": "2022-11-07T17:48:16Z",
      "updated_at": "2022-11-08T08:40:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1015725959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1015725959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": 102,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1015731735",
      "pull_request_review_id": 1170841389,
      "id": 1015731735,
      "node_id": "PRRC_kwDOABII5848itYX",
      "diff_hunk": "@@ -3273,17 +3273,14 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         if (greatest_common_version >= WTXID_RELAY_VERSION && m_txreconciliation) {",
      "path": "src/net_processing.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2193344280c53cfd2145d5c5e60f774b5a73b1ea",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure if that is better, just an idea, feel free to ignore:\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex 376a263183..0ed7781b2c 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -3265,26 +3265,27 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\r\n             (fRelay || (peer->m_our_services & NODE_BLOOM))) {\r\n             auto* const tx_relay = peer->SetTxRelay();\r\n             {\r\n                 LOCK(tx_relay->m_bloom_filter_mutex);\r\n                 tx_relay->m_relay_txs = fRelay; // set to true after we get the first filter* message\r\n             }\r\n-            if (fRelay) pfrom.m_relays_txs = true;\r\n-        }\r\n-\r\n-        if (greatest_common_version >= WTXID_RELAY_VERSION && m_txreconciliation) {\r\n-            // Per BIP-330, we announce txreconciliation support if:\r\n-            // - protocol version per the peer's VERSION message supports WTXID_RELAY;\r\n-            // - transaction relay is supported per the peer's VERSION message (see m_relays_txs);\r\n-            // - this is not a block-relay-only connection and not a feeler (see m_relays_txs);\r\n-            // - this is not an addr fetch connection;\r\n-            // - we are not in -blocksonly mode.\r\n-            if (pfrom.m_relays_txs && !pfrom.IsAddrFetchConn() && !m_ignore_incoming_txs) {\r\n-                const uint64_t recon_salt = m_txreconciliation->PreRegisterPeer(pfrom.GetId());\r\n-                m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::SENDTXRCNCL,\r\n-                                                             TXRECONCILIATION_VERSION, recon_salt));\r\n+            if (fRelay) {\r\n+                pfrom.m_relays_txs = true;\r\n+\r\n+                if (greatest_common_version >= WTXID_RELAY_VERSION &&\r\n+                    m_txreconciliation &&\r\n+                    !pfrom.IsAddrFetchConn() && !m_ignore_incoming_txs) {\r\n+                    // Per BIP-330, we announce txreconciliation support if:\r\n+                    // - protocol version per the peer's VERSION message supports WTXID_RELAY;\r\n+                    // - transaction relay is supported per the peer's VERSION message (see m_relays_txs);\r\n+                    // - this is not a block-relay-only connection and not a feeler (see m_relays_txs);\r\n+                    // - this is not an addr fetch connection;\r\n+                    // - we are not in -blocksonly mode.\r\n+                    const uint64_t recon_salt = m_txreconciliation->PreRegisterPeer(pfrom.GetId());\r\n+                    m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::SENDTXRCNCL, TXRECONCILIATION_VERSION, recon_salt));\r\n+                }\r\n             }\r\n         }\r\n \r\n         m_connman.PushMessage(&pfrom, msg_maker.Make(NetMsgType::VERACK));\r\n \r\n         // Potentially mark this peer as a preferred download peer.\r\n```\r\n",
      "created_at": "2022-11-07T17:54:36Z",
      "updated_at": "2022-11-07T17:56:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1015731735",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1015731735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3274,
      "original_line": 3274,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016401382",
      "pull_request_review_id": 1171805065,
      "id": 1016401382,
      "node_id": "PRRC_kwDOABII5848lQ3m",
      "diff_hunk": "@@ -3273,17 +3273,14 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         if (greatest_common_version >= WTXID_RELAY_VERSION && m_txreconciliation) {",
      "path": "src/net_processing.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "2193344280c53cfd2145d5c5e60f774b5a73b1ea",
      "in_reply_to_id": 1015731735,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure about this — it's kinda difficult either way :) Will see what others say.",
      "created_at": "2022-11-08T10:04:21Z",
      "updated_at": "2022-11-08T10:04:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1016401382",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016401382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3274,
      "original_line": 3274,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016688474",
      "pull_request_review_id": 1172205606,
      "id": 1016688474,
      "node_id": "PRRC_kwDOABII5848mW9a",
      "diff_hunk": "@@ -3500,45 +3497,52 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        // Peer must not offer us reconciliations if we specified no tx relay support in VERSION.\n+        if (RejectIncomingTxs(pfrom)) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        bool is_peer_initiator, is_peer_responder;\n-        uint32_t peer_txreconcl_version;\n-        uint64_t remote_salt;\n-        vRecv >> is_peer_initiator >> is_peer_responder >> peer_txreconcl_version >> remote_salt;\n-\n-        if (m_txreconciliation->IsPeerRegistered(pfrom.GetId())) {\n-            // A peer is already registered, meaning we already received SENDTXRCNCL from them.\n-            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d (sendtxrcncl received from already registered peer); disconnecting\\n\", pfrom.GetId());\n+        // Peer must not offer us reconciliations if they specified no tx relay support in VERSION.\n+        // This flag might also be false in other cases, but the RejectIncomingTxs check above\n+        // eliminates them, so that this flag fully represents what we are looking for.\n+        if (!pfrom.m_relays_txs) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d which indicated no tx relay to us; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n+        uint32_t peer_txreconcl_version;\n+        uint64_t remote_salt;\n+        vRecv >> peer_txreconcl_version >> remote_salt;\n+\n         const ReconciliationRegisterResult result = m_txreconciliation->RegisterPeer(pfrom.GetId(), pfrom.IsInboundConn(),\n-                                                                                is_peer_initiator, is_peer_responder,\n-                                                                                peer_txreconcl_version,\n-                                                                                remote_salt);\n-\n-        // If it's a protocol violation, disconnect.\n-        // If the peer was not found (but something unexpected happened) or it was registered,\n-        // nothing to be done.\n-        if (result == ReconciliationRegisterResult::PROTOCOL_VIOLATION) {\n+                                                                                peer_txreconcl_version, remote_salt);\n+        switch (result) {\n+            case ReconciliationRegisterResult::NOT_FOUND: {\n+                LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"Ignore unexpected txreconciliation signal from peer=%d\\n\", pfrom.GetId());\n+                break;\n+            }\n+            case ReconciliationRegisterResult::SUCCESS:\n+                break;\n+            case ReconciliationRegisterResult::ALREADY_REGISTERED: {\n+                LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d (sendtxrcncl received from already registered peer); disconnecting\\n\", pfrom.GetId());\n+                pfrom.fDisconnect = true;\n+                return;\n+            };",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "1597210a6d244927651b6a4b573b884cc6f9236c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: the `{` `}` brackets shouldn't be necessary.\r\n",
      "created_at": "2022-11-08T14:16:00Z",
      "updated_at": "2022-11-08T14:25:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1016688474",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016688474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": 3534,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 3538,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016699981",
      "pull_request_review_id": 1172205606,
      "id": 1016699981,
      "node_id": "PRRC_kwDOABII5848mZxN",
      "diff_hunk": "@@ -3500,45 +3497,52 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        // Peer must not offer us reconciliations if we specified no tx relay support in VERSION.\n+        if (RejectIncomingTxs(pfrom)) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        bool is_peer_initiator, is_peer_responder;\n-        uint32_t peer_txreconcl_version;\n-        uint64_t remote_salt;\n-        vRecv >> is_peer_initiator >> is_peer_responder >> peer_txreconcl_version >> remote_salt;\n-\n-        if (m_txreconciliation->IsPeerRegistered(pfrom.GetId())) {\n-            // A peer is already registered, meaning we already received SENDTXRCNCL from them.\n-            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d (sendtxrcncl received from already registered peer); disconnecting\\n\", pfrom.GetId());\n+        // Peer must not offer us reconciliations if they specified no tx relay support in VERSION.\n+        // This flag might also be false in other cases, but the RejectIncomingTxs check above\n+        // eliminates them, so that this flag fully represents what we are looking for.\n+        if (!pfrom.m_relays_txs) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d which indicated no tx relay to us; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n+        uint32_t peer_txreconcl_version;\n+        uint64_t remote_salt;\n+        vRecv >> peer_txreconcl_version >> remote_salt;\n+\n         const ReconciliationRegisterResult result = m_txreconciliation->RegisterPeer(pfrom.GetId(), pfrom.IsInboundConn(),",
      "path": "src/net_processing.cpp",
      "position": 60,
      "original_position": 64,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "1597210a6d244927651b6a4b573b884cc6f9236c",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The commit bd1563f72962bb888153d9a6bf804a64a72ff66e `refactor: Switch to enum class for ReconciliationRegisterResult` now contains also the behavioral change of `RegisterPeer()` wrt its return value and the removal of the assert.",
      "created_at": "2022-11-08T14:25:10Z",
      "updated_at": "2022-11-08T14:25:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1016699981",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016699981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3525,
      "original_line": 3525,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018382417",
      "pull_request_review_id": 1174704107,
      "id": 1018382417,
      "node_id": "PRRC_kwDOABII5848s0hR",
      "diff_hunk": "@@ -3525,15 +3525,18 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const ReconciliationRegisterResult result = m_txreconciliation->RegisterPeer(pfrom.GetId(), pfrom.IsInboundConn(),\n                                                                                 peer_txreconcl_version, remote_salt);\n         switch (result) {\n-            case ReconciliationRegisterResult::NOT_FOUND:\n+            case ReconciliationRegisterResult::NOT_FOUND: {\n+                LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"Ignore unexpected txreconciliation signal from peer=%d\\n\", pfrom.GetId());\n+                break;\n+            }\n             case ReconciliationRegisterResult::SUCCESS:\n                 break;\n             case ReconciliationRegisterResult::ALREADY_REGISTERED:\n                 LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d (sendtxrcncl received from already registered peer); disconnecting\\n\", pfrom.GetId());\n                 pfrom.fDisconnect = true;\n                 return;\n             case ReconciliationRegisterResult::PROTOCOL_VIOLATION:\n-                LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d; disconnecting\\n\", pfrom.GetId());\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"txreconciliation protocol violation from peer=%d; disconnecting\\n\", pfrom.GetId());",
      "path": "src/net_processing.cpp",
      "position": 84,
      "original_position": 17,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "5c8c99b128a985e34a8e8244b94efdd972c9dcee",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, if you touch again: indentation changes for the worse here.  Also, usually while case block is indented, the `case` lines aren't indented wrt the `switch` line, see other examples or apply clang-format script.",
      "created_at": "2022-11-09T20:26:32Z",
      "updated_at": "2022-11-09T20:43:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1018382417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018382417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3538,
      "original_line": 3538,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018391241",
      "pull_request_review_id": 1174704107,
      "id": 1018391241,
      "node_id": "PRRC_kwDOABII5848s2rJ",
      "diff_hunk": "@@ -3273,11 +3273,12 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n \n         if (greatest_common_version >= WTXID_RELAY_VERSION && m_txreconciliation) {\n             // Per BIP-330, we announce txreconciliation support if:\n-            // - protocol version per the VERSION message supports WTXID_RELAY;\n-            // - we intended to exchange transactions over this connection while establishing it\n-            //   and the peer indicated support for transaction relay in the VERSION message;\n+            // - protocol version per the peer's VERSION message supports WTXID_RELAY;\n+            // - transaction relay is supported per the peer's VERSION message (see m_relays_txs);\n+            // - this is not a block-relay-only connection and not a feeler (see m_relays_txs);\n+            // - this is not an addr fetch connection;\n             // - we are not in -blocksonly mode.\n-            if (pfrom.m_relays_txs && !m_ignore_incoming_txs) {\n+            if (pfrom.m_relays_txs && !pfrom.IsAddrFetchConn() && !m_ignore_incoming_txs) {",
      "path": "src/net_processing.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "1aa164574d4b163b73849309e497b316fd1c2ea6",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not a big fan of special casing behavior for `AddrFetch` without any tangible benefits (or are there any?) - I'd like to think of them as normal outbound connections, where we just happen to disconnect after we get the GETADDR answer, and while I admit that concerns such as https://github.com/bitcoin/bitcoin/pull/26396#issuecomment-1302421314 aren't super strong, I think it's also easier mental model and less complicated code not to special-case for each message whether AddrFetch connections need it.",
      "created_at": "2022-11-09T20:37:24Z",
      "updated_at": "2022-11-09T20:43:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1018391241",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018391241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3281,
      "original_line": 3281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018532778",
      "pull_request_review_id": 1174917066,
      "id": 1018532778,
      "node_id": "PRRC_kwDOABII5848tZOq",
      "diff_hunk": "@@ -39,7 +39,8 @@ class TxReconciliationState\n      * the following commits.\n      *\n      * Reconciliation protocol assumes using one role consistently: either a reconciliation\n-     * initiator (requesting sketches), or responder (sending sketches). This defines our role.\n+     * initiator (requesting sketches), or responder (sending sketches). This defines our role,\n+     * based on the direction of the p2p connection.",
      "path": "src/node/txreconciliation.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "58786a102ae716332c2d56a00a10726fb7e305f1",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note you have a bunch of references to the term initiator left in `reconciatliation.{h,cpp}`:\r\n\r\n```\r\nsrc/node/txreconciliation.cpp:     * initiator (requesting sketches), or responder (sending sketches). This defines our role,\r\nsrc/node/txreconciliation.h: * 2.  At regular intervals, a txreconciliation initiator requests a sketch from a peer, where a\r\nsrc/node/txreconciliation.h: * 3.  Once the initiator received a sketch from the peer, the initiator computes a local sketch,\r\nsrc/node/txreconciliation.h: * 4b. If the difference was larger than estimated, initial txreconciliation fails. The initiator\r\nsrc/node/txreconciliation.h: * SUCCESS. The initiator knows full symmetrical difference and can request what the initiator is\r\nsrc/node/txreconciliation.h: * FAILURE. The initiator notifies the peer about the failure and announces all transactions from\r\n```\r\nIt's minor, I think they can be addressed in its own commit here or in #26283 to avoid another review round.\r\n",
      "created_at": "2022-11-10T00:15:58Z",
      "updated_at": "2022-11-10T00:18:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1018532778",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018532778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018561069",
      "pull_request_review_id": 1174955040,
      "id": 1018561069,
      "node_id": "PRRC_kwDOABII5848tgIt",
      "diff_hunk": "@@ -39,7 +39,8 @@ class TxReconciliationState\n      * the following commits.\n      *\n      * Reconciliation protocol assumes using one role consistently: either a reconciliation\n-     * initiator (requesting sketches), or responder (sending sketches). This defines our role.\n+     * initiator (requesting sketches), or responder (sending sketches). This defines our role,\n+     * based on the direction of the p2p connection.",
      "path": "src/node/txreconciliation.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "58786a102ae716332c2d56a00a10726fb7e305f1",
      "in_reply_to_id": 1018532778,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it makes sense to keep using the more abstract terms initiator / receiver within the txreconciliation module, even after removing it from the `sendtxrcncl` message.",
      "created_at": "2022-11-10T01:18:12Z",
      "updated_at": "2022-11-10T01:18:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1018561069",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1018561069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023385776",
      "pull_request_review_id": 1181722780,
      "id": 1023385776,
      "node_id": "PRRC_kwDOABII5848_6Cw",
      "diff_hunk": "@@ -3500,41 +3497,44 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         }\n \n         if (pfrom.fSuccessfullyConnected) {\n-            // Disconnect peers that send a SENDTXRCNCL message after VERACK.\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received after verack from peer=%d; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        if (!peer->GetTxRelay()) {\n-            // Disconnect peers that send a SENDTXRCNCL message even though we indicated we don't\n-            // support transaction relay.\n+        // Peer must not offer us reconciliations if we specified no tx relay support in VERSION.\n+        if (RejectIncomingTxs(pfrom)) {\n             LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d to which we indicated no tx relay; disconnecting\\n\", pfrom.GetId());\n             pfrom.fDisconnect = true;\n             return;\n         }\n \n-        bool is_peer_initiator, is_peer_responder;\n+        // Peer must not offer us reconciliations if they specified no tx relay support in VERSION.\n+        // This flag might also be false in other cases, but the RejectIncomingTxs check above\n+        // eliminates them, so that this flag fully represents what we are looking for.\n+        if (!pfrom.m_relays_txs) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"sendtxrcncl received from peer=%d which indicated no tx relay to us; disconnecting\\n\", pfrom.GetId());\n+            pfrom.fDisconnect = true;\n+            return;\n+        }\n+\n         uint32_t peer_txreconcl_version;\n         uint64_t remote_salt;\n-        vRecv >> is_peer_initiator >> is_peer_responder >> peer_txreconcl_version >> remote_salt;\n+        vRecv >> peer_txreconcl_version >> remote_salt;\n \n-        if (m_txreconciliation->IsPeerRegistered(pfrom.GetId())) {\n-            // A peer is already registered, meaning we already received SENDTXRCNCL from them.\n+        const ReconciliationRegisterResult result = m_txreconciliation->RegisterPeer(pfrom.GetId(), pfrom.IsInboundConn(),\n+                                                                                     peer_txreconcl_version, remote_salt);\n+        switch (result) {\n+        case ReconciliationRegisterResult::NOT_FOUND:\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Debug, \"Ignore unexpected txreconciliation signal from peer=%d\\n\", pfrom.GetId());",
      "path": "src/net_processing.cpp",
      "position": 64,
      "original_position": 64,
      "commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "original_commit_id": "46339d29b10c9fb597af928c21c34945d76bbd22",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: The message could be clearer saying \"Ignore sendtxrcncl received from peer\". \"txreconciliation signal\" is a bit hand-wawy.",
      "created_at": "2022-11-16T00:28:23Z",
      "updated_at": "2022-11-16T00:30:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26359#discussion_r1023385776",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1023385776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26359"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3529,
      "original_line": 3529,
      "side": "RIGHT"
    }
  ]
}