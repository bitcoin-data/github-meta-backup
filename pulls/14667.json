{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667",
    "id": 228709343,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI4NzA5MzQz",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14667",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14667.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14667.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
    "number": 14667,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add deriveaddresses RPC util method",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Usage:\r\n\r\n```sh\r\nbitcoin-cli deriveaddresses \"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/0)\"\r\n[\r\n  \"bc1qg6ucjz7kgdedam7v5yarecy54uqw82yym06z3q\"\r\n] // part of the BIP32 test vector\r\n```\r\n\r\nAvoids the need for external (BIP32) libraries to derive an address. Can be used in conjunction with `scantxoutset` as a poor mans wallet. Might be useful to test more complicated future descriptors.\r\n\r\n~To keep it as simple as possible it only supports descriptors that result in a single address, so no `combo()` and ranges.~\r\n\r\nAs discussed recently on IRC it might make sense to put this in a separate utility along with other descriptor and psbt utility functions which don't need a chain or wallet context. However I prefer to leave that to another PR.",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-11-06T14:25:57Z",
    "updated_at": "2021-12-16T13:54:36Z",
    "closed_at": "2019-02-07T19:22:48Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-02-07T19:22:48Z",
    "merge_commit_sha": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "Sjors:2018/11/deriveaddress",
      "ref": "2018/11/deriveaddress",
      "sha": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 221761,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-05T13:46:28Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2023-03-31T09:52:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "7275365c9bc7e7ebd6bbf7dcb251946aac44b5de",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 149,
    "deletions": 0,
    "changed_files": 5,
    "commits": 1,
    "review_comments": 33,
    "comments": 22
  },
  "events": [
    {
      "event": "commented",
      "id": 436271763,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjI3MTc2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436271763",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-06T14:30:22Z",
      "updated_at": "2018-11-06T14:55:31Z",
      "author_association": "MEMBER",
      "body": "I know, this comes up every time—see for example https://github.com/bitcoin/bitcoin/pull/14476#issuecomment-430526327 —wasn't the idea to not add more pure-utility RPC calls?\r\nWe really need a clear stance on this.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-436271763",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 436276740,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjI3Njc0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436276740",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-06T14:44:35Z",
      "updated_at": "2018-12-21T03:07:42Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-436276740",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 436291363,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjI5MTM2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/436291363",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-06T15:23:36Z",
      "updated_at": "2018-11-06T15:23:36Z",
      "author_association": "MEMBER",
      "body": "I created an issue to discuss a tool that could replace pure utility RPC calls: #14671",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-436291363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "labeled",
      "id": 1950381915,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5NTAzODE5MTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1950381915",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-06T23:32:44Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "reviewed",
      "id": 172392258,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTcyMzkyMjU4",
      "url": null,
      "actor": null,
      "commit_id": "4f6fa3172acc8d9a7fd243fa75336e29a7cc3a34",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-172392258",
      "submitted_at": "2018-11-07T09:06:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "reviewed",
      "id": 172392494,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTcyMzkyNDk0",
      "url": null,
      "actor": null,
      "commit_id": "4f6fa3172acc8d9a7fd243fa75336e29a7cc3a34",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-172392494",
      "submitted_at": "2018-11-07T09:07:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1951238155,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk1MTIzODE1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1951238155",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-07T10:19:47Z"
    },
    {
      "event": "reviewed",
      "id": 173253304,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTczMjUzMzA0",
      "url": null,
      "actor": null,
      "commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "This looks good, and after the discussion in the meeting this morning I think its worth adding.\r\nutACK https://github.com/bitcoin/bitcoin/pull/14667/commits/9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-173253304",
      "submitted_at": "2018-11-09T03:16:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "mentioned",
      "id": 1958353176,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTk1ODM1MzE3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1958353176",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-10T10:49:08Z"
    },
    {
      "event": "subscribed",
      "id": 1958353177,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5NTgzNTMxNzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1958353177",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-10T10:49:08Z"
    },
    {
      "event": "mentioned",
      "id": 1958461513,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTk1ODQ2MTUxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1958461513",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-10T16:22:30Z"
    },
    {
      "event": "subscribed",
      "id": 1958461514,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5NTg0NjE1MTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1958461514",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-10T16:22:30Z"
    },
    {
      "event": "reviewed",
      "id": 173682907,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTczNjgyOTA3",
      "url": null,
      "actor": null,
      "commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-173682907",
      "submitted_at": "2018-11-11T03:05:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "labeled",
      "id": 1965860049,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5NjU4NjAwNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1965860049",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-14T13:32:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1975484744,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk3NTQ4NDc0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1975484744",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T18:58:29Z"
    },
    {
      "event": "commented",
      "id": 440003913,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDAwMzkxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440003913",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T18:58:55Z",
      "updated_at": "2018-11-19T18:58:55Z",
      "author_association": "MEMBER",
      "body": "Rebased. Result is now an array of addresses, so combo() and ranges can be used. Added range arguments.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-440003913",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1975496057,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk3NTQ5NjA1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1975496057",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T19:03:42Z"
    },
    {
      "event": "unlabeled",
      "id": 1975497572,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTk3NTQ5NzU3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1975497572",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T19:04:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1975507461,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk3NTUwNzQ2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1975507461",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T19:09:01Z"
    },
    {
      "event": "commented",
      "id": 440008947,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDAwODk0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440008947",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T19:15:01Z",
      "updated_at": "2018-11-19T19:22:58Z",
      "author_association": "MEMBER",
      "body": "Getting a rather cryptic linter error: @MarcoFalke?\r\n<img width=\"1185\" alt=\"schermafbeelding 2018-11-19 om 20 11 42\" src=\"https://user-images.githubusercontent.com/10217/48729225-66643600-ec37-11e8-8548-f0be7be032c1.png\">\r\n\r\n_Update_: #14718 was merged right before I pushed this. I rebased again and now I'm able to reproduce the linter error. It happens on master too.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-440008947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "mentioned",
      "id": 1975520347,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTk3NTUyMDM0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1975520347",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T19:15:01Z"
    },
    {
      "event": "subscribed",
      "id": 1975520349,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5NzU1MjAzNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1975520349",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T19:15:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1975531809,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk3NTUzMTgwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1975531809",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T19:20:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1975553527,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk3NTU1MzUyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1975553527",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-19T19:30:01Z"
    },
    {
      "event": "reviewed",
      "id": 176453634,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTc2NDUzNjM0",
      "url": null,
      "actor": null,
      "commit_id": "f0e881f9312bfa64a0393ff4308e22f09c3b9c9c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Looking good",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-176453634",
      "submitted_at": "2018-11-19T19:38:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1977321625,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk3NzMyMTYyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1977321625",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-20T13:20:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1977348279,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk3NzM0ODI3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1977348279",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-20T13:31:53Z"
    },
    {
      "event": "renamed",
      "id": 1977348348,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTk3NzM0ODM0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1977348348",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-20T13:31:56Z",
      "rename": {
        "from": "Add deriveaddress RPC util method",
        "to": "Add deriveaddresses RPC util method"
      }
    },
    {
      "event": "commented",
      "id": 440274685,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDI3NDY4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440274685",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-20T13:33:10Z",
      "updated_at": "2018-11-20T13:33:10Z",
      "author_association": "MEMBER",
      "body": "Rebased so CI works again. Renamed to plural `deriveaddresses`. Simplified the range arguments (must provide `start` and `end`).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-440274685",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1977354345,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk3NzM1NDM0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1977354345",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-20T13:34:40Z"
    },
    {
      "event": "commented",
      "id": 440892946,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg5Mjk0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/440892946",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-22T02:22:54Z",
      "updated_at": "2018-11-22T02:24:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK https://github.com/bitcoin/bitcoin/pull/14667/commits/82d2a8fc19e6d4c00fcb4af4032ebfdcdd457991\r\n\r\nOne last nit, I would add a comment about the default behavior of 0 for ranged descriptors if start and end aren't provided.\r\n\r\nEDIT: Actually, I think the helptext needs to be switched to RPCHelpMan",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-440892946",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 441222506,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTIyMjUwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/441222506",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-23T11:53:35Z",
      "updated_at": "2018-11-23T11:53:35Z",
      "author_association": "MEMBER",
      "body": "@MeshCollider alternatively I could make the range argument mandatory for ranged descriptors.\r\n\r\nWhat do you mean with RPCHelpMan? ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-441222506",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "mentioned",
      "id": 1983970808,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTk4Mzk3MDgwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1983970808",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-23T11:53:35Z"
    },
    {
      "event": "subscribed",
      "id": 1983970809,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5ODM5NzA4MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1983970809",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-23T11:53:35Z"
    },
    {
      "event": "commented",
      "id": 441358934,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM1ODkzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/441358934",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-24T10:48:56Z",
      "updated_at": "2018-11-24T10:48:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Sjors see #14726",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-441358934",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "mentioned",
      "id": 1984951805,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTk4NDk1MTgwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1984951805",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-24T10:48:56Z"
    },
    {
      "event": "subscribed",
      "id": 1984951806,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5ODQ5NTE4MDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1984951806",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-24T10:48:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1989914823,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk4OTkxNDgyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1989914823",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-27T15:31:37Z"
    },
    {
      "event": "commented",
      "id": 442101472,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjEwMTQ3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/442101472",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-27T15:31:52Z",
      "updated_at": "2018-11-27T15:31:52Z",
      "author_association": "MEMBER",
      "body": "Rebased due to #14726 and using RPCHelpMan now.\r\n\r\nRange argument is now mandatory for ranged descriptors (typing `0` instead of `*` is trivial).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-442101472",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 452350748,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM1MDc0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452350748",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-08T15:58:43Z",
      "updated_at": "2019-01-08T15:58:43Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-452350748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "reviewed",
      "id": 190315288,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkwMzE1Mjg4",
      "url": null,
      "actor": null,
      "commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-190315288",
      "submitted_at": "2019-01-08T16:03:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "commented",
      "id": 452353097,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM1MzA5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452353097",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-08T16:04:43Z",
      "updated_at": "2019-01-08T16:04:43Z",
      "author_association": "MEMBER",
      "body": "utACK with a small nit.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-452353097",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 452489748,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQ4OTc0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452489748",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-08T23:29:57Z",
      "updated_at": "2019-01-08T23:29:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs non conflict rebase to fix the new `RPCHelpMan()` argument section (default and comments).",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-452489748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "reviewed",
      "id": 190504755,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkwNTA0NzU1",
      "url": null,
      "actor": null,
      "commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-190504755",
      "submitted_at": "2019-01-08T23:33:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2063926512,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA2MzkyNjUxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2063926512",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T19:01:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2063962313,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA2Mzk2MjMxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2063962313",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T19:16:56Z"
    },
    {
      "event": "commented",
      "id": 452825769,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjgyNTc2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/452825769",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-09T19:28:04Z",
      "updated_at": "2019-01-09T19:28:04Z",
      "author_association": "MEMBER",
      "body": "Rebased for `RPCHelpMan` and addressed some of the nits. Will continue later.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-452825769",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2075373145,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA3NTM3MzE0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2075373145",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-15T18:18:04Z"
    },
    {
      "event": "commented",
      "id": 454495770,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDQ5NTc3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/454495770",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-15T18:18:09Z",
      "updated_at": "2019-01-15T18:18:09Z",
      "author_association": "MEMBER",
      "body": "Rebased for no particular reason, all feedback should be addressed now.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-454495770",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 456570874,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjU3MDg3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456570874",
      "actor": {
        "login": "FrancisPouliot",
        "id": 7997682,
        "node_id": "MDQ6VXNlcjc5OTc2ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7997682?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FrancisPouliot",
        "html_url": "https://github.com/FrancisPouliot",
        "followers_url": "https://api.github.com/users/FrancisPouliot/followers",
        "following_url": "https://api.github.com/users/FrancisPouliot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FrancisPouliot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FrancisPouliot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FrancisPouliot/subscriptions",
        "organizations_url": "https://api.github.com/users/FrancisPouliot/orgs",
        "repos_url": "https://api.github.com/users/FrancisPouliot/repos",
        "events_url": "https://api.github.com/users/FrancisPouliot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FrancisPouliot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T21:30:25Z",
      "updated_at": "2019-01-22T21:30:25Z",
      "author_association": "NONE",
      "body": "Concept ack. Many web services (including mine) derive receiving addresses from external xpub and need to run some other utility like pycoin to do this, and then import adresses in Bitcoin Core to watch them. \n\n\n\n",
      "user": {
        "login": "FrancisPouliot",
        "id": 7997682,
        "node_id": "MDQ6VXNlcjc5OTc2ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7997682?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/FrancisPouliot",
        "html_url": "https://github.com/FrancisPouliot",
        "followers_url": "https://api.github.com/users/FrancisPouliot/followers",
        "following_url": "https://api.github.com/users/FrancisPouliot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/FrancisPouliot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/FrancisPouliot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/FrancisPouliot/subscriptions",
        "organizations_url": "https://api.github.com/users/FrancisPouliot/orgs",
        "repos_url": "https://api.github.com/users/FrancisPouliot/repos",
        "events_url": "https://api.github.com/users/FrancisPouliot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/FrancisPouliot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-456570874",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 457447075,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzQ0NzA3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457447075",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-25T03:55:01Z",
      "updated_at": "2019-01-25T03:55:01Z",
      "author_association": "MEMBER",
      "body": "utACK f8f115da64f18e3b81e6cbaa0f26d96156acfc3c",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-457447075",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 457861671,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg2MTY3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457861671",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-26T20:03:54Z",
      "updated_at": "2019-01-26T20:03:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK https://github.com/bitcoin/bitcoin/commit/f8f115da64f18e3b81e6cbaa0f26d96156acfc3c",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-457861671",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "commented",
      "id": 457887001,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg4NzAwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/457887001",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-27T03:56:50Z",
      "updated_at": "2019-01-27T03:56:50Z",
      "author_association": "MEMBER",
      "body": "testing f8f115d. `bitcoind` will abort if you pass a range begin < 0; \r\n\r\ni.e `src/bitcoin-cli deriveaddresses \"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\" -1 0`\r\n\r\n```\r\n2019-01-27T03:47:50Z UpdateTip: new best=0000000000000000002d802cf5fdbbfa94926be7f03b40be75eb6c3c13cbc8e4 height=560180 version=0x20000000 log2_work=90.279438 tx=376715337 date='2019-01-26T12:02:01Z' progress=0.999639 cache=17.7MiB(131993txo) warning='25 of last 100 blocks have unexpected version'\r\nAssertion failed: ((nChild >> 31) == 0), function Derive, file pubkey.cpp, line 229.\r\nProcess 25118 stopped\r\n* thread #2, name = 'bitcoin-httpworker', stop reason = signal SIGABRT\r\n    frame #0: 0x00007fff5ba9523e libsystem_kernel.dylib`__pthread_kill + 10\r\nlibsystem_kernel.dylib`__pthread_kill:\r\n->  0x7fff5ba9523e <+10>: jae    0x7fff5ba95248            ; <+20>\r\n    0x7fff5ba95240 <+12>: movq   %rax, %rdi\r\n    0x7fff5ba95243 <+15>: jmp    0x7fff5ba8f3b7            ; cerror_nocancel\r\n    0x7fff5ba95248 <+20>: retq   \r\nTarget 0: (bitcoind) stopped.\r\n(lldb) bt\r\n* thread #2, name = 'bitcoin-httpworker', stop reason = signal SIGABRT\r\n  * frame #0: 0x00007fff5ba9523e libsystem_kernel.dylib`__pthread_kill + 10\r\n    frame #1: 0x00007fff5bb4bc1c libsystem_pthread.dylib`pthread_kill + 285\r\n    frame #2: 0x00007fff5b9fe1c9 libsystem_c.dylib`abort + 127\r\n    frame #3: 0x00007fff5b9c6868 libsystem_c.dylib`__assert_rtn + 320\r\n    frame #4: 0x00000001003cfee5 bitcoind`CPubKey::Derive(this=0x000070000305501c, pubkeyChild=0x000070000305501c, ccChild=0x0000700003054ffc, nChild=<unavailable>, cc=<unavailable>) const at pubkey.cpp:229 [opt]\r\n    frame #5: 0x00000001003d01c9 bitcoind`CExtPubKey::Derive(this=<unavailable>, out=<unavailable>, _nChild=4294967295) const at pubkey.cpp:271 [opt]\r\n    frame #6: 0x000000010037cdaf bitcoind`(anonymous namespace)::BIP32PubkeyProvider::GetPubKey(this=0x0000000133aa7420, pos=-1, arg=<unavailable>, key=<unavailable>, info=0x0000000176f57888) const at descriptor.cpp:173 [opt]\r\n    frame #7: 0x000000010037dc09 bitcoind`(anonymous namespace)::OriginPubkeyProvider::GetPubKey(this=0x0000000125778480, pos=<unavailable>, arg=<unavailable>, key=<unavailable>, info=0x0000000176f57888) const at descriptor.cpp:73 [opt]\r\n    frame #8: 0x000000010037f6f9 bitcoind`(anonymous namespace)::DescriptorImpl::ExpandHelper(this=<unavailable>, pos=-1, arg=0x0000700003055630, cache_read=0x0000000000000000, output_scripts=size=0, out=0x0000700003055630, cache_write=0x0000000000000000) const at descriptor.cpp:298 [opt]\r\n    frame #9: 0x000000010037efdd bitcoind`(anonymous namespace)::DescriptorImpl::Expand(this=<unavailable>, pos=<unavailable>, provider=<unavailable>, output_scripts=<unavailable>, out=<unavailable>, cache=<unavailable>) const at descriptor.cpp:343 [opt]\r\n    frame #10: 0x000000010011b02c bitcoind`deriveaddresses(request=<unavailable>) at misc.cpp:207 [opt]\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-457887001",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2104049252,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNDA0OTI1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2104049252",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T15:53:43Z"
    },
    {
      "event": "commented",
      "id": 458593353,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODU5MzM1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458593353",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T15:53:53Z",
      "updated_at": "2019-01-29T15:53:53Z",
      "author_association": "MEMBER",
      "body": "> bitcoind will abort if you pass a range begin < 0;\r\n\r\nPff, don't do that! :-) Fixed (with test).\r\n\r\n@MarcoFalke maybe we can expand `RPCTypeCheck` to also enforce constraints like minimum value?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-458593353",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "mentioned",
      "id": 2104049693,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjEwNDA0OTY5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2104049693",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T15:53:53Z"
    },
    {
      "event": "subscribed",
      "id": 2104049695,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIxMDQwNDk2OTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2104049695",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T15:53:53Z"
    },
    {
      "event": "commented",
      "id": 458595397,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODU5NTM5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458595397",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T15:58:41Z",
      "updated_at": "2019-01-29T15:58:41Z",
      "author_association": "MEMBER",
      "body": "Indeed, we could pass a lambda into the RPCHelpMan to validate the value and use the passed in type to validate the type (and thus get rid of `RPCTypeCheck` completely)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-458595397",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2104182766,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNDE4Mjc2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2104182766",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T16:37:47Z"
    },
    {
      "event": "commented",
      "id": 458611334,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYxMTMzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/458611334",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T16:37:53Z",
      "updated_at": "2019-01-29T16:37:53Z",
      "author_association": "MEMBER",
      "body": "Rebased due to somewhat [inexplicable Travis failure](https://travis-ci.org/bitcoin/bitcoin/jobs/485972567).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#issuecomment-458611334",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14667"
    },
    {
      "event": "reviewed",
      "id": 197668708,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk3NjY4NzA4",
      "url": null,
      "actor": null,
      "commit_id": "7f78582ed9a743f02764851977ad7b95e490cf92",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-197668708",
      "submitted_at": "2019-01-29T16:58:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTUyODM4NTFkOGZlM2UxODU1M2ZkYjJhZDZlNzczZTFhOWMxYTIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "tree": {
        "sha": "0a6109e58288b2d4ba192f580e287ba72c890bef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a6109e58288b2d4ba192f580e287ba72c890bef"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0a6109e58288b2d4ba192f580e287ba72c890bef\nparent 7275365c9bc7e7ebd6bbf7dcb251946aac44b5de\nauthor Sjors Provoost <sjors@sprovoost.nl> 1547061406 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1548782063 +0100\n\n[rpc] util: add deriveaddresses method\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlxQifAACgkQV/+b28ww\nEAn6OA//adHuMrxIVO98Yuk/hKTqvDpSQXr4P61d8cTytYbFbhIZ9+93nV3Msj+E\nzJic6V+cdwOgLviHlAnwfJCMdhX9HENGv9I8vJVzRbCRk3VyslJdcHm31/jpgOAB\nHy+dWbqOW3CJivZ3HmfDJ8yxZcRhtAVE+QUiJu20PKD/oUAJqrGtzuIdzk5Qul8t\nnKWvtn2PxV73cHAmepU0MT5BCmegA2pTqfJpFsWAW8FgetJJsWwXp1IcEaDvDOBW\nqKLLXDxqotp91KmQqLY0jdmzkrN+8gafI1IhdyTw4SOCm7/VAwcob61d4aLIOaM3\nOpMbCcUFvBLVnKdTcqFKESD50fJUkeMwHSXmUuWUB5/YoHvdAXvQGiu+XxH2X3pm\nMfcoadvDIEQ4CYZeUuXa7rE3ASTz7mfCpYQ8tbA/xCIJpKG3AaAw72qn5KXX8luD\nk1PNFGjNjmw0WF5Y1fz5h0Q3p+YFECeaJzMIK8T3Q7HAguWPs2jKgnbJEmarRmci\ntgMkzhPP4a5/WcxadwMswOb6BZ/7dpjb2EAlWNWvw7VnP9by94OVyTIZiSP6fJ2K\nJFk7hN8kN+Z+Jq7G81iUHDPSJeyZGyCVK2iFV7AOFYFFC/eBb1Gqj0cpDE3drhU4\n3QvWEV8zNRE6ZVQWUwnDeoQZeXrIt6/WNNMFPZXH+a3RVhVb0bw=\n=sgTh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7275365c9bc7e7ebd6bbf7dcb251946aac44b5de",
          "sha": "7275365c9bc7e7ebd6bbf7dcb251946aac44b5de",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7275365c9bc7e7ebd6bbf7dcb251946aac44b5de"
        }
      ],
      "message": "[rpc] util: add deriveaddresses method",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-01-29T17:14:23Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-01-09T19:16:46Z"
      },
      "sha": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2104287990,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjEwNDI4Nzk5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2104287990",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-29T17:14:33Z"
    },
    {
      "event": "reviewed",
      "id": 200602888,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjAwNjAyODg4",
      "url": null,
      "actor": null,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Couple of non-blocking nits, tACK 595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#pullrequestreview-200602888",
      "submitted_at": "2019-02-06T14:42:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
    },
    {
      "event": "merged",
      "id": 2125024277,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjEyNTAyNDI3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2125024277",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "created_at": "2019-02-07T19:22:48Z"
    },
    {
      "event": "closed",
      "id": 2125024284,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjEyNTAyNDI4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2125024284",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-07T19:22:49Z"
    },
    {
      "event": "referenced",
      "id": 2125025096,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxMjUwMjUwOTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2125025096",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1933e38c1a08d479130d11d9fc08bc7c73a82575",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1933e38c1a08d479130d11d9fc08bc7c73a82575",
      "created_at": "2019-02-07T19:23:09Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 2126625441,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQyMTI2NjI1NDQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2126625441",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-08T09:49:31Z"
    },
    {
      "event": "referenced",
      "id": 3362829362,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzNjI4MjkzNjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3362829362",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dfee6a88179cccffa5b1ef842e428813d4d19b10",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/dfee6a88179cccffa5b1ef842e428813d4d19b10",
      "created_at": "2020-05-22T00:50:08Z"
    },
    {
      "event": "referenced",
      "id": 5306723518,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAE8Tiy-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5306723518",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "232f8ad8b949e89d89eed08bd71867c75e571064",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/232f8ad8b949e89d89eed08bd71867c75e571064",
      "created_at": "2021-09-15T15:14:59Z"
    },
    {
      "event": "referenced",
      "id": 5311868186,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAE8nK0a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5311868186",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a2c291a04a10a7b904e02e88bfbe863ec81d85cd",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/a2c291a04a10a7b904e02e88bfbe863ec81d85cd",
      "created_at": "2021-09-16T11:15:42Z"
    },
    {
      "event": "referenced",
      "id": 5330096811,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAE9stKr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5330096811",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7d45a846b12f5dc68ccbc40824f1c782d5855e54",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/7d45a846b12f5dc68ccbc40824f1c782d5855e54",
      "created_at": "2021-09-20T18:12:23Z"
    },
    {
      "event": "referenced",
      "id": 5450520806,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFE4Fjm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5450520806",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1e15fe83947e8d4cf1a49414c4993eeb6d574d3c",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/1e15fe83947e8d4cf1a49414c4993eeb6d574d3c",
      "created_at": "2021-10-12T15:39:06Z"
    },
    {
      "event": "referenced",
      "id": 5499794182,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFH0DMG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5499794182",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4ea08a1bc8cd754ffcb3a4f836157e746f6a0471",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/4ea08a1bc8cd754ffcb3a4f836157e746f6a0471",
      "created_at": "2021-10-21T16:31:42Z"
    },
    {
      "event": "referenced",
      "id": 5510949546,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFIemqq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5510949546",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d4dd7369ddd584913a4895946cb359d9fc4745d4",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/d4dd7369ddd584913a4895946cb359d9fc4745d4",
      "created_at": "2021-10-25T05:18:47Z"
    },
    {
      "event": "referenced",
      "id": 5511065864,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFIfDEI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5511065864",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "08a50107a0a60f5cee25ea43f80eca945f369cdf",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/08a50107a0a60f5cee25ea43f80eca945f369cdf",
      "created_at": "2021-10-25T05:59:07Z"
    },
    {
      "event": "referenced",
      "id": 5517559210,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFI30Wq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5517559210",
      "actor": {
        "login": "vijaydasmp",
        "id": 2348066,
        "node_id": "MDQ6VXNlcjIzNDgwNjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2348066?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vijaydasmp",
        "html_url": "https://github.com/vijaydasmp",
        "followers_url": "https://api.github.com/users/vijaydasmp/followers",
        "following_url": "https://api.github.com/users/vijaydasmp/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vijaydasmp/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vijaydasmp/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vijaydasmp/subscriptions",
        "organizations_url": "https://api.github.com/users/vijaydasmp/orgs",
        "repos_url": "https://api.github.com/users/vijaydasmp/repos",
        "events_url": "https://api.github.com/users/vijaydasmp/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vijaydasmp/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "13645f6736ccf67f0dc809151445be2bc69aa4b2",
      "commit_url": "https://api.github.com/repos/vijaydasmp/dash/commits/13645f6736ccf67f0dc809151445be2bc69aa4b2",
      "created_at": "2021-10-26T03:30:49Z"
    },
    {
      "event": "referenced",
      "id": 5521788670,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFJH87-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5521788670",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a46ae75b34bc856dae402f40bc015f868995226a",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a46ae75b34bc856dae402f40bc015f868995226a",
      "created_at": "2021-10-26T16:07:05Z"
    },
    {
      "event": "referenced",
      "id": 5521924223,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFJIeB_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5521924223",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1719cd5ef4f31a270b7177ad4b480660b8bcea25",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/1719cd5ef4f31a270b7177ad4b480660b8bcea25",
      "created_at": "2021-10-26T16:29:37Z"
    },
    {
      "event": "referenced",
      "id": 5531577349,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFJtSwF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5531577349",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "083bc078a92f1a203dbaea1f1ee0d96a97c67bf2",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/083bc078a92f1a203dbaea1f1ee0d96a97c67bf2",
      "created_at": "2021-10-28T05:32:26Z"
    },
    {
      "event": "referenced",
      "id": 5549673332,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFKyUt0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5549673332",
      "actor": {
        "login": "UdjinM6",
        "id": 1935069,
        "node_id": "MDQ6VXNlcjE5MzUwNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1935069?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/UdjinM6",
        "html_url": "https://github.com/UdjinM6",
        "followers_url": "https://api.github.com/users/UdjinM6/followers",
        "following_url": "https://api.github.com/users/UdjinM6/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/UdjinM6/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/UdjinM6/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/UdjinM6/subscriptions",
        "organizations_url": "https://api.github.com/users/UdjinM6/orgs",
        "repos_url": "https://api.github.com/users/UdjinM6/repos",
        "events_url": "https://api.github.com/users/UdjinM6/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/UdjinM6/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bbe9b3d1e0dfbb15effd7c965baf23160e67629d",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/bbe9b3d1e0dfbb15effd7c965baf23160e67629d",
      "created_at": "2021-11-01T15:25:42Z"
    },
    {
      "event": "referenced",
      "id": 5640694954,
      "node_id": "REFE_lADOABII584WhdXbzwAAAAFQNiyq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5640694954",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6069fcc1a22b340c5071f72e7dc3ff93b309639f",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/6069fcc1a22b340c5071f72e7dc3ff93b309639f",
      "created_at": "2021-11-18T18:27:54Z"
    },
    {
      "event": "locked",
      "id": 5778511153,
      "node_id": "LOE_lADOABII584WhdXbzwAAAAFYbRUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778511153",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T13:54:36Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231426065",
      "pull_request_review_id": 172392258,
      "id": 231426065,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTQyNjA2NQ==",
      "diff_hunk": "@@ -138,6 +139,64 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "4f6fa3172acc8d9a7fd243fa75336e29a7cc3a34",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: `request.params.empty()` instead of `request.params.size() < 1` :-)",
      "created_at": "2018-11-07T09:06:33Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r231426065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231426065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231426262",
      "pull_request_review_id": 172392494,
      "id": 231426262,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMTQyNjI2Mg==",
      "diff_hunk": "@@ -138,6 +139,64 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"deriveaddress \\\"descriptor\\\"\\n\"\n+            \"\\nDerives the address corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"\\nResult:\\n\"\n+            \"(string) The derived address\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nNative segwit receive address\\n\"\n+            + HelpExampleCli(\"deriveaddress\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/0)\\\"\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR});\n+\n+    UniValue result(UniValue::VSTR);",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "4f6fa3172acc8d9a7fd243fa75336e29a7cc3a34",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove this unused variable :-)",
      "created_at": "2018-11-07T09:07:10Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r231426262",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/231426262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 168,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232125638",
      "pull_request_review_id": 173253304,
      "id": 232125638,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjEyNTYzOA==",
      "diff_hunk": "@@ -138,6 +139,63 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"deriveaddress \\\"descriptor\\\"\\n\"\n+            \"\\nDerives the address corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"\\nResult:\\n\"\n+            \"(string) The derived address\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nNative segwit receive address\\n\"\n+            + HelpExampleCli(\"deriveaddress\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/0)\\\"\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR});\n+\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+    if (desc->IsRange()){\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor range not supported\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be easy enough to add support for picking a specific index from a ranged descriptor, is there a reason you chose to disallow it? Just add a second parameter which specifies the index.\r\nEDIT: thinking about it, it would be just as easy to not use a ranged descriptor if we're only using a single key, don't worry.",
      "created_at": "2018-11-09T02:20:06Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r232125638",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232125638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232440632",
      "pull_request_review_id": 173649385,
      "id": 232440632,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ0MDYzMg==",
      "diff_hunk": "@@ -138,6 +139,63 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"deriveaddress \\\"descriptor\\\"\\n\"\n+            \"\\nDerives the address corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"\\nResult:\\n\"\n+            \"(string) The derived address\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nNative segwit receive address\\n\"\n+            + HelpExampleCli(\"deriveaddress\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/0)\\\"\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR});\n+\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+    if (desc->IsRange()){\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor range not supported\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": 232125638,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems a weird anti-feature to me. I don't understand why you're adding extra complexity to the function just to prevent a range. If you only want one, you can still do so.",
      "created_at": "2018-11-10T04:02:47Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r232440632",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232440632"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232445912",
      "pull_request_review_id": 173654968,
      "id": 232445912,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ0NTkxMg==",
      "diff_hunk": "@@ -138,6 +139,63 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"deriveaddress \\\"descriptor\\\"\\n\"\n+            \"\\nDerives the address corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"\\nResult:\\n\"\n+            \"(string) The derived address\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nNative segwit receive address\\n\"\n+            + HelpExampleCli(\"deriveaddress\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/0)\\\"\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR});\n+\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+    if (desc->IsRange()){\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor range not supported\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": 232125638,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I initially did that to prevent extra complexity, but I've actually encountered a situation where allowing ranges would be very useful. Will change this to return an array.",
      "created_at": "2018-11-10T08:24:29Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r232445912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232445912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232448996",
      "pull_request_review_id": 173658049,
      "id": 232448996,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ0ODk5Ng==",
      "diff_hunk": "@@ -138,6 +139,63 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"deriveaddress \\\"descriptor\\\"\\n\"\n+            \"\\nDerives the address corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"\\nResult:\\n\"\n+            \"(string) The derived address\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nNative segwit receive address\\n\"\n+            + HelpExampleCli(\"deriveaddress\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/0)\\\"\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR});\n+\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+    if (desc->IsRange()){\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor range not supported\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": 232125638,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@Sjors I assume that also includes allowing `combo` right? Sounds good 👍 ",
      "created_at": "2018-11-10T10:49:08Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r232448996",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232448996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232457338",
      "pull_request_review_id": 173666623,
      "id": 232457338,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ1NzMzOA==",
      "diff_hunk": "@@ -138,6 +139,63 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"deriveaddress \\\"descriptor\\\"\\n\"\n+            \"\\nDerives the address corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"\\nResult:\\n\"\n+            \"(string) The derived address\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nNative segwit receive address\\n\"\n+            + HelpExampleCli(\"deriveaddress\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/0)\\\"\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR});\n+\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+    if (desc->IsRange()){\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor range not supported\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": 232125638,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@MeshCollider yes, no reason anymore to exclude `combo()`",
      "created_at": "2018-11-10T16:22:30Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r232457338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232457338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232473043",
      "pull_request_review_id": 173682907,
      "id": 232473043,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ3MzA0Mw==",
      "diff_hunk": "@@ -3,3 +3,4 @@ New RPC methods\n \n - `getnodeaddresses` returns peer addresses known to this node. It may be used to connect to nodes over TCP without using the DNS seeds.\n - `listwalletdir` returns a list of wallets in the wallet directory which is configured with `-walletdir` parameter.\n+- `deriveaddress` returns the address corresponding to an [output descriptor](/doc/descriptors.md).",
      "path": "doc/release-notes-13152.md",
      "position": null,
      "original_position": 4,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This doesn't seem to belong in this file (the file is specific per PR).",
      "created_at": "2018-11-11T03:05:05Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r232473043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232473043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232487197",
      "pull_request_review_id": 173697179,
      "id": 232487197,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjQ4NzE5Nw==",
      "diff_hunk": "@@ -3,3 +3,4 @@ New RPC methods\n \n - `getnodeaddresses` returns peer addresses known to this node. It may be used to connect to nodes over TCP without using the DNS seeds.\n - `listwalletdir` returns a list of wallets in the wallet directory which is configured with `-walletdir` parameter.\n+- `deriveaddress` returns the address corresponding to an [output descriptor](/doc/descriptors.md).",
      "path": "doc/release-notes-13152.md",
      "position": null,
      "original_position": 4,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": 232473043,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "listwalletdir was already hijacking that file, so I joined, but I can add a new one.",
      "created_at": "2018-11-11T13:04:44Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r232487197",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232487197"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233495555",
      "pull_request_review_id": 174921432,
      "id": 233495555,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMzQ5NTU1NQ==",
      "diff_hunk": "@@ -3,3 +3,4 @@ New RPC methods\n \n - `getnodeaddresses` returns peer addresses known to this node. It may be used to connect to nodes over TCP without using the DNS seeds.\n - `listwalletdir` returns a list of wallets in the wallet directory which is configured with `-walletdir` parameter.\n+- `deriveaddress` returns the address corresponding to an [output descriptor](/doc/descriptors.md).",
      "path": "doc/release-notes-13152.md",
      "position": null,
      "original_position": 4,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": 232473043,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In which case we could add them to the main file in the first place.",
      "created_at": "2018-11-14T15:32:21Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r233495555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/233495555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234616490",
      "pull_request_review_id": 176293598,
      "id": 234616490,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDYxNjQ5MA==",
      "diff_hunk": "@@ -3,3 +3,4 @@ New RPC methods\n \n - `getnodeaddresses` returns peer addresses known to this node. It may be used to connect to nodes over TCP without using the DNS seeds.\n - `listwalletdir` returns a list of wallets in the wallet directory which is configured with `-walletdir` parameter.\n+- `deriveaddress` returns the address corresponding to an [output descriptor](/doc/descriptors.md).",
      "path": "doc/release-notes-13152.md",
      "position": null,
      "original_position": 4,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": 232473043,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought the point of these extra files was mainly to prevent constant rebasing, which seemed mostly a result of different sections interfering, and less when you're just adding one line an existing entry. Though I'm not sure exactly what trips up git.",
      "created_at": "2018-11-19T13:26:36Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r234616490",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234616490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234646424",
      "pull_request_review_id": 176331490,
      "id": 234646424,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDY0NjQyNA==",
      "diff_hunk": "@@ -3,3 +3,4 @@ New RPC methods\n \n - `getnodeaddresses` returns peer addresses known to this node. It may be used to connect to nodes over TCP without using the DNS seeds.\n - `listwalletdir` returns a list of wallets in the wallet directory which is configured with `-walletdir` parameter.\n+- `deriveaddress` returns the address corresponding to an [output descriptor](/doc/descriptors.md).",
      "path": "doc/release-notes-13152.md",
      "position": null,
      "original_position": 4,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "9a55d5f9e3a92026c25d26a5c2fd531883ab3609",
      "in_reply_to_id": 232473043,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This file was removed in master. Also, if another patch added a line in the meantime, git(hub) would also report a merge conflict.",
      "created_at": "2018-11-19T14:50:27Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r234646424",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234646424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234745960",
      "pull_request_review_id": 176453634,
      "id": 234745960,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDc0NTk2MA==",
      "diff_hunk": "@@ -138,6 +139,80 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"deriveaddress \\\"descriptor\\\" ( \\\"start\\\" \\\"end\\\" )\\n\"\n+            \"\\nDerives the address corresponding to an output descriptor.\\n\"",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "f0e881f9312bfa64a0393ff4308e22f09c3b9c9c",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be plural now :)",
      "created_at": "2018-11-19T19:12:21Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r234745960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234745960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234746802",
      "pull_request_review_id": 176453634,
      "id": 234746802,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDc0NjgwMg==",
      "diff_hunk": "@@ -138,6 +139,80 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddress(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"deriveaddress \\\"descriptor\\\" ( \\\"start\\\" \\\"end\\\" )\\n\"\n+            \"\\nDerives the address corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"n\\\" / \\\"start\\\"                    (integer, optional) If a ranged descriptor is used, this specifies the number of keys, or start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddress\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 3\") +\n+            \"\\nFirst two P2SH-segwit addresses\\n\"\n+            + HelpExampleCli(\"deriveaddress\", \"\\\"sh(wpkh([d34db33f/49h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*))\\\" 0 1\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() >= 3) {\n+            range_start = request.params[1].get_int();\n+            range_end = request.params[2].get_int();\n+        } else {\n+            range_end = request.params[1].get_int() - 1;",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "f0e881f9312bfa64a0393ff4308e22f09c3b9c9c",
      "in_reply_to_id": null,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I feel like this is unnecessarily complicated, I'd prefer just start and end parameters without the \"n\" parameter",
      "created_at": "2018-11-19T19:15:14Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r234746802",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234746802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246053284",
      "pull_request_review_id": 190315288,
      "id": 246053284,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjA1MzI4NA==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+\n+    if (!desc->IsRange() && request.params.size() > 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+    }\n+\n+    if (desc->IsRange() && request.params.size() == 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range must be specified for a ranged descriptor\");\n+    }\n+\n+    UniValue addresses(UniValue::VARR);\n+\n+    for (int i = range_start; i <= range_end; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        for (const CScript &script : scripts) {\n+            CTxDestination dest;\n+            if (!ExtractDestination(script, dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor produced invalid address\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: This condition would appear when the scriptPubKey does not have a corresponding address (I think this is only currently possible through \"raw\" or through bare multisig). Perhaps a better error message is possible?",
      "created_at": "2019-01-08T16:03:49Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246053284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246053284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246197219",
      "pull_request_review_id": 190504755,
      "id": 246197219,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjE5NzIxOQ==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bad indentation?",
      "created_at": "2019-01-08T23:25:35Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246197219",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246197219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246198490",
      "pull_request_review_id": 190504755,
      "id": 246198490,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjE5ODQ5MA==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "indentation.",
      "created_at": "2019-01-08T23:27:23Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246198490",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246198490"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246199058",
      "pull_request_review_id": 190504755,
      "id": 246199058,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjE5OTA1OA==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }",
      "path": "src/rpc/misc.cpp",
      "position": 59,
      "original_position": 56,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "validate range_start < range_end?",
      "created_at": "2019-01-08T23:28:10Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246199058",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246199058"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246199475",
      "pull_request_review_id": 190504755,
      "id": 246199475,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjE5OTQ3NQ==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "micronit, s/start/begin?",
      "created_at": "2019-01-08T23:28:44Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246199475",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246199475"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246200765",
      "pull_request_review_id": 190504755,
      "id": 246200765,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjIwMDc2NQ==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 52,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": 246198490,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "missing test for this error.",
      "created_at": "2019-01-08T23:30:44Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246200765",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246200765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246201276",
      "pull_request_review_id": 190504755,
      "id": 246201276,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjIwMTI3Ng==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+\n+    if (!desc->IsRange() && request.params.size() > 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+    }\n+\n+    if (desc->IsRange() && request.params.size() == 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range must be specified for a ranged descriptor\");\n+    }\n+\n+    UniValue addresses(UniValue::VARR);\n+\n+    for (int i = range_start; i <= range_end; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        for (const CScript &script : scripts) {\n+            CTxDestination dest;\n+            if (!ExtractDestination(script, dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor produced invalid address\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": 246053284,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could also have a test for this error?",
      "created_at": "2019-01-08T23:31:30Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246201276",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246201276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246201874",
      "pull_request_review_id": 190504755,
      "id": 246201874,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjIwMTg3NA==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+\n+    if (!desc->IsRange() && request.params.size() > 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+    }\n+\n+    if (desc->IsRange() && request.params.size() == 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range must be specified for a ranged descriptor\");\n+    }\n+\n+    UniValue addresses(UniValue::VARR);\n+\n+    for (int i = range_start; i <= range_end; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        for (const CScript &script : scripts) {\n+            CTxDestination dest;\n+            if (!ExtractDestination(script, dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor produced invalid address\"));\n+            }\n+\n+            addresses.push_back(EncodeDestination(dest));\n+        }\n+    }\n+\n+    return addresses;",
      "path": "src/rpc/misc.cpp",
      "position": 98,
      "original_position": 90,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it possible to return empty?",
      "created_at": "2019-01-08T23:32:24Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246201874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246201874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 232,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246498068",
      "pull_request_review_id": 190875766,
      "id": 246498068,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjQ5ODA2OA==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+\n+    if (!desc->IsRange() && request.params.size() > 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+    }\n+\n+    if (desc->IsRange() && request.params.size() == 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range must be specified for a ranged descriptor\");\n+    }\n+\n+    UniValue addresses(UniValue::VARR);\n+\n+    for (int i = range_start; i <= range_end; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        for (const CScript &script : scripts) {\n+            CTxDestination dest;\n+            if (!ExtractDestination(script, dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor produced invalid address\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": 246053284,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If anyone has an example (raw) descriptor that triggers this error, I can add it, and think of a better message.",
      "created_at": "2019-01-09T18:51:04Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246498068",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246498068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246500830",
      "pull_request_review_id": 190879302,
      "id": 246500830,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjUwMDgzMA==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+\n+    if (!desc->IsRange() && request.params.size() > 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+    }\n+\n+    if (desc->IsRange() && request.params.size() == 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range must be specified for a ranged descriptor\");\n+    }\n+\n+    UniValue addresses(UniValue::VARR);\n+\n+    for (int i = range_start; i <= range_end; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        for (const CScript &script : scripts) {\n+            CTxDestination dest;\n+            if (!ExtractDestination(script, dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor produced invalid address\"));\n+            }\n+\n+            addresses.push_back(EncodeDestination(dest));\n+        }\n+    }\n+\n+    return addresses;",
      "path": "src/rpc/misc.cpp",
      "position": 98,
      "original_position": 90,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": 246201874,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addresses can be an empty UniValue array in theory: `UniValue addresses(UniValue::VARR);`\r\n\r\nI guess not in practice, do you want an error check?",
      "created_at": "2019-01-09T18:59:49Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246500830",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246500830"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 232,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246517887",
      "pull_request_review_id": 190900731,
      "id": 246517887,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NjUxNzg4Nw==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+\n+    if (!desc->IsRange() && request.params.size() > 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+    }\n+\n+    if (desc->IsRange() && request.params.size() == 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range must be specified for a ranged descriptor\");\n+    }\n+\n+    UniValue addresses(UniValue::VARR);\n+\n+    for (int i = range_start; i <= range_end; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        for (const CScript &script : scripts) {\n+            CTxDestination dest;\n+            if (!ExtractDestination(script, dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor produced invalid address\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": 246053284,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Try \"multi(1,key1,key2)\" for some public keys.",
      "created_at": "2019-01-09T19:55:05Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r246517887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/246517887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248002214",
      "pull_request_review_id": 192786193,
      "id": 248002214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAwMjIxNA==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+\n+    if (!desc->IsRange() && request.params.size() > 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+    }\n+\n+    if (desc->IsRange() && request.params.size() == 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range must be specified for a ranged descriptor\");\n+    }\n+\n+    UniValue addresses(UniValue::VARR);\n+\n+    for (int i = range_start; i <= range_end; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        for (const CScript &script : scripts) {\n+            CTxDestination dest;\n+            if (!ExtractDestination(script, dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor produced invalid address\"));",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": 246053284,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added the bare multisig example and reworded error to \"Descriptor does not have a corresponding address\".",
      "created_at": "2019-01-15T18:05:42Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r248002214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248002214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248003602",
      "pull_request_review_id": 192787974,
      "id": 248003602,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAwMzYwMg==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }",
      "path": "src/rpc/misc.cpp",
      "position": 59,
      "original_position": 56,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": 246199058,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added check and test.",
      "created_at": "2019-01-15T18:09:59Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r248003602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248003602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248005175",
      "pull_request_review_id": 192789900,
      "id": 248005175,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0ODAwNTE3NQ==",
      "diff_hunk": "@@ -142,6 +143,87 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+              \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+              \"Examples of output descriptors are:\\n\"\n+              \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+              \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+              \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+              \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+              \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+              \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+              \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\",\n+              {\n+                {\"descriptor\", RPCArg::Type::STR, false},\n+                {\"start\",  RPCArg::Type::NUM, true},\n+                {\"end\",  RPCArg::Type::NUM, true}\n+              }\n+            }.ToString() +\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"descriptor\\\"                     (string, required) The descriptor\\n\"\n+            \"2. \\\"start\\\"                          (integer, optional) If a ranged descriptor is used, this specifies the start of the range to import.\\n\"\n+            \"3. \\\"end\\\"                            (integer, optional) If a ranged descriptor is used, this specifies the end of the range to import.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[ address ] (array) the derived addresses\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nFirst three native segwit receive addresses\\n\"\n+            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\n+            \"\"\n+        );\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_start = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+          throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_start = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+    }\n+\n+    FlatSigningProvider provider;\n+    auto desc = Parse(desc_str, provider);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Invalid descriptor\"));\n+    }\n+\n+    if (!desc->IsRange() && request.params.size() > 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should not be specified for an un-ranged descriptor\");\n+    }\n+\n+    if (desc->IsRange() && request.params.size() == 1) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range must be specified for a ranged descriptor\");\n+    }\n+\n+    UniValue addresses(UniValue::VARR);\n+\n+    for (int i = range_start; i <= range_end; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys\"));\n+        }\n+\n+        for (const CScript &script : scripts) {\n+            CTxDestination dest;\n+            if (!ExtractDestination(script, dest)) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Descriptor produced invalid address\"));\n+            }\n+\n+            addresses.push_back(EncodeDestination(dest));\n+        }\n+    }\n+\n+    return addresses;",
      "path": "src/rpc/misc.cpp",
      "position": 98,
      "original_position": 90,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "dfad4164393b28fd25a4057ab7a96473a85517ce",
      "in_reply_to_id": 246201874,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added an RPC error in case the result is empty. I don't know how to produce that, so there's no test.",
      "created_at": "2019-01-15T18:14:22Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r248005175",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/248005175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 232,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251924258",
      "pull_request_review_id": 197668708,
      "id": 251924258,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTkyNDI1OA==",
      "diff_hunk": "@@ -142,6 +143,93 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\", {\n+                \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+                \"Examples of output descriptors are:\\n\"\n+                \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+                \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+                \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+                \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+                \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+                \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+                \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            }, {\n+                {\"descriptor\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The descriptor.\"},\n+                {\"begin\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the beginning of the range to import.\"},\n+                {\"end\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the end of the range to import.\"}\n+            }}.ToString() +",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "7f78582ed9a743f02764851977ad7b95e490cf92",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Compile failure can be fixed with (large diff due to whitespace fixes)\r\n\r\n```diff\r\ndiff --git a/src/rpc/misc.cpp b/src/rpc/misc.cpp\r\nindex 12d165fff7..e9ff8a8040 100644\r\n--- a/src/rpc/misc.cpp\r\n+++ b/src/rpc/misc.cpp\r\n@@ -145,30 +145,29 @@ static UniValue createmultisig(const JSONRPCRequest& request)\r\n \r\n UniValue deriveaddresses(const JSONRPCRequest& request)\r\n {\r\n-    if (request.fHelp || request.params.empty() || request.params.size() > 3)\r\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3) {\r\n         throw std::runtime_error(\r\n-            RPCHelpMan{\"deriveaddresses\", {\r\n-                \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\r\n-                \"Examples of output descriptors are:\\n\"\r\n-                \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\r\n-                \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\r\n-                \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\r\n-                \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\r\n-                \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\r\n-                \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\r\n-                \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\r\n-            }, {\r\n-                {\"descriptor\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The descriptor.\"},\r\n-                {\"begin\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the beginning of the range to import.\"},\r\n-                {\"end\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the end of the range to import.\"}\r\n-            }}.ToString() +\r\n-            \"\\nResult:\\n\"\r\n-            \"[ address ] (array) the derived addresses\\n\"\r\n-            \"\\nExamples:\\n\"\r\n-            \"\\nFirst three native segwit receive addresses\\n\"\r\n-            + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\") +\r\n-            \"\"\r\n-        );\r\n+            RPCHelpMan{\"deriveaddresses\",\r\n+                {\"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\r\n+                 \"Examples of output descriptors are:\\n\"\r\n+                 \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\r\n+                 \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\r\n+                 \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\r\n+                 \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\r\n+                 \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\r\n+                 \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\r\n+                 \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"},\r\n+                {\r\n+                    {\"descriptor\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The descriptor.\"},\r\n+                    {\"begin\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the beginning of the range to import.\"},\r\n+                    {\"end\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the end of the range to import.\"},\r\n+                },\r\n+                RPCResult{\r\n+                    \"[ address ] (array) the derived addresses\\n\"},\r\n+                RPCExamples{\r\n+                    \"\\nFirst three native segwit receive addresses\\n\" + HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\")}}\r\n+                .ToString());\r\n+    }\r\n \r\n     RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\r\n     const std::string desc_str = request.params[0].get_str();\r\n",
      "created_at": "2019-01-29T16:58:41Z",
      "updated_at": "2019-01-29T17:14:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r251924258",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251924258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251931106",
      "pull_request_review_id": 197677152,
      "id": 251931106,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1MTkzMTEwNg==",
      "diff_hunk": "@@ -142,6 +143,93 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3)\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\", {\n+                \"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+                \"Examples of output descriptors are:\\n\"\n+                \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+                \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+                \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+                \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+                \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+                \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+                \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"\n+            }, {\n+                {\"descriptor\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The descriptor.\"},\n+                {\"begin\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the beginning of the range to import.\"},\n+                {\"end\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the end of the range to import.\"}\n+            }}.ToString() +",
      "path": "src/rpc/misc.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "7f78582ed9a743f02764851977ad7b95e490cf92",
      "in_reply_to_id": 251924258,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, done.",
      "created_at": "2019-01-29T17:14:41Z",
      "updated_at": "2019-01-29T17:14:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r251931106",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/251931106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254291800",
      "pull_request_review_id": 200602888,
      "id": 254291800,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDI5MTgwMA==",
      "diff_hunk": "@@ -142,6 +143,95 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3) {\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+            {\"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"},\n+            {\n+                {\"descriptor\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The descriptor.\"},\n+                {\"begin\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the beginning of the range to import.\"},\n+                {\"end\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the end of the range to import.\"}\n+            },\n+            RPCResult{\n+                \"[ address ] (array) the derived addresses\\n\"\n+            },\n+            RPCExamples{\n+                \"First three native segwit receive addresses\\n\" +\n+                HelpExampleCli(\"deriveaddresses\", \"\\\"wpkh([d34db33f/84h/0h/0h]xpub6DJ2dNUysrn5Vt36jH2KLBT2i1auw1tTSSomg8PhqNiUtx8QX2SvC9nrHu81fT41fvDUnhMjEzQgXnQjKEu3oaqMSzhSrHMxyyoEAmUHQbY/0/*)\\\" 0 2\")\n+            }}.ToString()\n+        );\n+    }\n+\n+    RPCTypeCheck(request.params, {UniValue::VSTR, UniValue::VNUM, UniValue::VNUM});\n+    const std::string desc_str = request.params[0].get_str();\n+\n+    int range_begin = 0;\n+    int range_end = 0;\n+\n+    if (request.params.size() >= 2) {\n+        if (request.params.size() == 2) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Missing range end parameter\");\n+        }\n+        range_begin = request.params[1].get_int();\n+        range_end = request.params[2].get_int();\n+        if (range_begin < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Range should be greater or equal than 0\");",
      "path": "src/rpc/misc.cpp",
      "position": 54,
      "original_position": 54,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "grammar nit: \"Range should be greater than or equal to 0\"",
      "created_at": "2019-02-06T14:29:24Z",
      "updated_at": "2019-02-06T14:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r254291800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254291800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254292293",
      "pull_request_review_id": 200602888,
      "id": 254292293,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDI5MjI5Mw==",
      "diff_hunk": "@@ -142,6 +143,95 @@ static UniValue createmultisig(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue deriveaddresses(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.empty() || request.params.size() > 3) {\n+        throw std::runtime_error(\n+            RPCHelpMan{\"deriveaddresses\",\n+            {\"\\nDerives one or more addresses corresponding to an output descriptor.\\n\"\n+            \"Examples of output descriptors are:\\n\"\n+            \"    pkh(<pubkey>)                        P2PKH outputs for the given pubkey\\n\"\n+            \"    wpkh(<pubkey>)                       Native segwit P2PKH outputs for the given pubkey\\n\"\n+            \"    sh(multi(<n>,<pubkey>,<pubkey>,...)) P2SH-multisig outputs for the given threshold and pubkeys\\n\"\n+            \"    raw(<hex script>)                    Outputs whose scriptPubKey equals the specified hex scripts\\n\"\n+            \"\\nIn the above, <pubkey> either refers to a fixed public key in hexadecimal notation, or to an xpub/xprv optionally followed by one\\n\"\n+            \"or more path elements separated by \\\"/\\\", where \\\"h\\\" represents a hardened child key.\\n\"\n+            \"For more information on output descriptors, see the documentation in the doc/descriptors.md file.\\n\"},\n+            {\n+                {\"descriptor\", RPCArg::Type::STR, /* opt */ false, /* default_val */ \"\", \"The descriptor.\"},\n+                {\"begin\", RPCArg::Type::NUM, /* opt */ true, /* default_val */ \"\", \"If a ranged descriptor is used, this specifies the beginning of the range to import.\"},",
      "path": "src/rpc/misc.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "meta-nit: #14491 uses \"start\", not \"begin\". Would be nice to sync these.",
      "created_at": "2019-02-06T14:30:35Z",
      "updated_at": "2019-02-06T14:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r254292293",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254292293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 162,
      "original_line": 162,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254296291",
      "pull_request_review_id": 200602888,
      "id": 254296291,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI1NDI5NjI5MQ==",
      "diff_hunk": "@@ -0,0 +1,50 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the deriveaddresses rpc call.\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, assert_raises_rpc_error\n+\n+class DeriveaddressesTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.supports_cli = 1\n+\n+    def run_test(self):\n+        assert_raises_rpc_error(-5, \"Invalid descriptor\", self.nodes[0].deriveaddresses, \"a\")\n+\n+        descriptor = \"wpkh(tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/1/0)\"\n+        address = \"bcrt1qjqmxmkpmxt80xz4y3746zgt0q3u3ferr34acd5\"\n+\n+        assert_equal(self.nodes[0].deriveaddresses(descriptor), [address])\n+\n+        descriptor_pubkey = \"wpkh(tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/1/1/0)\"\n+        address = \"bcrt1qjqmxmkpmxt80xz4y3746zgt0q3u3ferr34acd5\"\n+\n+        assert_equal(self.nodes[0].deriveaddresses(descriptor_pubkey), [address])\n+\n+        ranged_descriptor = \"wpkh(tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/1/*)\"\n+        assert_equal(self.nodes[0].deriveaddresses(ranged_descriptor, 0, 2), [address, \"bcrt1qhku5rq7jz8ulufe2y6fkcpnlvpsta7rq4442dy\", \"bcrt1qpgptk2gvshyl0s9lqshsmx932l9ccsv265tvaq\"])\n+\n+        assert_raises_rpc_error(-8, \"Range should not be specified for an un-ranged descriptor\", self.nodes[0].deriveaddresses, \"wpkh(tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/1/0)\", 0, 2)\n+\n+        assert_raises_rpc_error(-8, \"Range must be specified for a ranged descriptor\", self.nodes[0].deriveaddresses, \"wpkh(tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/1/*)\")\n+\n+        assert_raises_rpc_error(-8, \"Missing range end parameter\", self.nodes[0].deriveaddresses, \"wpkh(tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/1/*)\", 0)\n+\n+        assert_raises_rpc_error(-8, \"Range end should be equal to or greater than begin\", self.nodes[0].deriveaddresses, \"wpkh(tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/1/*)\", 2, 0)\n+\n+        assert_raises_rpc_error(-8, \"Range should be greater or equal than 0\", self.nodes[0].deriveaddresses, \"wpkh(tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/1/*)\", -1, 0)\n+\n+        combo_descriptor = \"combo(tprv8ZgxMBicQKsPd7Uf69XL1XwhmjHopUGep8GuEiJDZmbQz6o58LninorQAfcKZWARbtRtfnLcJ5MQ2AtHcQJCCRUcMRvmDUjyEmNUWwx8UbK/1/1/0)\"\n+        assert_equal(self.nodes[0].deriveaddresses(combo_descriptor), [\"mtfUoUax9L4tzXARpw1oTGxWyoogp52KhJ\", \"mtfUoUax9L4tzXARpw1oTGxWyoogp52KhJ\", address, \"2NDvEwGfpEqJWfybzpKPHF2XH3jwoQV3D7x\"])\n+\n+        hardened_without_privkey_descriptor = \"wpkh(tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/1'/1/0)\"\n+        assert_raises_rpc_error(-5, \"Cannot derive script without private keys\", self.nodes[0].deriveaddresses, hardened_without_privkey_descriptor)\n+\n+        bare_multisig_descriptor = \"multi(1, tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/1/1/0, tpubD6NzVbkrYhZ4WaWSyoBvQwbpLkojyoTZPRsgXELWz3Popb3qkjcJyJUGLnL4qHHoQvao8ESaAstxYSnhyswJ76uZPStJRJCTKvosUCJZL5B/1/1/1)\"\n+        assert_raises_rpc_error(-5, \"Descriptor does not have a corresponding address\", self.nodes[0].deriveaddresses, bare_multisig_descriptor)\n+",
      "path": "test/functional/rpc_deriveaddresses.py",
      "position": 48,
      "original_position": 48,
      "commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "original_commit_id": "595283851d8fe3e18553fdb2ad6e773e1a9c1a22",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd add a wallet roundtrip test like:\r\n\r\n```\r\nwpkh_info = self.nodes[0].getaddressinfo(self.nodes[0].getnewaddress(\"\", \"bech32\"))\r\n# Trim the witness part of descriptor off, check pkh entry in wallet, match descriptor\r\npkh_desc = wpkh_info[\"desc\"][1:]\r\npkh_addr = self.nodes[0].deriveaddresses(pkh_desc)\r\npkh_info = self.nodes[0].getaddressinfo(pkh_addr)\r\nassert_equal(wpkh_info[\"hdkeypath\"], pkh_info[\"hdkeypath\"])\r\nassert_equal(wpkh_info[\"pubkey\"], pkh_info[\"pubkey\"])\r\n```",
      "created_at": "2019-02-06T14:39:56Z",
      "updated_at": "2019-02-06T14:42:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14667#discussion_r254296291",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/254296291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14667"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    }
  ]
}