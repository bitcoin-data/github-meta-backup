{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628",
    "id": 459312076,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NDU5MzEyMDc2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19628",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/19628.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/19628.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/102867c587f5f7954232fb8ed8e85cda78bb4d32",
    "number": 19628,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net: change CNetAddr::ip to have flexible size",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "(chopped off from #19031 to ease review)\r\n\r\nBefore this change `CNetAddr::ip` was a fixed-size array of 16 bytes,\r\nnot being able to store larger addresses (e.g. TORv3) and encoded\r\nsmaller ones as 16-byte IPv6 addresses.\r\n\r\nChange its type to `prevector`, so that it can hold larger addresses and\r\ndo not disguise non-IPv6 addresses as IPv6. So the IPv4 address\r\n`1.2.3.4` is now encoded as `01020304` instead of\r\n`00000000000000000000FFFF01020304`.\r\n\r\nRename `CNetAddr::ip` to `CNetAddr::m_addr` because it is not an \"IP\" or\r\n\"IP address\" (TOR addresses are not IP addresses).\r\n\r\nIn order to preserve backward compatibility with serialization (where\r\ne.g. `1.2.3.4` is serialized as `00000000000000000000FFFF01020304`)\r\nintroduce `CNetAddr` dedicated legacy serialize/unserialize methods.\r\n\r\nAdjust `CSubNet` accordingly. Still use `CSubNet::netmask[]` of fixed 16\r\nbytes, but use the first 4 for IPv4 (not the last 4). Do not accept\r\ninvalid netmasks that have 0-bits followed by 1-bits and only allow\r\nsubnetting for IPv4 and IPv6.\r\n\r\nCo-authored-by: Carl Dong <contact@carldong.me>",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-07-30T15:33:51Z",
    "updated_at": "2022-02-15T10:36:33Z",
    "closed_at": "2020-08-25T16:13:30Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-08-25T16:13:30Z",
    "merge_commit_sha": "8d6224fefe015c2022d00a79a4549464bd79cf2f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "vasild:make_CNetAddr_ip_flexible",
      "ref": "make_CNetAddr_ip_flexible",
      "sha": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 211824,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:22:48Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2023-01-31T16:56:52Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "7f609f68d835bece8b01da1b09b127c67769ae7d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 496,
    "deletions": 267,
    "changed_files": 11,
    "commits": 2,
    "review_comments": 115,
    "comments": 28
  },
  "events": [
    {
      "event": "commented",
      "id": 666471177,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjQ3MTE3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666471177",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T15:43:36Z",
      "updated_at": "2020-07-30T15:43:36Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666471177",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "commented",
      "id": 666487671,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjQ4NzY3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666487671",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T16:01:00Z",
      "updated_at": "2020-07-30T16:01:00Z",
      "author_association": "MEMBER",
      "body": "[Filtered code coverage report](https://people.freebsd.org/~vd/pr19628_daa1d8b11_coverage/) (files not modified by this PR are omitted and not modified lines in files that are otherwise modified are dimmed).\r\n\r\n[List of modified and not covered lines](https://people.freebsd.org/~vd/pr19628_daa1d8b11_coverage/modified_and_not_covered.html).",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666487671",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "labeled",
      "id": 3604694469,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MDQ2OTQ0Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3604694469",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T16:19:38Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 666670421,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjY3MDQyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/666670421",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-30T20:25:25Z",
      "updated_at": "2020-08-25T09:04:18Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19797 (net: Remove old check for 3-byte shifted IP addresses from pre-0.2.9 node … by i-rme)\n* #19687 (refactor: make EncodeBase{32,64} consume Spans by theStack)\n* #19415 (net: Make DNS lookup mockable, add fuzzing harness by practicalswift)\n* #18722 (addrman: improve performance by using more suitable containers by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-666670421",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "reviewed",
      "id": 459569784,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTY5Nzg0",
      "url": null,
      "actor": null,
      "commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-459569784",
      "submitted_at": "2020-08-01T10:36:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 459705383,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NzA1Mzgz",
      "url": null,
      "actor": null,
      "commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-459705383",
      "submitted_at": "2020-08-03T01:57:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "labeled",
      "id": 3616673072,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM2MTY2NzMwNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3616673072",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-03T16:25:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3624152489,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYyNDE1MjQ4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3624152489",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-05T11:01:53Z"
    },
    {
      "event": "commented",
      "id": 669129564,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTEyOTU2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669129564",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-05T11:04:07Z",
      "updated_at": "2020-08-05T11:04:07Z",
      "author_association": "MEMBER",
      "body": "Rebased to resolve a conflict.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-669129564",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3624245747,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYyNDI0NTc0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3624245747",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-05T11:30:46Z"
    },
    {
      "event": "commented",
      "id": 669141744,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTE0MTc0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/669141744",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-05T11:33:20Z",
      "updated_at": "2020-08-05T11:33:20Z",
      "author_association": "MEMBER",
      "body": "Applied review suggestions.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-669141744",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "unlabeled",
      "id": 3624375417,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzYyNDM3NTQxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3624375417",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-05T12:10:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 463185771,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTg1Nzcx",
      "url": null,
      "actor": null,
      "commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-463185771",
      "submitted_at": "2020-08-07T09:53:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 463191991,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTkxOTkx",
      "url": null,
      "actor": null,
      "commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-463191991",
      "submitted_at": "2020-08-07T10:03:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 463197100,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTk3MTAw",
      "url": null,
      "actor": null,
      "commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-463197100",
      "submitted_at": "2020-08-07T10:12:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3634697468,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYzNDY5NzQ2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3634697468",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T20:39:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3638686549,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzYzODY4NjU0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3638686549",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-10T13:09:18Z"
    },
    {
      "event": "commented",
      "id": 671344431,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTM0NDQzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671344431",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-10T13:10:45Z",
      "updated_at": "2020-08-10T13:10:45Z",
      "author_association": "MEMBER",
      "body": "Fixed Windows build and changed `SetLegacyIPv6()` to take a ~~Spam~~Span argument.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671344431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3640336829,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0MDMzNjgyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3640336829",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-10T20:18:21Z"
    },
    {
      "event": "commented",
      "id": 671569506,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTU2OTUwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671569506",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-10T20:19:38Z",
      "updated_at": "2020-08-10T20:19:38Z",
      "author_association": "MEMBER",
      "body": "`s/IPv4_IN_IPv6_PREFIX/IPV4_IN_IPV6_PREFIX/` also in comment, was missed during the rename.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671569506",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3642838921,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0MjgzODkyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3642838921",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T12:05:13Z"
    },
    {
      "event": "commented",
      "id": 671905298,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTkwNTI5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/671905298",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-11T12:05:54Z",
      "updated_at": "2020-08-11T12:05:54Z",
      "author_association": "MEMBER",
      "body": "Rebased just to restart Travis.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-671905298",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "reviewed",
      "id": 465701594,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NzAxNTk0",
      "url": null,
      "actor": null,
      "commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Glad to see progress on BIP155/addrv2 with the imminent Tor v2 deprecation in a month with planned obsolescence on July 15, 2021.\r\n\r\nACK bfe7d1b56500b08bb a couple hours of code review -- tried to distinguish the many straightforward-looking and good mechanical changes from the critical ones as they are all smooshed together, however I will continue looking at this code and it's good to have it merged not late in the release cycle--, clean debug builds on gcc Debian 10.1.0, running a node since a day now with the change.\r\n\r\nA few comments below that can be ignored or left for a follow-up unless you decide to retouch or take some of them now.\r\n\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-465701594",
      "submitted_at": "2020-08-12T10:08:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3647173143,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0NzE3MzE0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3647173143",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T11:08:27Z"
    },
    {
      "event": "commented",
      "id": 672807867,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjgwNzg2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672807867",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T11:09:46Z",
      "updated_at": "2020-08-12T11:09:46Z",
      "author_association": "MEMBER",
      "body": "Addressed review suggestions.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-672807867",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3647641225,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY0NzY0MTIyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3647641225",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T13:11:10Z"
    },
    {
      "event": "commented",
      "id": 672879171,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mjg3OTE3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672879171",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-12T13:43:52Z",
      "updated_at": "2020-08-12T13:43:52Z",
      "author_association": "MEMBER",
      "body": "Addressed review suggestion.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-672879171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3650865761,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY1MDg2NTc2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3650865761",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T07:54:37Z"
    },
    {
      "event": "commented",
      "id": 673324076,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzMyNDA3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673324076",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T07:55:35Z",
      "updated_at": "2020-08-13T07:55:35Z",
      "author_association": "MEMBER",
      "body": "Addressed review suggestion.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-673324076",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "commented",
      "id": 673333774,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3MzMzMzc3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/673333774",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T08:15:46Z",
      "updated_at": "2020-08-13T08:15:46Z",
      "author_association": "MEMBER",
      "body": "re-ACK 8b7f2c1 per `git diff bfe7d1b 8b7f2c1`\r\n\r\nRan bitcoind at bfe7d1b with both onion and clearnet ipv4/ipv6 conns open for a couple of days, debug log and `-netinfo` connections dashboard have been showing nominal operation. Restarting bitcoind now at 8b7f2c1.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-673333774",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "added_to_project",
      "id": 3653467114,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzNjUzNDY3MTE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3653467114",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-13T19:04:17Z",
      "project_card": {
        "id": 43620274,
        "url": "https://api.github.com/projects/columns/cards/43620274",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 470392048,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMzkyMDQ4",
      "url": null,
      "actor": null,
      "commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "ShawkiS",
        "id": 57439827,
        "node_id": "MDQ6VXNlcjU3NDM5ODI3",
        "avatar_url": "https://avatars.githubusercontent.com/u/57439827?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ShawkiS",
        "html_url": "https://github.com/ShawkiS",
        "followers_url": "https://api.github.com/users/ShawkiS/followers",
        "following_url": "https://api.github.com/users/ShawkiS/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ShawkiS/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ShawkiS/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ShawkiS/subscriptions",
        "organizations_url": "https://api.github.com/users/ShawkiS/orgs",
        "repos_url": "https://api.github.com/users/ShawkiS/repos",
        "events_url": "https://api.github.com/users/ShawkiS/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ShawkiS/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-470392048",
      "submitted_at": "2020-08-19T12:08:54Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "commented",
      "id": 676500110,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjUwMDExMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676500110",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T15:34:57Z",
      "updated_at": "2020-08-19T15:34:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "I assume TORv3 addresses will be addressed in the future PRs, right?",
      "user": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-676500110",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "commented",
      "id": 676500709,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3NjUwMDcwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/676500709",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-19T15:36:03Z",
      "updated_at": "2020-08-19T15:36:03Z",
      "author_association": "MEMBER",
      "body": "> I assume TORv3 addresses will be addressed in the future PRs, right?\r\n\r\nYes. See BIP155 and  #19031. This is just preparatory work required for that,",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-676500709",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "reviewed",
      "id": 470802830,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwODAyODMw",
      "url": null,
      "actor": null,
      "commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-470802830",
      "submitted_at": "2020-08-19T19:49:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 471053325,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDUzMzI1",
      "url": null,
      "actor": null,
      "commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-471053325",
      "submitted_at": "2020-08-20T00:53:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 471059194,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDU5MTk0",
      "url": null,
      "actor": null,
      "commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-471059194",
      "submitted_at": "2020-08-20T01:14:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 471049774,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDQ5Nzc0",
      "url": null,
      "actor": null,
      "commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-471049774",
      "submitted_at": "2020-08-20T02:28:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3676194252,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY3NjE5NDI1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3676194252",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-20T16:50:48Z"
    },
    {
      "event": "commented",
      "id": 677781004,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3Nzc4MTAwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677781004",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-20T16:52:22Z",
      "updated_at": "2020-08-20T16:52:22Z",
      "author_association": "MEMBER",
      "body": "Addressed suggestions:\r\n\r\n[1.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473543192) Fixed a bug in netmask validation and extended a test to cover that case.\r\n[2.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473279613) Introduced `HasPrefix()` and used it where appropriate.\r\n[3.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473479704) Moved an assert to where `m_net` is set.\r\n[4.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473492495) Copy part of our address using `std::vector::insert()`.\r\n[5.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473546480) Added braces around single statement `for` and `if`.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-677781004",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "commented",
      "id": 677787025,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3Nzc4NzAyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/677787025",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-20T17:04:17Z",
      "updated_at": "2020-08-20T17:04:17Z",
      "author_association": "MEMBER",
      "body": "A note on invalid netmasks and sub-netting non IP networks:\r\n\r\nA netmask that contains 1-bits after 0-bits (the 1-bits are not contiguous on the left side) is invalid. IMO as invalid as \"255.255.390.0\" [[1]](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#Subnet_masks) [[2]](https://tools.ietf.org/html/rfc4632#section-5.1).\r\n\r\nThe code before this PR used to parse and accept such non-left-contiguous netmasks. That has been changed to not accept them because the new code is more robust that way and it is nonsensical anyway. [An IRC discussion around non-left-contiguous netmasks](http://www.erisian.com.au/bitcoin-core-dev/log-2020-04-29.html#l-241).\r\n\r\nThis PR also restricts subnetting to just IPv4 and IPv6 (subnetting of TOR or `NET_INTERNAL` is meaningless).\r\n\r\nThose changes are mentioned in the commit message and in the PR description:\r\n\r\n> Do not accept invalid netmasks that have 0-bits followed by 1-bits and only allow subnetting for IPv4 and IPv6\r\n\r\nSince some comments above [[3]](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473543192) [[4]](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473547937) I looked at this carefully and managed to restore the original behavior (iuck!):\r\n\r\n<details>\r\n<summary>Restore invalid netmasks and non-IP subnetting on top of this PR</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.cpp w/src/netaddress.cpp\r\nindex 8d73d4a58..1d4f43fcd 100644\r\n--- i/src/netaddress.cpp\r\n+++ w/src/netaddress.cpp\r\n@@ -810,28 +810,16 @@ static inline int NetmaskBits(uint8_t x)\r\n     default: return -1;\r\n     }\r\n }\r\n \r\n CSubNet::CSubNet(const CNetAddr& addr, const CNetAddr& mask) : CSubNet()\r\n {\r\n-    valid = (addr.IsIPv4() || addr.IsIPv6()) && addr.m_net == mask.m_net;\r\n+    valid = addr.m_net == mask.m_net;\r\n     if (!valid) {\r\n         return;\r\n     }\r\n-    // Check if `mask` contains 1-bits after 0-bits (which is an invalid netmask).\r\n-    bool zeros_found = false;\r\n-    for (auto b : mask.m_addr) {\r\n-        const int num_bits = NetmaskBits(b);\r\n-        if (num_bits == -1 || (zeros_found && num_bits != 0)) {\r\n-            valid = false;\r\n-            return;\r\n-        }\r\n-        if (num_bits < 8) {\r\n-            zeros_found = true;\r\n-        }\r\n-    }\r\n \r\n     assert(mask.m_addr.size() <= sizeof(netmask));\r\n \r\n     memcpy(netmask, mask.m_addr.data(), mask.m_addr.size());\r\n \r\n     network = addr;\r\n@@ -841,16 +829,13 @@ CSubNet::CSubNet(const CNetAddr& addr, const CNetAddr& mask) : CSubNet()\r\n         network.m_addr[x] &= netmask[x];\r\n     }\r\n }\r\n \r\n CSubNet::CSubNet(const CNetAddr& addr) : CSubNet()\r\n {\r\n-    valid = addr.IsIPv4() || addr.IsIPv6();\r\n-    if (!valid) {\r\n-        return;\r\n-    }\r\n+    valid = true;\r\n \r\n     assert(addr.m_addr.size() <= sizeof(netmask));\r\n \r\n     memset(netmask, 0xFF, addr.m_addr.size());\r\n \r\n     network = addr;\r\n@@ -872,24 +857,54 @@ bool CSubNet::Match(const CNetAddr &addr) const\r\n     }\r\n     return true;\r\n }\r\n \r\n std::string CSubNet::ToString() const\r\n {\r\n-    assert(network.m_addr.size() <= sizeof(netmask));\r\n-\r\n-    uint8_t cidr = 0;\r\n+    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\r\n+    int cidr = 0;\r\n+    bool valid_cidr = true;\r\n+    int size = network.m_addr.size();\r\n+    int i;\r\n+    for (i = 0; i < size && netmask[i] == 0xff; ++i) {\r\n+        cidr += 8;\r\n+    }\r\n+    if (i < size) {\r\n+        int bits = NetmaskBits(netmask[i]);\r\n+        if (bits < 0) {\r\n+            valid_cidr = false;\r\n+        } else {\r\n+            cidr += bits;\r\n+        }\r\n+        ++i;\r\n+    }\r\n+    for (; i < size && valid_cidr; ++i) {\r\n+        if (netmask[i] != 0x00) {\r\n+            valid_cidr = false;\r\n+        }\r\n+    }\r\n \r\n-    for (size_t i = 0; i < network.m_addr.size(); ++i) {\r\n-        if (netmask[i] == 0x00) {\r\n-            break;\r\n+    /* Format output */\r\n+    std::string strNetmask;\r\n+    if (valid_cidr) {\r\n+        strNetmask = strprintf(\"%u\", cidr);\r\n+    } else {\r\n+        if (network.IsIPv4()) {\r\n+            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[0], netmask[1], netmask[2], netmask[3]);\r\n+        } else {\r\n+            // Notice - this is not a valid representation of an IPv6 netmask.\r\n+            // They are only defined to use CIDR notation.\r\n+            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\r\n+                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\r\n+                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\r\n+                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\r\n+                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\r\n         }\r\n-        cidr += NetmaskBits(netmask[i]);\r\n     }\r\n \r\n-    return network.ToString() + strprintf(\"/%u\", cidr);\r\n+    return network.ToString() + \"/\" + strNetmask;\r\n }\r\n \r\n bool CSubNet::IsValid() const\r\n {\r\n     return valid;\r\n }\r\ndiff --git i/src/test/netbase_tests.cpp w/src/test/netbase_tests.cpp\r\nindex 6681c92bb..47e9f854e 100644\r\n--- i/src/test/netbase_tests.cpp\r\n+++ w/src/test/netbase_tests.cpp\r\n@@ -295,17 +295,15 @@ BOOST_AUTO_TEST_CASE(subnet_test)\r\n     subnet = ResolveSubNet(\"1:2:3:4:5:6:7:8/ffff:0000:0000:0000:0000:0000:0000:0000\");\r\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"1::/16\");\r\n     subnet = ResolveSubNet(\"1:2:3:4:5:6:7:8/0000:0000:0000:0000:0000:0000:0000:0000\");\r\n     BOOST_CHECK_EQUAL(subnet.ToString(), \"::/0\");\r\n     // Invalid netmasks (with 1-bits after 0-bits)\r\n     subnet = ResolveSubNet(\"1.2.3.4/255.255.232.0\");\r\n-    BOOST_CHECK(!subnet.IsValid());\r\n-    subnet = ResolveSubNet(\"1.2.3.4/255.0.255.255\");\r\n-    BOOST_CHECK(!subnet.IsValid());\r\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1.2.0.0/255.255.232.0\");\r\n     subnet = ResolveSubNet(\"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\r\n-    BOOST_CHECK(!subnet.IsValid());\r\n+    BOOST_CHECK_EQUAL(subnet.ToString(), \"1:2:3:4:5:6:7:8/ffff:ffff:ffff:fffe:ffff:ffff:ffff:ff0f\");\r\n }\r\n \r\n BOOST_AUTO_TEST_CASE(netbase_getgroup)\r\n {\r\n     std::vector<bool> asmap; // use /16\r\n     BOOST_CHECK(ResolveIP(\"127.0.0.1\").GetGroup(asmap) == std::vector<unsigned char>({0})); // Local -> !Routable()\r\n@@ -433,14 +431,13 @@ BOOST_AUTO_TEST_CASE(netbase_dont_resolve_strings_with_embedded_nul_characters)\r\n     BOOST_CHECK(!LookupHost(std::string(\"127.0.0.1\\0example.com\\0\", 22), addr, false));\r\n     CSubNet ret;\r\n     BOOST_CHECK(LookupSubNet(std::string(\"1.2.3.0/24\", 10), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"1.2.3.0/24\\0\", 11), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"1.2.3.0/24\\0example.com\", 22), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"1.2.3.0/24\\0example.com\\0\", 23), ret));\r\n-    // We only do subnetting for IPv4 and IPv6\r\n-    BOOST_CHECK(!LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\", 22), ret));\r\n+    BOOST_CHECK(LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\", 22), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\\0\", 23), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\\0example.com\", 34), ret));\r\n     BOOST_CHECK(!LookupSubNet(std::string(\"5wyqrzbvrdsumnok.onion\\0example.com\\0\", 35), ret));\r\n }\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\n```\r\n</details>\r\n\r\nThere are a few options:\r\n\r\n* Leave this PR as is, or\r\n* Amend the above patch into the sole commit of this PR and\r\n  * Reverse-apply the patch as a separate (second) commit in this PR, or\r\n  * Reverse-apply the patch as a separate PR after this one gets merged\r\n\r\nWhat do you think?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-677787025",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "reviewed",
      "id": 471884700,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODg0NzAw",
      "url": null,
      "actor": null,
      "commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-471884700",
      "submitted_at": "2020-08-20T18:40:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 471876321,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODc2MzIx",
      "url": null,
      "actor": null,
      "commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3. Left some suggestions below which are minor and can be ignored. I reviewed this pretty thoroughly and didn't find any actual problems.\r\n\r\nI can't weigh in on decision to drop support for discontiguous netmasks. Obviously that blocks current PR if it can't be done here, but otherwise this change looks very good in its current form.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-471876321",
      "submitted_at": "2020-08-20T22:05:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3679209696,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY3OTIwOTY5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3679209696",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T11:22:19Z"
    },
    {
      "event": "commented",
      "id": 678242917,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODI0MjkxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678242917",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T11:26:42Z",
      "updated_at": "2020-08-21T11:26:42Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky, thanks for the valuable input! Most of the suggestions addressed.\r\n\r\nChanges since the last push:\r\n\r\n[1.](https://travis-ci.org/github/bitcoin/bitcoin/jobs/719679500#L3262) Fixed compilation with GCC 8 (`HasPrefix()`)\r\n[2.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473486793) Simplified the check for `INADDR_ANY` and `INADDR_NONE`\r\n[3.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474187399) Set `V1_SERIALIZATION_SIZE` to `ADDR_IPV6_SIZE`\r\n[4.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474189751) `assert(false)` if we try to serialize `NET_UNROUTABLE` or `NET_MAX`\r\n[5.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474214757) Moved the comments about the dummy IPv6 addresses being unroutable\r\n[6.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474266508) Added two more asserts\r\n[7.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474270653) Used `Span::last()` instead of pointer arithmetics\r\n[8.](https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474278171) Used `/` and `%` instead of bitwise `>>` and `&` to improve readability\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-678242917",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "mentioned",
      "id": 3679229409,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY3OTIyOTQwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3679229409",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T11:26:42Z"
    },
    {
      "event": "subscribed",
      "id": 3679229413,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2NzkyMjk0MTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3679229413",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T11:26:42Z"
    },
    {
      "event": "commented",
      "id": 678296187,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODI5NjE4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678296187",
      "actor": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T13:40:14Z",
      "updated_at": "2020-08-21T13:40:14Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nI've dones some tests with `bitcoind -testnet` between Windows and Linux and IPv4 and IPv6 nodes are successfully communicating.",
      "user": {
        "login": "sipsorcery",
        "id": 197660,
        "node_id": "MDQ6VXNlcjE5NzY2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipsorcery",
        "html_url": "https://github.com/sipsorcery",
        "followers_url": "https://api.github.com/users/sipsorcery/followers",
        "following_url": "https://api.github.com/users/sipsorcery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipsorcery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipsorcery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
        "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
        "repos_url": "https://api.github.com/users/sipsorcery/repos",
        "events_url": "https://api.github.com/users/sipsorcery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-678296187",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3679743739,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY3OTc0MzczOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3679743739",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T14:00:16Z"
    },
    {
      "event": "commented",
      "id": 678308599,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODMwODU5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678308599",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T14:06:22Z",
      "updated_at": "2020-08-21T14:06:22Z",
      "author_association": "MEMBER",
      "body": "Revert any changes to `bool operator==(const CSubNet& a, const CSubNet& b)` and `operator<` - they are not necessary and a recent tweak [upset the fuzzer](https://travis-ci.org/github/bitcoin/bitcoin/jobs/719900948#L4309).\r\n\r\nIt is ok to compare the entire `netmask[16]` even for IPv4 because we memset it to `0`s in the constructors, so we will compare the trailing 12 zero bytes unnecessary. That is closer to the original behavior.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-678308599",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "commented",
      "id": 678486631,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODQ4NjYzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/678486631",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-21T20:48:54Z",
      "updated_at": "2020-08-21T20:48:54Z",
      "author_association": "MEMBER",
      "body": "Regarding the change to remove support arbitrary bitmasks as mask, if it's easier to make this change while dropping them, that's what we should do. They're undocumented, unexpected, useless as far as I can see, and I would be very surprised if anyone was using it.\r\n\r\nMy preference would be to do it as a separate commit, as it's semantically a very different change than goal of the PR. I would expect that restricting netmasks to CIDR first, and then changing the `ip` field to have flexible size would be easiest, but I haven't tried.\r\n\r\nI do think it's worth adding release notes for, so that it's at least documented that that change was made, on the off chance anyone is using it.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-678486631",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "reviewed",
      "id": 473031017,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMxMDE3",
      "url": null,
      "actor": null,
      "commit_id": "f37cde9ad6764930c0fcfefb2139e6f07d6e4353",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Checkpoint WIP code review and tested re-ACK f37cde9, caught up with the discussion/feedback, reviewed changes since my last review per `git diff 8b7f2c1 f37cde9` and verified a few aspects adding/removing/godbolting things, re-reviewed the code, and running a node for a few hours now.\r\n\r\nNit, with the latest push this code is no longer being changed but could perhaps document the `16` value in some way or other.\r\n```diff\r\n--- a/src/netaddress.cpp\r\n+++ b/src/netaddress.cpp\r\n@@ -888,12 +888,12 @@ bool CSubNet::IsValid() const\r\n \r\n bool operator==(const CSubNet& a, const CSubNet& b)\r\n {\r\n-    return a.valid == b.valid && a.network == b.network && !memcmp(a.netmask, b.netmask, 16);\r\n+    return a.valid == b.valid && a.network == b.network && !memcmp(a.netmask, b.netmask, ADDR_IPV6_SIZE);\r\n }\r\n \r\n bool operator<(const CSubNet& a, const CSubNet& b)\r\n {\r\n-    return (a.network < b.network || (a.network == b.network && memcmp(a.netmask, b.netmask, 16) < 0));\r\n+    return (a.network < b.network || (a.network == b.network && memcmp(a.netmask, b.netmask, ADDR_IPV6_SIZE) < 0));\r\n }\r\n```",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-473031017",
      "submitted_at": "2020-08-23T18:02:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3685056694,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY4NTA1NjY5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3685056694",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T11:50:27Z"
    },
    {
      "event": "commented",
      "id": 679299042,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTI5OTA0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679299042",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T18:42:54Z",
      "updated_at": "2020-08-24T18:42:54Z",
      "author_association": "MEMBER",
      "body": "Changes in the last push - fix compilation with GCC 4.8.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679299042",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZWE1N2FkNjc0MDZiM2FhYWVmNTI1NGJjMmZhN2U0MTM0ZjNhNmRm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
      "tree": {
        "sha": "6c79a8f12caca034006db2e2320ce2339411ff0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c79a8f12caca034006db2e2320ce2339411ff0c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6c79a8f12caca034006db2e2320ce2339411ff0c\nparent cb1ee1551cf39905ccb67e3d07b0e3aaaca18ce3\nauthor Vasil Dimov <vd@FreeBSD.org> 1598295811 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1598298659 +0200\n\nnet: don't accept non-left-contiguous netmasks\n\nA netmask that contains 1-bits after 0-bits (the 1-bits are not\ncontiguous on the left side) is invalid [1] [2].\n\nThe code before this PR used to parse and accept such\nnon-left-contiguous netmasks. However, a coming change that will alter\n`CNetAddr::ip` to have flexible size would make juggling with such\nnetmasks more difficult, thus drop support for those.\n\n[1] https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#Subnet_masks\n[2] https://tools.ietf.org/html/rfc4632#section-5.1\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl9EGiMACgkQVN8G9ktV\ny7+1Ch/7ByUx8hxdgV8Ol7TLsInolXyy2lKKFvvPBo+JUYAc6njlfB6SkiooaCYZ\n1+0XE3n/l5AnLlzQ/cxIKL2BA2jSl5atYOr3WVKmqf11RG2ebayfMwcdsxwCGDg9\nHKdysROdTwbiKs9AsXecIwy9GYLewrXVcKgVTGoRMKDDWJ66NgLXhGDav2lFMXj1\nP387qXGjUeLHwxtpkGckCx7Mn13RzinV4x1Pu4oZdnnh7ovohGf2DifL14W2p4li\nEHIUnOZNxiuUGHR/8a0fhHlWSITcOsdCYwMnXmncbaokQllsaZMGgKmvf14a14w2\n7cFJml0CBKcB+pazNytJLDu/L9qR6V6jlMfBkDYeJ3jVyiMnp4jPmMb+9QUPdSny\nK10yyitz+fQwyNU8woICsVwP6jzJGAD4mZaKsraH6qtnwmzqsm8KGWUanUuALHCX\n/t5nqeLwL3jn2ySRZVhP2L8wUvNCWblXku5VL8NrQEDi1aqy8m2N2tkiROpE2K0K\neT4OfX9JxRXQLPfPW3C2fW+nm/e8GIeZOz57hnrHtjj3cesM+2nJnYoDm7HLStdx\nUsCSCjkqgUrp+jihgjBbgAW7mgiSM3n+50rlkl89SxAWnnreeFuOmtVbyNMiFnRA\nTFyIT1iWg+B/zbfQjRq7LRMU+/83c+DPaEP5s6bh/rZQIhv15O/3RrVmYd8OK7qK\naD3IC615kWztItUOPZY3PqyuLGIpedZHujUDK/rg73wk6a/kByeFiBTb18Sf+RVN\nmEUos43FSJPt7P/mBEL0Ob3V7GNRa8yUsJzdK7Bt8+3Hg/fmb0zOyNdGMyY9OIcx\nyURinCm4cKTdP4hG6z98FiHazQz7+lwS0usNhp+vQE+dTXrsbImStFEk6Q1BO5Od\nGQFrnigu6msepiWIaHc9HGqsBZWEElijTainzDJzTXIAeIYydoJTGjjvb4+bQ5uF\nkz7E6YQh6qNFFeKMNLAD4yyeZ5GnT55JWeBI+vevEDVByD6ERRPyw5QhyDV08Dgl\n9lYUM7AavXlHRkv0Z+3KbzKUvHROHwryTwWq+DVAD+SVS2sdKw0FJcfqxvds9WFm\noxmbeVph6B77EcmYSJwwO/wXgsGaBeZXAq94Yox1vzaFHfmTLAj9PiFwj1IKbQO/\n5hXHZXAh0yJUvqTDp4ZzSBg88sLtr/r5oAF9ScZXVtHQIXZWtF5q2gKmbLblNiGZ\n4O/+pI+BISt/FC648wG4iNDqJRXi73lzJiXWUUnCHKrSrCRYe3CMV3zcBv/AYYCj\n3sCoJTlboQcL5lJ2H0pW+HYMsfTNQTBLJQeXzpCN+jAXjy8r/CkgSgPOpjj70cyP\n+wpnYLtz6WuUYNubTd11zwm4oRJ9qQ==\n=Xpbp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb1ee1551cf39905ccb67e3d07b0e3aaaca18ce3",
          "sha": "cb1ee1551cf39905ccb67e3d07b0e3aaaca18ce3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cb1ee1551cf39905ccb67e3d07b0e3aaaca18ce3"
        }
      ],
      "message": "net: don't accept non-left-contiguous netmasks\n\nA netmask that contains 1-bits after 0-bits (the 1-bits are not\ncontiguous on the left side) is invalid [1] [2].\n\nThe code before this PR used to parse and accept such\nnon-left-contiguous netmasks. However, a coming change that will alter\n`CNetAddr::ip` to have flexible size would make juggling with such\nnetmasks more difficult, thus drop support for those.\n\n[1] https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#Subnet_masks\n[2] https://tools.ietf.org/html/rfc4632#section-5.1",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-08-24T19:50:59Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-08-24T19:03:31Z"
      },
      "sha": "1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDI4NjdjNTg3ZjVmNzk1NDIzMmZiOGVkOGU4NWNkYTc4YmI0ZDMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "tree": {
        "sha": "4c9aea8c2b43541d4bfd2ddd23a3ddebd22c3346",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c9aea8c2b43541d4bfd2ddd23a3ddebd22c3346"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4c9aea8c2b43541d4bfd2ddd23a3ddebd22c3346\nparent 1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df\nauthor Vasil Dimov <vd@FreeBSD.org> 1598297666 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1598298659 +0200\n\nnet: change CNetAddr::ip to have flexible size\n\nBefore this change `CNetAddr::ip` was a fixed-size array of 16 bytes,\nnot being able to store larger addresses (e.g. TORv3) and encoded\nsmaller ones as 16-byte IPv6 addresses.\n\nChange its type to `prevector`, so that it can hold larger addresses and\ndo not disguise non-IPv6 addresses as IPv6. So the IPv4 address\n`1.2.3.4` is now encoded as `01020304` instead of\n`00000000000000000000FFFF01020304`.\n\nRename `CNetAddr::ip` to `CNetAddr::m_addr` because it is not an \"IP\" or\n\"IP address\" (TOR addresses are not IP addresses).\n\nIn order to preserve backward compatibility with serialization (where\ne.g. `1.2.3.4` is serialized as `00000000000000000000FFFF01020304`)\nintroduce `CNetAddr` dedicated legacy serialize/unserialize methods.\n\nAdjust `CSubNet` accordingly. Still use `CSubNet::netmask[]` of fixed 16\nbytes, but use the first 4 for IPv4 (not the last 4). Only allow\nsubnetting for IPv4 and IPv6.\n\nCo-authored-by: Carl Dong <contact@carldong.me>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAl9EGiMACgkQVN8G9ktV\ny78GgR/+LexKqci7ocjlLVBbozGIkM0CJaoUqizKXtGoatc/uhy1aPo2Ts5Ijt2A\nR7T9/chOQ1Sl+wBQVGObgyWtQcJD0Z66HpTpb2Pu+BVpjbwhuhHGk4KXFk3uXFQV\nOWvgYHRj3pnGkAv7hJ8k55tr5f+h50lXS0RQK22fyUfyle5noZ/ehAFSpicdl04a\nTiECKnJsYjTsdG43nKsDYuJfXo9aPG6IYMZT7jmsmffEYAP/CzMjZG1zGY96ld1e\n0tBp4cJlaebLonf48KpEJt2lAb8zRVCtPYqVBY4bUHt472gadBqUsxRxQSuhA0aV\nDXltEn4JACtcymxwX78N1++/nO5pjJvwLdqVxFdAX9roThH7F2rSy+K3Nzc/+HPZ\nZKGWWfQC7rr1R8i6E9qS6YAvlROsL1fvDNRjJxvWXjAeWtyByJlaWUqlIiaT/ojZ\nkPYF4I7H8Rn1dtUu3Lw2HlQ5u2VC7a3DiDQ5LV7VOFeYsWLpy+oRc8uncZhmydO7\nh4CLgZaTGNdPCyIMUqe2pMVS0GFiTtHoUpDXYgvjEeTI17ny83biyp/XXWgVXwfs\nBkydXCBce+glgfQTtau0SjwAVu0A+Aah6TNV+Fy65SkxnsIF/gY7R9cnZBx0njS8\ncJZAqj7DXq7HVlIN98IQgURCaU/KyMKY9ai6gYVA9W4w22D9xk6hAc04YKEevleN\nKoQeQStXKjzZ9D84inulvBZr0Vx6dvKNdklUcZ9XQ0STA4n+jcBWCbo5zC/fXnSt\nwBxZVE79ym3dEnpU8NepAoclGYuimjpLMgLY+zrE5Ib9MMGHmdfgRltUbudGZxu5\nPYH+95hxvjJUrhY0+c4gQb3B2RmfbuiUZMtSQDVDgZEMnbL7rXfpssx5dTmB9HuY\n0ZfCxjsayZFb831ffeijGChtTh5thkKNo+xhoQJ/xMjnFaqGS3Zy7frY427Vgx6F\n0mjM55X5kAPMxAkhR7hjh6yGuxBg1DyMfiLPg1ryvBkylrnkixtdyPFXyohGv9Em\nut6REHOH/hIL91auo91CPIikeGEy8coyWmC34KZPOf3YA0EtNTSKxOF+zAwtQL19\nzy+jrtVdG9nFcOqHG1/Ye0qHEv24zEKg9tpua5+wgsKB5sxkmui6LWIAfBjmUxHx\nTclAwyVXPgW2hEkns7khP1pLg4WjPH2JcHP01QfBVWJ54cTnvCxlPDYnalDX86Ku\nk4/rv9FpNahdmGaxapmXcqNIRMavTbF8O43xvQPqLHrKrD0oXqIs2KKnzSq7F2hb\ntn4mhtoTVfJWLq+KmllX41lqAfpcKdQCPsnNOrnHYRCRoRfB64uoWDf00+Dg7w2E\nqueRij764aU/wsdKz/A9K48CoscGRQ==\n=WCGo\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
          "sha": "1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df"
        }
      ],
      "message": "net: change CNetAddr::ip to have flexible size\n\nBefore this change `CNetAddr::ip` was a fixed-size array of 16 bytes,\nnot being able to store larger addresses (e.g. TORv3) and encoded\nsmaller ones as 16-byte IPv6 addresses.\n\nChange its type to `prevector`, so that it can hold larger addresses and\ndo not disguise non-IPv6 addresses as IPv6. So the IPv4 address\n`1.2.3.4` is now encoded as `01020304` instead of\n`00000000000000000000FFFF01020304`.\n\nRename `CNetAddr::ip` to `CNetAddr::m_addr` because it is not an \"IP\" or\n\"IP address\" (TOR addresses are not IP addresses).\n\nIn order to preserve backward compatibility with serialization (where\ne.g. `1.2.3.4` is serialized as `00000000000000000000FFFF01020304`)\nintroduce `CNetAddr` dedicated legacy serialize/unserialize methods.\n\nAdjust `CSubNet` accordingly. Still use `CSubNet::netmask[]` of fixed 16\nbytes, but use the first 4 for IPv4 (not the last 4). Only allow\nsubnetting for IPv4 and IPv6.\n\nCo-authored-by: Carl Dong <contact@carldong.me>",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-08-24T19:50:59Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2020-08-24T19:34:26Z"
      },
      "sha": "102867c587f5f7954232fb8ed8e85cda78bb4d32"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3686987324,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzY4Njk4NzMyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3686987324",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T19:52:37Z"
    },
    {
      "event": "commented",
      "id": 679335786,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTMzNTc4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679335786",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T20:00:25Z",
      "updated_at": "2020-08-24T20:05:51Z",
      "author_association": "MEMBER",
      "body": "> Regarding the change to remove support arbitrary bitmasks as mask ... My preference would be to do it as a separate commit\r\n\r\nDone in the last push: this PR is now split in 2 commits with the cumulative diff [equal](https://github.com/bitcoin/bitcoin/compare/7c34237fba619667ed1d3981d3b564ad7c25077e..102867c587f5f7954232fb8ed8e85cda78bb4d32) to the single commit from before (modulo the added release notes).\r\n\r\nA further improvement would be to change `uint8_t CSubNet::netmask[16]` to `uint8_t CSubNet::m_cidr` (as a separate PR).\r\n\r\n@jonatack It was hard for me to stop myself from `s/16/ADDR_IPV6_SIZE` in `operator==` but I resisted because that would also drag a similar change in the definition of `CSubNet::netmask[16]` and invite other improvements to `CSubNet` which are not necessary for this PR. A followup PR is warranted.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679335786",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "mentioned",
      "id": 3687032665,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzY4NzAzMjY2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3687032665",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T20:05:51Z"
    },
    {
      "event": "subscribed",
      "id": 3687032668,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM2ODcwMzI2Njg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3687032668",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T20:05:51Z"
    },
    {
      "event": "reviewed",
      "id": 473860033,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODYwMDMz",
      "url": null,
      "actor": null,
      "commit_id": "1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-473860033",
      "submitted_at": "2020-08-24T21:11:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 473872852,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODcyODUy",
      "url": null,
      "actor": null,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-473872852",
      "submitted_at": "2020-08-24T21:34:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "commented",
      "id": 679408162,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTQwODE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679408162",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T23:00:01Z",
      "updated_at": "2020-08-24T23:00:01Z",
      "author_association": "MEMBER",
      "body": "utACK 102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679408162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "reviewed",
      "id": 473995815,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczOTk1ODE1",
      "url": null,
      "actor": null,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 102867c587f5f7954232fb8ed8e85cda78bb4d32. Just many suggested updates since last review. Thanks for following up on everything!\r\n\r\nIt's a shame this had to switch to std::array everywhere. Makes the code more verbose and fragile, but I guess it was the easiest way to work around a gcc 4.8 https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474806190 compiler issue",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-473995815",
      "submitted_at": "2020-08-24T23:32:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "commented",
      "id": 679418634,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTQxODYzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679418634",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-24T23:36:25Z",
      "updated_at": "2020-08-24T23:36:25Z",
      "author_association": "MEMBER",
      "body": "FWIW, if we just want to syntactic advantage of being able to write `HasPrefix(m_addr, {1,2,3,4})`, that could be done by making the argument `std::vector<uint8_t>`. I don't think it's worth changing that, especially as we'll probably be dropping support for GCC 4.8 soon anyway.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679418634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "reviewed",
      "id": 474102513,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTAyNTEz",
      "url": null,
      "actor": null,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK 102867c587f5f7954232fb8ed8e85cda78bb4d32 diff review, code review, build/tests/running bitcoind with ipv4/ipv6/onion peers",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-474102513",
      "submitted_at": "2020-08-25T03:24:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 474111640,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTExNjQw",
      "url": null,
      "actor": null,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Partial re-review ACK\r\n\r\nSome nits, most of which increase the diff, so I definitely understand if you choose to ignore them.",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-474111640",
      "submitted_at": "2020-08-25T04:37:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "reviewed",
      "id": 474233812,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MjMzODEy",
      "url": null,
      "actor": null,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 102867c587f5f7954232fb8ed8e85cda78bb4d32\r\n\r\nReviewed changes, ran node, did IBD to ~200k, added peers etc (did not test onion routes).",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#pullrequestreview-474233812",
      "submitted_at": "2020-08-25T08:04:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
    },
    {
      "event": "commented",
      "id": 679958713,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTk1ODcxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679958713",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T11:07:11Z",
      "updated_at": "2020-09-29T10:20:37Z",
      "author_association": "MEMBER",
      "body": "This, I think, is settled and gathered some ACKs.\r\n\r\nFurther changes to be done as a followup:\r\n\r\n* Change `uint8_t CSubNet::netmask[16]` to `uint8_t CSubNet::m_cidr` and other improvements around `CSubNet` that are highly desirable, but not required for this PR, thus not included in it.\r\n* Elaborate on the release notes (open this [diff](https://github.com/vasild/bitcoin/commit/b45af8c0942b873fa2ac11719b05ca6ead5378f3) as new PR). Done: https://github.com/bitcoin/bitcoin/pull/19802\r\n* Use the cleaner `HasPrefix(m_addr, {1, 2, 3})` once support for GCC 4.8 is dropped. Also `s/T1/T/` in the template.\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-679958713",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "commented",
      "id": 680121376,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDEyMTM3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680121376",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T16:09:04Z",
      "updated_at": "2020-08-25T16:09:04Z",
      "author_association": "MEMBER",
      "body": "Concept ACK 102867c587f5f7954232fb8ed8e85cda78bb4d32\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-680121376",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "commented",
      "id": 680122011,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDEyMjAxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/680122011",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T16:10:11Z",
      "updated_at": "2020-08-25T16:10:11Z",
      "author_association": "MEMBER",
      "body": "(edited OP to remove html comments)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-680122011",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "merged",
      "id": 3690883156,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzY5MDg4MzE1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3690883156",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8d6224fefe015c2022d00a79a4549464bd79cf2f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d6224fefe015c2022d00a79a4549464bd79cf2f",
      "created_at": "2020-08-25T16:13:30Z"
    },
    {
      "event": "closed",
      "id": 3690883187,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzY5MDg4MzE4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3690883187",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T16:13:30Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 3690903246,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQzNjkwOTAzMjQ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3690903246",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-25T16:18:23Z"
    },
    {
      "event": "referenced",
      "id": 3691292850,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM2OTEyOTI4NTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3691292850",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "348398bb82c7dfb8c575a55c4a4adaf8d54da5e8",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/348398bb82c7dfb8c575a55c4a4adaf8d54da5e8",
      "created_at": "2020-08-25T17:56:54Z"
    },
    {
      "event": "removed_from_project",
      "id": 3700003409,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MzcwMDAwMzQwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3700003409",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-27T14:45:18Z",
      "project_card": {
        "id": 43620274,
        "url": "https://api.github.com/projects/columns/cards/43620274",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "referenced",
      "id": 3704550448,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM3MDQ1NTA0NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3704550448",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5edef20a65f05cb91b06bb0b308432c5dcbeca9a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5edef20a65f05cb91b06bb0b308432c5dcbeca9a",
      "created_at": "2020-08-28T15:53:33Z"
    },
    {
      "event": "commented",
      "id": 684855561,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY4NDg1NTU2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/684855561",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-09-01T13:31:46Z",
      "updated_at": "2020-09-01T13:31:46Z",
      "author_association": "MEMBER",
      "body": "Next PR on the road to TORv3: https://github.com/bitcoin/bitcoin/pull/19845",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-684855561",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19628"
    },
    {
      "event": "referenced",
      "id": 3824685256,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4MjQ2ODUyNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3824685256",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "72affcb16cad45bd9e08ca163b2147fd01b84b70",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/72affcb16cad45bd9e08ca163b2147fd01b84b70",
      "created_at": "2020-09-30T14:03:18Z"
    },
    {
      "event": "referenced",
      "id": 3824787026,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4MjQ3ODcwMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3824787026",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "079ccad86e75f2baa9242d7d18e429e11ec54017",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/079ccad86e75f2baa9242d7d18e429e11ec54017",
      "created_at": "2020-09-30T14:22:54Z"
    },
    {
      "event": "referenced",
      "id": 3880591389,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4ODA1OTEzODk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3880591389",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e3b474c548668b653a4868c7be67e09f58e2382f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3b474c548668b653a4868c7be67e09f58e2382f",
      "created_at": "2020-10-15T09:44:47Z"
    },
    {
      "event": "referenced",
      "id": 3887212401,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4ODcyMTI0MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3887212401",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "16a7f0f84f3ef91c112a067c324294fa2e7723ba",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/16a7f0f84f3ef91c112a067c324294fa2e7723ba",
      "created_at": "2020-10-16T16:24:56Z"
    },
    {
      "event": "referenced",
      "id": 4297248028,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQyOTcyNDgwMjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4297248028",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8bd41b771c5298faff7e5dac6ec9592485c8a8ce",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/8bd41b771c5298faff7e5dac6ec9592485c8a8ce",
      "created_at": "2021-02-05T17:38:32Z"
    },
    {
      "event": "referenced",
      "id": 4297248032,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQyOTcyNDgwMzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4297248032",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cbe0b91f3e285c6098453f3045088c19e5c8bf78",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/cbe0b91f3e285c6098453f3045088c19e5c8bf78",
      "created_at": "2021-02-05T17:38:32Z"
    },
    {
      "event": "referenced",
      "id": 4770587563,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzA1ODc1NjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770587563",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3fe52df1796e80afb341b59f1fdb8f766ba80383",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/3fe52df1796e80afb341b59f1fdb8f766ba80383",
      "created_at": "2021-05-20T05:00:19Z"
    },
    {
      "event": "referenced",
      "id": 4770587567,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzA1ODc1Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770587567",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "47906dc3ead27f3cf546faec03dc912c9faac990",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/47906dc3ead27f3cf546faec03dc912c9faac990",
      "created_at": "2021-05-20T05:00:19Z"
    },
    {
      "event": "referenced",
      "id": 4770590870,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzA1OTA4NzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770590870",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8752621d8517925ec86174f510c37a00b9dde2b6",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/8752621d8517925ec86174f510c37a00b9dde2b6",
      "created_at": "2021-05-20T05:01:36Z"
    },
    {
      "event": "referenced",
      "id": 4770590871,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3NzA1OTA4NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4770590871",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1245d45604b8d4bba8088740ca603d33e4edb102",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/1245d45604b8d4bba8088740ca603d33e4edb102",
      "created_at": "2021-05-20T05:01:36Z"
    },
    {
      "event": "referenced",
      "id": 4781118577,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3ODExMTg1Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4781118577",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e84a603abc726bcfffa0e932fe8aa659015ea0c6",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/e84a603abc726bcfffa0e932fe8aa659015ea0c6",
      "created_at": "2021-05-21T19:54:26Z"
    },
    {
      "event": "referenced",
      "id": 4781118578,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3ODExMTg1Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4781118578",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5aadf43da76a60f8ada0c4812f4685b22bebe742",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/5aadf43da76a60f8ada0c4812f4685b22bebe742",
      "created_at": "2021-05-21T19:54:26Z"
    },
    {
      "event": "referenced",
      "id": 4782391027,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3ODIzOTEwMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4782391027",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "69b6d6a5504cb2d2e986b1180d90d896515aae31",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/69b6d6a5504cb2d2e986b1180d90d896515aae31",
      "created_at": "2021-05-22T14:23:38Z"
    },
    {
      "event": "referenced",
      "id": 4782950012,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3ODI5NTAwMTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4782950012",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "337c15ae25dd56bc2a7dfc935ff950185d01ca2f",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/337c15ae25dd56bc2a7dfc935ff950185d01ca2f",
      "created_at": "2021-05-23T05:08:35Z"
    },
    {
      "event": "referenced",
      "id": 4783555055,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ3ODM1NTUwNTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4783555055",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "41a8349d4d5bfa57e4d1812f978c93e0cb125d64",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/41a8349d4d5bfa57e4d1812f978c93e0cb125d64",
      "created_at": "2021-05-23T17:27:14Z"
    },
    {
      "event": "referenced",
      "id": 4944324962,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQzMjQ5NjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944324962",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f67aba48622487447d02258fe24692b773bb2773",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/f67aba48622487447d02258fe24692b773bb2773",
      "created_at": "2021-06-27T21:13:48Z"
    },
    {
      "event": "referenced",
      "id": 4944491847,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQ0OTE4NDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944491847",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "69e2115b46ba33bc9ee04726d6a99177d6dfa261",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/69e2115b46ba33bc9ee04726d6a99177d6dfa261",
      "created_at": "2021-06-28T00:24:51Z"
    },
    {
      "event": "referenced",
      "id": 4950405780,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NTA0MDU3ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4950405780",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ae0ae43c01ab9c0b4a535ec6bbf3752263c64cb4",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/ae0ae43c01ab9c0b4a535ec6bbf3752263c64cb4",
      "created_at": "2021-06-29T00:06:25Z"
    },
    {
      "event": "referenced",
      "id": 4968414808,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njg0MTQ4MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4968414808",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "10c3d63f2cf05e28fc95c18b73215e5819244202",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/10c3d63f2cf05e28fc95c18b73215e5819244202",
      "created_at": "2021-07-01T22:04:32Z"
    },
    {
      "event": "referenced",
      "id": 4968437096,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5Njg0MzcwOTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4968437096",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1988592ea70465291d5e4dd52e3c42bf0cdd37b9",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/1988592ea70465291d5e4dd52e3c42bf0cdd37b9",
      "created_at": "2021-07-01T22:11:24Z"
    },
    {
      "event": "referenced",
      "id": 5027701190,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMjc3MDExOTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5027701190",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1ff7090066c47d32ea4b5d0b4868c91a4fc1836b",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/1ff7090066c47d32ea4b5d0b4868c91a4fc1836b",
      "created_at": "2021-07-15T20:53:21Z"
    },
    {
      "event": "referenced",
      "id": 5028287728,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUwMjgyODc3Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5028287728",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5dc39741e93395e65accbc3b44cb61e6d27dcc7f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/5dc39741e93395e65accbc3b44cb61e6d27dcc7f",
      "created_at": "2021-07-16T00:30:47Z"
    },
    {
      "event": "referenced",
      "id": 5141021490,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNDEwMjE0OTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5141021490",
      "actor": {
        "login": "random-zebra",
        "id": 18186894,
        "node_id": "MDQ6VXNlcjE4MTg2ODk0",
        "avatar_url": "https://avatars.githubusercontent.com/u/18186894?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/random-zebra",
        "html_url": "https://github.com/random-zebra",
        "followers_url": "https://api.github.com/users/random-zebra/followers",
        "following_url": "https://api.github.com/users/random-zebra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/random-zebra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/random-zebra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/random-zebra/subscriptions",
        "organizations_url": "https://api.github.com/users/random-zebra/orgs",
        "repos_url": "https://api.github.com/users/random-zebra/repos",
        "events_url": "https://api.github.com/users/random-zebra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/random-zebra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "commit_url": "https://api.github.com/repos/PIVX-Project/PIVX/commits/b4751e10ce976864c5d06e56c6e6f5a8f315e167",
      "created_at": "2021-08-11T10:09:48Z"
    },
    {
      "event": "referenced",
      "id": 5321369472,
      "node_id": "REFE_lADOABII584n3jomzwAAAAE9LaeA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5321369472",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "05a4222f19ea171b40b27ac13156bdea47beb78d",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/05a4222f19ea171b40b27ac13156bdea47beb78d",
      "created_at": "2021-09-17T20:06:57Z"
    },
    {
      "event": "referenced",
      "id": 5324050755,
      "node_id": "REFE_lADOABII584n3jomzwAAAAE9VpFD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5324050755",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "18e0bb20ddab0c07ac3b77bd26e46629877eccf5",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/18e0bb20ddab0c07ac3b77bd26e46629877eccf5",
      "created_at": "2021-09-19T02:02:12Z"
    },
    {
      "event": "referenced",
      "id": 5357450219,
      "node_id": "REFE_lADOABII584n3jomzwAAAAE_VDPr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5357450219",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "45b30c3b3a4647a22ca89dd1c2825f5662e72d8f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/45b30c3b3a4647a22ca89dd1c2825f5662e72d8f",
      "created_at": "2021-09-24T17:27:05Z"
    },
    {
      "event": "referenced",
      "id": 5446824561,
      "node_id": "REFE_lADOABII584n3jomzwAAAAFEp_Jx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5446824561",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "12afb98a99c75e61bdf04fd8f3dac0024d3cdc75",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/12afb98a99c75e61bdf04fd8f3dac0024d3cdc75",
      "created_at": "2021-10-12T04:14:07Z"
    },
    {
      "event": "referenced",
      "id": 6039087518,
      "node_id": "REFE_lADOABII584n3jomzwAAAAFn9Sme",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6039087518",
      "actor": {
        "login": "DeckerSU",
        "id": 22120003,
        "node_id": "MDQ6VXNlcjIyMTIwMDAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/22120003?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DeckerSU",
        "html_url": "https://github.com/DeckerSU",
        "followers_url": "https://api.github.com/users/DeckerSU/followers",
        "following_url": "https://api.github.com/users/DeckerSU/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DeckerSU/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DeckerSU/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DeckerSU/subscriptions",
        "organizations_url": "https://api.github.com/users/DeckerSU/orgs",
        "repos_url": "https://api.github.com/users/DeckerSU/repos",
        "events_url": "https://api.github.com/users/DeckerSU/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DeckerSU/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "38edf5f03373389554459db981b05fea9ac9b849",
      "commit_url": "https://api.github.com/repos/DeckerSU/KomodoOcean/commits/38edf5f03373389554459db981b05fea9ac9b849",
      "created_at": "2022-02-10T04:08:59Z"
    },
    {
      "event": "locked",
      "id": 6073827503,
      "node_id": "LOE_lADOABII584n3jomzwAAAAFqB0Cv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073827503",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:36:33Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463949087",
      "pull_request_review_id": 459569784,
      "id": 463949087,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk0OTA4Nw==",
      "diff_hunk": "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 51,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are you sure the use of `prevector` is warranted here? Measurements would be nice.\r\n\r\nGenerally I think we should try stick with to the standard containers unless we have clear quantitative evidence showing that they are unsuitable for the scenario being considered. Reviewers, static analysers and compilers tend to be better at analysing use of the standard containers :)\r\n\r\nFWIW: \r\n\r\n```\r\n$ git grep -l prevector -- \"*.cpp\" \"*.h\" \":(exclude)src/bench/\" \":(exclude)src/test/\"\r\nsrc/hash.h\r\nsrc/memusage.h\r\nsrc/prevector.h\r\nsrc/script/script.h\r\nsrc/serialize.h\r\n```",
      "created_at": "2020-08-01T10:36:13Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463949087",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463949087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463984610",
      "pull_request_review_id": 459593442,
      "id": 463984610,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk4NDYxMA==",
      "diff_hunk": "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 51,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 463949087,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suggested this, so let me back it up.\r\n\r\nCurrently an address in CAddrMan consumes 256 bytes (cost in mapInfo and mapAddr together, plus allocation overhead).\r\n\r\nThis PR as-is raises that to 288 bytes, for addresses that take up to 16 bytes (which is all of them, for now).\r\n\r\nUsing an `std::vector<uint8_t>` instead would change that to 352 bytes per address, or an extra 64 on top. It would also increase memory fragmentation and (slightly) increase CPU usage because of two malloc's per address.\r\n\r\nFTR, my node has 69691 addresses in CAddrMan.",
      "created_at": "2020-08-01T17:52:19Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r463984610",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/463984610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464117640",
      "pull_request_review_id": 459674809,
      "id": 464117640,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExNzY0MA==",
      "diff_hunk": "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 51,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 463949087,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa Thanks for quantifying! That answers my question :)",
      "created_at": "2020-08-02T20:01:00Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464117640",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464117640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464154824",
      "pull_request_review_id": 459705383,
      "id": 464154824,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NDgyNA==",
      "diff_hunk": "@@ -85,151 +70,161 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORv2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPv4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    assert(sizeof(ipv6Addr) == ADDR_IPv6_SIZE);\n+    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPv6_SIZE]>(&ipv6Addr));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n-{\n-    return ip[15-n];\n-}\n-\n bool CNetAddr::IsBindAny() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    for (uint8_t b : m_addr) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 142,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Slightly more modern:\r\n\r\n```c++\r\nreturn std::all_of(m_addr.begin(), m_addr.end(), [](uint8_t b) { return b == 0; });\r\n```\r\n",
      "created_at": "2020-08-03T01:42:35Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464154824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464154824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156291",
      "pull_request_review_id": 459705383,
      "id": 464156291,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NjI5MQ==",
      "diff_hunk": "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 329,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not something you introduced, but this only works because those addresses have the same byte representation in every byte order.\r\n",
      "created_at": "2020-08-03T01:50:28Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156291",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156525",
      "pull_request_review_id": 459705383,
      "id": 464156525,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NjUyNQ==",
      "diff_hunk": "@@ -369,12 +360,12 @@ std::string CNetAddr::ToString() const\n \n bool operator==(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) == 0;\n+    return a.m_net == b.m_net && a.m_addr == b.m_addr;\n }\n \n bool operator<(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net < b.m_net || (a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) < 0);\n+    return a.m_net < b.m_net || (a.m_net == b.m_net && a.m_addr < b.m_addr);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 390,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "More modern:\r\n\r\n```c++\r\nreturn std::tie(a.m_net, a.m_addr) < std::tie(b.m_net, b.m_addr);\r\n```\r\n",
      "created_at": "2020-08-03T01:51:43Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464156525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464156525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464157430",
      "pull_request_review_id": 459705383,
      "id": 464157430,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE1NzQzMA==",
      "diff_hunk": "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 15,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: uppercase v in global constants (here and further).",
      "created_at": "2020-08-03T01:56:08Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r464157430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/464157430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465544086",
      "pull_request_review_id": 461427646,
      "id": 465544086,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0NDA4Ng==",
      "diff_hunk": "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {\n+    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as TORv2 address.\n+static constexpr uint8_t TORv2_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x87, 0xD8, 0x7E, 0xEB, 0x43\n+};\n+\n+/// If an IPv6 address begins with this, then we treat the rest of it as an internal address.\n+static constexpr uint8_t INTERNAL_IN_IPv6_PREFIX[6] = {\n+    0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 // 0xFD + sha256(\"bitcoin\")[0:5].\n+};\n+\n+/// Size of IPv4 address (in bytes).\n+static constexpr size_t ADDR_IPv4_SIZE = 4;\n+\n+/// Size of IPv6 address (in bytes).\n+static constexpr size_t ADDR_IPv6_SIZE = 16;\n+\n+/// Size of TORv2 address (in bytes).\n+static constexpr size_t ADDR_TORv2_SIZE = 10;\n+\n+/// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n+static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n+\n /**\n  * Network address.\n  */\n class CNetAddr\n {\n     protected:\n+        /**\n+         * Raw representation of the network address.\n+         * In network byte order (big endian) for IPv4 and IPv6.\n+         */\n+        prevector<ADDR_IPv6_SIZE, uint8_t> m_addr{ADDR_IPv6_SIZE, 0x0};",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 51,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 463949087,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the question and the elaborate explanation! Indeed smaller size and avoiding an extra heap allocation is better. FWIW I moved `m_addr` definition before `m_net` to save 8 bytes from the size of `CNetAddr` (32 vs 40 bytes on x64).",
      "created_at": "2020-08-05T07:58:28Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465544086",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465544086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465567494",
      "pull_request_review_id": 461457580,
      "id": 465567494,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU2NzQ5NA==",
      "diff_hunk": "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 329,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 464156291,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right! Even though the values of those constants are never going to change (I hope!), does the following look better?\r\n\r\n```cpp\r\nfor (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\r\n```",
      "created_at": "2020-08-05T08:39:19Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465567494",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465567494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465660727",
      "pull_request_review_id": 461577596,
      "id": 465660727,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MDcyNw==",
      "diff_hunk": "@@ -85,151 +70,161 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORv2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPv4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    assert(sizeof(ipv6Addr) == ADDR_IPv6_SIZE);\n+    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPv6_SIZE]>(&ipv6Addr));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n-{\n-    return ip[15-n];\n-}\n-\n bool CNetAddr::IsBindAny() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    for (uint8_t b : m_addr) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 142,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 464154824,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed.",
      "created_at": "2020-08-05T11:30:48Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465660727",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465660727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661461",
      "pull_request_review_id": 461578525,
      "id": 465661461,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MTQ2MQ==",
      "diff_hunk": "@@ -369,12 +360,12 @@ std::string CNetAddr::ToString() const\n \n bool operator==(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) == 0;\n+    return a.m_net == b.m_net && a.m_addr == b.m_addr;\n }\n \n bool operator<(const CNetAddr& a, const CNetAddr& b)\n {\n-    return a.m_net < b.m_net || (a.m_net == b.m_net && memcmp(a.ip, b.ip, 16) < 0);\n+    return a.m_net < b.m_net || (a.m_net == b.m_net && a.m_addr < b.m_addr);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 390,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 464156525,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Modernized :bulb:",
      "created_at": "2020-08-05T11:32:12Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661649",
      "pull_request_review_id": 461578756,
      "id": 465661649,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY2MTY0OQ==",
      "diff_hunk": "@@ -49,18 +51,50 @@ enum Network\n     NET_MAX,\n };\n \n+/// If an IPv6 address begins with this, then we treat the rest of it as IPv4 address.\n+static constexpr uint8_t IPv4_IN_IPv6_PREFIX[12] = {",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 15,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 464157430,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to uppercase.",
      "created_at": "2020-08-05T11:32:37Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r465661649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/465661649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466938023",
      "pull_request_review_id": 463181566,
      "id": 466938023,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjkzODAyMw==",
      "diff_hunk": "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 329,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 464156291,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That seems the best option, I think. It's too bad that there's no way to get these constants as byte spans that can be directly compared against m_addr so it wouldn't need the cast and `memcmp` at all.",
      "created_at": "2020-08-07T09:46:40Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466938023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466938023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466941269",
      "pull_request_review_id": 463185771,
      "id": 466941269,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk0MTI2OQ==",
      "diff_hunk": "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "path": "src/test/fuzz/asmap.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is pretty scary cast expression. Wouldn't a cast to just `const uint8_t*` work just as well?",
      "created_at": "2020-08-07T09:53:38Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466941269",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466941269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466946168",
      "pull_request_review_id": 463191991,
      "id": 466946168,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk0NjE2OA==",
      "diff_hunk": "@@ -341,9 +329,9 @@ enum Network CNetAddr::GetNetwork() const\n std::string CNetAddr::ToStringIP() const\n {\n     if (IsTor())\n-        return EncodeBase32(&ip[6], 10) + \".onion\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".onion\";\n     if (IsInternal())\n-        return EncodeBase32(ip + sizeof(g_internal_prefix), sizeof(ip) - sizeof(g_internal_prefix)) + \".internal\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".internal\";",
      "path": "src/netaddress.cpp",
      "position": 398,
      "original_position": 359,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Heh we need to make `EncodeBase32` take a span too (not in this PR ofcourse).",
      "created_at": "2020-08-07T10:03:44Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466946168",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466946168"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 346,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466950108",
      "pull_request_review_id": 463197100,
      "id": 466950108,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njk1MDEwOA==",
      "diff_hunk": "@@ -822,68 +851,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + \"/\" + strprintf(\"%hhu\", cidr);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 725,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You do not need the \"hh\" here, or any type specifiers ever, `strprintf` is type safe.\r\nAlso maybe include the `/` to avoid an extra string concatenation\r\n```\r\nnetwork.ToString() + strprintf(\"/%u\", cidr);\r\n```",
      "created_at": "2020-08-07T10:12:30Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r466950108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/466950108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467258675",
      "pull_request_review_id": 463598127,
      "id": 467258675,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1ODY3NQ==",
      "diff_hunk": "@@ -287,17 +283,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {(uint32_t)INADDR_ANY, (uint32_t)INADDR_NONE}) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 329,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "daa1d8b114e5ed3c631a634e02ba0da392db6e8e",
      "in_reply_to_id": 464156291,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to use `htonl()`.",
      "created_at": "2020-08-07T20:40:06Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467258675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467258675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 284,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467259428",
      "pull_request_review_id": 463599117,
      "id": 467259428,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI1OTQyOA==",
      "diff_hunk": "@@ -822,68 +851,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + \"/\" + strprintf(\"%hhu\", cidr);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 725,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "in_reply_to_id": 466950108,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed.",
      "created_at": "2020-08-07T20:42:02Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467259428",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467259428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467264650",
      "pull_request_review_id": 463605797,
      "id": 467264650,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NDY1MA==",
      "diff_hunk": "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "path": "src/test/fuzz/asmap.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "in_reply_to_id": 466941269,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Passing `const uint8_t*` will not work as long as the argument of the method is a reference to an array: `CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])` which is best of type safety but unfortunately two of the callers don't have an array to pass.\r\n\r\nI think either one of the following two is better:\r\n\r\n<details>\r\n<summary>change argument to void*</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.cpp w/src/netaddress.cpp\r\nindex b421e1b11..bb4d2b50b 100644\r\n--- i/src/netaddress.cpp\r\n+++ w/src/netaddress.cpp\r\n@@ -26,32 +26,33 @@ CNetAddr::CNetAddr() {}\r\n void CNetAddr::SetIP(const CNetAddr& ipIn)\r\n {\r\n     m_net = ipIn.m_net;\r\n     m_addr = ipIn.m_addr;\r\n }\r\n \r\n-void CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])\r\n+void CNetAddr::SetLegacyIPv6(const void* ipv6)\r\n {\r\n-    const uint8_t* ipv6_end = ipv6 + ADDR_IPV6_SIZE;\r\n+    const uint8_t* ipv6_begin = static_cast<const uint8_t*>(ipv6);\r\n+    const uint8_t* ipv6_end = ipv6_begin + ADDR_IPV6_SIZE;\r\n \r\n-    if (memcmp(ipv6, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n+    if (memcmp(ipv6_begin, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n         // IPv4-in-IPv6\r\n         m_net = NET_IPV4;\r\n-        m_addr.assign(ipv6 + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6_begin + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n+    } else if (memcmp(ipv6_begin, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n         // TORv2-in-IPv6\r\n         m_net = NET_ONION;\r\n-        m_addr.assign(ipv6 + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6_begin + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n+    } else if (memcmp(ipv6_begin, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n         // Internal-in-IPv6\r\n         m_net = NET_INTERNAL;\r\n-        m_addr.assign(ipv6 + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n+        m_addr.assign(ipv6_begin + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n     } else {\r\n         // IPv6\r\n         m_net = NET_IPV6;\r\n-        m_addr.assign(ipv6, ipv6_end);\r\n+        m_addr.assign(ipv6_begin, ipv6_end);\r\n     }\r\n }\r\n \r\n /**\r\n  * Try to make this a dummy address that maps the specified name into IPv6 like\r\n  * so: (0xFD + %sha256(\"bitcoin\")[0:5]) + %sha256(name)[0:10]. Such dummy\r\n@@ -105,13 +106,13 @@ CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\r\n     m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\r\n }\r\n \r\n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\r\n {\r\n     assert(sizeof(ipv6Addr) == ADDR_IPV6_SIZE);\r\n-    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(&ipv6Addr));\r\n+    SetLegacyIPv6(&ipv6Addr);\r\n     scopeId = scope;\r\n }\r\n \r\n bool CNetAddr::IsBindAny() const\r\n {\r\n     if (!IsIPv4() && !IsIPv6()) {\r\ndiff --git i/src/netaddress.h w/src/netaddress.h\r\nindex 8924ed0b4..ca048fbf5 100644\r\n--- i/src/netaddress.h\r\n+++ w/src/netaddress.h\r\n@@ -105,13 +105,13 @@ class CNetAddr\r\n         /**\r\n          * Set from a legacy IPv6 address.\r\n          * Legacy IPv6 address may be a normal IPv6 address, or another address\r\n          * (e.g. IPv4) disguised as IPv6. This encoding is used in the legacy\r\n          * `addr` encoding.\r\n          */\r\n-        void SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE]);\r\n+        void SetLegacyIPv6(const void* ipv6);\r\n \r\n         bool SetInternal(const std::string& name);\r\n \r\n         bool SetSpecial(const std::string &strName); // for Tor addresses\r\n         bool IsBindAny() const; // INADDR_ANY equivalent\r\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\r\ndiff --git i/src/test/fuzz/asmap.cpp w/src/test/fuzz/asmap.cpp\r\nindex 84902ee2d..98ac82453 100644\r\n--- i/src/test/fuzz/asmap.cpp\r\n+++ w/src/test/fuzz/asmap.cpp\r\n@@ -45,13 +45,13 @@ void test_one_input(const std::vector<uint8_t>& buffer)\r\n     if (!SanityCheckASMap(asmap)) return;\r\n \r\n     const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\r\n     CNetAddr net_addr;\r\n     if (ipv6) {\r\n         assert(addr_size == ADDR_IPV6_SIZE);\r\n-        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));\r\n+        net_addr.SetLegacyIPv6(addr_data);\r\n     } else {\r\n         assert(addr_size == ADDR_IPV4_SIZE);\r\n         in_addr ipv4;\r\n         memcpy(&ipv4, addr_data, addr_size);\r\n         net_addr.SetIP(CNetAddr{ipv4});\r\n     }\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>change argument to Span</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.cpp w/src/netaddress.cpp\r\nindex b421e1b11..121b92650 100644\r\n--- i/src/netaddress.cpp\r\n+++ w/src/netaddress.cpp\r\n@@ -26,32 +26,32 @@ CNetAddr::CNetAddr() {}\r\n void CNetAddr::SetIP(const CNetAddr& ipIn)\r\n {\r\n     m_net = ipIn.m_net;\r\n     m_addr = ipIn.m_addr;\r\n }\r\n \r\n-void CNetAddr::SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE])\r\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\r\n {\r\n-    const uint8_t* ipv6_end = ipv6 + ADDR_IPV6_SIZE;\r\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\r\n \r\n-    if (memcmp(ipv6, IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {\r\n         // IPv4-in-IPv6\r\n         m_net = NET_IPV4;\r\n-        m_addr.assign(ipv6 + sizeof(IPV4_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6.begin() + sizeof(IPV4_IN_IPV6_PREFIX), ipv6.end());\r\n+    } else if (memcmp(ipv6.begin(), TORV2_IN_IPV6_PREFIX, sizeof(TORV2_IN_IPV6_PREFIX)) == 0) {\r\n         // TORv2-in-IPv6\r\n         m_net = NET_ONION;\r\n-        m_addr.assign(ipv6 + sizeof(TORV2_IN_IPV6_PREFIX), ipv6_end);\r\n-    } else if (memcmp(ipv6, INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n+        m_addr.assign(ipv6.begin() + sizeof(TORV2_IN_IPV6_PREFIX), ipv6.end());\r\n+    } else if (memcmp(ipv6.begin(), INTERNAL_IN_IPV6_PREFIX, sizeof(INTERNAL_IN_IPV6_PREFIX)) == 0) {\r\n         // Internal-in-IPv6\r\n         m_net = NET_INTERNAL;\r\n-        m_addr.assign(ipv6 + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6_end);\r\n+        m_addr.assign(ipv6.begin() + sizeof(INTERNAL_IN_IPV6_PREFIX), ipv6.end());\r\n     } else {\r\n         // IPv6\r\n         m_net = NET_IPV6;\r\n-        m_addr.assign(ipv6, ipv6_end);\r\n+        m_addr.assign(ipv6.begin(), ipv6.end());\r\n     }\r\n }\r\n \r\n /**\r\n  * Try to make this a dummy address that maps the specified name into IPv6 like\r\n  * so: (0xFD + %sha256(\"bitcoin\")[0:5]) + %sha256(name)[0:10]. Such dummy\r\n@@ -104,14 +104,13 @@ CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\r\n     const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\r\n     m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\r\n }\r\n \r\n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\r\n {\r\n-    assert(sizeof(ipv6Addr) == ADDR_IPV6_SIZE);\r\n-    SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(&ipv6Addr));\r\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));\r\n     scopeId = scope;\r\n }\r\n \r\n bool CNetAddr::IsBindAny() const\r\n {\r\n     if (!IsIPv4() && !IsIPv6()) {\r\ndiff --git i/src/netaddress.h w/src/netaddress.h\r\nindex 8924ed0b4..a76b5e9ce 100644\r\n--- i/src/netaddress.h\r\n+++ w/src/netaddress.h\r\n@@ -105,13 +105,13 @@ class CNetAddr\r\n         /**\r\n          * Set from a legacy IPv6 address.\r\n          * Legacy IPv6 address may be a normal IPv6 address, or another address\r\n          * (e.g. IPv4) disguised as IPv6. This encoding is used in the legacy\r\n          * `addr` encoding.\r\n          */\r\n-        void SetLegacyIPv6(const uint8_t (&ipv6)[ADDR_IPV6_SIZE]);\r\n+        void SetLegacyIPv6(Span<const uint8_t> ipv6);\r\n \r\n         bool SetInternal(const std::string& name);\r\n \r\n         bool SetSpecial(const std::string &strName); // for Tor addresses\r\n         bool IsBindAny() const; // INADDR_ANY equivalent\r\n         bool IsIPv4() const;    // IPv4 mapped address (::FFFF:0:0/96, 0.0.0.0/0)\r\ndiff --git i/src/test/fuzz/asmap.cpp w/src/test/fuzz/asmap.cpp\r\nindex 84902ee2d..e3aefa18a 100644\r\n--- i/src/test/fuzz/asmap.cpp\r\n+++ w/src/test/fuzz/asmap.cpp\r\n@@ -45,13 +45,13 @@ void test_one_input(const std::vector<uint8_t>& buffer)\r\n     if (!SanityCheckASMap(asmap)) return;\r\n \r\n     const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\r\n     CNetAddr net_addr;\r\n     if (ipv6) {\r\n         assert(addr_size == ADDR_IPV6_SIZE);\r\n-        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));\r\n+        net_addr.SetLegacyIPv6(Span<const uint8_t>(addr_data, addr_size));\r\n     } else {\r\n         assert(addr_size == ADDR_IPV4_SIZE);\r\n         in_addr ipv4;\r\n         memcpy(&ipv4, addr_data, addr_size);\r\n         net_addr.SetIP(CNetAddr{ipv4});\r\n     }\r\n```\r\n</details>\r\n\r\nWhat do you think?",
      "created_at": "2020-08-07T20:55:26Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467264650",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467264650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467267311",
      "pull_request_review_id": 463609590,
      "id": 467267311,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzI2NzMxMQ==",
      "diff_hunk": "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "path": "src/test/fuzz/asmap.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "in_reply_to_id": 466941269,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Span span span...\r\n\r\n![span](https://user-images.githubusercontent.com/548488/89688260-a0b3b200-d8b6-11ea-9f9c-6b8c7f87b385.png)\r\n",
      "created_at": "2020-08-07T21:02:32Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467267311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467267311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467879433",
      "pull_request_review_id": 464197041,
      "id": 467879433,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg3OTQzMw==",
      "diff_hunk": "@@ -341,9 +329,9 @@ enum Network CNetAddr::GetNetwork() const\n std::string CNetAddr::ToStringIP() const\n {\n     if (IsTor())\n-        return EncodeBase32(&ip[6], 10) + \".onion\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".onion\";\n     if (IsInternal())\n-        return EncodeBase32(ip + sizeof(g_internal_prefix), sizeof(ip) - sizeof(g_internal_prefix)) + \".internal\";\n+        return EncodeBase32(m_addr.data(), m_addr.size()) + \".internal\";",
      "path": "src/netaddress.cpp",
      "position": 398,
      "original_position": 359,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "in_reply_to_id": 466946168,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/19687",
      "created_at": "2020-08-10T12:49:03Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467879433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467879433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 346,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467891793",
      "pull_request_review_id": 464213144,
      "id": 467891793,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg5MTc5Mw==",
      "diff_hunk": "@@ -43,7 +43,17 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         }\n     }\n     if (!SanityCheckASMap(asmap)) return;\n+\n+    const uint8_t* addr_data = buffer.data() + 1 + asmap_size;\n     CNetAddr net_addr;\n-    net_addr.SetRaw(ipv6 ? NET_IPV6 : NET_IPV4, buffer.data() + 1 + asmap_size);\n+    if (ipv6) {\n+        assert(addr_size == ADDR_IPV6_SIZE);\n+        net_addr.SetLegacyIPv6(*reinterpret_cast<const uint8_t (*)[ADDR_IPV6_SIZE]>(addr_data));",
      "path": "src/test/fuzz/asmap.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "11632c7380f43f316cc60019ce8a61da65e7144e",
      "in_reply_to_id": 466941269,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2020-08-10T13:11:23Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r467891793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/467891793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469100605",
      "pull_request_review_id": 465701594,
      "id": 469100605,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwMDYwNQ==",
      "diff_hunk": "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 145,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "perhaps place the `NET_IPV6` case first to group the similar cases together\r\n\r\nsuggestion here and line 221 to be the same as the first case line 205:\r\n```suggestion\r\n                assert(prefix_size + m_addr.size() == sizeof(arr));\r\n```",
      "created_at": "2020-08-12T08:40:54Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469100605",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469100605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469102204",
      "pull_request_review_id": 465701594,
      "id": 469102204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEwMjIwNA==",
      "diff_hunk": "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 159,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "per `developer-notes.md`:\r\n```suggestion\r\n    } // no default case, so the compiler can warn about missing cases\r\n    assert(false);\r\n```",
      "created_at": "2020-08-12T08:43:44Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469102204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469102204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469124958",
      "pull_request_review_id": 465701594,
      "id": 469124958,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEyNDk1OA==",
      "diff_hunk": "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 475,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`nBits` is currently given a value a few lines down but seems a good habit to always provide a default.\r\n```suggestion\r\n    int nBits{0};\r\n```",
      "created_at": "2020-08-12T09:22:08Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469124958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469124958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469128086",
      "pull_request_review_id": 465701594,
      "id": 469128086,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTEyODA4Ng==",
      "diff_hunk": "@@ -538,22 +531,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        i++;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 507,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "consider using the pre-increment (`++i`) operator",
      "created_at": "2020-08-12T09:27:25Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469128086",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469128086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180866",
      "pull_request_review_id": 465811148,
      "id": 469180866,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MDg2Ng==",
      "diff_hunk": "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 475,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469124958,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Default assigning in the case where we are supposed to always assign the variable later will suppress valgrind and compiler warnings if there is a bug in the code and it does not actually initialize the variable in some cases.",
      "created_at": "2020-08-12T11:08:21Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180974",
      "pull_request_review_id": 465811298,
      "id": 469180974,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MDk3NA==",
      "diff_hunk": "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 145,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469100605,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-08-12T11:08:36Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469180974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469180974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181087",
      "pull_request_review_id": 465811448,
      "id": 469181087,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MTA4Nw==",
      "diff_hunk": "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 159,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469102204,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-08-12T11:08:48Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181196",
      "pull_request_review_id": 465811581,
      "id": 469181196,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE4MTE5Ng==",
      "diff_hunk": "@@ -538,22 +531,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        i++;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 507,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469128086,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2020-08-12T11:09:02Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469181196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469181196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 539,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469195737",
      "pull_request_review_id": 465829861,
      "id": 469195737,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTE5NTczNw==",
      "diff_hunk": "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 475,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469124958,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(there's nuance to be sure; if helpful:)\n\nhttps://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#es20-always-initialize-an-object\n\nSome history and reading on uninitialized reads in Bitcoin Core: https://bitcoincore.reviews/17639\n\nSee also this comment and thread https://github.com/bitcoin/bitcoin/pull/17627#issuecomment-559421439",
      "created_at": "2020-08-12T11:40:27Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469195737",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469195737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469269332",
      "pull_request_review_id": 465929006,
      "id": 469269332,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI2OTMzMg==",
      "diff_hunk": "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 475,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469124958,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Initialized to `0`. Note that the Cpp Core Guidelines contain an [example](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#example-186) that resembles our case and admits that \"This cannot trivially be rewritten to initialize i and j with initializers\".\r\n\r\nWe have:\r\n\r\n```cpp\r\nint nBits;\r\n... code that is supposed to set nBits ... // [1]\r\nread nBits // [2]\r\n```\r\n\r\nSo if there is a bug in [1] and `nBits` is not set (or if new code is added that reads `nBits` before [1]), then we would get undefined behavior in [2], but we would also get compiler, msan and valgrind warnings about it, so not likely to remain unnoticed.\r\n\r\nOTOH if we initialize `nBits` with some `dummy_value` and the same bugs happen, then we would not get undefined behavior, but we would get unexpected results due to [2] reading `dummy_value`. And the downside is that none of the compiler, msan or valgrind will warn about the bug.",
      "created_at": "2020-08-12T13:43:34Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469269332",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469269332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469290450",
      "pull_request_review_id": 465956975,
      "id": 469290450,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI5MDQ1MA==",
      "diff_hunk": "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 475,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469124958,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. Attempted at the time to summarize the trade-offs in the review club notes I linked to (LMK if you see any errors, I wanted it to be a resource).\r\n\r\nEdit: Thanks @vasild for the offline suggestions on the review club notes.",
      "created_at": "2020-08-12T14:13:13Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469290450",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469290450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469311652",
      "pull_request_review_id": 465985565,
      "id": 469311652,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxMTY1Mg==",
      "diff_hunk": "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 159,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469102204,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Add the assert as well as the comment?",
      "created_at": "2020-08-12T14:42:04Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469311652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469311652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469337602",
      "pull_request_review_id": 466018755,
      "id": 469337602,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzNzYwMg==",
      "diff_hunk": "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 159,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469102204,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, I almost added the `assert(false);` but then realized that the code flow just continues after the `switch` (it contains `break;`, not `return;` as the example in the developer-notes).\r\n\r\nApply this?\r\n\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git i/src/netaddress.h w/src/netaddress.h\r\nindex b75eff1b9..8cd2401e2 100644\r\n--- i/src/netaddress.h\r\n+++ w/src/netaddress.h\r\n@@ -200,36 +200,38 @@ class CNetAddr\r\n             size_t prefix_size;\r\n \r\n             switch (m_net) {\r\n             case NET_IPV6:\r\n                 assert(m_addr.size() == sizeof(arr));\r\n                 memcpy(arr, m_addr.data(), m_addr.size());\r\n-                break;\r\n+                return;\r\n             case NET_IPV4:\r\n                 prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\r\n                 assert(prefix_size + m_addr.size() == sizeof(arr));\r\n                 memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\r\n                 memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\r\n-                break;\r\n+                return;\r\n             case NET_ONION:\r\n                 prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\r\n                 assert(prefix_size + m_addr.size() == sizeof(arr));\r\n                 memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\r\n                 memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\r\n-                break;\r\n+                return;\r\n             case NET_INTERNAL:\r\n                 prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\r\n                 assert(prefix_size + m_addr.size() == sizeof(arr));\r\n                 memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\r\n                 memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\r\n-                break;\r\n+                return;\r\n             case NET_UNROUTABLE:\r\n             case NET_MAX:\r\n                 memset(arr, 0x0, sizeof(arr));\r\n-                break;\r\n+                return;\r\n             } // no default case, so the compiler can warn about missing cases\r\n+\r\n+            assert(false);\r\n         }\r\n \r\n         /**\r\n          * Serialize in pre-ADDRv2/BIP155 format to a stream.\r\n          * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\r\n          */\r\n```\r\n</details>",
      "created_at": "2020-08-12T15:17:19Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469337602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469337602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469352267",
      "pull_request_review_id": 466037250,
      "id": 469352267,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM1MjI2Nw==",
      "diff_hunk": "@@ -507,16 +503,14 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     vchRet.push_back(net_class);\n-    int nStartByte = 0;\n-    int nBits = 16;\n+    int nBits;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 475,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469124958,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe it is time to add an init macro that default initializes a variable, but disables the initialization when `--enable-debug` or so?",
      "created_at": "2020-08-12T15:38:08Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469352267",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469352267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 506,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469361342",
      "pull_request_review_id": 466047712,
      "id": 469361342,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM2MTM0Mg==",
      "diff_hunk": "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 159,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469102204,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I should have mentioned that. Returning LGTM, nothing else is being done in the function.",
      "created_at": "2020-08-12T15:47:42Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469361342",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469361342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469765242",
      "pull_request_review_id": 466526016,
      "id": 469765242,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc2NTI0Mg==",
      "diff_hunk": "@@ -152,14 +180,91 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(m_addr.size() + prefix_size == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                break;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));\n+                break;\n+            }",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 159,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "bfe7d1b56500b08bb0f8bdf612b3d10f6c001236",
      "in_reply_to_id": 469102204,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed `break;` to `return;` and added `assert(false);` after the `switch`.",
      "created_at": "2020-08-13T07:55:11Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r469765242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/469765242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473279613",
      "pull_request_review_id": 470802830,
      "id": 473279613,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI3OTYxMw==",
      "diff_hunk": "@@ -3,63 +3,57 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n-    if (memcmp(ipv6, pchIPv4, sizeof(pchIPv4)) == 0) {\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\n+\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, you could reformat this to more \"modern\" C++ (though I'm not sure if it is less or more readable)\r\n```c++\r\nif(std::equal(std::cbegin(IPV4_IN_IPV6_PREFIX), std::cend(IPV4_IN_IPV6_PREFIX), ipv6.cbegin()))\r\n```\r\n\r\n(you could replace `std::cbegin(IPV4_IN_IPV6_PREFIX)` with `IPV4_IN_IPV6_PREFIX.cbegin()` if you make it a `std::array` and not a C style array)",
      "created_at": "2020-08-19T19:49:57Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473279613",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473279613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473471945",
      "pull_request_review_id": 471049774,
      "id": 473471945,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3MTk0NQ==",
      "diff_hunk": "@@ -353,13 +346,13 @@ std::string CNetAddr::ToStringIP() const\n             return std::string(name);\n     }\n     if (IsIPv4())",
      "path": "src/netaddress.cpp",
      "position": 405,
      "original_position": 371,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: { } around indented blocks, if you're touching this code anyway.",
      "created_at": "2020-08-20T00:27:56Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473471945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473471945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 355,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473479704",
      "pull_request_review_id": 471053325,
      "id": 473479704,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ3OTcwNA==",
      "diff_hunk": "@@ -85,151 +79,154 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n+bool CNetAddr::IsBindAny() const\n {\n-    return ip[15-n];\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    return std::all_of(m_addr.begin(), m_addr.end(), [](uint8_t b) { return b == 0; });\n }\n \n-bool CNetAddr::IsBindAny() const\n+bool CNetAddr::IsIPv4() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (m_net == NET_IPV4) {\n+        assert(m_addr.size() == ADDR_IPV4_SIZE);\n+        return true;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Placing this assertion here seems weird to me. Shouldn't this check be done when(ever) `m_net` is modified? Same with `IsIPv6()` below.",
      "created_at": "2020-08-20T00:40:13Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473479704",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473479704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473486793",
      "pull_request_review_id": 471053325,
      "id": 473486793,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ4Njc5Mw==",
      "diff_hunk": "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "path": "src/netaddress.cpp",
      "position": 377,
      "original_position": 343,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The opposite seems more straightforward:\r\n```C++\r\nif (IsIPv4()) {\r\n    uint32_t a;\r\n    memcpy(&a, m_addr.data(), sizeof(a));\r\n    if (a == htonl(INADDR_ANY) || a == htonl(INADDR_NONE)) return false;\r\n}\r\n```\r\n@sipa might yell at me but it is also possible to do `uint32_t a = *(uint32_t*)m_addr.data();` to skip the `memcpy` line.\r\n",
      "created_at": "2020-08-20T00:51:19Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473486793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473486793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473492495",
      "pull_request_review_id": 471059194,
      "id": 473492495,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ5MjQ5NQ==",
      "diff_hunk": "@@ -538,22 +529,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        ++i;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 510,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It looks like you can do this as a copy operation now that the ordering is the same.\r\n```C++\r\nsize_t i = nBits >> 3;\r\nvchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\r\nnBits &= 0x7;\r\n```",
      "created_at": "2020-08-20T01:00:09Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473492495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473492495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 537,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473522167",
      "pull_request_review_id": 471049774,
      "id": 473522167,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUyMjE2Nw==",
      "diff_hunk": "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "path": "src/netaddress.cpp",
      "position": 377,
      "original_position": 343,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473486793,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems I've caused a lot of confusion here. Everything works here of course due to INADDR_ANY and INADDR_NONE being the same in LE and BE, but if they weren't, the code here would actually be wrong.\r\n\r\nThese constants (and the `s_addr` field of `struct in_addr`) are uint32_t in name only; they're really 4 bytes in big endian notation storing an IP address. So the IP address 1.2.3.4 would be stored as the bytes {0x01,0x02,0x03,0x04}, which on LE systems would be the integer 0x04030201 while on BE systems it would be 0x01020304.\r\n\r\n`htonl` is converting them from network order (BE) to native order, so it would result in the integer 0x01020304 on both systems. That's surprisingly not what we want, we want it in network order, because that's the order we store in `m_addr` (but as bytes, rather than a fake-uint32_t).\r\n\r\nThis would work:\r\n\r\n```c++\r\nstatic constexpr uint32_t ANY = INADDR_ANY;\r\nstatic constexpr uint32_t ALL = INADDR_ALL;\r\nif (memcmp((const uint8_t*)&ANY, m_addr.data(), sizeof(ANY) ||\r\n    memcmp((const uint8_t*)&ALL, m_addr.data(), sizeof(ALL)) ...\r\n```\r\n\r\nthis would also work:\r\n```c++\r\nuint32_t a;\r\nmemcpy((uint8_t*)&a, m_addr.data(), sizeof(a));\r\nif (a == INADDR_ANY || a == INADDR_ALL) ...\r\n```\r\n\r\n@kallewoof Your suggestion is UB, I'm afraid. `m_addr` is an array of bytes, you can't access it through a pointer cast to another type (except `char*` or `unsigned char*`, which can be used to access the in-memory representation of any object).\r\n",
      "created_at": "2020-08-20T01:46:20Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473522167",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473522167"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473534623",
      "pull_request_review_id": 471049774,
      "id": 473534623,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUzNDYyMw==",
      "diff_hunk": "@@ -3,63 +3,57 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n-    if (memcmp(ipv6, pchIPv4, sizeof(pchIPv4)) == 0) {\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\n+\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473279613,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @elichai's suggestion, `std::equal` is nicer.\r\n\r\nGiven how many of these tests are being done (including the IsRFC... stuff below), perhaps you want to go even further (this is absolutely not a blocker for this PR, however):\r\n\r\n```c++\r\ntemplate<typename T, int LEN>\r\nbool HasPrefix(const T1& obj, const uint8_t (&prefix)[LEN])\r\n{\r\n    return obj.size() >= LEN && std::equal(std::cbegin(prefix), std::cend(prefix), std::cbegin(obj));\r\n}\r\n\r\n...\r\n\r\nif (HasPrefix(ipv6, IPV4_IN_IPV6_PREFIX)) ...\r\n```\r\n\r\nIf you turn the prefixes into `std::array` it could be\r\n```c++\r\ntemplate<typename T1, typename T2>\r\nbool HasPrefix(const T1& obj, const T2& prefix)\r\n{\r\n    return obj.size() >= prefix.size() && std::equal(std::cbegin(prefix), std::cend(prefix), std::cbegin(obj));\r\n}\r\n```\r\n\r\ninstead.",
      "created_at": "2020-08-20T02:05:17Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473534623",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473534623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473540199",
      "pull_request_review_id": 471049774,
      "id": 473540199,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0MDE5OQ==",
      "diff_hunk": "@@ -538,22 +529,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        ++i;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 510,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473492495,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe that's correct.",
      "created_at": "2020-08-20T02:14:20Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473540199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473540199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 537,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473543192",
      "pull_request_review_id": 471049774,
      "id": 473543192,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0MzE5Mg==",
      "diff_hunk": "@@ -764,53 +766,83 @@ CSubNet::CSubNet():\n     memset(netmask, 0, sizeof(netmask));\n }\n \n-CSubNet::CSubNet(const CNetAddr &addr, int32_t mask)\n+CSubNet::CSubNet(const CNetAddr& addr, uint8_t mask) : CSubNet()\n {\n-    valid = true;\n-    network = addr;\n-    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n-    memset(netmask, 255, sizeof(netmask));\n+    valid = (addr.IsIPv4() && mask <= ADDR_IPV4_SIZE * 8) ||\n+            (addr.IsIPv6() && mask <= ADDR_IPV6_SIZE * 8);\n+    if (!valid) {\n+        return;\n+    }\n \n-    // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-    const int astartofs = network.IsIPv4() ? 12 : 0;\n+    assert(mask <= sizeof(netmask) * 8);\n \n-    int32_t n = mask;\n-    if(n >= 0 && n <= (128 - astartofs*8)) // Only valid if in range of bits of address\n-    {\n-        n += astartofs*8;\n-        // Clear bits [n..127]\n-        for (; n < 128; ++n)\n-            netmask[n>>3] &= ~(1<<(7-(n&7)));\n-    } else\n-        valid = false;\n+    network = addr;\n \n-    // Normalize network according to netmask\n-    for(int x=0; x<16; ++x)\n-        network.ip[x] &= netmask[x];\n+    uint8_t n = mask;\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        const uint8_t bits = n < 8 ? n : 8;\n+        netmask[i] = (uint8_t)((uint8_t)0xFF << (8 - bits)); // Set first bits.\n+        network.m_addr[i] &= netmask[i]; // Normalize network according to netmask.\n+        n -= bits;\n+    }\n }\n \n-CSubNet::CSubNet(const CNetAddr &addr, const CNetAddr &mask)\n+/**\n+ * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n+ *          the specified subnet mask is not a valid one, -1.\n+ */\n+static inline int NetmaskBits(uint8_t x)\n {\n-    valid = true;\n-    network = addr;\n-    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n-    memset(netmask, 255, sizeof(netmask));\n+    switch(x) {\n+    case 0x00: return 0;\n+    case 0x80: return 1;\n+    case 0xc0: return 2;\n+    case 0xe0: return 3;\n+    case 0xf0: return 4;\n+    case 0xf8: return 5;\n+    case 0xfc: return 6;\n+    case 0xfe: return 7;\n+    case 0xff: return 8;\n+    default: return -1;\n+    }\n+}\n \n-    // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-    const int astartofs = network.IsIPv4() ? 12 : 0;\n+CSubNet::CSubNet(const CNetAddr& addr, const CNetAddr& mask) : CSubNet()\n+{\n+    valid = (addr.IsIPv4() || addr.IsIPv6()) && addr.m_net == mask.m_net;\n+    if (!valid) {\n+        return;\n+    }\n+    // Check if `mask` contains 1-bits after 0-bits (which is an invalid netmask).",
      "path": "src/netaddress.cpp",
      "position": 651,
      "original_position": 615,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is correct, for two reasons:\r\n\r\n* We technically support non-CIDR subnets (which are allowed to contain an arbitrary mix of 0 and 1 bits).\r\n* This test isn't even implementing whether the mask is CIDR, as it's only checking whether no 1-bits-after-0-bits occur within one byte of the mask, rather than the entire mask.\r\n\r\nI wouldn't be opposed to dropping non-CIDR netmasks, but if we do, it should be a separate PR, I think.",
      "created_at": "2020-08-20T02:19:13Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473543192",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473543192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 820,
      "original_line": 820,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473546480",
      "pull_request_review_id": 471049774,
      "id": 473546480,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0NjQ4MA==",
      "diff_hunk": "@@ -822,68 +854,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 663,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Braces, please.\r\n\r\n(for most rules I don't care that strongly whether you stick to the existing/surrounding style vs. follow the new style, but a braceless `if` has actually been part of the cause of a nontrivial security bug, see https://www.imperialviolet.org/2014/02/22/applebug.html)",
      "created_at": "2020-08-20T02:24:15Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473546480",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473546480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473547937",
      "pull_request_review_id": 471049774,
      "id": 473547937,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU0NzkzNw==",
      "diff_hunk": "@@ -822,68 +854,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + strprintf(\"/%u\", cidr);",
      "path": "src/netaddress.cpp",
      "position": 779,
      "original_position": 733,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here too it seems you're dropping support for non-CIDR masks. Is that intentional?",
      "created_at": "2020-08-20T02:26:41Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473547937",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473547937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 889,
      "original_line": 889,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473780674",
      "pull_request_review_id": 471392783,
      "id": 473780674,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc4MDY3NA==",
      "diff_hunk": "@@ -3,63 +3,57 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n-    if (memcmp(ipv6, pchIPv4, sizeof(pchIPv4)) == 0) {\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\n+\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473279613,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In C++17 `HasPrefix` will be possible even with C arrays :D (by replacing `.size()` with `std::size(..)`)",
      "created_at": "2020-08-20T08:52:14Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473780674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/473780674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474135614",
      "pull_request_review_id": 471809679,
      "id": 474135614,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNTYxNA==",
      "diff_hunk": "@@ -3,63 +3,57 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n-    if (memcmp(ipv6, pchIPv4, sizeof(pchIPv4)) == 0) {\n+    assert(ipv6.size() == ADDR_IPV6_SIZE);\n+\n+    if (memcmp(ipv6.begin(), IPV4_IN_IPV6_PREFIX, sizeof(IPV4_IN_IPV6_PREFIX)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473279613,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).",
      "created_at": "2020-08-20T16:53:49Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474135614",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474135614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474135795",
      "pull_request_review_id": 471809947,
      "id": 474135795,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNTc5NQ==",
      "diff_hunk": "@@ -85,151 +79,154 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE)\n             return false;\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));\n     scopeId = scope;\n }\n \n-unsigned int CNetAddr::GetByte(int n) const\n+bool CNetAddr::IsBindAny() const\n {\n-    return ip[15-n];\n+    if (!IsIPv4() && !IsIPv6()) {\n+        return false;\n+    }\n+    return std::all_of(m_addr.begin(), m_addr.end(), [](uint8_t b) { return b == 0; });\n }\n \n-bool CNetAddr::IsBindAny() const\n+bool CNetAddr::IsIPv4() const\n {\n-    const int cmplen = IsIPv4() ? 4 : 16;\n-    for (int i = 0; i < cmplen; ++i) {\n-        if (GetByte(i)) return false;\n+    if (m_net == NET_IPV4) {\n+        assert(m_addr.size() == ADDR_IPV4_SIZE);\n+        return true;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473479704,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).",
      "created_at": "2020-08-20T16:54:10Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474135795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474135795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 131,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474136825",
      "pull_request_review_id": 471811185,
      "id": 474136825,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNjgyNQ==",
      "diff_hunk": "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "path": "src/netaddress.cpp",
      "position": 377,
      "original_position": 343,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473486793,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Those constants are defined like this in the system headers:\r\n\r\n```cpp\r\ntypedef uint32_t in_addr_t;\r\n...\r\n#define\tINADDR_ANY\t\t((in_addr_t) 0x00000000)\r\n#define\tINADDR_NONE\t\t((in_addr_t) 0xffffffff)\r\n...\r\n#define INADDR_ALLHOSTS_GROUP\t((in_addr_t) 0xe0000001) /* 224.0.0.1 */\r\n```\r\n\r\nOf course any discussion about the byte order of `INADDR_ANY` is meaningless, but nevertheless - we can assume that all `INADDR_*` are in the same byte order. From the above we see that 224.0.0.1 is represented as the integer `3758096385` or `0xe0000001` which on LE systems is stored in memory as `01 00 00 e0` and on BE systems as `e0 00 00 01`.\r\n\r\nThis means that whenever we want to compare those constants to something we know is in BE byte order (like `m_addr`) we have to apply `htonl()` to them. This is how it is done in the [L](http://tomoyo.osdn.jp/cgi-bin/lxr/source/net/bridge/br_multicast.c?a=sparc64#L263)inu[x](http://tomoyo.osdn.jp/cgi-bin/lxr/source/net/ipv4/igmp.c?a=sparc64#L1542) and [FreeBSD](https://github.com/freebsd/freebsd/blob/300d08e9968a2e38e163d3c3479524a587fe8577/sys/netinet/in.h#L658) system headers.\r\n\r\nSo, leaving this as is at this iteration.",
      "created_at": "2020-08-20T16:55:49Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474136825",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474136825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474137228",
      "pull_request_review_id": 471811661,
      "id": 474137228,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNzIyOA==",
      "diff_hunk": "@@ -538,22 +529,33 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n     }\n \n     // push our ip onto vchRet byte by byte...\n+    size_t i = 0;\n     while (nBits >= 8)\n     {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i]);\n+        ++i;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 510,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473492495,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).",
      "created_at": "2020-08-20T16:56:29Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474137228",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474137228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 537,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474139125",
      "pull_request_review_id": 471813960,
      "id": 474139125,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzOTEyNQ==",
      "diff_hunk": "@@ -353,13 +346,13 @@ std::string CNetAddr::ToStringIP() const\n             return std::string(name);\n     }\n     if (IsIPv4())",
      "path": "src/netaddress.cpp",
      "position": 405,
      "original_position": 371,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473471945,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added { } to all places where the line containing if/for/while is modified for another reason (this one is not).",
      "created_at": "2020-08-20T16:59:36Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474139125",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474139125"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 355,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474140065",
      "pull_request_review_id": 471815170,
      "id": 474140065,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MDA2NQ==",
      "diff_hunk": "@@ -822,68 +854,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 663,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473546480,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).",
      "created_at": "2020-08-20T17:01:14Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474140065",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474140065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474142149",
      "pull_request_review_id": 471817916,
      "id": 474142149,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MjE0OQ==",
      "diff_hunk": "@@ -822,68 +854,27 @@ bool CSubNet::Match(const CNetAddr &addr) const\n {\n     if (!valid || !addr.IsValid() || network.m_net != addr.m_net)\n         return false;\n-    for(int x=0; x<16; ++x)\n-        if ((addr.ip[x] & netmask[x]) != network.ip[x])\n+    assert(network.m_addr.size() == addr.m_addr.size());\n+    for (size_t x = 0; x < addr.m_addr.size(); ++x)\n+        if ((addr.m_addr[x] & netmask[x]) != network.m_addr[x])\n             return false;\n     return true;\n }\n \n-/**\n- * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n- *          the specified subnet mask is not a valid one, -1.\n- */\n-static inline int NetmaskBits(uint8_t x)\n-{\n-    switch(x) {\n-    case 0x00: return 0;\n-    case 0x80: return 1;\n-    case 0xc0: return 2;\n-    case 0xe0: return 3;\n-    case 0xf0: return 4;\n-    case 0xf8: return 5;\n-    case 0xfc: return 6;\n-    case 0xfe: return 7;\n-    case 0xff: return 8;\n-    default: return -1;\n-    }\n-}\n-\n std::string CSubNet::ToString() const\n {\n-    /* Parse binary 1{n}0{N-n} to see if mask can be represented as /n */\n-    int cidr = 0;\n-    bool valid_cidr = true;\n-    int n = network.IsIPv4() ? 12 : 0;\n-    for (; n < 16 && netmask[n] == 0xff; ++n)\n-        cidr += 8;\n-    if (n < 16) {\n-        int bits = NetmaskBits(netmask[n]);\n-        if (bits < 0)\n-            valid_cidr = false;\n-        else\n-            cidr += bits;\n-        ++n;\n-    }\n-    for (; n < 16 && valid_cidr; ++n)\n-        if (netmask[n] != 0x00)\n-            valid_cidr = false;\n-\n-    /* Format output */\n-    std::string strNetmask;\n-    if (valid_cidr) {\n-        strNetmask = strprintf(\"%u\", cidr);\n-    } else {\n-        if (network.IsIPv4())\n-            strNetmask = strprintf(\"%u.%u.%u.%u\", netmask[12], netmask[13], netmask[14], netmask[15]);\n-        else\n-            strNetmask = strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                             netmask[0] << 8 | netmask[1], netmask[2] << 8 | netmask[3],\n-                             netmask[4] << 8 | netmask[5], netmask[6] << 8 | netmask[7],\n-                             netmask[8] << 8 | netmask[9], netmask[10] << 8 | netmask[11],\n-                             netmask[12] << 8 | netmask[13], netmask[14] << 8 | netmask[15]);\n+    assert(network.m_addr.size() <= sizeof(netmask));\n+\n+    uint8_t cidr = 0;\n+\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        if (netmask[i] == 0x00) {\n+            break;\n+        }\n+        cidr += NetmaskBits(netmask[i]);\n     }\n \n-    return network.ToString() + \"/\" + strNetmask;\n+    return network.ToString() + strprintf(\"/%u\", cidr);",
      "path": "src/netaddress.cpp",
      "position": 779,
      "original_position": 733,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473547937,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, see https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-677787025 - it is mentioned in the commit message and also some tests are adjusted.",
      "created_at": "2020-08-20T17:05:14Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474142149",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474142149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 889,
      "original_line": 889,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474143463",
      "pull_request_review_id": 471819618,
      "id": 474143463,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MzQ2Mw==",
      "diff_hunk": "@@ -764,53 +766,83 @@ CSubNet::CSubNet():\n     memset(netmask, 0, sizeof(netmask));\n }\n \n-CSubNet::CSubNet(const CNetAddr &addr, int32_t mask)\n+CSubNet::CSubNet(const CNetAddr& addr, uint8_t mask) : CSubNet()\n {\n-    valid = true;\n-    network = addr;\n-    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n-    memset(netmask, 255, sizeof(netmask));\n+    valid = (addr.IsIPv4() && mask <= ADDR_IPV4_SIZE * 8) ||\n+            (addr.IsIPv6() && mask <= ADDR_IPV6_SIZE * 8);\n+    if (!valid) {\n+        return;\n+    }\n \n-    // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-    const int astartofs = network.IsIPv4() ? 12 : 0;\n+    assert(mask <= sizeof(netmask) * 8);\n \n-    int32_t n = mask;\n-    if(n >= 0 && n <= (128 - astartofs*8)) // Only valid if in range of bits of address\n-    {\n-        n += astartofs*8;\n-        // Clear bits [n..127]\n-        for (; n < 128; ++n)\n-            netmask[n>>3] &= ~(1<<(7-(n&7)));\n-    } else\n-        valid = false;\n+    network = addr;\n \n-    // Normalize network according to netmask\n-    for(int x=0; x<16; ++x)\n-        network.ip[x] &= netmask[x];\n+    uint8_t n = mask;\n+    for (size_t i = 0; i < network.m_addr.size(); ++i) {\n+        const uint8_t bits = n < 8 ? n : 8;\n+        netmask[i] = (uint8_t)((uint8_t)0xFF << (8 - bits)); // Set first bits.\n+        network.m_addr[i] &= netmask[i]; // Normalize network according to netmask.\n+        n -= bits;\n+    }\n }\n \n-CSubNet::CSubNet(const CNetAddr &addr, const CNetAddr &mask)\n+/**\n+ * @returns The number of 1-bits in the prefix of the specified subnet mask. If\n+ *          the specified subnet mask is not a valid one, -1.\n+ */\n+static inline int NetmaskBits(uint8_t x)\n {\n-    valid = true;\n-    network = addr;\n-    // Default to /32 (IPv4) or /128 (IPv6), i.e. match single address\n-    memset(netmask, 255, sizeof(netmask));\n+    switch(x) {\n+    case 0x00: return 0;\n+    case 0x80: return 1;\n+    case 0xc0: return 2;\n+    case 0xe0: return 3;\n+    case 0xf0: return 4;\n+    case 0xf8: return 5;\n+    case 0xfc: return 6;\n+    case 0xfe: return 7;\n+    case 0xff: return 8;\n+    default: return -1;\n+    }\n+}\n \n-    // IPv4 addresses start at offset 12, and first 12 bytes must match, so just offset n\n-    const int astartofs = network.IsIPv4() ? 12 : 0;\n+CSubNet::CSubNet(const CNetAddr& addr, const CNetAddr& mask) : CSubNet()\n+{\n+    valid = (addr.IsIPv4() || addr.IsIPv6()) && addr.m_net == mask.m_net;\n+    if (!valid) {\n+        return;\n+    }\n+    // Check if `mask` contains 1-bits after 0-bits (which is an invalid netmask).",
      "path": "src/netaddress.cpp",
      "position": 651,
      "original_position": 615,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473543192,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Uh, oh, you found a bug (the second item above)! Fixed - [diff together with other suggestions](https://github.com/bitcoin/bitcoin/compare/8b7f2c13b67ae84a59f29a7cffe243055a2b93d9..86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3).\r\n\r\nA summary about the netmasks: https://github.com/bitcoin/bitcoin/pull/19628#issuecomment-677787025",
      "created_at": "2020-08-20T17:07:45Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474143463",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474143463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 820,
      "original_line": 820,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474181694",
      "pull_request_review_id": 471868976,
      "id": 474181694,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4MTY5NA==",
      "diff_hunk": "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "path": "src/netaddress.cpp",
      "position": 377,
      "original_position": 343,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473486793,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right.\r\n\r\nI was confused by the fact that `struct in_addr`'s `s_addr` field stores IP addresses in BE order, but the INADDR_* constants are in native order (and you are supposed to use `htonl` & friends to convert between them; see the section on `sin_addr` in https://man7.org/linux/man-pages/man7/ip.7.html).\r\n\r\nArguably you should be using `ntohl` instead of `htonl` (as these constants are in native order, and we want them in BE order) - but on every realistic platform these two are equivalent.\r\n\r\nIf you want to avoid the winsock/inet header dependency you can also use WriteBE32 to convert them to bytes, or:\r\n\r\n```c++\r\nuint32_t a = ReadBE32(m_data.data());\r\nif (a == INADDR_ANY || a == INADDR_ALL) ...\r\n```\r\n",
      "created_at": "2020-08-20T18:17:36Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474181694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474181694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474187399",
      "pull_request_review_id": 471876321,
      "id": 474187399,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4NzM5OQ==",
      "diff_hunk": "@@ -152,14 +179,93 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 118,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nMaybe s/16/ADDR_IPV6_SIZE/ since code would be broken using any other size.",
      "created_at": "2020-08-20T18:28:01Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474187399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474187399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474189751",
      "pull_request_review_id": 471876321,
      "id": 474189751,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE4OTc1MQ==",
      "diff_hunk": "@@ -152,14 +179,93 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 153,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nCan you add a comment to explain why this is serializing 0's rather than asserting false in both of these cases? Maybe say when this code could be called to serialize unroutable addresses and when it could be called to serialize invalid NET_MAX addresses.",
      "created_at": "2020-08-20T18:32:08Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474189751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474189751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 226,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474194069",
      "pull_request_review_id": 471884700,
      "id": 474194069,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NDA2OQ==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had to google this syntax :/  (for a second I thought it was a C trick to make arrays work, but it's actually C++)\r\ncould we please use `const std::array<uint8_t, N>&` instead? :)",
      "created_at": "2020-08-20T18:40:02Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474194069",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474194069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474194126",
      "pull_request_review_id": 471876321,
      "id": 474194126,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NDEyNg==",
      "diff_hunk": "@@ -838,10 +839,13 @@ bool LookupSubNet(const std::string& strSubnet, CSubNet& ret)\n         if (slash != strSubnet.npos)\n         {\n             std::string strNetmask = strSubnet.substr(slash + 1);\n-            int32_t n;\n-            if (ParseInt32(strNetmask, &n)) {\n+            uint32_t n;\n+            if (ParseUInt32(strNetmask, &n)) {\n+                if (n > std::numeric_limits<uint8_t>::max()) {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nHaving a `ParseUInt8()` function would seem more appealing than layering uint8 range checking on top of uint32 range checking done by `ParseUInt32`",
      "created_at": "2020-08-20T18:40:08Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474194126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474194126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": 843,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 844,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474195211",
      "pull_request_review_id": 471886051,
      "id": 474195211,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NTIxMQ==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "or just make this generic over all containers",
      "created_at": "2020-08-20T18:41:52Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474195211",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474195211"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474196241",
      "pull_request_review_id": 471887416,
      "id": 474196241,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NjI0MQ==",
      "diff_hunk": "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "path": "src/netaddress.cpp",
      "position": 377,
      "original_position": 343,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473486793,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "as @sipa said \r\n```C++\r\nuint32_t a = ReadBE32(m_data.data());\r\nif (a == INADDR_ANY || a == INADDR_ALL) ...\r\n```\r\nis so much more readable :)",
      "created_at": "2020-08-20T18:43:47Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474196241",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474196241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474208419",
      "pull_request_review_id": 471876321,
      "id": 474208419,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwODQxOQ==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)",
      "path": "src/netaddress.cpp",
      "position": 34,
      "original_position": 39,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nPrecedes this PR, so maybe not worth changing here, but this method seems more awkward to use for assignment than plain `operator=`, and the `SetIP` method name is misleading since it works for all addresses, not just IP addresses. I think it would better to just use plain `=` for address assignment, and have a separate `AssertValid()` method if it's helpful to have runtime asserts in places like this.",
      "created_at": "2020-08-20T19:07:07Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474208419",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474208419"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474214757",
      "pull_request_review_id": 471876321,
      "id": 474214757,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxNDc1Nw==",
      "diff_hunk": "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.",
      "path": "src/netaddress.cpp",
      "position": 147,
      "original_position": 134,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nIt would be nice not to drop this explanation. I think it could move to the SerializeV1Array function or be incorporated in the TORV2_IN_IPV6_PREFIX comment.",
      "created_at": "2020-08-20T19:19:20Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474214757",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474214757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": 94,
      "original_start_line": 94,
      "start_side": "LEFT",
      "line": 97,
      "original_line": 97,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474219887",
      "pull_request_review_id": 471876321,
      "id": 474219887,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxOTg4Nw==",
      "diff_hunk": "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n             return false;\n+        }\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));",
      "path": "src/netaddress.cpp",
      "position": 184,
      "original_position": 171,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nNot sure if it's portable, but it seems like you can avoid the casting and span declaration on this line with just `SetLegacyIPv6(ipv6Addr.s6_addr);`",
      "created_at": "2020-08-20T19:29:18Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474219887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474219887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474230648",
      "pull_request_review_id": 471876321,
      "id": 474230648,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzMDY0OA==",
      "diff_hunk": "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n             return false;\n+        }\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);",
      "path": "src/netaddress.cpp",
      "position": 177,
      "original_position": 164,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nMaybe would be good to static assert that `in_addr` size is the same as `ADDR_IPV4_SIZE`",
      "created_at": "2020-08-20T19:41:55Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474230648",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474230648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474248623",
      "pull_request_review_id": 471876321,
      "id": 474248623,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0ODYyMw==",
      "diff_hunk": "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "path": "src/netaddress.cpp",
      "position": 377,
      "original_position": 343,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473486793,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19628#discussion_r473522167\r\n\r\n> @kallewoof Your suggestion is UB, I'm afraid\r\n\r\nJust in case anybody else reading this gets confused like me, this is /not/ saying @kallewoof memcpy suggestion is UB. Only the second suggestion without memcpy is UB",
      "created_at": "2020-08-20T20:18:08Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474248623",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474248623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474266508",
      "pull_request_review_id": 471876321,
      "id": 474266508,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI2NjUwOA==",
      "diff_hunk": "@@ -391,7 +398,7 @@ bool CNetAddr::GetInAddr(struct in_addr* pipv4Addr) const\n {\n     if (!IsIPv4())\n         return false;\n-    memcpy(pipv4Addr, ip+12, 4);\n+    memcpy(pipv4Addr, m_addr.data(), m_addr.size());",
      "path": "src/netaddress.cpp",
      "position": 444,
      "original_position": 425,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nNow that this is calling memcpy with dynamic size rather than fixed size, I think it'd be good to add an assert to check that it doesn't overflow the in_addr struct. Same suggestion for in6_addr struct below.",
      "created_at": "2020-08-20T20:54:02Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474266508",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474266508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 395,
      "original_line": 395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474270653",
      "pull_request_review_id": 471876321,
      "id": 474270653,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3MDY1Mw==",
      "diff_hunk": "@@ -421,15 +428,17 @@ bool CNetAddr::HasLinkedIPv4() const\n \n uint32_t CNetAddr::GetLinkedIPv4() const\n {\n-    if (IsIPv4() || IsRFC6145() || IsRFC6052()) {\n-        // IPv4, mapped IPv4, SIIT translated IPv4: the IPv4 address is the last 4 bytes of the address\n-        return ReadBE32(ip + 12);\n+    if (IsIPv4()) {\n+        return ReadBE32(m_addr.data());\n+    } else if (IsRFC6052() || IsRFC6145()) {\n+        // mapped IPv4, SIIT translated IPv4: the IPv4 address is the last 4 bytes of the address\n+        return ReadBE32(m_addr.data() + m_addr.size() - ADDR_IPV4_SIZE);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 449,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nI think this could be a little safer with bounds checking, and more readable as `ReadBE32(MakeSpan(m_addr).last(ADDR_IPV4_SIZE).data())`. Similarly for RFC4380 case below.",
      "created_at": "2020-08-20T21:02:08Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474270653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474270653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474278171",
      "pull_request_review_id": 471876321,
      "id": 474278171,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3ODE3MQ==",
      "diff_hunk": "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 527,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nProbably my fault, but I did spend a minute looking at this diff being baffled by `nBits >> 3` and `nBits &= 0x7`. Would suggest changing to `size_t bytes = nBits / 8` and `nBits = nBits % 8` to give a few more hints for comprehension.",
      "created_at": "2020-08-20T21:18:03Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474278171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474278171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 546,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474280814",
      "pull_request_review_id": 471876321,
      "id": 474280814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4MDgxNA==",
      "diff_hunk": "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 534,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nIt seems like this assert would make more sense moved before the `vchRet.insert` statement above, and not conditioned on nBits divisibility.",
      "created_at": "2020-08-20T21:24:03Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474280814",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474280814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474284346",
      "pull_request_review_id": 471876321,
      "id": 474284346,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4NDM0Ng==",
      "diff_hunk": "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i] | ((1 << (8 - nBits)) - 1));\n+    }\n \n     return vchRet;\n }\n \n+std::vector<unsigned char> CNetAddr::GetAddrBytes() const\n+{\n+    uint8_t serialized[V1_SERIALIZATION_SIZE];\n+    SerializeV1Array(serialized);\n+    return {std::begin(serialized), std::end(serialized)};\n+}\n+\n uint64_t CNetAddr::GetHash() const\n {\n-    uint256 hash = Hash(ip);\n+    uint256 hash = Hash(m_addr);",
      "path": "src/netaddress.cpp",
      "position": 571,
      "original_position": 551,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nMight be worth mentioning in commit message CNetAddr now has returns different hash values. It seems like GetHash is only called one place in net_processing. Maybe this is the only change in the PR that's not just refactoring and actually affects externally observable behavior.",
      "created_at": "2020-08-20T21:31:51Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474284346",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474284346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 562,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474289828",
      "pull_request_review_id": 471876321,
      "id": 474289828,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4OTgyOA==",
      "diff_hunk": "@@ -893,12 +901,18 @@ bool CSubNet::IsValid() const\n \n bool operator==(const CSubNet& a, const CSubNet& b)\n {\n-    return a.valid == b.valid && a.network == b.network && !memcmp(a.netmask, b.netmask, 16);\n+    const size_t size = a.network.IsIPv4() ? ADDR_IPV4_SIZE : ADDR_IPV6_SIZE;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 768,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"net: change CNetAddr::ip to have flexible size\" (86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3)\r\n\r\nValue of size variable used here seems fragile. Seems like it would be better to not assume any particular network type and use network.m_addr_size() like code above seems to do.\r\n\r\nSame suggestion for operator < below. ",
      "created_at": "2020-08-20T21:44:32Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474289828",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474289828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 893,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474300152",
      "pull_request_review_id": 472019871,
      "id": 474300152,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMDE1Mg==",
      "diff_hunk": "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "path": "src/netaddress.cpp",
      "position": 377,
      "original_position": 343,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473486793,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, yes, I guess this confused @kallewoof too (on IRC). Specifially, this is UB:\r\n\r\n```c++\r\nuint32_t a = *(uint32_t*)m_addr.data();\r\n```\r\n\r\nas it's accessing a byte array through an incompatible type.",
      "created_at": "2020-08-20T22:10:09Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474300152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474300152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474421548",
      "pull_request_review_id": 472159289,
      "id": 474421548,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQyMTU0OA==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> generic over all containers\r\n\r\nSpan !?",
      "created_at": "2020-08-21T05:47:46Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474421548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474421548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474490128",
      "pull_request_review_id": 472280511,
      "id": 474490128,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ5MDEyOA==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I can't figure out how to use `std::array` or `Span` and keep the usage to just `HasPrefix(m_addr, {192, 168})` (which is sweet!), so I am keeping the reference to array.",
      "created_at": "2020-08-21T07:54:10Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474490128",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474490128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474538202",
      "pull_request_review_id": 472315701,
      "id": 474538202,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDUzODIwMg==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)",
      "path": "src/netaddress.cpp",
      "position": 34,
      "original_position": 39,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474208419,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree. I considered swapping this for `operator=`, but cut it off, trying to keep the patch small. There are so many things that can be improved around this code!",
      "created_at": "2020-08-21T08:49:13Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474538202",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474538202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474600947",
      "pull_request_review_id": 472364737,
      "id": 474600947,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwMDk0Nw==",
      "diff_hunk": "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n             return false;\n+        }\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);\n+    m_addr.assign(ptr, ptr + ADDR_IPV4_SIZE);\n }\n \n CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n {\n-    SetRaw(NET_IPV6, (const uint8_t*)&ipv6Addr);\n+    SetLegacyIPv6(Span<const uint8_t>(reinterpret_cast<const uint8_t*>(&ipv6Addr), sizeof(ipv6Addr)));",
      "path": "src/netaddress.cpp",
      "position": 184,
      "original_position": 171,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474219887,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like it is not: https://docs.microsoft.com/en-us/windows/win32/api/in6addr/ns-in6addr-in6_addr :-(",
      "created_at": "2020-08-21T10:01:12Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474600947",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474600947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 133,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474603824",
      "pull_request_review_id": 472368679,
      "id": 474603824,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwMzgyNA==",
      "diff_hunk": "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.\n+ * Parse a TORv2 address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n- * @see CNetAddr::IsTor(), CNetAddr::IsRFC4193()\n+ * @see CNetAddr::IsTor()\n  */\n bool CNetAddr::SetSpecial(const std::string &strName)\n {\n     if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n         std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != 16-sizeof(pchOnionCat))\n+        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n             return false;\n+        }\n         m_net = NET_ONION;\n-        memcpy(ip, pchOnionCat, sizeof(pchOnionCat));\n-        for (unsigned int i=0; i<16-sizeof(pchOnionCat); i++)\n-            ip[i + sizeof(pchOnionCat)] = vchAddr[i];\n+        m_addr.assign(vchAddr.begin(), vchAddr.end());\n         return true;\n     }\n     return false;\n }\n \n CNetAddr::CNetAddr(const struct in_addr& ipv4Addr)\n {\n-    SetRaw(NET_IPV4, (const uint8_t*)&ipv4Addr);\n+    m_net = NET_IPV4;\n+    const uint8_t* ptr = reinterpret_cast<const uint8_t*>(&ipv4Addr);",
      "path": "src/netaddress.cpp",
      "position": 177,
      "original_position": 164,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474230648,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that's not necessary. It was also the case before this PR that `struct in_addr` would be assumed to be 4 bytes. I don't see this ever changing.",
      "created_at": "2020-08-21T10:07:32Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474603824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474603824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474617351",
      "pull_request_review_id": 472385881,
      "id": 474617351,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYxNzM1MQ==",
      "diff_hunk": "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 534,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474280814,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is here because here we access `m_addr[i]`. I would normally use `m_addr.at(i)` if there is a chance it may get out of bounds and not write an explicit separate assert, but `prevector` does not have an `at()` method :/",
      "created_at": "2020-08-21T10:36:24Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474617351",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474617351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474628679",
      "pull_request_review_id": 472400564,
      "id": 474628679,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyODY3OQ==",
      "diff_hunk": "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i] | ((1 << (8 - nBits)) - 1));\n+    }\n \n     return vchRet;\n }\n \n+std::vector<unsigned char> CNetAddr::GetAddrBytes() const\n+{\n+    uint8_t serialized[V1_SERIALIZATION_SIZE];\n+    SerializeV1Array(serialized);\n+    return {std::begin(serialized), std::end(serialized)};\n+}\n+\n uint64_t CNetAddr::GetHash() const\n {\n-    uint256 hash = Hash(ip);\n+    uint256 hash = Hash(m_addr);",
      "path": "src/netaddress.cpp",
      "position": 571,
      "original_position": 551,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474284346,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, that hash is only used when relaying addresses and is not saved on disk or sent over the network. The current time is also thrown to the hasher, together with the result of the changed `CNetAddr::GetHash()` and also with the relay destination. So the final result from the hasher is likely to change even after just a bitcoind restart (because it will connect to other nodes) or after 24h or less. I think it is not necessary to mention this in the commit message.",
      "created_at": "2020-08-21T11:03:32Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474628679",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474628679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 562,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474639720",
      "pull_request_review_id": 472414964,
      "id": 474639720,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYzOTcyMA==",
      "diff_hunk": "@@ -287,17 +285,12 @@ bool CNetAddr::IsValid() const\n     if (IsInternal())\n         return false;\n \n-    if (IsIPv4())\n-    {\n-        // INADDR_NONE\n-        uint32_t ipNone = INADDR_NONE;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n-\n-        // 0\n-        ipNone = 0;\n-        if (memcmp(ip+12, &ipNone, 4) == 0)\n-            return false;\n+    if (IsIPv4()) {\n+        for (uint32_t a : {htonl(INADDR_ANY), htonl(INADDR_NONE)}) {\n+            if (memcmp(m_addr.data(), &a, sizeof(a)) == 0) {\n+                return false;\n+            }\n+        }",
      "path": "src/netaddress.cpp",
      "position": 377,
      "original_position": 343,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "8b7f2c13b67ae84a59f29a7cffe243055a2b93d9",
      "in_reply_to_id": 473486793,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alright, we have a clear winner with\r\n```cpp\r\nuint32_t a = ReadBE32(m_data.data());\r\nif (a == INADDR_ANY || a == INADDR_ALL) ...\r\n```\r\n\r\n[Changed](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2).",
      "created_at": "2020-08-21T11:30:45Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474639720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474639720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474640152",
      "pull_request_review_id": 472415473,
      "id": 474640152,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MDE1Mg==",
      "diff_hunk": "@@ -152,14 +179,93 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 118,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474187399,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2).",
      "created_at": "2020-08-21T11:31:49Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474640152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474640152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474640768",
      "pull_request_review_id": 472416252,
      "id": 474640768,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MDc2OA==",
      "diff_hunk": "@@ -152,14 +179,93 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            unsigned char ip_temp[sizeof(ip)];\n-            s >> ip_temp;\n+            UnserializeV1Stream(s);\n+        }\n+\n+        friend class CSubNet;\n+\n+    private:\n+        /**\n+         * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n+         */\n+        static constexpr size_t V1_SERIALIZATION_SIZE = 16;\n+\n+        /**\n+         * Serialize in pre-ADDRv2/BIP155 format to an array.\n+         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n+         */\n+        void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n+        {\n+            size_t prefix_size;\n+\n+            switch (m_net) {\n+            case NET_IPV6:\n+                assert(m_addr.size() == sizeof(arr));\n+                memcpy(arr, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_IPV4:\n+                prefix_size = sizeof(IPV4_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, IPV4_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_ONION:\n+                prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, TORV2_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_INTERNAL:\n+                prefix_size = sizeof(INTERNAL_IN_IPV6_PREFIX);\n+                assert(prefix_size + m_addr.size() == sizeof(arr));\n+                memcpy(arr, INTERNAL_IN_IPV6_PREFIX, prefix_size);\n+                memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n+                return;\n+            case NET_UNROUTABLE:\n+            case NET_MAX:\n+                memset(arr, 0x0, sizeof(arr));",
      "path": "src/netaddress.h",
      "position": null,
      "original_position": 153,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474189751,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is no reason to serialize as `0`s. `NET_UNROUTABLE` and `NET_MAX` are never set to `m_net` and must never be set. [Changed](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2) this to `assert(false)`.",
      "created_at": "2020-08-21T11:33:19Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474640768",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474640768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 226,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474641563",
      "pull_request_review_id": 472417211,
      "id": 474641563,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MTU2Mw==",
      "diff_hunk": "@@ -838,10 +839,13 @@ bool LookupSubNet(const std::string& strSubnet, CSubNet& ret)\n         if (slash != strSubnet.npos)\n         {\n             std::string strNetmask = strSubnet.substr(slash + 1);\n-            int32_t n;\n-            if (ParseInt32(strNetmask, &n)) {\n+            uint32_t n;\n+            if (ParseUInt32(strNetmask, &n)) {\n+                if (n > std::numeric_limits<uint8_t>::max()) {",
      "path": "src/netbase.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194126,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, [added ParseUint8()](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2).",
      "created_at": "2020-08-21T11:35:12Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474641563",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474641563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": 843,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 844,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474642315",
      "pull_request_review_id": 472418096,
      "id": 474642315,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MjMxNQ==",
      "diff_hunk": "@@ -85,60 +109,50 @@ bool CNetAddr::SetInternal(const std::string &name)\n     m_net = NET_INTERNAL;\n     unsigned char hash[32] = {};\n     CSHA256().Write((const unsigned char*)name.data(), name.size()).Finalize(hash);\n-    memcpy(ip, g_internal_prefix, sizeof(g_internal_prefix));\n-    memcpy(ip + sizeof(g_internal_prefix), hash, sizeof(ip) - sizeof(g_internal_prefix));\n+    m_addr.assign(hash, hash + ADDR_INTERNAL_SIZE);\n     return true;\n }\n \n /**\n- * Try to make this a dummy address that maps the specified onion address into\n- * IPv6 using OnionCat's range and encoding. Such dummy addresses have a prefix\n- * of fd87:d87e:eb43::/48 and are guaranteed to not be publicly routable as they\n- * fall under RFC4193's fc00::/7 subnet allocated to unique-local addresses.",
      "path": "src/netaddress.cpp",
      "position": 147,
      "original_position": 134,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474214757,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Moved](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2) the comment to `TORV2_IN_IPV6_PREFIX` and similar with `SetInternal()` and `INTERNAL_IN_IPV6_PREFIX`.",
      "created_at": "2020-08-21T11:36:55Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474642315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474642315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": 94,
      "original_start_line": 94,
      "start_side": "LEFT",
      "line": 97,
      "original_line": 97,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643161",
      "pull_request_review_id": 472419058,
      "id": 474643161,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MzE2MQ==",
      "diff_hunk": "@@ -391,7 +398,7 @@ bool CNetAddr::GetInAddr(struct in_addr* pipv4Addr) const\n {\n     if (!IsIPv4())\n         return false;\n-    memcpy(pipv4Addr, ip+12, 4);\n+    memcpy(pipv4Addr, m_addr.data(), m_addr.size());",
      "path": "src/netaddress.cpp",
      "position": 444,
      "original_position": 425,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474266508,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2)",
      "created_at": "2020-08-21T11:38:46Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 395,
      "original_line": 395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643314",
      "pull_request_review_id": 472419261,
      "id": 474643314,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MzMxNA==",
      "diff_hunk": "@@ -421,15 +428,17 @@ bool CNetAddr::HasLinkedIPv4() const\n \n uint32_t CNetAddr::GetLinkedIPv4() const\n {\n-    if (IsIPv4() || IsRFC6145() || IsRFC6052()) {\n-        // IPv4, mapped IPv4, SIIT translated IPv4: the IPv4 address is the last 4 bytes of the address\n-        return ReadBE32(ip + 12);\n+    if (IsIPv4()) {\n+        return ReadBE32(m_addr.data());\n+    } else if (IsRFC6052() || IsRFC6145()) {\n+        // mapped IPv4, SIIT translated IPv4: the IPv4 address is the last 4 bytes of the address\n+        return ReadBE32(m_addr.data() + m_addr.size() - ADDR_IPV4_SIZE);",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 449,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474270653,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2)",
      "created_at": "2020-08-21T11:39:09Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643738",
      "pull_request_review_id": 472419701,
      "id": 474643738,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0MzczOA==",
      "diff_hunk": "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 527,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474278171,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2)",
      "created_at": "2020-08-21T11:40:00Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474643738",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474643738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 546,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474644667",
      "pull_request_review_id": 472420800,
      "id": 474644667,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0NDY2Nw==",
      "diff_hunk": "@@ -893,12 +901,18 @@ bool CSubNet::IsValid() const\n \n bool operator==(const CSubNet& a, const CSubNet& b)\n {\n-    return a.valid == b.valid && a.network == b.network && !memcmp(a.netmask, b.netmask, 16);\n+    const size_t size = a.network.IsIPv4() ? ADDR_IPV4_SIZE : ADDR_IPV6_SIZE;",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 768,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474289828,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`a.network.m_addr` is protected here and can't be accessed. Anyway, since we only do subnetting of IPv4 and IPv6 I [added an assert](https://github.com/bitcoin/bitcoin/compare/86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3..8c709e738773f954c1b385f997e6d3adeaea97c2) to ensure that this is the case.",
      "created_at": "2020-08-21T11:42:04Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474644667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474644667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 893,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474804072",
      "pull_request_review_id": 472630988,
      "id": 474804072,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwNDA3Mg==",
      "diff_hunk": "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());\n+        vchRet.push_back(m_addr[i] | ((1 << (8 - nBits)) - 1));\n+    }\n \n     return vchRet;\n }\n \n+std::vector<unsigned char> CNetAddr::GetAddrBytes() const\n+{\n+    uint8_t serialized[V1_SERIALIZATION_SIZE];\n+    SerializeV1Array(serialized);\n+    return {std::begin(serialized), std::end(serialized)};\n+}\n+\n uint64_t CNetAddr::GetHash() const\n {\n-    uint256 hash = Hash(ip);\n+    uint256 hash = Hash(m_addr);",
      "path": "src/netaddress.cpp",
      "position": 571,
      "original_position": 551,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474284346,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The hashing (in RelayAddress) is actually salted by a value that's randomly generated at startup (through `CConnman::GetDeterministicRandomizer`), so it will in fact always be different after restart.\r\n\r\nYou could add a comment in the commit description, but I don't think it needs more exposure than that.",
      "created_at": "2020-08-21T16:31:49Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474804072",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474804072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 562,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474806190",
      "pull_request_review_id": 472633766,
      "id": 474806190,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwNjE5MA==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The current one doesn't compile either on gcc 4.8:\r\n\r\n```\r\nnetaddress.cpp: In member function ‘bool CNetAddr::IsRFC3927() const’:\r\n\r\nnetaddress.cpp:163:52: error: no matching function for call to ‘HasPrefix(const prevector<16u, unsigned char>&, <brace-enclosed initializer list>)’\r\n\r\n     return IsIPv4() && HasPrefix(m_addr, {169, 254});\r\n\r\n                                                    ^\r\n\r\nnetaddress.cpp:163:52: note: candidate is:\r\n\r\nnetaddress.cpp:52:13: note: template<class T1, class T2, unsigned int PREFIX_LEN> bool HasPrefix(const T1&, const T2 (&)[PREFIX_LEN])\r\n\r\n inline bool HasPrefix(const T1& obj, const T2 (&prefix)[PREFIX_LEN])\r\n\r\n             ^\r\n\r\nnetaddress.cpp:52:13: note:   template argument deduction/substitution failed:\r\n\r\nnetaddress.cpp:163:52: note:   couldn't deduce template parameter ‘T2’\r\n\r\n     return IsIPv4() && HasPrefix(m_addr, {169, 254});\r\n\r\n                                                    ^",
      "created_at": "2020-08-21T16:36:16Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474806190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474806190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474807667",
      "pull_request_review_id": 472635685,
      "id": 474807667,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwNzY2Nw==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@vasild Nice, that indeed works, and I don't see how that could work with `std::array` (the on-the-fly constructed array's length template parameter can't be figured out from the list of elements). It certainly can't work for `Span` as there needs to be some object that actually holds the elements.\r\n\r\n@elichai I guess you have an answer to the question you asked on IRC yesterday \"why would someone use a C-style array over std::array?\".",
      "created_at": "2020-08-21T16:39:25Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474807667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474807667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474873018",
      "pull_request_review_id": 472735584,
      "id": 474873018,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg3MzAxOA==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@vasild @MarcoFalke I think that can be fixed by removing the `T2` template parameter, and just hardcoding it to an array of `uint8_t` (but templated size).",
      "created_at": "2020-08-21T18:59:32Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474873018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/474873018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475208522",
      "pull_request_review_id": 473003821,
      "id": 475208522,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIwODUyMg==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa Yep, I guess C arrays are still treated quite differently than anything else (more like initilaizer_list etc) :(\r\n(interesting: https://stackoverflow.com/a/61390991/1621927)",
      "created_at": "2020-08-23T11:35:34Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475208522",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475208522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475547227",
      "pull_request_review_id": 473395706,
      "id": 475547227,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0NzIyNw==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think that can be fixed by removing the T2 template parameter, and just hardcoding it to an array of uint8_t\r\n\r\n> I think that can be fixed by removing the `T2` template parameter, and just hardcoding it to an array of `uint8_t` (but templated size).\r\n\r\nIt does not compile either because then gcc 4.8 complained it cannot deduce the length from the initialiser list, so I [switched](https://github.com/bitcoin/bitcoin/compare/f37cde9ad6764930c0fcfefb2139e6f07d6e4353..7c34237fba619667ed1d3981d3b564ad7c25077e) to `std::array` :-/",
      "created_at": "2020-08-24T11:57:56Z",
      "updated_at": "2020-08-24T19:52:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475547227",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475547227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475896917",
      "pull_request_review_id": 473860033,
      "id": 475896917,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5NjkxNw==",
      "diff_hunk": "@@ -135,6 +135,10 @@ Updated settings\n   in future releases. Refer to the help of the affected settings `-whitebind`\n   and `-whitelist` for more details. (#19191)\n \n+- Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on",
      "path": "doc/release-notes.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps point out where these are used. I think the `-rpcallowip` parameter, and the `setban` RPC are the only ones?",
      "created_at": "2020-08-24T21:11:58Z",
      "updated_at": "2020-08-24T21:11:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475896917",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475896917"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 138,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475907453",
      "pull_request_review_id": 473872852,
      "id": 475907453,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkwNzQ1Mw==",
      "diff_hunk": "@@ -272,13 +275,16 @@ bool CNetAddr::IsValid() const\n     // header20 vectorlen3 addr26 addr26 addr26 header20 vectorlen3 addr26 addr26 addr26...\n     // so if the first length field is garbled, it reads the second batch\n     // of addr misaligned by 3 bytes.\n-    if (IsIPv6() && memcmp(ip, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), IPV4_IN_IPV6_PREFIX.data() + 3,",
      "path": "src/netaddress.cpp",
      "position": 345,
      "original_position": 345,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not a comment on this PR (it makes sense to not change any further behavior), but 0.2.8 is over 10 years old now, and can't even communicate with current software due to the mandatory checksum change in 2012. It's probably fine to drop this code at some point.",
      "created_at": "2020-08-24T21:34:27Z",
      "updated_at": "2020-08-24T21:34:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475907453",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475907453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 278,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475958227",
      "pull_request_review_id": 473994391,
      "id": 475958227,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk1ODIyNw==",
      "diff_hunk": "@@ -537,23 +542,29 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         nBits = 32;\n     }\n \n-    // push our ip onto vchRet byte by byte...\n-    while (nBits >= 8)\n-    {\n-        vchRet.push_back(GetByte(15 - nStartByte));\n-        nStartByte++;\n-        nBits -= 8;\n-    }\n+    // Push our address onto vchRet.\n+    const size_t i = nBits >> 3;\n+    vchRet.insert(vchRet.end(), m_addr.begin(), m_addr.begin() + i);\n+    nBits &= 0x7;\n     // ...for the last byte, push nBits and for the rest of the byte push 1's\n-    if (nBits > 0)\n-        vchRet.push_back(GetByte(15 - nStartByte) | ((1 << (8 - nBits)) - 1));\n+    if (nBits > 0) {\n+        assert(i < m_addr.size());",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 534,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474280814,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/19628#discussion_r474617351\r\n\r\n> It is here because here we access `m_addr[i]`. I would normally use `m_addr.at(i)` if there is a chance it may get out of bounds and not write an explicit separate assert, but `prevector` does not have an `at()` method :/\r\n\r\nRight, but if you assume the assert is false and `num_bytes >= m_addr.size()`, then the expression a few lines earlier `m_addr.begin() + num_bytes` will read from uninitialized memory. So I'm saying it might make sense to move the assert earlier there. Not very important, though.\r\n",
      "created_at": "2020-08-24T23:28:35Z",
      "updated_at": "2020-08-24T23:28:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r475958227",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/475958227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 551,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476099559",
      "pull_request_review_id": 474102513,
      "id": 476099559,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA5OTU1OQ==",
      "diff_hunk": "@@ -135,6 +135,10 @@ Updated settings\n   in future releases. Refer to the help of the affected settings `-whitebind`\n   and `-whitelist` for more details. (#19191)\n \n+- Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on\n+  the left side, e.g. 255.0.255.255) are no longer accepted. They are invalid\n+  according to RFC 4632.",
      "path": "doc/release-notes.md",
      "position": 6,
      "original_position": 6,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Append \" (#19628)\"",
      "created_at": "2020-08-25T03:05:34Z",
      "updated_at": "2020-08-25T03:24:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476099559",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476099559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 140,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476120289",
      "pull_request_review_id": 474111640,
      "id": 476120289,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjEyMDI4OQ==",
      "diff_hunk": "@@ -3,79 +3,90 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <array>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T1, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T1& obj, const std::array<uint8_t, PREFIX_LEN>& prefix)",
      "path": "src/netaddress.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "μ-nit: not sure why this is `T1` and not simply `T`",
      "created_at": "2020-08-25T03:35:59Z",
      "updated_at": "2020-08-25T04:37:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476120289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476120289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476142475",
      "pull_request_review_id": 474111640,
      "id": 476142475,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE0MjQ3NQ==",
      "diff_hunk": "@@ -243,13 +244,15 @@ bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n-    if (IsIPv4() && (GetByte(3) == 127 || GetByte(3) == 0))\n+    if (IsIPv4() && (m_addr[0] == 127 || m_addr[0] == 0)) {\n         return true;\n+    }\n \n     // IPv6 loopback (::1/128)\n     static const unsigned char pchLocal[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\n-    if (IsIPv6() && memcmp(ip, pchLocal, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), pchLocal, sizeof(pchLocal)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": 334,
      "original_position": 334,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we for a brief moment pretended that `prevector.h:258` had this line added to it:\r\n```C++\r\n    static prevector from(std::initializer_list<T> il) { return prevector(il.begin(), il.end()); }\r\n```\r\n\r\nthen it would have been worth it to do:\r\n```C++\r\nstatic auto ipv6_loopback = prevector<16, uint8_t>::from({0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1});\r\nif (IsIPv6() && m_addr == ipv6_loopback) {\r\n```\r\n\r\nAlas, that prevector line would need to be added. Not sure it's worth it, or if it should be its own PR perhaps.\r\n\r\nEdit: I initially suggested doing an initializer list constructor, but that interferes e.g. with the 2 element constructor messing stuff up and being generally unpredictable. The above may be too messy to be warranted, but I'll leave it up anyway.",
      "created_at": "2020-08-25T04:08:47Z",
      "updated_at": "2020-08-25T04:55:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476142475",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476142475"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 253,
      "original_line": 253,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476159214",
      "pull_request_review_id": 474111640,
      "id": 476159214,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE1OTIxNA==",
      "diff_hunk": "@@ -272,13 +275,16 @@ bool CNetAddr::IsValid() const\n     // header20 vectorlen3 addr26 addr26 addr26 header20 vectorlen3 addr26 addr26 addr26...\n     // so if the first length field is garbled, it reads the second batch\n     // of addr misaligned by 3 bytes.\n-    if (IsIPv6() && memcmp(ip, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), IPV4_IN_IPV6_PREFIX.data() + 3,\n+                           sizeof(IPV4_IN_IPV6_PREFIX) - 3) == 0) {\n         return false;\n+    }\n \n     // unspecified IPv6 address (::/128)\n     unsigned char ipNone6[16] = {};\n-    if (IsIPv6() && memcmp(ip, ipNone6, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), ipNone6, sizeof(ipNone6)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": 353,
      "original_position": 353,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This could be\r\n```C++\r\n    static prevector<ADDR_IPV6_SIZE, uint8_t> ipNone6{ADDR_IPV6_SIZE, 0x0};\r\n    if (IsIPv6() && m_addr == ipNone6) {\r\n```",
      "created_at": "2020-08-25T04:32:14Z",
      "updated_at": "2020-08-26T01:29:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476159214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476159214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 285,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476349844",
      "pull_request_review_id": 474351876,
      "id": 476349844,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM0OTg0NA==",
      "diff_hunk": "@@ -3,64 +3,88 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n+\n+#ifdef WIN32\n+#include <winsock.h> // htonl()\n+#else\n+#include <arpa/inet.h> // htonl()\n+#endif\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T& obj, const uint8_t (&prefix)[PREFIX_LEN])",
      "path": "src/netaddress.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "86b2397faedcd9b57649ddb90e98c8cf6a4a6ad3",
      "in_reply_to_id": 474194069,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This ended up with `const std::array<uint8_t, N>&` anyway, due to GCC 4.8. Will change it back to reference to an array once the support for GCC 4.8 is removed.",
      "created_at": "2020-08-25T10:37:11Z",
      "updated_at": "2020-08-25T10:37:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476349844",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476349844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476351352",
      "pull_request_review_id": 474353830,
      "id": 476351352,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1MTM1Mg==",
      "diff_hunk": "@@ -135,6 +135,10 @@ Updated settings\n   in future releases. Refer to the help of the affected settings `-whitebind`\n   and `-whitelist` for more details. (#19191)\n \n+- Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on",
      "path": "doc/release-notes.md",
      "position": 4,
      "original_position": 4,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "1ea57ad67406b3aaaef5254bc2fa7e4134f3a6df",
      "in_reply_to_id": 475896917,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will do so in a followup.",
      "created_at": "2020-08-25T10:40:15Z",
      "updated_at": "2020-08-25T10:40:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476351352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476351352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 138,
      "original_line": 138,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476352324",
      "pull_request_review_id": 474355030,
      "id": 476352324,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1MjMyNA==",
      "diff_hunk": "@@ -135,6 +135,10 @@ Updated settings\n   in future releases. Refer to the help of the affected settings `-whitebind`\n   and `-whitelist` for more details. (#19191)\n \n+- Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on\n+  the left side, e.g. 255.0.255.255) are no longer accepted. They are invalid\n+  according to RFC 4632.",
      "path": "doc/release-notes.md",
      "position": 6,
      "original_position": 6,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": 476099559,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will do so in a followup, to keep the current ACKs.",
      "created_at": "2020-08-25T10:42:11Z",
      "updated_at": "2020-08-25T10:42:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476352324",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476352324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 140,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476355204",
      "pull_request_review_id": 474358846,
      "id": 476355204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NTIwNA==",
      "diff_hunk": "@@ -3,79 +3,90 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include <cstdint>\n #include <netaddress.h>\n #include <hash.h>\n #include <util/strencodings.h>\n #include <util/asmap.h>\n #include <tinyformat.h>\n \n-static const unsigned char pchIPv4[12] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff };\n-static const unsigned char pchOnionCat[] = {0xFD,0x87,0xD8,0x7E,0xEB,0x43};\n+#include <algorithm>\n+#include <array>\n+#include <cstdint>\n+#include <iterator>\n+#include <tuple>\n \n-// 0xFD + sha256(\"bitcoin\")[0:5]\n-static const unsigned char g_internal_prefix[] = { 0xFD, 0x6B, 0x88, 0xC0, 0x87, 0x24 };\n+constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n  *\n  * @note This address is considered invalid by CNetAddr::IsValid()\n  */\n-CNetAddr::CNetAddr()\n-{\n-    memset(ip, 0, sizeof(ip));\n-}\n+CNetAddr::CNetAddr() {}\n \n void CNetAddr::SetIP(const CNetAddr& ipIn)\n {\n+    // Size check.\n+    switch (ipIn.m_net) {\n+    case NET_IPV4:\n+        assert(ipIn.m_addr.size() == ADDR_IPV4_SIZE);\n+        break;\n+    case NET_IPV6:\n+        assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n+        break;\n+    case NET_ONION:\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        break;\n+    case NET_INTERNAL:\n+        assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n+        break;\n+    case NET_UNROUTABLE:\n+    case NET_MAX:\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n     m_net = ipIn.m_net;\n-    memcpy(ip, ipIn.ip, sizeof(ip));\n+    m_addr = ipIn.m_addr;\n }\n \n-void CNetAddr::SetLegacyIPv6(const uint8_t ipv6[16])\n+template <typename T1, size_t PREFIX_LEN>\n+inline bool HasPrefix(const T1& obj, const std::array<uint8_t, PREFIX_LEN>& prefix)",
      "path": "src/netaddress.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": 476120289,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was `T` initially, then was changed to `T1` and `T2`, then I dropped the second one but forgot to rename `T1` to `T`. Will take are about it when touching this after GCC 4.8 is no longer supported.",
      "created_at": "2020-08-25T10:48:03Z",
      "updated_at": "2020-08-25T10:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476355204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476355204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 53,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476357492",
      "pull_request_review_id": 474361971,
      "id": 476357492,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM1NzQ5Mg==",
      "diff_hunk": "@@ -243,13 +244,15 @@ bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n-    if (IsIPv4() && (GetByte(3) == 127 || GetByte(3) == 0))\n+    if (IsIPv4() && (m_addr[0] == 127 || m_addr[0] == 0)) {\n         return true;\n+    }\n \n     // IPv6 loopback (::1/128)\n     static const unsigned char pchLocal[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\n-    if (IsIPv6() && memcmp(ip, pchLocal, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), pchLocal, sizeof(pchLocal)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": 334,
      "original_position": 334,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": 476142475,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it is also important to not deviate from `std::vector` interface so that it is not too much hassle should one decide to swap `prevector` for `std::vector` or the other way around.\r\n\r\nBtw, `std::vector` has an initializer list constructor.\r\n\r\nAnyway - leaving this as is.",
      "created_at": "2020-08-25T10:52:43Z",
      "updated_at": "2020-08-25T10:52:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476357492",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476357492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 253,
      "original_line": 253,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476360663",
      "pull_request_review_id": 474366134,
      "id": 476360663,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM2MDY2Mw==",
      "diff_hunk": "@@ -272,13 +275,16 @@ bool CNetAddr::IsValid() const\n     // header20 vectorlen3 addr26 addr26 addr26 header20 vectorlen3 addr26 addr26 addr26...\n     // so if the first length field is garbled, it reads the second batch\n     // of addr misaligned by 3 bytes.\n-    if (IsIPv6() && memcmp(ip, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), IPV4_IN_IPV6_PREFIX.data() + 3,\n+                           sizeof(IPV4_IN_IPV6_PREFIX) - 3) == 0) {\n         return false;\n+    }\n \n     // unspecified IPv6 address (::/128)\n     unsigned char ipNone6[16] = {};\n-    if (IsIPv6() && memcmp(ip, ipNone6, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), ipNone6, sizeof(ipNone6)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": 353,
      "original_position": 353,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": 476159214,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right! I will apply it if I modify this PR.\r\n\r\n`ADDR_IPV6_SIZE` is of type `size_t`, the typecast should not be needed?",
      "created_at": "2020-08-25T10:58:57Z",
      "updated_at": "2020-08-25T10:58:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476360663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476360663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 285,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476951941",
      "pull_request_review_id": 475089674,
      "id": 476951941,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njk1MTk0MQ==",
      "diff_hunk": "@@ -272,13 +275,16 @@ bool CNetAddr::IsValid() const\n     // header20 vectorlen3 addr26 addr26 addr26 header20 vectorlen3 addr26 addr26 addr26...\n     // so if the first length field is garbled, it reads the second batch\n     // of addr misaligned by 3 bytes.\n-    if (IsIPv6() && memcmp(ip, pchIPv4+3, sizeof(pchIPv4)-3) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), IPV4_IN_IPV6_PREFIX.data() + 3,\n+                           sizeof(IPV4_IN_IPV6_PREFIX) - 3) == 0) {\n         return false;\n+    }\n \n     // unspecified IPv6 address (::/128)\n     unsigned char ipNone6[16] = {};\n-    if (IsIPv6() && memcmp(ip, ipNone6, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), ipNone6, sizeof(ipNone6)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": 353,
      "original_position": 353,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": 476159214,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, I had originally put 16 there but realized `ADDR_IPV6_SIZE` was better.",
      "created_at": "2020-08-26T01:28:59Z",
      "updated_at": "2020-08-26T01:28:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476951941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476951941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 285,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476954228",
      "pull_request_review_id": 475090634,
      "id": 476954228,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njk1NDIyOA==",
      "diff_hunk": "@@ -243,13 +244,15 @@ bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n-    if (IsIPv4() && (GetByte(3) == 127 || GetByte(3) == 0))\n+    if (IsIPv4() && (m_addr[0] == 127 || m_addr[0] == 0)) {\n         return true;\n+    }\n \n     // IPv6 loopback (::1/128)\n     static const unsigned char pchLocal[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\n-    if (IsIPv6() && memcmp(ip, pchLocal, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), pchLocal, sizeof(pchLocal)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": 334,
      "original_position": 334,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": 476142475,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it may be that my lines below (the `ipNode6`) were in fact invalid, and were the cause for the errors I saw when I did this as a prevector constructor, where I didn't initially cast 16 to `size_t` in `ipNone6{16, 0x0}`. I much prefer the constructor variant, which is also closer to `std::vector`. FTR, that was\r\n\r\n```C++\r\nprevector(std::initializer_list<T> il) : prevector(il.begin(), il.end()) {}\r\n```\r\nand the line here beomes\r\n```C++\r\nstatic prevector<ADDR_IPV6_SIZE, uint8_t> ipv6_loopback{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\r\n```\r\n",
      "created_at": "2020-08-26T01:32:20Z",
      "updated_at": "2020-08-26T01:32:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r476954228",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/476954228"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 253,
      "original_line": 253,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477113271",
      "pull_request_review_id": 475249488,
      "id": 477113271,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzExMzI3MQ==",
      "diff_hunk": "@@ -243,13 +244,15 @@ bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n-    if (IsIPv4() && (GetByte(3) == 127 || GetByte(3) == 0))\n+    if (IsIPv4() && (m_addr[0] == 127 || m_addr[0] == 0)) {\n         return true;\n+    }\n \n     // IPv6 loopback (::1/128)\n     static const unsigned char pchLocal[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1};\n-    if (IsIPv6() && memcmp(ip, pchLocal, 16) == 0)\n+    if (IsIPv6() && memcmp(m_addr.data(), pchLocal, sizeof(pchLocal)) == 0) {",
      "path": "src/netaddress.cpp",
      "position": 334,
      "original_position": 334,
      "commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "original_commit_id": "102867c587f5f7954232fb8ed8e85cda78bb4d32",
      "in_reply_to_id": 476142475,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I wonder if we can avoid defining a local variable for IPv6 loopback address and use `IN6ADDR_LOOPBACK_INIT` or `in6addr_loopback`...",
      "created_at": "2020-08-26T08:07:18Z",
      "updated_at": "2020-08-26T08:07:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/19628#discussion_r477113271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/477113271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19628"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 253,
      "original_line": 253,
      "side": "RIGHT"
    }
  ]
}