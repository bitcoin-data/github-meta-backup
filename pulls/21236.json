{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236",
    "id": 576444949,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTc2NDQ0OTQ5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21236",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21236.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21236.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/935d4889228e7e361c8b0020761fa0e08a55fb48",
    "number": 21236,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "net processing: Extract `addr` send functionality into MaybeSendAddr()",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This continues the work of moving application layer data into net_processing. It refactors `addr` send functionality into its own function `MaybeSendAddr()` and flattens/simplifies the code. Isolating and simplifying the addr handling code makes subsequent changes (which will move addr data and logic into net processing) easier to review.\r\n\r\nThis is a pure refactor. There are no functional changes.\r\n\r\nFor motivation of the project, see #19398.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2021-02-19T13:06:04Z",
    "updated_at": "2022-08-16T17:07:14Z",
    "closed_at": "2021-04-01T06:33:38Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-04-01T06:33:38Z",
    "merge_commit_sha": "539e4eec63fa5cbc525343c33c40c43f7b48cb6a",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "jnewbery:2021-02-maybe-send-addr",
      "ref": "2021-02-maybe-send-addr",
      "sha": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 68248485,
        "node_id": "MDEwOlJlcG9zaXRvcnk2ODI0ODQ4NQ==",
        "name": "bitcoin",
        "full_name": "jnewbery/bitcoin",
        "owner": {
          "login": "jnewbery",
          "id": 1063656,
          "node_id": "MDQ6VXNlcjEwNjM2NTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jnewbery",
          "html_url": "https://github.com/jnewbery",
          "followers_url": "https://api.github.com/users/jnewbery/followers",
          "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
          "organizations_url": "https://api.github.com/users/jnewbery/orgs",
          "repos_url": "https://api.github.com/users/jnewbery/repos",
          "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jnewbery/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jnewbery/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jnewbery/bitcoin",
        "archive_url": "https://api.github.com/repos/jnewbery/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jnewbery/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jnewbery/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jnewbery/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jnewbery/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jnewbery/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jnewbery/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jnewbery/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jnewbery/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jnewbery/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jnewbery/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jnewbery/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jnewbery/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jnewbery/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jnewbery/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jnewbery/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jnewbery/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jnewbery/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jnewbery/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jnewbery/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jnewbery/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jnewbery/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jnewbery/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jnewbery/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jnewbery/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jnewbery/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jnewbery/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jnewbery/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jnewbery/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jnewbery/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jnewbery/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jnewbery/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jnewbery/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jnewbery/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jnewbery/bitcoin/hooks",
        "svn_url": "https://github.com/jnewbery/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 219109,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-21T11:07:55Z",
        "created_at": "2016-09-14T22:29:05Z",
        "updated_at": "2021-07-06T16:23:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b14462083f82aeaa9a376978f210db5538db296f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 87,
    "deletions": 75,
    "changed_files": 2,
    "commits": 7,
    "review_comments": 52,
    "comments": 18
  },
  "events": [
    {
      "event": "labeled",
      "id": 4352061749,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQzNTIwNjE3NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4352061749",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-19T13:08:20Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4352105372,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM1MjEwNTM3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4352105372",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-19T13:19:02Z"
    },
    {
      "event": "reviewed",
      "id": 594182306,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MTgyMzA2",
      "url": null,
      "actor": null,
      "commit_id": "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-594182306",
      "submitted_at": "2021-02-19T13:23:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "commented",
      "id": 782102826,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MjEwMjgyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/782102826",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-19T14:17:28Z",
      "updated_at": "2021-03-30T14:50:50Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21528 ([p2p] Reduce addr blackholes by amitiuttarwar)\n* #21515 (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n* #21198 (net: Address outstanding review comments from PR20721 by jnewbery)\n* #21160 (net/net processing: Move tx inventory into net_processing by jnewbery)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-782102826",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4352535854,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM1MjUzNTg1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4352535854",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-19T14:53:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4358381229,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM1ODM4MTIyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4358381229",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-22T08:46:38Z"
    },
    {
      "event": "commented",
      "id": 783203779,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzIwMzc3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783203779",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-22T08:46:46Z",
      "updated_at": "2021-02-22T08:46:46Z",
      "author_association": "MEMBER",
      "body": "Rebased on master to pick up fix for interface_zmq.py in #21008.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-783203779",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "reviewed",
      "id": 599796777,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5Nzk2Nzc3",
      "url": null,
      "actor": null,
      "commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Haven't thoroughly reviewed the \"Refactor MaybeSendAddr\" commit; seems like separating it into three or four commits would be clearer (early exit; invariants; skip vAddr check; one-pass erase)?",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-599796777",
      "submitted_at": "2021-02-26T18:57:15Z",
      "state": "DISMISSED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4385979866,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM4NTk3OTg2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4385979866",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-28T11:41:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4385988619,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM4NTk4ODYxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4385988619",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-28T11:52:13Z"
    },
    {
      "event": "commented",
      "id": 787440104,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzQ0MDEwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787440104",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-28T11:52:28Z",
      "updated_at": "2021-02-28T11:52:28Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @ajtowns. I've addressed your comments.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-787440104",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "mentioned",
      "id": 4385988849,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDM4NTk4ODg0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4385988849",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-28T11:52:29Z"
    },
    {
      "event": "subscribed",
      "id": 4385988850,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzODU5ODg4NTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4385988850",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-28T11:52:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4386474912,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM4NjQ3NDkxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4386474912",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-28T20:05:27Z"
    },
    {
      "event": "commented",
      "id": 787531613,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4NzUzMTYxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/787531613",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-28T22:05:15Z",
      "updated_at": "2021-02-28T22:05:15Z",
      "author_association": "MEMBER",
      "body": "Oops. I missed taking the new lock in one of the call sites. Will fix up tomorrow.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-787531613",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4388036536,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM4ODAzNjUzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4388036536",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-01T08:24:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4388185746,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM4ODE4NTc0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4388185746",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-01T08:52:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4388885035,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM4ODg4NTAzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4388885035",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-01T11:06:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4391070618,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM5MTA3MDYxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4391070618",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-01T17:56:26Z"
    },
    {
      "event": "commented",
      "id": 788149974,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODE0OTk3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788149974",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-01T18:00:02Z",
      "updated_at": "2021-03-01T18:00:02Z",
      "author_association": "MEMBER",
      "body": "Once all of the addr data has been moved into net_processing, I intend to guard it with a single lock (see the `m_addr_relay` struct in https://github.com/jnewbery/bitcoin/tree/2021-02-lazy-init-peer). However, it's proving difficult to get lock orders right while the data is still in net. I've decided to punt on doing that until after this PR.\r\n\r\nTo avoid simply removing the guard from `m_next_addr_send` and `m_next_local_addr_send`, I've introduced the new `m_addr_mutex` lock in this PR. Once the data is moved into `Peer`, I'll extend that mutex to guard the remaining addr data.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-788149974",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4395321466,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM5NTMyMTQ2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4395321466",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-02T11:34:32Z"
    },
    {
      "event": "reviewed",
      "id": 602558406,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAyNTU4NDA2",
      "url": null,
      "actor": null,
      "commit_id": "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK - this seems like a fairly good simplification. I like consolidating logic and returning early when possible. If this SendMessages() logic is going to be split up even more, you could consider a call to GetTime<>() at the start, and just pass that into `MaybeSendPing`, `MaybeSendAddr`, `MaybeSomeOtherFunc`  etc.\r\n\r\nThis doesn't currently compile:\r\n```bash\r\nnet_processing.cpp:4408:91: error: no member named 'm_addr_mutex' in 'CNode'\r\n    auto addr_already_known = [&node](const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(node.m_addr_mutex)\r\n                                                                                     ~~~~ ^\r\n./threadsafety.h:31:79: note: expanded from macro 'EXCLUSIVE_LOCKS_REQUIRED'\r\n#define EXCLUSIVE_LOCKS_REQUIRED(...) __attribute__((exclusive_locks_required(__VA_ARGS__)))\r\n                                                                              ^~~~~~~~~~~\r\n1 error generated.\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-602558406",
      "submitted_at": "2021-03-03T07:00:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4400524466,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwMDUyNDQ2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4400524466",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T09:03:29Z"
    },
    {
      "event": "commented",
      "id": 789555842,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTU1NTg0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789555842",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T09:04:16Z",
      "updated_at": "2021-03-03T09:04:16Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review, @fanquake! The compile error was due to an annotation that I'd left from a previous branch. It's now fixed.\r\n\r\n> If this SendMessages() logic is going to be split up even more, you could consider a call to GetTime<>() at the start, and just pass that into MaybeSendPing, MaybeSendAddr, MaybeSomeOtherFunc etc.\r\n\r\nGood idea. Done!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-789555842",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "mentioned",
      "id": 4400529475,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQwMDUyOTQ3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4400529475",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T09:04:16Z"
    },
    {
      "event": "subscribed",
      "id": 4400529482,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MDA1Mjk0ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4400529482",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T09:04:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4400537368,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwMDUzNzM2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4400537368",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T09:05:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4404685191,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwNDY4NTE5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4404685191",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T22:47:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4404737754,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwNDczNzc1NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4404737754",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T23:03:39Z"
    },
    {
      "event": "reviewed",
      "id": 603469123,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAzNDY5MTIz",
      "url": null,
      "actor": null,
      "commit_id": "86087474a21c730edeaa6fc2bf102d1a3d11acfc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "approach ACK\r\n\r\nI have some more things to think about / investigate (namely the lock changes & the `vAddrToSend` size assertion) , but left a few comments in my first pass.",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-603469123",
      "submitted_at": "2021-03-04T01:08:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "review_requested",
      "id": 4405180345,
      "node_id": "MDIwOlJldmlld1JlcXVlc3RlZEV2ZW50NDQwNTE4MDM0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4405180345",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T01:17:45Z",
      "requested_reviewer": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_dismissed",
      "id": 4405183255,
      "node_id": "MDIwOlJldmlld0Rpc21pc3NlZEV2ZW50NDQwNTE4MzI1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4405183255",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T01:18:53Z",
      "dismissed_review": {
        "state": "CHANGES_REQUESTED",
        "review_id": 599796777,
        "dismissal_message": "changes made",
        "dismissal_commit_id": null
      }
    },
    {
      "event": "reviewed",
      "id": 603700421,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAzNzAwNDIx",
      "url": null,
      "actor": null,
      "commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-603700421",
      "submitted_at": "2021-03-04T04:46:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4407140973,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwNzE0MDk3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4407140973",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T10:09:45Z"
    },
    {
      "event": "commented",
      "id": 790497523,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDQ5NzUyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/790497523",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T10:09:51Z",
      "updated_at": "2021-03-04T10:09:51Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @amitiuttarwar! I've addressed all of your comments.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-790497523",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "mentioned",
      "id": 4407141443,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQwNzE0MTQ0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4407141443",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T10:09:51Z"
    },
    {
      "event": "subscribed",
      "id": 4407141448,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MDcxNDE0NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4407141448",
      "actor": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T10:09:51Z"
    },
    {
      "event": "labeled",
      "id": 4408275374,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0MDgyNzUzNzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4408275374",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:11:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 790655465,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDY1NTQ2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/790655465",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:26:04Z",
      "updated_at": "2021-03-04T14:26:04Z",
      "author_association": "MEMBER",
      "body": "Rebased",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-790655465",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4408354623,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwODM1NDYyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4408354623",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:26:12Z"
    },
    {
      "event": "unlabeled",
      "id": 4408980263,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQwODk4MDI2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4408980263",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T16:16:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 605682022,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NjgyMDIy",
      "url": null,
      "actor": null,
      "commit_id": "151597e19ba3dd662c25ea37f957f5ceddc95aec",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "code review ACK 151597e19b\r\n\r\na couple review notes\r\n- I liked the use of the erase-remove idiom, my understanding of the changes: we no longer copy all the elements of `vAddrToSend` and instead are able to edit in place with linear complexity by using this pattern. I think we now traverse the vector 2x instead of 1x, but that seems fine. I also find the logic flow much easier to understand, esp with removing the unused logic to handle >1000 addrs queued. \r\n- the biggest change seems to be breaking this `addr` functionality out of `cs_main`. I spent some time checking if this is safe. to do so, I checked that all of the state touched either takes `cs_main` itself, is protected by a more specific lock, or only accessed from the message handler thread (eg. `m_addr_known`, `vAddrToSend`, `GetLocalAddrForPeer`..) \r\n\r\n~The only touchpoint I'm unsure about is the call to `fRelay` [here](https://github.com/bitcoin/bitcoin/blob/master/src/qt/optionsmodel.cpp#L499), I'm not very familiar with the qt code so I'm not 100% sure how this interacts with the rest. I think it's ok, but just wanted to explicitly call out the gap in my understanding.~ ",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-605682022",
      "submitted_at": "2021-03-06T01:45:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4417024827,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQxNzAyNDgyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4417024827",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T16:16:26Z"
    },
    {
      "event": "commented",
      "id": 791980714,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTk4MDcxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791980714",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T16:17:42Z",
      "updated_at": "2021-03-06T16:17:42Z",
      "author_association": "MEMBER",
      "body": "> The only touchpoint I'm unsure about is the call to fRelay here\r\n\r\nI'm not sure what this is referring to. I don't see `fRelay` in that file at all.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-791980714",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4417047311,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQxNzA0NzMxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4417047311",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T16:41:16Z"
    },
    {
      "event": "commented",
      "id": 791986604,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTk4NjYwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791986604",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T16:42:08Z",
      "updated_at": "2021-03-06T16:42:08Z",
      "author_association": "MEMBER",
      "body": "> I think we now traverse the vector 2x instead of 1x, but that seems fine.\r\n\r\nI've changed this so we both check for the addr in `node.m_addr_known` and add it to `node.m_addr_known` in the same pass.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-791986604",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "comment_deleted",
      "id": 4417285867,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQ0NDE3Mjg1ODY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4417285867",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-06T21:03:22Z"
    },
    {
      "event": "reviewed",
      "id": 605889505,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1ODg5NTA1",
      "url": null,
      "actor": null,
      "commit_id": "c3b424d98f41ad219c1656b52bbfd02e046bc970",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": ">> The only touchpoint I'm unsure about is the call to fRelay here\r\n\r\n> I'm not sure what this is referring to. I don't see fRelay in that file at all.\r\n\r\noops, I'm not sure what I was referring to either 😳 \r\nI've re-checked all the `fRelay` touch points and am now comfortable with pulling it out of `cs_main`. \r\n\r\nreACK c3b424d98f",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-605889505",
      "submitted_at": "2021-03-07T21:56:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "labeled",
      "id": 4444535039,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NDQ1MzUwMzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4444535039",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T12:46:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 796754661,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5Njc1NDY2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/796754661",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T13:58:35Z",
      "updated_at": "2021-03-11T13:58:35Z",
      "author_association": "MEMBER",
      "body": "Rebased",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-796754661",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4445032725,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ0NTAzMjcyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4445032725",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T13:58:42Z"
    },
    {
      "event": "unlabeled",
      "id": 4445464719,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ0NTQ2NDcxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4445464719",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T14:55:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 4470003013,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NzAwMDMwMTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4470003013",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T12:44:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4470193314,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQ3MDE5MzMxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4470193314",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T13:21:30Z"
    },
    {
      "event": "commented",
      "id": 801124033,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTEyNDAzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/801124033",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T14:25:32Z",
      "updated_at": "2021-03-17T14:25:32Z",
      "author_association": "MEMBER",
      "body": "rebased",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-801124033",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "unlabeled",
      "id": 4470719865,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDQ3MDcxOTg2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4470719865",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-17T14:49:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 614673237,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0NjczMjM3",
      "url": null,
      "actor": null,
      "commit_id": "e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "reACK e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff, rebased chainman & std::optional changes since last round.",
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-614673237",
      "submitted_at": "2021-03-17T18:46:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "commented",
      "id": 808217285,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwODIxNzI4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/808217285",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-26T13:26:34Z",
      "updated_at": "2021-03-26T13:26:34Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-808217285",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "reviewed",
      "id": 622243213,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyMjQzMjEz",
      "url": null,
      "actor": null,
      "commit_id": "e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff, ~need more time to think about the last commit~.\r\n\r\n1. The message of the commit \"[net processing] Only call GetTime() once in SendMessages()\" (461dda316aefa4f792350a82ca2fb8c6daf8cca1) states:\r\n> We currently call GetTime() 3 times in SendMessages(). Consolidate this to\r\nonce GetTime() call.\r\n\r\nI see two calls of three are consolidated. What about the third one:\r\nhttps://github.com/bitcoin/bitcoin/blob/e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff/src/net_processing.cpp#L4513?\r\n\r\nAlso I believe that this commit is not a clean refactoring. To be precise, change behavior could be expected as even `LOCK(cs_main);` could take unpredictable time. But the scale of such changes seems insignificant to P2P, right?\r\n\r\n2. The commit \"[net processing] Extract `addr` send functionality into MaybeSendAddr()\" (97e101345e6b838a5dd308a6adafea53eb14d521) allows to localize acquiring of the `CNode::cs_sendProcessing` mutex:\r\n```diff\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -2164,10 +2164,7 @@ void CConnman::ThreadMessageHandler()\r\n             if (flagInterruptMsgProc)\r\n                 return;\r\n             // Send messages\r\n-            {\r\n-                LOCK(pnode->cs_sendProcessing);\r\n-                m_msgproc->SendMessages(pnode);\r\n-            }\r\n+            m_msgproc->SendMessages(pnode);\r\n \r\n             if (flagInterruptMsgProc)\r\n                 return;\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 48d37084a..300c9fffe 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -419,7 +419,7 @@ public:\r\n     std::list<CNetMessage> vProcessMsg GUARDED_BY(cs_vProcessMsg);\r\n     size_t nProcessQueueSize{0};\r\n \r\n-    RecursiveMutex cs_sendProcessing;\r\n+    Mutex cs_sendProcessing;\r\n \r\n     uint64_t nRecvBytes GUARDED_BY(cs_vRecv){0};\r\n \r\n@@ -787,7 +787,7 @@ public:\r\n     * @param[in]   pnode           The node which we are sending messages to.\r\n     * @return                      True if there is more work to be done\r\n     */\r\n-    virtual bool SendMessages(CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(pnode->cs_sendProcessing) = 0;\r\n+    virtual bool SendMessages(CNode* pnode) = 0;\r\n \r\n \r\n protected:\r\ndiff --git a/src/net_processing.cpp b/src/net_processing.cpp\r\nindex 8b13a859c..b7c6a08ea 100644\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -241,7 +241,7 @@ public:\r\n     void InitializeNode(CNode* pnode) override;\r\n     void FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) override;\r\n     bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\r\n-    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\r\n+    bool SendMessages(CNode* pto) override;\r\n \r\n     /** Implement PeerManager */\r\n     void CheckForStaleTipAndEvictPeers() override;\r\n@@ -323,7 +323,7 @@ private:\r\n     void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);\r\n \r\n     /** Send `addr` messages on a regular schedule. */\r\n-    void MaybeSendAddr(CNode& node, std::chrono::microseconds current_time) EXCLUSIVE_LOCKS_REQUIRED(node.cs_sendProcessing);\r\n+    void MaybeSendAddr(CNode& node, std::chrono::microseconds current_time);\r\n \r\n     const CChainParams& m_chainparams;\r\n     CConnman& m_connman;\r\n@@ -4160,7 +4160,7 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\r\n \r\n void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds current_time)\r\n {\r\n-    AssertLockHeld(node.cs_sendProcessing);\r\n+    LOCK(node.cs_sendProcessing);\r\n \r\n     // Nothing to do for non-address-relay peers\r\n     if (!node.RelayAddrsWithConn()) return;\r\n```\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-622243213",
      "submitted_at": "2021-03-26T15:04:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "reviewed",
      "id": 622345585,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyMzQ1NTg1",
      "url": null,
      "actor": null,
      "commit_id": "e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-622345585",
      "submitted_at": "2021-03-26T16:44:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "reviewed",
      "id": 622751108,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIyNzUxMTA4",
      "url": null,
      "actor": null,
      "commit_id": "461dda316aefa4f792350a82ca2fb8c6daf8cca1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-622751108",
      "submitted_at": "2021-03-28T14:04:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDJmYTQ3YmFhNTE3ZTE3YjVjNDNiZGUzOTAyYjFlNDEwYzFiOTNm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c02fa47baa517e17b5c43bde3902b1e410c1b93f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c02fa47baa517e17b5c43bde3902b1e410c1b93f",
      "tree": {
        "sha": "0d6920d08100011e4aadb178d28cd6cba5719a23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d6920d08100011e4aadb178d28cd6cba5719a23"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bcd278aa60adf925218a1d59506d525ae639bb3",
          "sha": "3bcd278aa60adf925218a1d59506d525ae639bb3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3bcd278aa60adf925218a1d59506d525ae639bb3"
        }
      ],
      "message": "[net processing] Only call GetTime() once in SendMessages()\n\nWe currently call GetTime() 4 times in SendMessages(). Consolidate this to\nonce GetTime() call.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-29T11:15:23Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-03T08:46:55Z"
      },
      "sha": "c02fa47baa517e17b5c43bde3902b1e410c1b93f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YWQ0YWJjZjA3ZWZlZmFmZDQzOWIyODY3OWRmZjhkNmJiZjYyOTQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ad4abcf07efefafd439b28679dff8d6bbf62943",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4ad4abcf07efefafd439b28679dff8d6bbf62943",
      "tree": {
        "sha": "849b342a78caddc23bce900179e4193348c73965",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/849b342a78caddc23bce900179e4193348c73965"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c02fa47baa517e17b5c43bde3902b1e410c1b93f",
          "sha": "c02fa47baa517e17b5c43bde3902b1e410c1b93f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c02fa47baa517e17b5c43bde3902b1e410c1b93f"
        }
      ],
      "message": "[net] Change addr send times fields to be guarded by new mutex",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-29T11:15:23Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-29T10:36:19Z"
      },
      "sha": "4ad4abcf07efefafd439b28679dff8d6bbf62943"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDcxOTI5N2YyZWNkZDIzOTRlZmY2NjhiM2JlNzA3MGJjOWNiM2Uy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad719297f2ecdd2394eff668b3be7070bc9cb3e2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad719297f2ecdd2394eff668b3be7070bc9cb3e2",
      "tree": {
        "sha": "1956802a26e43cb2195639633e36c5e17b52d46e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1956802a26e43cb2195639633e36c5e17b52d46e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ad4abcf07efefafd439b28679dff8d6bbf62943",
          "sha": "4ad4abcf07efefafd439b28679dff8d6bbf62943",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4ad4abcf07efefafd439b28679dff8d6bbf62943"
        }
      ],
      "message": "[net processing] Extract `addr` send functionality into MaybeSendAddr()\n\nReviewer hint: review with\n\n `git diff --color-moved=dimmed-zebra --ignore-all-space`",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-29T11:15:23Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-09T09:51:20Z"
      },
      "sha": "ad719297f2ecdd2394eff668b3be7070bc9cb3e2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODc0MjNjNThiNTE2NWRlODM1YTQ5YmViZDU2NjUzOGE3MGMwN2Fi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c87423c58b5165de835a49bebd566538a70c07ab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c87423c58b5165de835a49bebd566538a70c07ab",
      "tree": {
        "sha": "70401ef878db943d5004067ef6ac605ed3819ec9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/70401ef878db943d5004067ef6ac605ed3819ec9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad719297f2ecdd2394eff668b3be7070bc9cb3e2",
          "sha": "ad719297f2ecdd2394eff668b3be7070bc9cb3e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad719297f2ecdd2394eff668b3be7070bc9cb3e2"
        }
      ],
      "message": "[net processing] Change MaybeSendAddr() to take a reference\n\nChange name of CNode parameter to node now that it's no longer a\npointer.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-29T11:15:23Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-12-23T10:01:18Z"
      },
      "sha": "c87423c58b5165de835a49bebd566538a70c07ab"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGMwYmU1ZGEzYWYxNzIwOGIxNjVlNzNjZWU3NjEyZDM2NzBiMDM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38c0be5da3af17208b165e73cee7612d3670b038",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/38c0be5da3af17208b165e73cee7612d3670b038",
      "tree": {
        "sha": "b847f7d629bd1d07121ee54ebbefb0ca53b77c2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b847f7d629bd1d07121ee54ebbefb0ca53b77c2d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c87423c58b5165de835a49bebd566538a70c07ab",
          "sha": "c87423c58b5165de835a49bebd566538a70c07ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c87423c58b5165de835a49bebd566538a70c07ab"
        }
      ],
      "message": "[net processing] Refactor MaybeSendAddr() - early exits\n\nAdd early exit guard clauses if node.RelayAddrsWithConn() is false or if\ncurrent_time < node.m_next_addr_send. Add comments.\n\nThis commit leaves some lines over-indented. Those will be fixed in a\nsubsequent whitespace-only commit.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-29T11:15:23Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-28T11:16:52Z"
      },
      "sha": "38c0be5da3af17208b165e73cee7612d3670b038"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWE3OWZmOTI0YjExZjkxNzk2ZDRhYTYzYzU3MTg5N2IwNDdhYzdk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01a79ff924b11f91796d4aa63c571897b047ac7d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/01a79ff924b11f91796d4aa63c571897b047ac7d",
      "tree": {
        "sha": "8713e94bb237bf16fe959657fa036b246fc5beb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8713e94bb237bf16fe959657fa036b246fc5beb4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38c0be5da3af17208b165e73cee7612d3670b038",
          "sha": "38c0be5da3af17208b165e73cee7612d3670b038",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/38c0be5da3af17208b165e73cee7612d3670b038"
        }
      ],
      "message": "[net processing] Fix overindentation in MaybeSendAddr()\n\nReviewer hint: review with `git diff --ignore-all-space`.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-29T11:15:23Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-28T11:17:29Z"
      },
      "sha": "01a79ff924b11f91796d4aa63c571897b047ac7d"
    },
    {
      "event": "commented",
      "id": 809301197,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTMwMTE5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809301197",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T11:23:53Z",
      "updated_at": "2021-03-29T11:23:53Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @hebasto! Responding to your points:\r\n\r\n> I see two calls of three are consolidated. What about the third one [...]\r\n\r\nI was also counting the call inside `MaybeSendPing()`, which is called from `SendMessages()`. I've now removed the additional call to `GetTime()` as suggested, which required a duration cast.\r\n\r\n> I believe that this commit is not a clean refactoring. To be precise, change behavior could be expected as even LOCK(cs_main); could take unpredictable time. But the scale of such changes seems insignificant to P2P, right?\r\n\r\nGood observation! However, I think it's fine to treat time as constant within a call to `SendMessages()`, since it's observationally equivalent to any actors outside net_processing.\r\n\r\n> The commit \"[net processing] Extract addr send functionality into MaybeSendAddr()\" (97e1013) allows to localize acquiring of the CNode::cs_sendProcessing mutex\r\n\r\nThe fact that you've raised this independently has made me reconsider the discussion here https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583805388. It doesn't make sense for a mutex to  be guarding variables/functions across multiple layers, so I've moved the addr send time vars under their own mutex.\r\n\r\n> Early return skips\r\n> \r\n> ```\r\n>  // we only send the big addr message once \r\n>  if (node.vAddrToSend.capacity() > 40) { \r\n>      node.vAddrToSend.shrink_to_fit(); \r\n>  } \r\n> ```\r\n> \r\n> That differs from original behavior.\r\n\r\nAnother great observation! Although again, I don't think it matters. This logic is for when we've sent a response to the peer's `getaddr` message. In such cases, we'd expect to send up to 1000 addresses, and for the address filter to not yet be filled, so we wouldn't exit early.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-809301197",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "mentioned",
      "id": 4520934652,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDUyMDkzNDY1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4520934652",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T11:23:53Z"
    },
    {
      "event": "subscribed",
      "id": 4520934655,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ1MjA5MzQ2NTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4520934655",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T11:23:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4520937407,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDUyMDkzNzQwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4520937407",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T11:24:36Z"
    },
    {
      "event": "commented",
      "id": 809535865,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTUzNTg2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809535865",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T16:45:50Z",
      "updated_at": "2021-03-29T16:45:50Z",
      "author_association": "MEMBER",
      "body": "`RecursiveMutex cs_sendProcessing` guards nothing. Let's burn it :)",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-809535865",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "commented",
      "id": 809540053,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTU0MDA1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809540053",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T16:52:06Z",
      "updated_at": "2021-03-29T16:52:06Z",
      "author_association": "MEMBER",
      "body": "pico-nit: I find myself more comfortable to reason about the code when the same variable is placed on the same position in similar logical operations. Consider\r\nhttps://github.com/bitcoin/bitcoin/blob/b4d7d3def058e17d36cf7702e34c0a2fff45a5cf/src/net_processing.cpp#L4154-L4155 and https://github.com/bitcoin/bitcoin/blob/b4d7d3def058e17d36cf7702e34c0a2fff45a5cf/src/net_processing.cpp#L4173\r\n\r\nCould `current_time` position be consistent?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-809540053",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "commented",
      "id": 809557707,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTU1NzcwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/809557707",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-29T17:18:42Z",
      "updated_at": "2021-03-29T17:18:42Z",
      "author_association": "MEMBER",
      "body": "> pico-nit: I find myself more comfortable to reason about the code when the same variable is placed on the same position in similar logical operations.\r\n\r\nI tend to agree and think that generally the variable should be placed on the left and the thing it's being compared to on the right. Others disagreed with me on previous PRs and told me to always place the smaller thing on the left. I think it's just a matter of taste :shrug: ",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-809557707",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "renamed",
      "id": 4526764735,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50NDUyNjc2NDczNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4526764735",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-30T10:49:45Z",
      "rename": {
        "from": "Net processing: Extract `addr` send functionality into MaybeSendAddr()",
        "to": "net processing: Extract `addr` send functionality into MaybeSendAddr()"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzVkNDg4OTIyOGU3ZTM2MWM4YjAwMjA3NjFmYTBlMDhhNTVmYjQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/935d4889228e7e361c8b0020761fa0e08a55fb48",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/935d4889228e7e361c8b0020761fa0e08a55fb48",
      "tree": {
        "sha": "d6cf9be6e0b44be088a2ba3cda3cdbc07d423fd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6cf9be6e0b44be088a2ba3cda3cdbc07d423fd1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01a79ff924b11f91796d4aa63c571897b047ac7d",
          "sha": "01a79ff924b11f91796d4aa63c571897b047ac7d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/01a79ff924b11f91796d4aa63c571897b047ac7d"
        }
      ],
      "message": "[net processing] Refactor MaybeSendAddr()\n\nChanges to make MaybeSendAddr simpler and easier to maintain/update:\n\n- assert invariant that node.vAddrToSend.size() can never exceed\n  MAX_ADDR_TO_SEND\n- erase known addresses from vAddrToSend in one pass\n- no check for (vAddr.size() >= MAX_ADDR_TO_SEND) during iteration,\n  since vAddr can never exceed MAX_ADDR_TO_SEND.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-03-31T17:06:51Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-09T10:32:15Z"
      },
      "sha": "935d4889228e7e361c8b0020761fa0e08a55fb48"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4536086193,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDUzNjA4NjE5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4536086193",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-31T17:07:12Z"
    },
    {
      "event": "reviewed",
      "id": 625674817,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1Njc0ODE3",
      "url": null,
      "actor": null,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 935d4889228e7e361c8b0020761fa0e08a55fb48, I have reviewed the code and it looks OK, I agree it can be merged.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-625674817",
      "submitted_at": "2021-03-31T20:07:32Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "commented",
      "id": 811526436,
      "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTUyNjQzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/811526436",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-31T23:18:12Z",
      "updated_at": "2021-03-31T23:18:12Z",
      "author_association": "MEMBER",
      "body": "utACK 935d4889228e7e361c8b0020761fa0e08a55fb48",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-811526436",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21236"
    },
    {
      "event": "reviewed",
      "id": 625936330,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1OTM2MzMw",
      "url": null,
      "actor": null,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "review ACK 935d4889228e7e361c8b0020761fa0e08a55fb48 🐑\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK 935d4889228e7e361c8b0020761fa0e08a55fb48 🐑\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUh7Hgv/dmVk2jwk66OpRVhWiCUITNoKMBCZFBA8+k63KsptFTEUV0oneUoiMVTm\r\nFtw+YVO60MZdNQjBet3CC3IyTUv098/H2+e9cODLgbRpRMJaLewzevxUy0o6RToQ\r\nBzHalKxNnrGEUnJB/6zm4HzXWIPJWppY947BlLEuZ+HM7J8HgAmFVPZWa/VubsrN\r\nYhY6rBbtHuJKGamsdE/LkNfNEMhP4dIOksl1WteXg2xoSeBHQeHL6nFLKFjJohbj\r\nY34ZSnxo0jJFpz+bSVlzelJh5EL7/G+fZzvE5vbOa39+5unZ2mFx70ftvGYgRK6V\r\nqLfhnyeTMABXjs5bwU3HcjVGqa1ZsApIhY+sLs6lwSQmNAG2UjOxPcl7EDcXnZha\r\nfV//g/jdU5qTyNQiriWrA0TEtwPm7X1lgJFYBgpfSAfnSIxbLk/uZWkPqFVVbt5P\r\nMh2PXN7lIqJ/irxKTBscAXqX4RrIbHXHVv5TaUvS3kI2igSLaKjUhj2Nqoea6UZ3\r\nXBBbfMvT\r\n=sVrE\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `2166a9ff7592f66162db55121e31cb0376f60455376bea865e5631ad552a2fc6  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401082166a9ff7592f66162db55121e31cb0376f60455376bea865e5631ad552a2fc6f0102cf489f84b3a2a6611e2babf6e0ee89508fff0103cf370e021bc498b55528e6ee8b32cca08f120431683da20373e484a106e2d272aa8fbefaba8b39e22a3006592c0755742509708f10460655a5ef008b752e9824c1824700083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff010961ae5d19f889bafd6f48e75b61c509208f10460656837f008ddc32f51d23bdd6b0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010e729aca1dd4877f17e25494bd956163908f10460656837f0084facce2cfa9b9be70083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010fd84dd648cfeba09ce106563fe5205bc08f120f1d29a5e00da1ae44c9ec4ffdd6de340434e271be5f5e833b789fbc14223a50a08f10460656838f008ac15ef2b6c7824120083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#pullrequestreview-625936330",
      "submitted_at": "2021-04-01T06:29:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
    },
    {
      "event": "merged",
      "id": 4539380844,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDUzOTM4MDg0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4539380844",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "539e4eec63fa5cbc525343c33c40c43f7b48cb6a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/539e4eec63fa5cbc525343c33c40c43f7b48cb6a",
      "created_at": "2021-04-01T06:33:38Z"
    },
    {
      "event": "closed",
      "id": 4539380856,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDUzOTM4MDg1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4539380856",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-01T06:33:39Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4539528421,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0NTM5NTI4NDIx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4539528421",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-01T07:07:08Z"
    },
    {
      "event": "referenced",
      "id": 4541724529,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1NDE3MjQ1Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4541724529",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cee757ebf9fb913fc20656b455b94ee5fe394fb7",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/cee757ebf9fb913fc20656b455b94ee5fe394fb7",
      "created_at": "2021-04-01T14:36:28Z"
    },
    {
      "event": "referenced",
      "id": 4944268951,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NDQyNjg5NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4944268951",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8b426c4de2037435187b91693a2844dc5e6d87e8",
      "commit_url": "https://api.github.com/repos/bitcoinknots/bitcoin/commits/8b426c4de2037435187b91693a2844dc5e6d87e8",
      "created_at": "2021-06-27T19:59:30Z"
    },
    {
      "event": "referenced",
      "id": 5968701813,
      "node_id": "REFE_lADOABII584wZkFczwAAAAFjwyl1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5968701813",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8c182804b605d9b0872a7d5ba46658a666ebe99e",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/8c182804b605d9b0872a7d5ba46658a666ebe99e",
      "created_at": "2022-01-28T07:11:23Z"
    },
    {
      "event": "referenced",
      "id": 5968701818,
      "node_id": "REFE_lADOABII584wZkFczwAAAAFjwyl6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5968701818",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ff4da06d8d49c6553ea2fa58fee3c4bf4236be72",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/ff4da06d8d49c6553ea2fa58fee3c4bf4236be72",
      "created_at": "2022-01-28T07:11:23Z"
    },
    {
      "event": "referenced",
      "id": 5968701821,
      "node_id": "REFE_lADOABII584wZkFczwAAAAFjwyl9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5968701821",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "79cc0dca6fccc2e2856ce7c2a9c2073b7ba92d64",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/79cc0dca6fccc2e2856ce7c2a9c2073b7ba92d64",
      "created_at": "2022-01-28T07:11:23Z"
    },
    {
      "event": "referenced",
      "id": 5968701827,
      "node_id": "REFE_lADOABII584wZkFczwAAAAFjwymD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5968701827",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4521689ee98591cd64f9623fe663ad4bd495ed64",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/4521689ee98591cd64f9623fe663ad4bd495ed64",
      "created_at": "2022-01-28T07:11:23Z"
    },
    {
      "event": "referenced",
      "id": 5969665971,
      "node_id": "REFE_lADOABII584wZkFczwAAAAFj0d-z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5969665971",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6865c990333f77ad97c287a647e3b053e0cd79f8",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/6865c990333f77ad97c287a647e3b053e0cd79f8",
      "created_at": "2022-01-28T10:25:26Z"
    },
    {
      "event": "locked",
      "id": 7199035700,
      "node_id": "LOE_lADOABII584wZkFczwAAAAGtGJE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199035700",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:07:14Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579181272",
      "pull_request_review_id": 594182306,
      "id": 579181272,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTE4MTI3Mg==",
      "diff_hunk": "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's currently impossible for `vAddrToSend` to grow larger than `MAX_ADDR_TO_SEND` (observe that the only place where elements are added to `vAddrToSend` check the size first). However, it might be safer to do something like:\r\n\r\n```suggestion\r\n    if(pto.vAddrToSend.size() > MAX_ADDR_TO_SEND) vAddrToSend.resize(MAX_ADDR_TO_SEND);\r\n```\r\n\r\nI'm happy to go with whatever reviewers prefer.",
      "created_at": "2021-02-19T13:23:26Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r579181272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/579181272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583805388",
      "pull_request_review_id": 599796777,
      "id": 583805388,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzgwNTM4OA==",
      "diff_hunk": "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "path": "src/net.h",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Err, nack. Please add `EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing)` to `MaybeSendAddr` instead. I could see an argument for having a single mutex representing \"this is the message handler thread\" (rather than one per-peer), but removing guards entirely is wrong...",
      "created_at": "2021-02-26T17:37:25Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583805388",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583805388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 550,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583839782",
      "pull_request_review_id": 599796777,
      "id": 583839782,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzgzOTc4Mg==",
      "diff_hunk": "@@ -337,7 +337,7 @@ class PeerManagerImpl final : public PeerManager\n     void MaybeSendPing(CNode& node_to, Peer& peer);\n \n     /** Send `addr` messages on a regular schedule*/\n-    void MaybeSendAddr(CNode* pto);\n+    void MaybeSendAddr(CNode& pto);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "cb68827f7d25d2c2eafa8f64a9f0a7c4cacee84b",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe change this to `node` or `node_to` as per `MaybeSendPing`. It's no longer a `p` either way.",
      "created_at": "2021-02-26T18:36:31Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583839782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583839782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 340,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583849836",
      "pull_request_review_id": 599796777,
      "id": 583849836,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mzg0OTgzNg==",
      "diff_hunk": "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "in_reply_to_id": 579181272,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could have an Assume instead of an assert, but better to error out than silently cover it up if mistakes are introduced elsewhere I think.",
      "created_at": "2021-02-26T18:54:25Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583849836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583849836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583851018",
      "pull_request_review_id": 599796777,
      "id": 583851018,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Mzg1MTAxOA==",
      "diff_hunk": "@@ -4395,45 +4395,39 @@ void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n         pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n     }\n \n-    //\n-    // Message: addr\n-    //\n-    if (pto.RelayAddrsWithConn() && pto.m_next_addr_send < current_time) {\n-        pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n-        std::vector<CAddress> vAddr;\n-        vAddr.reserve(pto.vAddrToSend.size());\n-        assert(pto.m_addr_known);\n-\n-        const char* msg_type;\n-        int make_flags;\n-        if (pto.m_wants_addrv2) {\n-            msg_type = NetMsgType::ADDRV2;\n-            make_flags = ADDRV2_FORMAT;\n-        } else {\n-            msg_type = NetMsgType::ADDR;\n-            make_flags = 0;\n-        }\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n \n-        for (const CAddress& addr : pto.vAddrToSend)\n-        {\n-            if (!pto.m_addr_known->contains(addr.GetKey()))\n-            {\n-                pto.m_addr_known->insert(addr.GetKey());\n-                vAddr.push_back(addr);\n-                // receiver rejects addr messages larger than MAX_ADDR_TO_SEND\n-                if (vAddr.size() >= MAX_ADDR_TO_SEND)\n-                {\n-                    m_connman.PushMessage(&pto, msgMaker.Make(make_flags, msg_type, vAddr));\n-                    vAddr.clear();\n-                }\n-            }\n-        }\n-        pto.vAddrToSend.clear();\n-        if (!vAddr.empty())\n-            m_connman.PushMessage(&pto, msgMaker.Make(make_flags, msg_type, vAddr));\n-        // we only send the big addr message once\n-        if (pto.vAddrToSend.capacity() > 40)\n-            pto.vAddrToSend.shrink_to_fit();\n+    assert(pto.m_addr_known);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "53353c75369bb87a9947c49a4a9f0c0ef053f248",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should move this to directly after the `RelayAddrsWithConn` check -- that's what makes it true, and you rely on `m_addr_known` being not null in the `!IBD` branch above as well.",
      "created_at": "2021-02-26T18:56:23Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r583851018",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/583851018"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584276609",
      "pull_request_review_id": 600245301,
      "id": 584276609,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDI3NjYwOQ==",
      "diff_hunk": "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "path": "src/net.h",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "in_reply_to_id": 583805388,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "These members should never have been guarded by `cs_sendProcessing`, which really only exists at this point to make sure that multiple threads don't enter `SendMessages()` concurrently.\r\n\r\nThe annotation was over-zealously added in #13123. The author of that PR agrees that these annotations are unnecessary: https://github.com/bitcoin/bitcoin/pull/13123#issuecomment-647505130.\r\n\r\nThese variables are only ever read/written by the message handler thread inside `SendMessages()`, so it's safe for them to be unguarded. I can make them atomic if you think that would make this more obviously safe.",
      "created_at": "2021-02-28T10:53:53Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584276609",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584276609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 550,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584277318",
      "pull_request_review_id": 600245745,
      "id": 584277318,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDI3NzMxOA==",
      "diff_hunk": "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "in_reply_to_id": 579181272,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Do you think it'd be useful to add a new macro `AssertAndRecover()`:\r\n\r\n- in debug builds, this asserts (terminates) if the condition fails\r\n- in release builds, this executes some recovery code and continues.\r\n\r\neg here the recovery code would be to clear the `vAddrToSend` vector and return from `MaybeSendAddr()`. Better to not relay addr records to a peer and continue operation than crash the node.",
      "created_at": "2021-02-28T10:59:14Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584277318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584277318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584282539",
      "pull_request_review_id": 600249140,
      "id": 584282539,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDI4MjUzOQ==",
      "diff_hunk": "@@ -337,7 +337,7 @@ class PeerManagerImpl final : public PeerManager\n     void MaybeSendPing(CNode& node_to, Peer& peer);\n \n     /** Send `addr` messages on a regular schedule*/\n-    void MaybeSendAddr(CNode* pto);\n+    void MaybeSendAddr(CNode& pto);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "cb68827f7d25d2c2eafa8f64a9f0a7c4cacee84b",
      "in_reply_to_id": 583839782,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-02-28T11:40:47Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584282539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584282539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 340,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584282888",
      "pull_request_review_id": 600249395,
      "id": 584282888,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDI4Mjg4OA==",
      "diff_hunk": "@@ -4395,45 +4395,39 @@ void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n         pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n     }\n \n-    //\n-    // Message: addr\n-    //\n-    if (pto.RelayAddrsWithConn() && pto.m_next_addr_send < current_time) {\n-        pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n-        std::vector<CAddress> vAddr;\n-        vAddr.reserve(pto.vAddrToSend.size());\n-        assert(pto.m_addr_known);\n-\n-        const char* msg_type;\n-        int make_flags;\n-        if (pto.m_wants_addrv2) {\n-            msg_type = NetMsgType::ADDRV2;\n-            make_flags = ADDRV2_FORMAT;\n-        } else {\n-            msg_type = NetMsgType::ADDR;\n-            make_flags = 0;\n-        }\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n \n-        for (const CAddress& addr : pto.vAddrToSend)\n-        {\n-            if (!pto.m_addr_known->contains(addr.GetKey()))\n-            {\n-                pto.m_addr_known->insert(addr.GetKey());\n-                vAddr.push_back(addr);\n-                // receiver rejects addr messages larger than MAX_ADDR_TO_SEND\n-                if (vAddr.size() >= MAX_ADDR_TO_SEND)\n-                {\n-                    m_connman.PushMessage(&pto, msgMaker.Make(make_flags, msg_type, vAddr));\n-                    vAddr.clear();\n-                }\n-            }\n-        }\n-        pto.vAddrToSend.clear();\n-        if (!vAddr.empty())\n-            m_connman.PushMessage(&pto, msgMaker.Make(make_flags, msg_type, vAddr));\n-        // we only send the big addr message once\n-        if (pto.vAddrToSend.capacity() > 40)\n-            pto.vAddrToSend.shrink_to_fit();\n+    assert(pto.m_addr_known);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "53353c75369bb87a9947c49a4a9f0c0ef053f248",
      "in_reply_to_id": 583851018,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2021-02-28T11:44:01Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584282888",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584282888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584304375",
      "pull_request_review_id": 600264565,
      "id": 584304375,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMwNDM3NQ==",
      "diff_hunk": "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "in_reply_to_id": 579181272,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't `AssertAndRecover(condition, recovery)` the same as `if (!Assume(condition)) { recovery; }` ? (Err, at least if `Assume` was the identity function its comments claim it to be, rather than being cast to `(void)` in release builds)\r\n\r\nNot sure the recovery code is needed here -- more than MAX_ADDR_TO_SEND would be a protocol violation, but shouldn't cause a crash or anything, I think?",
      "created_at": "2021-02-28T14:17:24Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584304375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584304375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584308103",
      "pull_request_review_id": 600267153,
      "id": 584308103,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDMwODEwMw==",
      "diff_hunk": "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "path": "src/net.h",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "in_reply_to_id": 583805388,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"These variables are only ever read/written ... inside SendMessages\" -- is **exactly** what GUARDED_BY(cs_sendProcessing) documents. The point of having the guard is to catch errors when we change the code in future and violate the assumptions we were relying on -- if the code compiles with the GUARDED_BY statements, it will always also compile correctly without them -- the trouble comes when people make changes later.\r\n\r\nI don't know what @practicalswift thinks the annotation was a mistake; it's not. (It's a mistake the other addr-related member variables aren't guarded though)\r\n\r\nHaving things be atomic instead of guarded is only a good idea if they're actually accessed by multiple threads, and either they don't need to be synchronized with any other data, or the timing is too important for proper locks.\r\n\r\nEDIT: There's a commit on https://github.com/ajtowns/bitcoin/commits/202103-cs_sendProcessing which turns the mutex into a single global, which can then be used to also guard things in `struct Peer` that aren't accessed outside of ProcessMesasges/SendMessages. Not needed for this PR, but might be useful for the followup.",
      "created_at": "2021-02-28T14:41:40Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584308103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584308103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 550,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584353143",
      "pull_request_review_id": 600300442,
      "id": 584353143,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDM1MzE0Mw==",
      "diff_hunk": "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "in_reply_to_id": 579181272,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Isn't AssertAndRecover(condition, recovery) the same as if (!Assume(condition)) { recovery; }\r\n\r\nAh interesting. I didn't realise that.\r\n\r\n> Not sure the recovery code is needed here -- more than MAX_ADDR_TO_SEND would be a protocol violation, but shouldn't cause a crash or anything, I think?\r\n\r\nI think it's probably better to skip sending the `addr` message than violate the p2p protocol.",
      "created_at": "2021-02-28T20:08:02Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584353143",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584353143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584353407",
      "pull_request_review_id": 600300603,
      "id": 584353407,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDM1MzQwNw==",
      "diff_hunk": "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "path": "src/net.h",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "in_reply_to_id": 583805388,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> It's a mistake the other addr-related member variables aren't guarded though\r\n\r\nOk. I've moved all of the addr fields to be guarded by their own `m_addr_mutex` mutex. This seems much better than having data/logic that should be in net_processing being locked by a mutex in net.",
      "created_at": "2021-02-28T20:10:00Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584353407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584353407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 550,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584933092",
      "pull_request_review_id": 601017423,
      "id": 584933092,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDkzMzA5Mg==",
      "diff_hunk": "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "path": "src/net.h",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "in_reply_to_id": 583805388,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That proved more difficult than expected. I've reverted that change and have moved just  `m_next_addr_send` and `m_next_local_addr_send` to be guarded by the new `m_addr_mutex`. I'll move the rest of the addr fields under that mutex when they move into the `Peer` struct.",
      "created_at": "2021-03-01T18:01:45Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r584933092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584933092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 550,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585462620",
      "pull_request_review_id": 601683530,
      "id": 585462620,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTQ2MjYyMA==",
      "diff_hunk": "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "path": "src/net.h",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "in_reply_to_id": 583805388,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't follow why you're changing those guards at all in this PR; you don't need to. See https://github.com/ajtowns/bitcoin/tree/202003-pr21236\r\n\r\nI don't think it will make sense to lock `m_addr_known` and `vAddrToSend` with per-peer locks: when receiving an addr message we'll obtain the lock for the peer that sends the message, then attempt to obtain the lock for a peer we want to forward the address on to -- but there's no particular reason to expect those peers to always be in a particular order, so holding the sending peer's lock would create ordering violations, and releasing and reacquiring would be a bit ridiculous given that this is always happening in a single thread.",
      "created_at": "2021-03-02T10:52:41Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r585462620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585462620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 550,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585490441",
      "pull_request_review_id": 601719232,
      "id": 585490441,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTQ5MDQ0MQ==",
      "diff_hunk": "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "path": "src/net.h",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "in_reply_to_id": 583805388,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks! Totally agree that taking and releasing multiple locks would be ridiculous. I've taken your branch.",
      "created_at": "2021-03-02T11:36:12Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r585490441",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585490441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 550,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586153384",
      "pull_request_review_id": 602558406,
      "id": 586153384,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjE1MzM4NA==",
      "diff_hunk": "@@ -4366,6 +4369,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        node.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (node.m_next_local_addr_send != 0us) {\n+            node.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&node)) {\n+            FastRandomContext insecure_rand;\n+            node.PushAddress(*local_addr, insecure_rand);\n+        }\n+        node.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= node.m_next_addr_send) return;\n+\n+    node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about\n+    auto addr_already_known = [&node](const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(node.m_addr_mutex)\n+                              {return node.m_addr_known->contains(addr.GetKey());};\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),\n+                           node.vAddrToSend.end());\n+\n+    // No addr messages to send\n+    if (node.vAddrToSend.empty()) return;\n+\n+    for (const CAddress& addr : node.vAddrToSend) {\n+        node.m_addr_known->insert(addr.GetKey());\n+    }\n+\n+    const char* msg_type;\n+    int make_flags;\n+    if (node.m_wants_addrv2) {\n+        msg_type = NetMsgType::ADDRV2;\n+        make_flags = ADDRV2_FORMAT;\n+    } else {\n+        msg_type = NetMsgType::ADDR;\n+        make_flags = 0;\n+    }\n+    m_connman.PushMessage(&node, CNetMsgMaker(node.GetCommonVersion()).Make(make_flags, msg_type, node.vAddrToSend));\n+    node.vAddrToSend.clear();\n+\n+    // we only send the big addr message once\n+    if (node.vAddrToSend.capacity() > 40)\n+        node.vAddrToSend.shrink_to_fit();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    if (node.vAddrToSend.capacity() > 40) {\r\n        node.vAddrToSend.shrink_to_fit();\r\n    }\r\n```",
      "created_at": "2021-03-03T06:36:58Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586153384",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586153384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": 4433,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586155459",
      "pull_request_review_id": 602558406,
      "id": 586155459,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjE1NTQ1OQ==",
      "diff_hunk": "@@ -4366,6 +4369,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    const auto current_time = GetTime<std::chrono::microseconds>();\r\n```",
      "created_at": "2021-03-03T06:42:20Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586155459",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586155459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586234407",
      "pull_request_review_id": 602659552,
      "id": 586234407,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjIzNDQwNw==",
      "diff_hunk": "@@ -4366,6 +4369,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "in_reply_to_id": 586155459,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-03-03T09:02:52Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586234407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586234407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586234438",
      "pull_request_review_id": 602659615,
      "id": 586234438,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjIzNDQzOA==",
      "diff_hunk": "@@ -4366,6 +4369,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        node.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (node.m_next_local_addr_send != 0us) {\n+            node.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&node)) {\n+            FastRandomContext insecure_rand;\n+            node.PushAddress(*local_addr, insecure_rand);\n+        }\n+        node.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= node.m_next_addr_send) return;\n+\n+    node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about\n+    auto addr_already_known = [&node](const CAddress& addr) EXCLUSIVE_LOCKS_REQUIRED(node.m_addr_mutex)\n+                              {return node.m_addr_known->contains(addr.GetKey());};\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),\n+                           node.vAddrToSend.end());\n+\n+    // No addr messages to send\n+    if (node.vAddrToSend.empty()) return;\n+\n+    for (const CAddress& addr : node.vAddrToSend) {\n+        node.m_addr_known->insert(addr.GetKey());\n+    }\n+\n+    const char* msg_type;\n+    int make_flags;\n+    if (node.m_wants_addrv2) {\n+        msg_type = NetMsgType::ADDRV2;\n+        make_flags = ADDRV2_FORMAT;\n+    } else {\n+        msg_type = NetMsgType::ADDR;\n+        make_flags = 0;\n+    }\n+    m_connman.PushMessage(&node, CNetMsgMaker(node.GetCommonVersion()).Make(make_flags, msg_type, node.vAddrToSend));\n+    node.vAddrToSend.clear();\n+\n+    // we only send the big addr message once\n+    if (node.vAddrToSend.capacity() > 40)\n+        node.vAddrToSend.shrink_to_fit();",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "d587fae7542ebfa7e6292333f0976dd32d643e20",
      "in_reply_to_id": 586153384,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-03-03T09:02:57Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586234438",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586234438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": 4433,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586886948",
      "pull_request_review_id": 603469123,
      "id": 586886948,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Njg4Njk0OA==",
      "diff_hunk": "@@ -336,6 +336,9 @@ class PeerManagerImpl final : public PeerManager\n      *  mark the peer to be disconnected if a ping has timed out. */\n     void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);\n \n+    /** Send `addr` messages on a regular schedule*/",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "86087474a21c730edeaa6fc2bf102d1a3d11acfc",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "μnit: `schedule. */` ",
      "created_at": "2021-03-03T23:39:11Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586886948",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586886948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586903995",
      "pull_request_review_id": 603469123,
      "id": 586903995,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjkwMzk5NQ==",
      "diff_hunk": "@@ -4365,6 +4368,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode* pto, std::chrono::microseconds current_time)\n+{",
      "path": "src/net_processing.cpp",
      "position": 43,
      "original_position": 15,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "86087474a21c730edeaa6fc2bf102d1a3d11acfc",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "what do you think about adding an `AssertLockHeld` to accompany the clang safety annotations with a dynamic runtime check? ([developer notes](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#threads-and-synchronization))",
      "created_at": "2021-03-03T23:57:20Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586903995",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586903995"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4146,
      "original_line": 4146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586925342",
      "pull_request_review_id": 603469123,
      "id": 586925342,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjkyNTM0Mg==",
      "diff_hunk": "@@ -4368,68 +4368,67 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\n     }\n }\n \n-void PeerManagerImpl::MaybeSendAddr(CNode* pto, std::chrono::microseconds current_time)\n+void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds current_time)\n {\n-    const CNetMsgMaker msgMaker(pto->GetCommonVersion());\n+    const CNetMsgMaker msgMaker(node.GetCommonVersion());\n \n-    if (fListen && pto->RelayAddrsWithConn() &&\n-        !::ChainstateActive().IsInitialBlockDownload() &&\n-        pto->m_next_local_addr_send < current_time) {\n+    if (fListen && node.RelayAddrsWithConn() &&\n+        node.m_next_local_addr_send < current_time) {",
      "path": "src/net_processing.cpp",
      "position": 52,
      "original_position": 23,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "d5064858656016005396f670c2c7a5fd1e744b10",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "looks like d506485865 removed the IBD check, but 4adba42f41 brings it back",
      "created_at": "2021-03-04T00:48:52Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586925342",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586925342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4155,
      "original_line": 4155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586930516",
      "pull_request_review_id": 603469123,
      "id": 586930516,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjkzMDUxNg==",
      "diff_hunk": "@@ -4375,8 +4375,6 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n \n     assert(node.m_addr_known);\n \n-    const CNetMsgMaker msgMaker(node.GetCommonVersion());\n-\n     // Periodically advertise our local address to the peer.\n     if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "might be worth updating to `m_chainman.ActivateChainstate()`? \r\n\r\nh/t https://github.com/bitcoin/bitcoin/pull/21327#discussion_r585433607",
      "created_at": "2021-03-04T01:02:29Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r586930516",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586930516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587104852",
      "pull_request_review_id": 603700421,
      "id": 587104852,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzEwNDg1Mg==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "looks like both `MaybeSendPing` and `MaybeSendAddr` can be made into const member functions",
      "created_at": "2021-03-04T04:46:35Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587104852",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587104852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587327515",
      "pull_request_review_id": 603916449,
      "id": 587327515,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzMyNzUxNQ==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure that `const` should be used in cases like this. The compiler will make sure that any function marked `const` doesn't mutate the object's data members, which is the case for both of these functions. However, `const` is not transitive, so the functions are still able to modify state through pointers and modify global state.\r\n\r\nHere, `PeerManagerImpl` owns the map of `Peer` objects:\r\n\r\n```\r\nclass PeerManagerImpl final : public PeerManager\r\n{\r\n[...]\r\nprivate:\r\n    /**\r\n     * Map of all Peer objects, keyed by peer id. This map is protected\r\n     * by the m_peer_mutex. Once a shared pointer reference is\r\n     * taken, the lock may be released. Individual fields are protected by\r\n     * their own locks.\r\n     */\r\n    std::map<NodeId, PeerRef> m_peer_map GUARDED_BY(m_peer_mutex);\r\n```\r\n\r\nand the map of `CNodeState` objects are global (in the file's unnamed namespace):\r\n\r\n```\r\n/** Map maintaining per-node state. */\r\nstatic std::map<NodeId, CNodeState> mapNodeState GUARDED_BY(cs_main);\r\n```\r\n\r\nSo `PeerManagerImpl` definitely owns the `Peer` objects, and logically owns the `CNodeState` objects since it's responsible for constructing and destructing them (and #20758 actually moves the `CNodeState` objects into `PeerManagerImpl`).\r\n\r\nThese functions don't mutate `PeerManagerImpl`, but _do_ mutate data that it owns. I think in such cases there's an argument that we shouldn't mark the function `const` even if the compiler would allow us to. For me, `const` on a member function is telling the programmer \"this function does not mutate the logical state of this object\", which isn't the case here.",
      "created_at": "2021-03-04T10:01:37Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587327515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587327515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587328862",
      "pull_request_review_id": 603918218,
      "id": 587328862,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzMyODg2Mg==",
      "diff_hunk": "@@ -336,6 +336,9 @@ class PeerManagerImpl final : public PeerManager\n      *  mark the peer to be disconnected if a ping has timed out. */\n     void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);\n \n+    /** Send `addr` messages on a regular schedule*/",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "86087474a21c730edeaa6fc2bf102d1a3d11acfc",
      "in_reply_to_id": 586886948,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2021-03-04T10:03:33Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587328862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587328862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587329584",
      "pull_request_review_id": 603919285,
      "id": 587329584,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzMyOTU4NA==",
      "diff_hunk": "@@ -4365,6 +4368,71 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode* pto, std::chrono::microseconds current_time)\n+{",
      "path": "src/net_processing.cpp",
      "position": 43,
      "original_position": 15,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "86087474a21c730edeaa6fc2bf102d1a3d11acfc",
      "in_reply_to_id": 586903995,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "done",
      "created_at": "2021-03-04T10:04:45Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587329584",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587329584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4146,
      "original_line": 4146,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587329723",
      "pull_request_review_id": 603919471,
      "id": 587329723,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzMyOTcyMw==",
      "diff_hunk": "@@ -4368,68 +4368,67 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::mic\n     }\n }\n \n-void PeerManagerImpl::MaybeSendAddr(CNode* pto, std::chrono::microseconds current_time)\n+void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds current_time)\n {\n-    const CNetMsgMaker msgMaker(pto->GetCommonVersion());\n+    const CNetMsgMaker msgMaker(node.GetCommonVersion());\n \n-    if (fListen && pto->RelayAddrsWithConn() &&\n-        !::ChainstateActive().IsInitialBlockDownload() &&\n-        pto->m_next_local_addr_send < current_time) {\n+    if (fListen && node.RelayAddrsWithConn() &&\n+        node.m_next_local_addr_send < current_time) {",
      "path": "src/net_processing.cpp",
      "position": 52,
      "original_position": 23,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "d5064858656016005396f670c2c7a5fd1e744b10",
      "in_reply_to_id": 586925342,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops. Good catch. Fixed!",
      "created_at": "2021-03-04T10:04:56Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587329723",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587329723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4155,
      "original_line": 4155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587332869",
      "pull_request_review_id": 603923517,
      "id": 587332869,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzMzMjg2OQ==",
      "diff_hunk": "@@ -4375,8 +4375,6 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n \n     assert(node.m_addr_known);\n \n-    const CNetMsgMaker msgMaker(node.GetCommonVersion());\n-\n     // Periodically advertise our local address to the peer.\n     if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 586930516,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This isn't adding a new `::ChainstateActive()` like #21327 was. I think changing this call to be `m_chainman.ActiveChainstate()` would be adding more noise/distraction for reviewers.",
      "created_at": "2021-03-04T10:09:17Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587332869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587332869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587422505",
      "pull_request_review_id": 604037167,
      "id": 587422505,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzQyMjUwNQ==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since `PeerRef` is a shared_ptr which does its own destruction once the ref count hits zero, I don't think it's accurate to say that `PeerManagerImpl` owns the `Peer` object.",
      "created_at": "2021-03-04T12:17:55Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587422505",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587422505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587435992",
      "pull_request_review_id": 604054910,
      "id": 587435992,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzQzNTk5Mg==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure it's right to say that ownership of Peer is shared because it uses a shared pointer. We use a shared pointer for the Peer for convenience/safety/synchronization. We never take a shared pointer to a Peer outside PeerManagerImpl, and if we really wanted to, could implement it with raw pointers and a manual ref count, and then `new` and `delete` the Peer objects (as is done by CConnman for its CNode objects in vNodes)\r\n\r\nThat's maybe a bit pedantic. I think the more important question is \"what is `const` for?\" For me, it means \"this function won't mutate the _logical_ state of this object\". If we're using it to say \"this function won't mutate the data members of this object, but it will mutate the state of data structures that are integral to how this object operates, but will do so through a pointer\", then it seems a bit legalistic and not very useful to me.",
      "created_at": "2021-03-04T12:39:09Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587435992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587435992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587491156",
      "pull_request_review_id": 604127769,
      "id": 587491156,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzQ5MTE1Ng==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was surprised to discover that if you have a class Y with a member `X& x` then C++ thinks it's fine to modify `x.foo = 3` from a const member function of Y. So not sure I'd argue against \"a bit legalistic and not very useful\"... (So in particular, if you have a `const PeerManagerImpl`, it will have no problems calling non-const functions of its `m_connman`)\r\n\r\nIf you consider modifying the contents of a `PeerRef` to be modifying a `PeerManagerImpl`, then I don't think it's consistent to mark `GetPeerRef()` as const either (code compiles fine that way though). I dunno; \"shared\" makes me think things are shared, not owned, so that's definitely a mental adjustment.\r\n\r\nI guess I don't think it's a good idea to try to put too much convention on top of what our compilers will actually enforce here though.",
      "created_at": "2021-03-04T13:59:11Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587491156",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587491156"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587515302",
      "pull_request_review_id": 604159447,
      "id": 587515302,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzUxNTMwMg==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This certainly isn't a hill I'm prepared to die on (either here or in https://github.com/bitcoin/bitcoin/pull/21162#discussion_r587410937). My preference is not to mark functions as const if they're mutating data that is so closely associated with the object that it can only be modified through the object, but I'll go along with the majority if people want this to be const.",
      "created_at": "2021-03-04T14:28:55Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587515302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587515302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587557545",
      "pull_request_review_id": 604216120,
      "id": 587557545,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzU1NzU0NQ==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, not my hill either, but I think it's worth discussing so we've got a *shared* understanding of how this data's meant to be controlled... I have some other ideas about `Peer` ownership I want to try out once more of this refactoring is finished that might change this, and worst case can add or remove const markers when we're reordering the PeerManageImpl declarations and adding more comments...",
      "created_at": "2021-03-04T15:18:22Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587557545",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587557545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587729007",
      "pull_request_review_id": 604439071,
      "id": 587729007,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzcyOTAwNw==",
      "diff_hunk": "@@ -4375,8 +4375,6 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n \n     assert(node.m_addr_known);\n \n-    const CNetMsgMaker msgMaker(node.GetCommonVersion());\n-\n     // Periodically advertise our local address to the peer.\n     if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 586930516,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok. since this is a refactor PR anyway, as a reviewer I would not mind, but its no worries :) ",
      "created_at": "2021-03-04T18:49:44Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587729007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587729007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587946600",
      "pull_request_review_id": 604708190,
      "id": 587946600,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Nzk0NjYwMA==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree that the relevant question is \"what is `const` for?\" The two main aspects are compiler enforcement & human understanding. @jnewbery I get what you're saying about making these member functions `const` is misleading for the humans, because the function often mutates the logical state of the object. However, I also agree with @ajtowns that since the compilers would actually be enforcing something here, it does offer a bit of literal guarding?\r\n\r\nI don't have a strong opinion on which way we go, but it is definitely an interesting consideration & mostly I conclude that `const` is complex. I'm personally curious to learn more about how a compiler uses the keyword- when its just enforcement vs optimization. (recommending resources welcome!)",
      "created_at": "2021-03-05T00:57:50Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587946600",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587946600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587978004",
      "pull_request_review_id": 604745053,
      "id": 587978004,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Nzk3ODAwNA==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm 99% sure that compilers don't use `const` markers on functions/pointers/references at all for optimization. All they do is disallow certain operations on them.\r\n\r\nIt's different if you have an actual `const` variable (e.g. a global, local, or member variable that is declared const where it is defined & initialized), because that means \"changing this is UB\". Any other use simply means \"no non-const operations are allowed on object *through this reference/pointer/function*; if other code is invoked that happens to hold a non-const reference/pointer, the object can still change (and the compiler can't assume a cached version in a register won't change e.g.).",
      "created_at": "2021-03-05T02:21:53Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r587978004",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/587978004"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588780970",
      "pull_request_review_id": 605682022,
      "id": 588780970,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODc4MDk3MA==",
      "diff_hunk": "@@ -4196,8 +4194,20 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n     if (current_time <= node.m_next_addr_send) return;\n \n     node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n-    std::vector<CAddress> vAddr;\n-    vAddr.reserve(node.vAddrToSend.size());\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about\n+    auto addr_already_known = [&node](const CAddress& addr) {return node.m_addr_known->contains(addr.GetKey());};\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 20,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "151597e19ba3dd662c25ea37f957f5ceddc95aec",
      "in_reply_to_id": null,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "should we explicitly `#include <algorithm>`? ",
      "created_at": "2021-03-05T23:25:33Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r588780970",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588780970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4190,
      "original_line": 4190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588787373",
      "pull_request_review_id": 605682022,
      "id": 588787373,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODc4NzM3Mw==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "interesting, ok. so other than with direct variable management, `const` essentially uses the compiler to ensure anyone introducing new code has to think before they modify the object through this path. hm, thanks.",
      "created_at": "2021-03-05T23:48:40Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r588787373",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588787373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588896407",
      "pull_request_review_id": 605765705,
      "id": 588896407,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg5NjQwNw==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@sipa yes, that's exactly my understanding. Mutating a `const`-declared variable is UB. Therefore compilers could make optimizations based on the fact that `const`-declared variables cannot change.\r\n\r\n`const` on a member functions simply means that this function call won't mutate the state of the object, although of course, other code could mutate the state. Therefore, the compiler can't make any assumptions about the state of the variable not changing.\r\n\r\nYou can even mutate the state through a `const` function by casting away the constness, eg:\r\n\r\n```c++\r\n#include <iostream>\r\n\r\nclass thing\r\n{\r\n    int x{0};\r\n\r\npublic:\r\n    void mutate(int x_in) const\r\n    {\r\n        thing* mutable_this = const_cast<thing*>(this);\r\n        mutable_this->x = x_in;\r\n    }\r\n\r\n    int access() const { return x; }\r\n\r\n    thing(int x_in) : x(x_in) { }\r\n};\r\n \r\nint main()\r\n{\r\n    thing t(1);\r\n    std::cout << \"t.x = \" << t.access() << \"\\n\";\r\n\r\n    t.mutate(2);\r\n    std::cout << \"t.x = \" << t.access() << \"\\n\";\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\nYou can see that the state of `t` has been mutated in the `mutate()` function, even though that function is `const`. This compiles with no warnings. I believe this is perfectly legal (although ill-advised!) c++. The c++ core guidelines advise against casting away const in almost all cases: https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#es50-dont-cast-away-const. Scott Meyers does use casting away const to avoid code duplication: https://stackoverflow.com/a/123995/933705 (although that book is now quite old, so I'm not sure if the advice is still current).\r\n\r\nGoing back to the main question about whether these functions _should_ be `const`, I found [the isocpp.org wikipedia page on const correctness](https://isocpp.org/wiki/faq/const-correctness) to be very useful in clarifying my thoughts. A few extracts:\r\n\r\n> The trailing `const` on `inspect()` member function should be used to mean the method won’t change the object’s _abstract_ (client-visible) state. That is slightly different from saying the method won’t change the “raw bits” of the object’s `struct`\r\n\r\n> a `const` member function must not change (or allow a caller to change) the this object’s _logical_ state (AKA _abstract_ state AKA _meaningwise_ state). Think of what an object means, not how it is internally implemented. A Person’s age and name are logically part of the Person, but the Person’s neighbor and employer are not. An inspector method that returns part of the this object’s _logical_ / _abstract_ / _meaningwise_ state must not return a non-`const` pointer (or reference) to that part, **independent of whether that part is internally implemented as a direct data-member physically embedded within the this object or some other way**. (emphasis mine)\r\n\r\n> - If a method changes any part of the object’s logical state, it logically is a mutator; it should not be const even if (as actually happens!) the method doesn’t change any physical bits of the object’s concrete state.\r\n> - Conversely, a method is logically an inspector and should be const if it never changes any part of the object’s logical state, even if (as actually happens!) the method changes physical bits of the object’s concrete state.\r\n\r\n> If you are outside the class — you are a normal user, every experiment you could perform (every method or sequence of methods you call) would have the same results (same return values, same exceptions or lack of exceptions) irrespective of whether you first called that lookup method. If the lookup function changed any future behavior of any future method (not just making it faster but changed the outcome, changed the return value, changed the exception), then the lookup method changed the object’s logical state — it is a mutuator.\r\n\r\nBased on that, I believe these functions should not be marked `const`. Calling `MaybeSendPing()` and `MaybeSendAddr()` multiple times will result in different behaviour that is observable from outside the class, since the `Peer()` objects are mutated.",
      "created_at": "2021-03-06T15:44:21Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r588896407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588896407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588897221",
      "pull_request_review_id": 605766216,
      "id": 588897221,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg5NzIyMQ==",
      "diff_hunk": "@@ -4196,8 +4194,20 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n     if (current_time <= node.m_next_addr_send) return;\n \n     node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n-    std::vector<CAddress> vAddr;\n-    vAddr.reserve(node.vAddrToSend.size());\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about\n+    auto addr_already_known = [&node](const CAddress& addr) {return node.m_addr_known->contains(addr.GetKey());};\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 20,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "151597e19ba3dd662c25ea37f957f5ceddc95aec",
      "in_reply_to_id": 588780970,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes! Thank you :)",
      "created_at": "2021-03-06T15:51:07Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r588897221",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588897221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4190,
      "original_line": 4190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588899879",
      "pull_request_review_id": 605767957,
      "id": 588899879,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg5OTg3OQ==",
      "diff_hunk": "@@ -4196,8 +4194,20 @@ void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds curre\n     if (current_time <= node.m_next_addr_send) return;\n \n     node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n-    std::vector<CAddress> vAddr;\n-    vAddr.reserve(node.vAddrToSend.size());\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about\n+    auto addr_already_known = [&node](const CAddress& addr) {return node.m_addr_known->contains(addr.GetKey());};\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),",
      "path": "src/net_processing.cpp",
      "position": 87,
      "original_position": 20,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "151597e19ba3dd662c25ea37f957f5ceddc95aec",
      "in_reply_to_id": 588780970,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done!",
      "created_at": "2021-03-06T16:16:36Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r588899879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588899879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4190,
      "original_line": 4190,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596292997",
      "pull_request_review_id": 614671944,
      "id": 596292997,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjI5Mjk5Nw==",
      "diff_hunk": "@@ -334,7 +334,10 @@ class PeerManagerImpl final : public PeerManager\n \n     /** Send a ping message every PING_INTERVAL or if requested via RPC. May\n      *  mark the peer to be disconnected if a ping has timed out. */\n-    void MaybeSendPing(CNode& node_to, Peer& peer);\n+    void MaybeSendPing(CNode& node_to, Peer& peer, std::chrono::microseconds now);",
      "path": "src/net_processing.cpp",
      "position": 17,
      "original_position": 5,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "950398a61b0677b852f26f66ec2deda599b0b5fc",
      "in_reply_to_id": 587104852,
      "user": {
        "login": "amitiuttarwar",
        "id": 1500952,
        "node_id": "MDQ6VXNlcjE1MDA5NTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/amitiuttarwar",
        "html_url": "https://github.com/amitiuttarwar",
        "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
        "following_url": "https://api.github.com/users/amitiuttarwar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/amitiuttarwar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/amitiuttarwar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
        "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
        "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
        "events_url": "https://api.github.com/users/amitiuttarwar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm convinced :) ",
      "created_at": "2021-03-17T18:45:09Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r596292997",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596292997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 324,
      "original_line": 324,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602442471",
      "pull_request_review_id": 622345585,
      "id": 602442471,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjQ0MjQ3MQ==",
      "diff_hunk": "@@ -4156,6 +4158,72 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds current_time)\n+{\n+    AssertLockHeld(node.cs_sendProcessing);\n+\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !m_chainman.ActiveChainstate().IsInitialBlockDownload() &&\n+        node.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (node.m_next_local_addr_send != 0us) {\n+            node.m_addr_known->reset();\n+        }\n+        if (std::optional<CAddress> local_addr = GetLocalAddrForPeer(&node)) {\n+            FastRandomContext insecure_rand;\n+            node.PushAddress(*local_addr, insecure_rand);\n+        }\n+        node.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= node.m_next_addr_send) return;\n+\n+    node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about, and add new\n+    // addrs to the m_addr_known filter on the same pass.\n+    auto addr_already_known = [&node](const CAddress& addr) {\n+        bool ret = node.m_addr_known->contains(addr.GetKey());\n+        if (!ret) node.m_addr_known->insert(addr.GetKey());\n+        return ret;\n+    };\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),\n+                           node.vAddrToSend.end());\n+\n+    // No addr messages to send\n+    if (node.vAddrToSend.empty()) return;",
      "path": "src/net_processing.cpp",
      "position": 91,
      "original_position": 88,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff\r\n\r\nEarly return skips https://github.com/bitcoin/bitcoin/blob/e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff/src/net_processing.cpp#L4221-L4224\r\n\r\nThat differs from original behavior.",
      "created_at": "2021-03-26T16:44:43Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r602442471",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602442471"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4194,
      "original_line": 4194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602883642",
      "pull_request_review_id": 622751108,
      "id": 602883642,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjg4MzY0Mg==",
      "diff_hunk": "@@ -4194,7 +4192,9 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     // If we get here, the outgoing message serialization version is set and can't change.\n     const CNetMsgMaker msgMaker(pto->GetCommonVersion());\n \n-    MaybeSendPing(*pto, *peer);\n+    const auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    MaybeSendPing(*pto, *peer, current_time);",
      "path": "src/net_processing.cpp",
      "position": 121,
      "original_position": 34,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "461dda316aefa4f792350a82ca2fb8c6daf8cca1",
      "in_reply_to_id": null,
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "super nit: `current_time` here is `const`. Not sure if the intention for `now` is to be immutable in `MaybeSendPing()`, but I think  `now` would still be mutable even though the outer scoped variable is `const` because of the param signature in `MaybeSendPing(..., std::chrono::microseconds now)`",
      "created_at": "2021-03-28T14:04:30Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r602883642",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/602883642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4254,
      "original_line": 4254,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603171920",
      "pull_request_review_id": 623068741,
      "id": 603171920,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzE3MTkyMA==",
      "diff_hunk": "@@ -4194,7 +4192,9 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     // If we get here, the outgoing message serialization version is set and can't change.\n     const CNetMsgMaker msgMaker(pto->GetCommonVersion());\n \n-    MaybeSendPing(*pto, *peer);\n+    const auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    MaybeSendPing(*pto, *peer, current_time);",
      "path": "src/net_processing.cpp",
      "position": 121,
      "original_position": 34,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "461dda316aefa4f792350a82ca2fb8c6daf8cca1",
      "in_reply_to_id": 602883642,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In general, there's no benefit to making pass by value parameters const. Passing by reference to const indicates to the caller that the parameter will not be mutated. When passing by value, a copy of the parameter is made, so the original object cannot be mutated.\r\n\r\nThere's very good documentation about how to pass parameters in the c++ core guidelines: https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#f16-for-in-parameters-pass-cheaply-copied-types-by-value-and-others-by-reference-to-const.",
      "created_at": "2021-03-29T10:11:36Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r603171920",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603171920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4254,
      "original_line": 4254,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603212914",
      "pull_request_review_id": 623122411,
      "id": 603212914,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIxMjkxNA==",
      "diff_hunk": "@@ -4365,6 +4368,68 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& pto)\n+{\n+    // Nothing to do for non-address-relay peers\n+    if (!pto.RelayAddrsWithConn()) return;\n+\n+    auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !::ChainstateActive().IsInitialBlockDownload() &&\n+        pto.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (pto.m_next_local_addr_send != 0us) {\n+            pto.m_addr_known->reset();\n+        }\n+        if (Optional<CAddress> local_addr = GetLocalAddrForPeer(&pto)) {\n+            FastRandomContext insecure_rand;\n+            pto.PushAddress(*local_addr, insecure_rand);\n+        }\n+        pto.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= pto.m_next_addr_send) return;\n+    pto.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(pto.m_addr_known);\n+    assert(pto.vAddrToSend.size() <= MAX_ADDR_TO_SEND);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "5e9af6f8412a773b920b4d2c2c972c811e57dd31",
      "in_reply_to_id": 579181272,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "#21317 has now been merged so I've updated this to use the `if (!Assume(condition)) { recovery; }` pattern.",
      "created_at": "2021-03-29T11:22:55Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r603212914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603212914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603213253",
      "pull_request_review_id": 623122850,
      "id": 603213253,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIxMzI1Mw==",
      "diff_hunk": "@@ -546,8 +546,8 @@ class CNode\n     std::vector<CAddress> vAddrToSend;\n     std::unique_ptr<CRollingBloomFilter> m_addr_known{nullptr};\n     bool fGetAddr{false};\n-    std::chrono::microseconds m_next_addr_send GUARDED_BY(cs_sendProcessing){0};\n-    std::chrono::microseconds m_next_local_addr_send GUARDED_BY(cs_sendProcessing){0};\n+    std::chrono::microseconds m_next_addr_send{0};\n+    std::chrono::microseconds m_next_local_addr_send{0};",
      "path": "src/net.h",
      "position": null,
      "original_position": 7,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "975f0060aabc5d0de37ce5542f5c0f2055daebfe",
      "in_reply_to_id": 583805388,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is still causing confusion for reviewers, so I've moved the fields to have their own lock that is only used in net_processing.",
      "created_at": "2021-03-29T11:23:30Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r603213253",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603213253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 550,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603213680",
      "pull_request_review_id": 623123390,
      "id": 603213680,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIxMzY4MA==",
      "diff_hunk": "@@ -4156,6 +4158,72 @@ void PeerManagerImpl::MaybeSendPing(CNode& node_to, Peer& peer)\n     }\n }\n \n+void PeerManagerImpl::MaybeSendAddr(CNode& node, std::chrono::microseconds current_time)\n+{\n+    AssertLockHeld(node.cs_sendProcessing);\n+\n+    // Nothing to do for non-address-relay peers\n+    if (!node.RelayAddrsWithConn()) return;\n+\n+    assert(node.m_addr_known);\n+\n+    // Periodically advertise our local address to the peer.\n+    if (fListen && !m_chainman.ActiveChainstate().IsInitialBlockDownload() &&\n+        node.m_next_local_addr_send < current_time) {\n+        // If we've sent before, clear the bloom filter for the peer, so that our\n+        // self-announcement will actually go out.\n+        // This might be unnecessary if the bloom filter has already rolled\n+        // over since our last self-announcement, but there is only a small\n+        // bandwidth cost that we can incur by doing this (which happens\n+        // once a day on average).\n+        if (node.m_next_local_addr_send != 0us) {\n+            node.m_addr_known->reset();\n+        }\n+        if (std::optional<CAddress> local_addr = GetLocalAddrForPeer(&node)) {\n+            FastRandomContext insecure_rand;\n+            node.PushAddress(*local_addr, insecure_rand);\n+        }\n+        node.m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n+    }\n+\n+    // We sent an `addr` message to this peer recently. Nothing more to do.\n+    if (current_time <= node.m_next_addr_send) return;\n+\n+    node.m_next_addr_send = PoissonNextSend(current_time, AVG_ADDRESS_BROADCAST_INTERVAL);\n+\n+    assert(node.vAddrToSend.size() <= MAX_ADDR_TO_SEND);\n+\n+    // Remove addr records that the peer already knows about, and add new\n+    // addrs to the m_addr_known filter on the same pass.\n+    auto addr_already_known = [&node](const CAddress& addr) {\n+        bool ret = node.m_addr_known->contains(addr.GetKey());\n+        if (!ret) node.m_addr_known->insert(addr.GetKey());\n+        return ret;\n+    };\n+    node.vAddrToSend.erase(std::remove_if(node.vAddrToSend.begin(), node.vAddrToSend.end(), addr_already_known),\n+                           node.vAddrToSend.end());\n+\n+    // No addr messages to send\n+    if (node.vAddrToSend.empty()) return;",
      "path": "src/net_processing.cpp",
      "position": 91,
      "original_position": 88,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "e3d6cbca83300e5ccc0fd8a1075ff52654aa76ff",
      "in_reply_to_id": 602442471,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks @hebasto! See https://github.com/bitcoin/bitcoin/pull/21236#issuecomment-809301197.",
      "created_at": "2021-03-29T11:24:14Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r603213680",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603213680"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4194,
      "original_line": 4194,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603229203",
      "pull_request_review_id": 623143269,
      "id": 603229203,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzIyOTIwMw==",
      "diff_hunk": "@@ -4194,7 +4192,9 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     // If we get here, the outgoing message serialization version is set and can't change.\n     const CNetMsgMaker msgMaker(pto->GetCommonVersion());\n \n-    MaybeSendPing(*pto, *peer);\n+    const auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    MaybeSendPing(*pto, *peer, current_time);",
      "path": "src/net_processing.cpp",
      "position": 121,
      "original_position": 34,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "461dda316aefa4f792350a82ca2fb8c6daf8cca1",
      "in_reply_to_id": 602883642,
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, apologies, I think I should have been more clear. Even though the `std::chrono` is passed by value, MaybeSendPing() treats ~it~ the copy as mutable even though I don't think the method mutates the copy. So I was just thinking would it be useful/or maybe unecessary to make current_time in MaybeSendPing() also const.",
      "created_at": "2021-03-29T11:52:04Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r603229203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603229203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4254,
      "original_line": 4254,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603305159",
      "pull_request_review_id": 623243445,
      "id": 603305159,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMzMwNTE1OQ==",
      "diff_hunk": "@@ -4194,7 +4192,9 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n     // If we get here, the outgoing message serialization version is set and can't change.\n     const CNetMsgMaker msgMaker(pto->GetCommonVersion());\n \n-    MaybeSendPing(*pto, *peer);\n+    const auto current_time = GetTime<std::chrono::microseconds>();\n+\n+    MaybeSendPing(*pto, *peer, current_time);",
      "path": "src/net_processing.cpp",
      "position": 121,
      "original_position": 34,
      "commit_id": "935d4889228e7e361c8b0020761fa0e08a55fb48",
      "original_commit_id": "461dda316aefa4f792350a82ca2fb8c6daf8cca1",
      "in_reply_to_id": 602883642,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I understand. Yes, it is possible to mark the function parameters as `const` in the definition, which would prevent the copy from being mutated within the function body. You can even do this if the function declaration does not mark the parameter as `const`.\r\n\r\nHowever, I haven't ever seen that style used in this project. It may be marginally useful, but it may also be misleading (eg see https://groups.google.com/u/4/g/comp.lang.c++.moderated/c/DEQTho8OCj8).",
      "created_at": "2021-03-29T13:42:59Z",
      "updated_at": "2021-03-31T17:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21236#discussion_r603305159",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/603305159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21236"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4254,
      "original_line": 4254,
      "side": "RIGHT"
    }
  ]
}