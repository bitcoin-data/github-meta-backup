{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451",
    "id": 1110855613,
    "node_id": "PR_kwDOABII585CNk-9",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26451",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26451.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26451.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/41b0a23433b545ac6e6576a2e85df929e4635323",
    "number": 26451,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Enforce incentive compatibility for all RBF replacements",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Opening this for discussion.\r\n\r\nCurrently it's possible in our RBF rules to evict a transaction with higher mining score from our mempool, in favor of a transaction with a higher total fee but lower feerate.  This patch would fix this incentive incompatibility, by requiring that any new transaction have a mining score (as defined by the minimum of its feerate and its feerate including ancestors) to be greater than the individual feerates of all transactions that would be evicted.\r\n\r\nBecause this new feerate criteria includes the ancestors of a new transaction in the score, we are able to eliminate the prohibition against including new unconfirmed parents in a replacement transaction, a slight relaxation of the prior rules.",
    "labels": [
      {
        "id": 64584,
        "node_id": "MDU6TGFiZWw2NDU4NA==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
        "name": "Brainstorming",
        "color": "ebd775",
        "default": false
      },
      {
        "id": 82428251,
        "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
        "name": "TX fees and policy",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2022-11-04T13:50:15Z",
    "updated_at": "2023-05-25T02:45:10Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "48c3b54ea5d1cf188545eb89d89ef1573a9c1196",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sdaftuar:2022-11-fixrbf",
      "ref": "2022-11-fixrbf",
      "sha": "41b0a23433b545ac6e6576a2e85df929e4635323",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 245665,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:41:53Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2023-02-11T10:16:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9052d869c9679d997931084384c026450c2d918b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:15:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 164,
    "deletions": 27,
    "changed_files": 3,
    "commits": 4,
    "review_comments": 4,
    "comments": 33
  },
  "events": [
    {
      "event": "labeled",
      "id": 7740917667,
      "node_id": "LE_lADOABII585VmTgazwAAAAHNZQej",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7740917667",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T13:51:37Z",
      "label": {
        "name": "Brainstorming",
        "color": "ebd775"
      }
    },
    {
      "event": "commented",
      "id": 1303579015,
      "node_id": "IC_kwDOABII585NswmH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303579015",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T13:53:09Z",
      "updated_at": "2022-11-04T13:53:09Z",
      "author_association": "MEMBER",
      "body": "The new test included in the second commit demonstrates the problem highlighted in the OP (the test will fail on master).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303579015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1303609521,
      "node_id": "IC_kwDOABII585Ns4Cx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303609521",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:06:49Z",
      "updated_at": "2022-11-04T14:06:49Z",
      "author_association": "MEMBER",
      "body": "> Because this new feerate criteria includes the ancestors of a new transaction in the score, we are able to eliminate the prohibition against including new unconfirmed parents in a replacement transaction, a slight relaxation of the prior rules.\r\n\r\nThis is elimination of bip125(or doc/policy/mempool-replacements.md) rule#2, if I understand correctly.\r\n\r\nOne interesting but understandable wrinkle is that in common use-cases, adding new unconfirmed inputs(to CPFP) is likely uneconomical if one is replacing high feerate children, even if the original ancestors are low feerate. I ran into this case when thinking about V3 which has a similar rule in place: https://github.com/bitcoin/bitcoin/pull/26403/commits/dc8b61160187bf8423f9e8d2d39d9724a35a43ec#diff-d18bbdec91d0f4825b512a31f34666b000c7b7e2e05a3d43570c4b971532616fR158\r\n\r\nSome basic testing of this new-unconfirmed-inputs case should make it obvious.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303609521",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1303615624,
      "node_id": "IC_kwDOABII585Ns5iI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303615624",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:11:13Z",
      "updated_at": "2022-11-04T14:11:13Z",
      "author_association": "MEMBER",
      "body": "> This is elimination of bip125(or doc/policy/mempool-replacements.md) rule#2, if I understand correctly.\r\n\r\nYes, this PR would eliminate rule 2, and modify rule 6.\r\n\r\nI agree with you that including more unconfirmed inputs makes it very difficult to replace high-feerate children under the policy I'm suggesting. If you look at the test I've added, the feerate needed in order to get the new transaction into the mempool is extremely high, illustrating the point that fixing incentive compatibility appears to make the pinning problem much, much worse.\r\n\r\nHowever, if we are interested in incentive compatibility of our replacement rules, I believe this is the most straightforward set of rules that we could adopt which would ensure that we never evict something that has a better mining score than a new incoming transaction.\r\n\r\n\r\n\r\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303615624",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1303620946,
      "node_id": "IC_kwDOABII585Ns61S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303620946",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:15:44Z",
      "updated_at": "2022-11-04T14:15:44Z",
      "author_association": "MEMBER",
      "body": "I'm asking for a test case of rule#2 being removed, as I don't think that's covered yet?",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303620946",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1303632495,
      "node_id": "IC_kwDOABII585Ns9pv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303632495",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:24:49Z",
      "updated_at": "2022-11-04T14:24:49Z",
      "author_association": "MEMBER",
      "body": "@instagibbs Done - I added back a modified version of the prior test, to demonstrate new unconfirmed inputs are permitted.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303632495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7741221099,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHNaajr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7741221099",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:24:50Z"
    },
    {
      "event": "subscribed",
      "id": 7741221117,
      "node_id": "SE_lADOABII585VmTgazwAAAAHNaaj9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7741221117",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:24:50Z"
    },
    {
      "event": "commented",
      "id": 1303632960,
      "node_id": "IC_kwDOABII585Ns9xA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303632960",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:25:09Z",
      "updated_at": "2022-11-04T14:25:09Z",
      "author_association": "MEMBER",
      "body": "concept ACK, would also need documentation in doc/policy/mempool-replacements.md of course",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303632960",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1303649608,
      "node_id": "IC_kwDOABII585NtB1I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303649608",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:32:04Z",
      "updated_at": "2022-11-04T14:32:04Z",
      "author_association": "MEMBER",
      "body": "I actually just realized that this PR does not guarantee incentive compatible replacements, either.  Will push up a test case to illustrate it (maybe it'll be fun for reviewers to figure out why in the meantime).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303649608",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "labeled",
      "id": 7741369409,
      "node_id": "LE_lADOABII585VmTgazwAAAAHNa-xB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7741369409",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T14:41:52Z",
      "label": {
        "name": "TX fees and policy",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 1168669438,
      "node_id": "PRR_kwDOABII585FqHr-",
      "url": null,
      "actor": null,
      "commit_id": "ff77ab34fb219cf4e626690f4c9f919c18dc1045",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK to enforcing replacements are better mining candidates. IIUC this approach seems similar to #23121 (but using min(ancestor, individual) feerate) and the `CheckMinerScores()` check from #25038 (applied to individual replacements as well)?",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#pullrequestreview-1168669438",
      "submitted_at": "2022-11-04T14:47:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451"
    },
    {
      "event": "commented",
      "id": 1303840750,
      "node_id": "IC_kwDOABII585Ntwfu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303840750",
      "actor": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T16:29:11Z",
      "updated_at": "2022-11-04T16:29:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "Comment: whether or not this is the right trade-off depends on the state of the mempool. At one extreme, if the mempool is entirely empty we'd be better off with the higher fee transaction regardless. If the mempool was full, we may even be better off with a higher feerate, lower fee paying, transaction.\r\n\r\nPersonally I'd lean towards the latter assumption. But it's worth discussing.",
      "user": {
        "login": "petertodd",
        "id": 7042,
        "node_id": "MDQ6VXNlcjcwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/petertodd",
        "html_url": "https://github.com/petertodd",
        "followers_url": "https://api.github.com/users/petertodd/followers",
        "following_url": "https://api.github.com/users/petertodd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/petertodd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/petertodd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
        "organizations_url": "https://api.github.com/users/petertodd/orgs",
        "repos_url": "https://api.github.com/users/petertodd/repos",
        "events_url": "https://api.github.com/users/petertodd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/petertodd/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303840750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1303889425,
      "node_id": "IC_kwDOABII585Nt8YR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1303889425",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-04T17:03:46Z",
      "updated_at": "2022-11-04T17:03:46Z",
      "author_association": "MEMBER",
      "body": "Based on discussions, I think the issue is that a new unconfirmed input could be included that actually would have been mined anyways, thus giving the replacement child a higher estimated miner score than it otherwise should have. Raising the \"min\" in the function between the ancestor and individual score.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303889425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "reviewed",
      "id": 1169301807,
      "node_id": "PRR_kwDOABII585FsiEv",
      "url": null,
      "actor": null,
      "commit_id": "ff77ab34fb219cf4e626690f4c9f919c18dc1045",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#pullrequestreview-1169301807",
      "submitted_at": "2022-11-05T03:36:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451"
    },
    {
      "event": "commented",
      "id": 1304451884,
      "node_id": "IC_kwDOABII585NwFss",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304451884",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-05T09:10:51Z",
      "updated_at": "2022-11-05T09:10:51Z",
      "author_association": "MEMBER",
      "body": "Would it be better to make this change as part of a rethink for package rbf?\r\n\r\n> Currently it's possible in our RBF rules to evict a transaction with higher mining score from our mempool, in favor of a transaction with a higher total fee but lower feerate.\r\n\r\nIn particular, doesn't this block some cases where you could currently replace a pair of txs [A,B] \r\nwith [C,D]  (A and C conflicting; B spending A, and D spending C) where D has the highest mining score? That is, without package relay, you have to consider whether to evict both of A,B while only considering C, which will often lead you to make a suboptimal choice. With package relay, you can wait and consider C's inclusion only when you also have D available, and use that extra information to make a better decision...\r\n\r\nGetting the incentive compatible answer here seems hard even with package relay (if you receive C on its own first, you should reject it; but if you add its txid to a hard reject filter and forget it, then when D arrives you'll reject it for having a rejected parent, rather than recalculating the fee and seeing that it is worth replacing). Incentive compatibility may also result in the mempool repeatedly swapping between A and C, eg if they were pre-signed transactions being CPFPed by a series of B1/D1/B2/D2/.. CPFP txs taking a scorched earth approach of incrementally burning the potential profits to fees, though that's presumably solved by requiring Bn/Dn to pay an incremental relay fee for the package, not just itself.\r\n\r\nOther than that, this seems reasonable to me.\r\n\r\n> Based on discussions, I think the issue is that a new unconfirmed input could be included that actually would have been mined anyways, thus giving the replacement child a higher estimated miner score than it otherwise should have. Raising the \"min\" in the function between the ancestor and individual score.\r\n\r\nCan you give a concrete example of this? As far as I can see that case only works when the new conflict C replacing A+B, spends some new unconfirmed tx Y, and \"Y + X + C\" has a lower fee rate than \"Y + X + A + B\". But we compare C's feerate with A and B's raw feerate, and only accept the replacement if that's larger; and having Y as a parent can only serve to reduce C's feerate from raw? So having mined Y and X, it seems to me that mining C is always superior to A or A+B, except in the edge case where you've run out of block space.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1304451884",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1304561041,
      "node_id": "IC_kwDOABII585NwgWR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304561041",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-05T14:51:20Z",
      "updated_at": "2022-11-05T14:52:58Z",
      "author_association": "MEMBER",
      "body": "I seem unable to construct an example that's worrying.\r\n\r\nFor the sake of discussion and math simplicity, assume we allow 0-fee tx into mempool, no incremental fee increase required, and all tx are same size, and assuming we aren't optimizing for flat fees but feerate.\r\n\r\nA: 0sat/vbyte parent of D (in mempool)\r\nB: 0sat/vbyte parent of D' (in mempool)\r\nC: Xsat/vbyte parent of D' (in mempool)\r\nD: 10sat/vbyte child of A (in mempool)\r\nD': 10 sat/vbyte child of {A,B,C} (proposed RBF tx)\r\n\r\nUsing this example and tweaking what X is, it seems the miner gets paid optimally either way, regardless of the \"stolen valor\" from the ancestor C feerate. If it's really high, the RBF succeeds, D is swapped out for D', fees unchanged(modulo incremental fees in reality). If it's low, it fails, and fees are unchanged.\r\n\r\nPerhaps the multi-conflict is key to this, but I await specific counter examples with the same assumptions as above.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1304561041",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1304585306,
      "node_id": "IC_kwDOABII585NwmRa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304585306",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-05T16:48:14Z",
      "updated_at": "2022-11-06T09:15:44Z",
      "author_association": "MEMBER",
      "body": "fwiw: I came across a bunch of mainnet replacements recently that would be affected by this restricting of rule 6. Let me know if numbers or examples would be helpful.",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1304585306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1304633584,
      "node_id": "IC_kwDOABII585NwyDw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304633584",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-05T20:14:29Z",
      "updated_at": "2022-11-05T20:14:29Z",
      "author_association": "MEMBER",
      "body": "Interesting. \r\n\r\nVerified both added tests fail on master as expected with *No exception raised* and *replacement-adds-unconfirmed*, respectively, without the following removals:\r\n\r\n<details><summary>make new tests pass on master</summary><p>\r\n\r\n```diff\r\n--- a/test/functional/feature_rbf.py\r\n+++ b/test/functional/feature_rbf.py\r\n@@ -311,7 +311,7 @@ class ReplaceByFeeTest(BitcoinTestFramework):\r\n         )[\"hex\"]\r\n \r\n         # This will raise an exception due to insufficient fee\r\n-        assert_raises_rpc_error(-26, \"insufficient fee\", self.nodes[0].sendrawtransaction, tx1b_hex, 0)\r\n+        # assert_raises_rpc_error(-26, \"insufficient fee\", self.nodes[0].sendrawtransaction, tx1b_hex, 0)\r\n \r\n         # Increasing the fee_per_output sufficiently should cause the\r\n         # transaction to succeed. We have to exceed the individual feerates of\r\n@@ -384,8 +384,8 @@ class ReplaceByFeeTest(BitcoinTestFramework):\r\n             amount_per_output=1 * COIN,\r\n         )[\"hex\"]\r\n \r\n-        tx2_txid = self.nodes[0].sendrawtransaction(tx2_hex, 0)\r\n-        assert tx2_txid in self.nodes[0].getrawmempool()\r\n+        # tx2_txid = self.nodes[0].sendrawtransaction(tx2_hex, 0)\r\n+        # assert tx2_txid in self.nodes[0].getrawmempool()\r\n```\r\n</p></details>\r\n\r\n-----\r\n\r\nInitially tweaking the tests, it appears these `fee_per_output` test values can be much closer; the following values pass for me:\r\n\r\n```diff\r\n--- a/test/functional/feature_rbf.py\r\n+++ b/test/functional/feature_rbf.py\r\n@@ -307,7 +307,7 @@ class ReplaceByFeeTest(BitcoinTestFramework):\r\n             utxos_to_spend=[tx0_outpoint],\r\n             sequence=0,\r\n             num_outputs=100,\r\n-            fee_per_output=20000,\r\n+            fee_per_output=209663,\r\n         )[\"hex\"]\r\n \r\n         # This will raise an exception due to insufficient fee\r\n@@ -320,7 +320,7 @@ class ReplaceByFeeTest(BitcoinTestFramework):\r\n                 utxos_to_spend=[tx0_outpoint],\r\n                 sequence=0,\r\n                 num_outputs=100,\r\n-                fee_per_output=220000,\r\n+                fee_per_output=209664,\r\n         )[\"hex\"]\r\n```\r\n\r\n-----\r\n\r\nAside: `test/functional/wallet_listtransactions.py` may need to be updated, pending future changes. With the current change it raises *insufficient fee, rejecting replacement* both in the CI and run locally.\r\n\r\n<details><summary>./test/functional/wallet_listtransactions.py</summary><p>\r\n\r\n```\r\n$ test/functional/wallet_listtransactions.py \r\n2022-11-05T19:20:28.923000Z TestFramework (INFO): Initializing test directory /var/folders/bz/mn3hr6td37bczwp7j89frs4w0000gn/T/bitcoin_func_test_6n7cj_o0\r\n2022-11-05T19:20:30.334000Z TestFramework (INFO): Test simple send from node0 to node1\r\n2022-11-05T19:20:31.490000Z TestFramework (INFO): Test confirmations change after mining a block\r\n2022-11-05T19:20:32.516000Z TestFramework (INFO): Test send-to-self on node0\r\n2022-11-05T19:20:32.653000Z TestFramework (INFO): Test sendmany from node1: twice to self, twice to node0\r\n2022-11-05T19:20:33.956000Z TestFramework (INFO): Test 'include_watchonly' feature (legacy wallet)\r\n2022-11-05T19:20:35.187000Z TestFramework (INFO): Test txs w/o opt-in RBF (bip125-replaceable=no)\r\n2022-11-05T19:20:40.454000Z TestFramework (INFO): Test txs with opt-in RBF (bip125-replaceable=yes)\r\n2022-11-05T19:20:45.618000Z TestFramework (INFO): Test tx with unknown RBF state (bip125-replaceable=unknown)\r\n2022-11-05T19:20:45.620000Z TestFramework (ERROR): JSONRPC error\r\nTraceback (most recent call last):\r\n  File \"/Users/jon/bitcoin/bitcoin/test/functional/test_framework/test_framework.py\", line 133, in main\r\n    self.run_test()\r\n  File \"/Users/jon/bitcoin/bitcoin/test/functional/wallet_listtransactions.py\", line 109, in run_test\r\n    self.run_rbf_opt_in_test()\r\n  File \"/Users/jon/bitcoin/bitcoin/test/functional/wallet_listtransactions.py\", line 197, in run_rbf_opt_in_test\r\n    txid_3b = self.nodes[0].sendrawtransaction(tx3_b_signed, 0)\r\n  File \"/Users/jon/bitcoin/bitcoin/test/functional/test_framework/coverage.py\", line 49, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n  File \"/Users/jon/bitcoin/bitcoin/test/functional/test_framework/authproxy.py\", line 144, in __call__\r\n    raise JSONRPCException(response['error'], status)\r\ntest_framework.authproxy.JSONRPCException: insufficient fee, rejecting replacement d7b92bf468ed0d0d952df107069c359849e5c8d432412bed03398fbad851e82a; new feerate 0.00409641 BTC/kvB <= old feerate 0.00909090 BTC/kvB (-26)\r\n```\r\n</p></details>\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1304633584",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1304669412,
      "node_id": "IC_kwDOABII585Nw6zk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304669412",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-05T23:57:45Z",
      "updated_at": "2022-11-05T23:57:45Z",
      "author_association": "MEMBER",
      "body": "@instagibbs I pushed up a test that I believe shows the insufficiency of the logic.  Sorry if the test is a little ugly, but if you inspect you'll see that there are three initial unrelated transactions in the mempool:\r\ntxA - feerate 961 sat/vbyte\r\ntxP1 - feerate 9.6 sat/vbyte\r\ntxP2 - feerate 9615 sat/vbyte\r\n\r\nThen we construct transaction A' that conflicts with A but spends P1 and P2.  The feerate of A' by itself is 1073 sat/vbyte, but the feerate of (A', P1) is 715 sat/vbyte. So assuming blocks are full with other similarly good transactions, a miner would rather include P2 + A in a block than include P2 + P1 + A'.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1304669412",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7746516572,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHNunZc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7746516572",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-05T23:57:46Z"
    },
    {
      "event": "subscribed",
      "id": 7746516574,
      "node_id": "SE_lADOABII585VmTgazwAAAAHNunZe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7746516574",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-05T23:57:46Z"
    },
    {
      "event": "commented",
      "id": 1304930262,
      "node_id": "IC_kwDOABII585Nx6fW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1304930262",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-06T23:48:03Z",
      "updated_at": "2023-05-25T02:45:10Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [instagibbs](https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1303632960), [glozow](https://github.com/bitcoin/bitcoin/pull/26451#pullrequestreview-1168669438), [ariard](https://github.com/bitcoin/bitcoin/pull/26451#pullrequestreview-1169301807) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27742](https://github.com/bitcoin/bitcoin/pull/27742) ([NO MERGE] BIP331 Ancestor Package Relay by glozow)\n* [#26525](https://github.com/bitcoin/bitcoin/pull/26525) (Remove -mempoolfullrbf option by BitcoinErrorLog)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1304930262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1305579527,
      "node_id": "IC_kwDOABII585N0ZAH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1305579527",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T12:59:09Z",
      "updated_at": "2022-11-07T12:59:09Z",
      "author_association": "MEMBER",
      "body": "@sdaftuar ok, my example actually fails this as well. I got confused and compared total fees, vs the \"package feerate\". ",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1305579527",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7752379941,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHOE-4l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7752379941",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T12:59:09Z"
    },
    {
      "event": "subscribed",
      "id": 7752379956,
      "node_id": "SE_lADOABII585VmTgazwAAAAHOE-40",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7752379956",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T12:59:09Z"
    },
    {
      "event": "commented",
      "id": 1305686122,
      "node_id": "IC_kwDOABII585N0zBq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1305686122",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T14:19:25Z",
      "updated_at": "2022-11-07T14:19:25Z",
      "author_association": "MEMBER",
      "body": "> @instagibbs I pushed up a test that I believe shows the insufficiency of the logic. Sorry if the test is a little ugly, but if you inspect you'll see that there are three initial unrelated transactions in the mempool: txA - feerate 961 sat/vbyte txP1 - feerate 9.6 sat/vbyte txP2 - feerate 9615 sat/vbyte\r\n> \r\n> Then we construct transaction A' that conflicts with A but spends P1 and P2. The feerate of A' by itself is 1073 sat/vbyte, but the feerate of (A', P1) is 715 sat/vbyte. So assuming blocks are full with other similarly good transactions, a miner would rather include P2 + A in a block than include P2 + P1 + A'.\r\n\r\nI think with rounder numbers this looks like:\r\n\r\n * P2 1000vb, 10Msat (10,000sat/vb)\r\n * A 1000vb, 1Msat (1,000sat/vb)\r\n * B 1000vb, 1.1Msat (1,100sat/vb)  (conflicts with A, spends P1 and P2)\r\n * C 1000vb, 600ksat (600sat/vb\r\n * P1 1000vb, 10ksat (10sat/vb)\r\n\r\nWith A in the mempool, your block ordering would be [P2, A, C, P1]. With B in the mempool, your block ordering would be [P2, C, P1, B]. That has the usual complexities with limited block sizes -- if we were at the last 2000vb or 3000vb in the block, we'd prefer to have A; but if we had 4000vb in the block (and no other txs), we'd prefer B.\r\n\r\nEven if we fixed that, and only counted P1 towards B's score and thus chose to keep A, we could just go a layer down due to the possibility of another tx cpfp'ing P1: if we added a tx,\r\n\r\n * D 1000vb, 100Msat (100,000 sat/vb) (spends P1, doesn't conflict with anything)\r\n\r\nthen our block ordering would be [P1, D, P2, A, C] or [P1, D, P2, B, C] and we would always prefer to have B in our mempool, no matter how much space we had left in the block. And then if a tx E came in, that conflicts with D, but doesn't spend P1, we'd go back to preferring A rather than B.\r\n\r\nThat is to say: there are at least two \"non-local\" issues that affect whether we prefer A or B: how close A or B would be to the end of the block, and whether other higher-scoring transactions are already cpfp'ing in-mempool parents.\r\n\r\nI think maybe what we're trying to achieve is something more simple, like \"relay tx replacements if and only if they're obviously sensible\", ie:\r\n\r\n * if the signers of a tx are willing to spend more in fees (rules 3/4) on a replacement tx\r\n * and we're sure the replacement tx is more attractive to miners than the original (rules 2/5/6)\r\n * then include it in our mempool and relay it onwards\r\n\r\nIf we can't be sure which of A/B is best because it could change depending on unrelated txs in the mempool, then we just don't do anything, though of course the signers could always contact miners directly. We'll still get this wrong at edge cases due to the block limit (a larger replacement with more fees might not fit in a block when the smaller original would, and despite having lower fees, the next best alternative might be even lower than that), but the only way to avoid that would be to require the tx always be smaller, which seems unreasonably limiting.\r\n\r\nIn light of that, rather than just doing away with rule 2, maybe examining it explicitly might be better? If you're replacing A with B, and A's in-mempool parents are X,Y and B's are X,Z; then maybe you want to compare the minimum score of (B, B+Z.ancestor_score) compared to the minimum score of (A, A+Y.ancestor_score)? For multiple parents, I think you'd want to sort them by their ancestors scores (smallest to largest), and continue until your accumulated score is lower than next parent's ancestor score. That will have some false negatives still, but I think it would avoid false positives (allowing replacements that are less appealing to miners) and might not be too complicated?",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1305686122",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7753095196,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHOHtgc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7753095196",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T14:19:26Z"
    },
    {
      "event": "subscribed",
      "id": 7753095213,
      "node_id": "SE_lADOABII585VmTgazwAAAAHOHtgt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7753095213",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T14:19:26Z"
    },
    {
      "event": "commented",
      "id": 1305767774,
      "node_id": "IC_kwDOABII585N1G9e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1305767774",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T15:18:51Z",
      "updated_at": "2022-11-07T15:18:51Z",
      "author_association": "MEMBER",
      "body": "> I think maybe what we're trying to achieve is something more simple, like \"relay tx replacements if and only if they're obviously sensible\r\n\r\nAgree on goals. Future work is needed to make fee bumping reliable anyways to remove this out-of-band bump risk.\r\n\r\nI think removing shared ancestors from the ancestor calculation is \"obviously\" right. The symmetric comparison seems easier to reason about, in that we can switch the sides around from an ordering perspective, and you get identical results, i.e. not seeming to introduce pinning vector. If deemed \"incentive compatible\", it seems tighter than the `CheckMinerScores` check in https://github.com/bitcoin/bitcoin/pull/25038/files#diff-fa5cb2d84034ff72cdb9d479b17cf8c744a9bf3fc932b3a77c1a017edd767dfaR185 which suffers from an order-dependent pinning vector when adding new unconfirmed inputs.\r\n\r\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1305767774",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1306138753,
      "node_id": "IC_kwDOABII585N2hiB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1306138753",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T20:18:11Z",
      "updated_at": "2022-11-07T20:18:11Z",
      "author_association": "MEMBER",
      "body": "> I think maybe what we're trying to achieve is something more simple, like \"relay tx replacements if and only if they're obviously sensible\r\n\r\nYes this is how I'm thinking about it as well.\r\n\r\n> In light of that, rather than just doing away with rule 2, maybe examining it explicitly might be better? If you're replacing A with B, and A's in-mempool parents are X,Y and B's are X,Z; then maybe you want to compare the minimum score of (B, B+Z.ancestor_score) compared to the minimum score of (A, A+Y.ancestor_score)?\r\n\r\n@ajtowns I don't think this works, because if Y has other, higher feerate children besides A, then (A+Y).ancestor_score can understate the miner's incentive to include (Y, A) in a block -- Y might already be scheduled for inclusion due to some unrelated descendant.  An easy heuristic to avoid that issue is to just look at A's individual feerate (but that will risk overstating A's desirability -- which is ok if our goal is to merely ensure that any replacements that do happen are sensible, and not to ensure that all replacements that \"should\" happen are able to take place, but this would make pinning much worse of a problem).\r\n\r\nAlso, I think it's beneficial to avoid looking at all the ancestors of the transactions being removed, because that could be a large number of ancestors to traverse. \r\n\r\n> For multiple parents, I think you'd want to sort them by their ancestors scores (smallest to largest), and continue until your accumulated score is lower than next parent's ancestor score. That will have some false negatives still, but I think it would avoid false positives (allowing replacements that are less appealing to miners) and might not be too complicated?\r\n\r\nI think this might work (when applied to the replacement transaction only) -- will try this approach.  I think the easiest way to do this would be to ignore that the topology of the ancestors may imply that this is more of a \"worst case\" analysis than is always warranted, but if we're only worried about avoiding incentive incompatible replacements, then I think this might suffice.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1306138753",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7756019105,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHOS3Wh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7756019105",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T20:18:11Z"
    },
    {
      "event": "subscribed",
      "id": 7756019117,
      "node_id": "SE_lADOABII585VmTgazwAAAAHOS3Wt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7756019117",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T20:18:11Z"
    },
    {
      "event": "commented",
      "id": 1306572553,
      "node_id": "IC_kwDOABII585N4LcJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1306572553",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T03:20:30Z",
      "updated_at": "2022-11-08T03:20:30Z",
      "author_association": "MEMBER",
      "body": "> I don't think this works, because ...\r\n\r\nAh, yeah, I wondered why it wasn't comparing max(..) < min(..) when I was writing it.\r\n\r\n> The symmetric comparison seems easier to reason about, in that we can switch the sides around from an ordering perspective, and you get identical results, i.e. not seeming to introduce pinning vector.\r\n\r\nIf the goal is just \"relay tx replacements if and only if they're obviously sensible\",  I think preventing pinning vectors is out of scope: all you need to do to create a pinning vector is have your transactions be \"non-obvious\". To prevent them, I think you need a different goal, eg \"relay tx replacements in all circumstances, picking a consistent winner even when it's not obvious that's necessarily sensible\". That is, there's a big difference between designing something that just tries to maximise the \"obvious\" cases and one that prevents attackers from being able to find and take advantage of a \"non-obvious\" case.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1306572553",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1307315507,
      "node_id": "IC_kwDOABII585N7A0z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307315507",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T14:32:59Z",
      "updated_at": "2022-11-08T14:32:59Z",
      "author_association": "MEMBER",
      "body": "@ajtowns it's a two part optimization, ideally.  \r\n\r\nOf course in this circumstance, we have outright prohibition of new unconfirmed inputs today, so it's no worse at least. I am trying to decide if opening this door actually helps any real usage patterns. ",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1307315507",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7763436828,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHOvKUc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7763436828",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T14:32:59Z"
    },
    {
      "event": "subscribed",
      "id": 7763436837,
      "node_id": "SE_lADOABII585VmTgazwAAAAHOvKUl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7763436837",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T14:32:59Z"
    },
    {
      "event": "commented",
      "id": 1307335122,
      "node_id": "IC_kwDOABII585N7FnS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307335122",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T14:47:53Z",
      "updated_at": "2022-11-08T14:47:53Z",
      "author_association": "MEMBER",
      "body": "> @ajtowns it's a two part optimization, ideally.\r\n> \r\n> Of course in this circumstance, we have outright prohibition of new unconfirmed inputs today, so it's no worse at least. I am trying to decide if opening this door actually helps any real usage patterns.\r\n\r\nYou were CPFPing one thing, and now you want to CPFP two things?",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1307335122",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7763581458,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHOvtoS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7763581458",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T14:47:53Z"
    },
    {
      "event": "subscribed",
      "id": 7763581466,
      "node_id": "SE_lADOABII585VmTgazwAAAAHOvtoa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7763581466",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T14:47:53Z"
    },
    {
      "event": "commented",
      "id": 1307420644,
      "node_id": "IC_kwDOABII585N7afk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307420644",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T15:41:55Z",
      "updated_at": "2022-11-08T15:41:55Z",
      "author_association": "MEMBER",
      "body": "> You were CPFPing one thing, and now you want to CPFP two things?\r\n\r\nThere are a bunch of cases where this won't be practical due to the pinning asymmetry, even just accidentally against yourself. Considering the best case scenario of same size transactions:\r\n\r\nThe original child will be at a 2x feerate required for its own size to pay for its parent, and the new ancestor feerate for new unconfirmed parent/child pair needs to match this rate, resulting in 4x minimum bump required, instead of roughly 2x that is normally expected. Subsequent RBFs of child can be pretty efficient. That's not insane especially if we want to re-bump the original unconfirmed parent, but it gets proportionally bad with larger parents on either side of the equation. And of course adding even more unconfirmed inputs continues this geometric growth.\r\n\r\nMaybe that's a big enough hole to drive through in practice for a wallet.\r\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1307420644",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1307457012,
      "node_id": "IC_kwDOABII585N7jX0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1307457012",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T16:06:52Z",
      "updated_at": "2022-11-08T16:06:52Z",
      "author_association": "MEMBER",
      "body": "> > You were CPFPing one thing, and now you want to CPFP two things?\r\n> \r\n> There are a bunch of cases where this won't be practical due to the pinning asymmetry, even just accidentally against yourself. Considering the best case scenario of same size transactions:\r\n\r\nHmm, true. If you go from (A+C) to (A+B+C2) with (A+B+C2) having to have a greater feerate than C alone did, that ends up pretty crazy -- if A was 10kvb and C was 100vb, and C's paying most of the fees, then C's feerate will be 100x A+C's, and A+B+C2's feerate is greater still, so you're forced to do a 100x fee bump. Still clearly safe, and no worse than saying \"you can't add an input ever\", but maybe not worth the effort of coding :(\r\n",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1307457012",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1310746881,
      "node_id": "IC_kwDOABII585OIGkB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310746881",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T18:44:21Z",
      "updated_at": "2022-11-10T18:44:21Z",
      "author_association": "MEMBER",
      "body": "> requiring that any new transaction have a mining score (as defined by the minimum of its feerate and its feerate including ancestors) to be greater than the individual feerates of all transactions that would be evicted.\r\n\r\nFWIW this part doesn't seem to make anything particularly worse for pinning, just the normal issues we have today. Would be curious if @0xB10C has some data on use cases impacted.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1310746881",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7786104614,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHQFocm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7786104614",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T18:44:21Z"
    },
    {
      "event": "subscribed",
      "id": 7786104619,
      "node_id": "SE_lADOABII585VmTgazwAAAAHQFocr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7786104619",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T18:44:21Z"
    },
    {
      "event": "commented",
      "id": 1311916763,
      "node_id": "IC_kwDOABII585OMkLb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311916763",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-11T16:25:14Z",
      "updated_at": "2022-11-11T16:29:46Z",
      "author_association": "MEMBER",
      "body": "> > requiring that any new transaction have a mining score (as defined by the minimum of its feerate and its feerate including ancestors) to be greater than the individual feerates of all transactions that would be evicted.\r\n> \r\n> FWIW this part doesn't seem to make anything particularly worse for pinning, just the normal issues we have today. Would be curious if @0xB10C has some data on use cases impacted.\r\n\r\nI would expect that the heuristic I propose here would certainly make pinning worse if people wanted to take advantage of this.  For instance, imagine two conflicting transactions A, A'.  A is in the mempool and has two children, B and C.\r\n\r\nSuppose B is large -- 49kvb, and has very low feerate (could be 0 feerate, once package relay is in place).  C is relatively small, say 100vb[1], but pays a very large feerate, say 49.1k sats.  Then under the policy I've proposed here, someone wanting to get A' to replace A would not only need to pay more than 49.1k sats more than whatever fee A has on it, the feerate would also need to be at least 491sat/vbyte, even though B+C together only pay 1 sat/vbyte.\r\n\r\nUnder the old rules, the person creating transaction A' may have had some incentive to just make their transaction bigger, so that the increased total fee that needs to be paid can be put to use by at least consolidating UTXOs, which otherwise would cost something on their own (this would be reasonable to do if the feerate on the replacement transaction wouldn't need to be very large compared with the direct conflicts).  But with the new rule, doing that would be disastrous as a bigger transaction would also be at a much higher feerate than before.\r\n\r\n[1] I can't remember right now what the smallest reasonable transaction size I should include here, so replace this number with whatever is achievable (I assume 100 is pretty close to the size of a 1-in, 1-out segwit transaction nowadays).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1311916763",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7793454787,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHQhq7D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7793454787",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-11T16:25:15Z"
    },
    {
      "event": "subscribed",
      "id": 7793454803,
      "node_id": "SE_lADOABII585VmTgazwAAAAHQhq7T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7793454803",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-11T16:25:15Z"
    },
    {
      "event": "commented",
      "id": 1311936924,
      "node_id": "IC_kwDOABII585OMpGc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1311936924",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-11T16:46:53Z",
      "updated_at": "2022-11-11T16:46:53Z",
      "author_association": "MEMBER",
      "body": "> Under the old rules, the person creating transaction A' may have had some incentive to just make their transaction bigger\r\n\r\nThis would require the wallet to know the specific pin to overcome it in a specific way, I think?",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1311936924",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1313934927,
      "node_id": "IC_kwDOABII585OUQ5P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1313934927",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-14T15:28:53Z",
      "updated_at": "2022-11-17T17:44:32Z",
      "author_association": "MEMBER",
      "body": "I've searched through my RBF data specifically for replacements with a negative feerate deltas. I've looked at data from 2022-02-11 to 2022-10-31 captured with a Bitcoin Core node with a [patched ZMQ interface](https://github.com/0xB10C/bitcoin-zmq-mempool-chain-events/blob/v23.0-zmce/PATCH.md) running with default parameters for mempool and policy. During this period my node has seen 1.65M transactions being replaced in 363k RBF-sequences (multiple replacements related by conflicting inputs). Out of these RBF-sequences, only 223 included a replacement where the replaced-transactions feerate was higher than the replacement-transactions feerate (i.e. negative feerate delta).\r\n\r\nInitially, I thought there might be a single entity with a clear pattern doing these negative feerate delta replacements on purpose. However, by categorizing by transaction versions and transaction locktime (set or unset) showed various combinations of transactions being replaced. Additionally, the transactions are a mix of simple payment transactions (few inputs, few outputs), consolidation transactions (high input to output ratio), and _payout_ transactions (high output to input ratio). I don't think they come from the same source given the different wallet fingerprints. My thesis is, that **most of these are probably cases where unconfirmed outputs are spent by a different party and the original sender (maybe unaware of the child transactions) replaces and \"cancels\" them**.\r\n\r\nGiven that there's no real pattern, I've picked out some examples.\r\n\r\n![image](https://user-images.githubusercontent.com/19157360/201697803-5962223a-c942-49a3-bd31-dff7f26a07e3.png)\r\n\r\nExample 1: This graph shows the RBF-sequence of a transaction confirming as [03a86cf6..](https://blockstream.info/tx/03a86cf631ce9e57ba2d43e670653d9e4b0722cfb6a1ed8cd128aff490557279)(tx2 here). First, tx0 (version=2, inputs=4, outputs=2, likely a payment, locktime set) was broadcast with a feerate of 2.92 sat/vByte. About 25 min later tx1 (version=**1**, inputs/outputs=2, likely also a payment, locktime unset) was broadcast at 15.9 sat/vByte spending an unconfirmed UTXO of tx0. Half an hour later, tx2 (version=2, inputs=4, outputs=2, likely a payment, locktime set) was broadcast at 12.37 sat/vByte which replaced both tx0 and tx1. The inputs and output scripts of tx0 and tx2 are equal, the only thing that changed was the fee: this is a simple fee bump. However, the outputs of tx1 are not contained in tx2. This transaction is effectively removed from the network before it could confirm (i.e cancelled). The feerate delta between tx1 and tx2 is negative. This is possible because we don't check the feerate of children in our RBF rule 6 checks. With the proposed change in this PR, tx2 would have had to pay more than tx1's feerate of 15.9 sat/vByte. \r\n\r\n\r\n![image](https://user-images.githubusercontent.com/19157360/201697920-b1f958d1-c3dd-4a3b-8dda-7840439639ba.png)\r\n\r\nExample 2: This example shows a fee bump from 1 sat/vByte to 5 sat/vByte of a consolidation (tx0 and [tx3](https://blockstream.info/tx/bf46e55fc81fb2ea34ea4f37f9a404a1d117b0bf2c933d27a59fae348fc71b0a); circle size grows with tx vsize). In between, tx1 as child of tx0 and tx2 as child of tx1 were broadcast with a higher feerate. Here, the fingerprints of tx1 and tx2 are the same as tx0 and tx2 so the sender of these might be the same (also you usually consolidate to your own wallet). We can't tell if tx1 and tx2 were canceled on purpose (double spent attempt?) or if that wasn't what the party expected to do by replacing tx0. Also, interesting to note is that tx1 has a locktime lower than tx0. This could mean that this transaction came from a Bitcoin Core or an Electrum wallet and it just happened to hit the 10% chance of setting the locktime to `currentHeight - rand(1, 100)` ([Bitcoin Core](https://github.com/bitcoin/bitcoin/blob/48174c0f287b19931ca110670610bd03a03eb914/src/wallet/spend.cpp#L725-L731), [Electrum](https://github.com/spesmilo/electrum/blob/b357391c4806acbc3d34a907b8f414601276b5fe/electrum/wallet.py#L222-L225)). A few potential learnings (~will create issues for this in Bitcoin Core and Electrum~):\r\n- ~Warn users if doing a fee-bump would cancel a child transaction.~ Bitcoin Core `bumpfee` RPC docs mention \"The command will fail if the wallet or mempool contains a transaction that spends one of T's outputs.\".\r\n- Don't set the locktime to `currentHeight - rand(1, 100)` when replacing a transaction. (https://github.com/bitcoin/bitcoin/issues/26526, https://github.com/spesmilo/electrum/issues/8073)\r\n- Don't set the locktime to `currentHeight - rand(1, 100)` when we are spending from unconfirmed transactions with a locktime set. The \"could be a pre-signed transaction\" argument doesn't work here as the parent has a higher locktime than the child indicating that the child was constructed before the parent. (https://github.com/bitcoin/bitcoin/issues/26527, https://github.com/spesmilo/electrum/issues/8073)\r\n\r\n![image](https://user-images.githubusercontent.com/19157360/201698034-aa354212-37f1-4942-a8d0-4268aa975031.png)\r\n\r\nExample 3: This is an example where tx1 could have somewhat cheaply pinned the consolidation transaction tx0. With the proposed change, the fee-bump [tx2](https://blockstream.info/tx/a3290913b632f24688758fc70ca7b3c638664c8f1ad22c59eaa52b9650fb8272) would have needed to pay more than 225 sat/vByte. However, as is a consolidation and the transactions share a fingerprint, these transactions might be from the same party. Not necessarily a malicious pin, but maybe one that would have happened on accident.\r\n\r\nA few complexer examples with less commentary:\r\n\r\n![image](https://user-images.githubusercontent.com/19157360/201698189-baad2acc-8139-4210-b7bd-cde6d30310ea.png)\r\nExample 4: Consolidation and payout transaction where (probably) multiple parties already spent their unconfirmed UTXOs before tx0 was replaced. [tx6](https://blockstream.info/tx/39dfa317f36fa47f96d3af717a96e88ca509d175c9332e042a7200dc03b851ec)\r\n\r\n![image](https://user-images.githubusercontent.com/19157360/201699269-1d449280-e7c0-4003-8c2d-83cf63864206.png)\r\nExample 5: [tx4](https://blockstream.info/tx/ce10b618ec9cdce8ad9814d84655658a62ac0834d3e4221c69c77d5525a711d5)\r\n\r\n![image](https://user-images.githubusercontent.com/19157360/201779475-eb6e7acc-0d04-4a4d-8294-9088a77d1653.png)\r\nExample 6: [tx8](https://blockstream.info/tx/85e81777a512ce01b746ef5ff719dfeefba419d8893ec7ca2946e531e44e0747)\r\n\r\nI don't have a strong opinion on this change yet. I think it's a trade-off between (accidental and malicious) pinning and incentive compatibility. Doesn't seems like implementing this change would impact too many current RBF sequences (223 out of 363k) based on the data from this year. Happy to take another look to answer follow-up questions.  ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1313934927",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1335569114,
      "node_id": "IC_kwDOABII585Pmyra",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1335569114",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-02T17:30:18Z",
      "updated_at": "2022-12-02T17:30:18Z",
      "author_association": "MEMBER",
      "body": "In my view the goals for adding a \"miner score\" rule are: Primarily, prevent using RBF to \"knock down\" a transaction's mining priority, either intentionally by an attacker or unintentionally by a wallet not accurately considering unconfirmed inputs' fees. Most notably, currently attackers can delay an ACP tx's confirmation by replacing it with something that spends from a large, low feerate ancestor. Also, it allows removing the \"no new unconfirmed inputs\" rule with more confidence it won't cause problems, thus allowing users to use new unconfirmed inputs to fund their RBFs.\r\n\r\nI'll note that, in the V3 world, min(ancestor feerate, feerate) == the miner score, since there can't be anything else bumping anybody. If we have a V3 replacing a V3, this should work fine. In the non-V3 world, min(ancestor feerate, feerate) can underestimate. Maybe applying this check when all directly-conflicting transactions are V3 makes sense? That achieves the first goal since the replacement (even if non-V3) must have a higher miner score. This would save ACP users if they switch to V3?\r\n\r\nAny underestimation of to-be-replaced mempool transactions' miner scores is a pinning attack, so I'm not completely convinced it's a good idea to use this particular heuristic as a \"miner score\" check on every RBF. For an accurate \"miner score,\" I think the best way is to run the block template algorithm. I implemented this in #26152, which runs the algo on a transaction cluster rather than the whole mempool, but I'm still not sure if the computational complexity is appropriate for use in mempool validation.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1335569114",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU1MmQ4ZWEzOTBjYWFkM2Y2ZTc2ODgxODJhNjAxOTBkY2QzZTM0YmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e52d8ea390caad3f6e7688182a60190dcd3e34bb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e52d8ea390caad3f6e7688182a60190dcd3e34bb",
      "tree": {
        "sha": "87367aa20741e0c6c7f0320aab43a1f603805d90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87367aa20741e0c6c7f0320aab43a1f603805d90"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39f026b1ec17ef8100457ef46a1e4980767c0fe2",
          "sha": "39f026b1ec17ef8100457ef46a1e4980767c0fe2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/39f026b1ec17ef8100457ef46a1e4980767c0fe2"
        }
      ],
      "message": "Eliminate incentive incompatible rbf replacements\n\nPreviously, it was possible for a transaction to have a lower feerate than a\ntransaction being evicted from the mempool, because we only were comparing an\nincoming transaction's feerate against the feerates of the transactions it\ndirectly conflicts with (and not any children).  This could result in\ntransactions that would be mined in the next block from being evicted from the\nmempool in favor of transactions which may not be mined for a long time.\nEliminate this behavior to ensure all replacements are incentive compatible.\n\nAt the same time, we also eliminate the restriction against including new\nunconfirmed inputs in a replacement transaction, because we now consider the\nancestor feerate of the new transaction and compare that with the feerates of\nthe transactions being evicted.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2022-12-07T20:16:42Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2022-11-04T12:45:22Z"
      },
      "sha": "e52d8ea390caad3f6e7688182a60190dcd3e34bb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkzM2Q3ZDk5ZDlmNDZmMTBlZDJkOWNhMDQ1YzM4YmUxYjM4MjMzODY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/933d7d99d9f46f10ed2d9ca045c38be1b3823386",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/933d7d99d9f46f10ed2d9ca045c38be1b3823386",
      "tree": {
        "sha": "5e8b4dcbac7667237e4c09bab9f343440d32d860",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e8b4dcbac7667237e4c09bab9f343440d32d860"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e52d8ea390caad3f6e7688182a60190dcd3e34bb",
          "sha": "e52d8ea390caad3f6e7688182a60190dcd3e34bb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e52d8ea390caad3f6e7688182a60190dcd3e34bb"
        }
      ],
      "message": "Add test to cover new rbf feerate requirement",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2022-12-07T20:17:00Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2022-11-04T13:34:28Z"
      },
      "sha": "933d7d99d9f46f10ed2d9ca045c38be1b3823386"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRlN2JmYjM0NDMxYTI1NjA2ZmJiYTRiZWI1NzczYzMyNzFmYzQ3N2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e7bfb34431a25606fbba4beb5773c3271fc477e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4e7bfb34431a25606fbba4beb5773c3271fc477e",
      "tree": {
        "sha": "86b5ff3a7336369ac05fd1a4c97a61a858b8dce4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86b5ff3a7336369ac05fd1a4c97a61a858b8dce4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/933d7d99d9f46f10ed2d9ca045c38be1b3823386",
          "sha": "933d7d99d9f46f10ed2d9ca045c38be1b3823386",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/933d7d99d9f46f10ed2d9ca045c38be1b3823386"
        }
      ],
      "message": "Add a test verifying new unconfirmed inputs are permitted",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2022-12-07T20:17:00Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2022-11-04T14:23:51Z"
      },
      "sha": "4e7bfb34431a25606fbba4beb5773c3271fc477e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxYjBhMjM0MzNiNTQ1YWM2ZTY1NzZhMmU4NWRmOTI5ZTQ2MzUzMjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41b0a23433b545ac6e6576a2e85df929e4635323",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/41b0a23433b545ac6e6576a2e85df929e4635323",
      "tree": {
        "sha": "dc53276ae5babca1861e7a8687229ea133981b97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc53276ae5babca1861e7a8687229ea133981b97"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e7bfb34431a25606fbba4beb5773c3271fc477e",
          "sha": "4e7bfb34431a25606fbba4beb5773c3271fc477e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4e7bfb34431a25606fbba4beb5773c3271fc477e"
        }
      ],
      "message": "Test that we use \"worst-case\" ancestor feerates when evaluating replacement transactions.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2022-12-07T20:17:00Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2022-11-05T23:47:22Z"
      },
      "sha": "41b0a23433b545ac6e6576a2e85df929e4635323"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7981613019,
      "node_id": "HRFPE_lADOABII585VmTgazwAAAAHbvb_b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7981613019",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T20:18:23Z"
    },
    {
      "event": "commented",
      "id": 1341681441,
      "node_id": "IC_kwDOABII585P-G8h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1341681441",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T22:34:41Z",
      "updated_at": "2022-12-07T22:34:41Z",
      "author_association": "MEMBER",
      "body": "I updated this PR with @ajtowns' suggestion:\r\n\r\n> For multiple parents, I think you'd want to sort them by their ancestors scores (smallest to largest), and continue until your accumulated score is lower than next parent's ancestor score.\r\n\r\nI think this is very conservative, but I believe now it should be impossible for non-incentive-compatible replacements to take place.\r\n\r\n>  In the non-V3 world, min(ancestor feerate, feerate) can underestimate. \r\n\r\nThis can both underestimate and overestimate, essentially for the reason that the earlier draft I had of this PR was broken. If a transaction has an ancestor that, say, depends on nothing else and has a very high feerate, then the minimum of ancestor feerate and feerate might just be the feerate of the transaction itself. However, the parent transaction with a higher feerate can be selected first, and then the true mining score of the transaction will be the minimum of its feerate and that with some other parents, which might be lower than the transactions own feerate.  So this shows that we might overestimate a transaction's mining score with this calculation.\r\n\r\n> Any underestimation of to-be-replaced mempool transactions' miner scores is a pinning attack, so I'm not completely convinced it's a good idea to use this particular heuristic as a \"miner score\" check on every RBF. For an accurate \"miner score,\" I think the best way is to run the block template algorithm. \r\n\r\nI'm not sure I understand the first part of this sentence: I think that underestimating the replacement transaction's score might create a pinning attack, and overestimating the score of the to-be-replaced transactions can also create a pinning attack.  And I think this PR in its current form does both.\r\n\r\nI am also not convinced what I've done here is a good idea, and I think comparing this approach to some kind of transaction selection algorithm that operates on a relevant transaction subgraph is worth thinking about.  Some issues to consider:\r\n- How important is it that the RBF replacement rules be understandable to wallets? I think it's fair to say that most wallets aren't able to inspect the mempool anyway, so the BIP 125 rules already aren't something most wallets use to calculate needed fees.  Instead I think the approach I've heard from the lightning community, of firing off transactions and bumping them if they haven't confirmed in a while, seems much more doable. And in that world, having an opaque calculator that governs when a transaction's feerate is high enough to warrant replacement may be good enough?\r\n- How important is it that we accept replacement transactions as soon as they are \"better\" to mine, rather than be conservative and impose higher fee requirements (as this PR would do)?  In a world where v3 transactions can opt out of pinning, is it ok for non-v3 transactions to face worse pinning behaviors? (In that vein, does anyone even worry about pinning anymore now that v3 is being proposed to solve this problem?)\r\n- On the flip side, is there a risk that if we make pinning worse for non-v3 transactions, that we'll drive use towards v3 transactions, and some of those use cases might not be incentive compatible when applied to the rules that govern v3?\r\n\r\n\r\n\r\n",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1341681441",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "mentioned",
      "id": 7982617018,
      "node_id": "MEE_lADOABII585VmTgazwAAAAHbzRG6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7982617018",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T22:34:41Z"
    },
    {
      "event": "subscribed",
      "id": 7982617031,
      "node_id": "SE_lADOABII585VmTgazwAAAAHbzRHH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7982617031",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T22:34:41Z"
    },
    {
      "event": "commented",
      "id": 1342907266,
      "node_id": "IC_kwDOABII585QCyOC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1342907266",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-08T15:31:19Z",
      "updated_at": "2022-12-08T15:31:47Z",
      "author_association": "MEMBER",
      "body": "> How important is it that the RBF replacement rules be understandable to wallets? ...  And in that world, having an opaque calculator that governs when a transaction's feerate is high enough to warrant replacement may be good enough?\r\n\r\nThat's how I understand it. Idealized functionality is that there is a \"going feerate\" and that the proposed transaction package should be able to get in at that rate, or close to it. Wallets don't know the going rate since it's actually a stochastic variable, so as long as we're approximating this behavior it is likely fine.\r\n\r\n> (In that vein, does anyone even worry about pinning anymore now that v3 is being proposed to solve this problem?)\r\n\r\nLong term, probably not much, but the transition period of currently deployed systems will likely be years even if things were merged today.\r\n\r\n> On the flip side, is there a risk that if we make pinning worse for non-v3 transactions, that we'll drive use towards v3 transactions, and some of those use cases might not be incentive compatible when applied to the rules that govern v3?\r\n\r\nThe risk here is that we make V2 txn topology support so bad that people hand-roll their own policies or directly connect to miners; I think focusing on V3 in that context is nearly orthogonal. i.e. if we merged a V2 tightening that was overly broad, and did not move forward with an alternative policy, this risk already exists.\r\n\r\nFrom a sheer numeric perspective, it looks like this PR's change(at least before latest modification) doesn't effect much: https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1313934927 Is that a strike for the change or against it, I don't know!\r\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1342907266",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1346732803,
      "node_id": "IC_kwDOABII585QRYMD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1346732803",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-12T15:37:44Z",
      "updated_at": "2022-12-12T15:37:44Z",
      "author_association": "MEMBER",
      "body": ">> Any underestimation of to-be-replaced mempool transactions' miner scores is a pinning attack, so I'm not completely convinced it's a good idea to use this particular heuristic as a \"miner score\" check on every RBF. For an accurate \"miner score,\" I think the best way is to run the block template algorithm.\r\n\r\n> I'm not sure I understand the first part of this sentence: I think that underestimating the replacement transaction's score might create a pinning attack, and overestimating the score of the to-be-replaced transactions can also create a pinning attack. And I think this PR in its current form does both.\r\n\r\nI am thinking about two types of \"pinning\" (1) the original tx is made very hard to replace and (2) a replacement can knock the fee *down* instead of up. To clarify, here, I meant (2): perhaps we underestimate the to-be-replaced transaction's score, thinking it is lower than that of the replacement tx when it isn't. Maybe \"pinning\" isn't the right word for it, but I think it's definitely a scenario we want to prevent. It's attackable, and I don't think a user ever wants to pay more fees but make their tx take longer to confirm (?).\r\n\r\n>> On the flip side, is there a risk that if we make pinning worse for non-v3 transactions, that we'll drive use towards v3 transactions, and some of those use cases might not be incentive compatible when applied to the rules that govern v3?\r\n\r\n> The risk here is that we make V2 txn topology support so bad that people hand-roll their own policies or directly connect to miners; I think focusing on V3 in that context is nearly orthogonal. i.e. if we merged a V2 tightening that was overly broad, and did not move forward with an alternative policy, this risk already exists.\r\n\r\nI agree with a philosophy of attempting to design v3 to be \"unpinnable\" and also improve the heuristics that make v2 break for some of the topologies it permits. AFAIU there are a number of use cases that wouldn't be compatible with v3.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1346732803",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    },
    {
      "event": "commented",
      "id": 1346743738,
      "node_id": "IC_kwDOABII585QRa26",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1346743738",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-12T15:42:30Z",
      "updated_at": "2022-12-12T15:42:30Z",
      "author_association": "MEMBER",
      "body": "> To clarify, here, I meant (2): perhaps we underestimate the to-be-replaced transaction's score, thinking it is lower than that of the replacement tx when it isn't. Maybe \"pinning\" isn't the right word for it, but I think it's definitely a scenario we want to prevent. It's attackable, and I don't think a user ever wants to pay more fees but make their tx take longer to confirm (?).\r\n\r\nI think it depends on how much more the user/wallet would have to pay to re-replace that replacement. It definitely could result in what I consider a pin if there is asymmetry. ",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#issuecomment-1346743738",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26451"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014556765",
      "pull_request_review_id": 1169301807,
      "id": 1014556765,
      "node_id": "PRRC_kwDOABII5848eOhd",
      "diff_hunk": "@@ -922,30 +922,34 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n     const uint256& hash = ws.m_hash;\n     TxValidationState& state = ws.m_state;\n \n+    // Calculate the predicted mining score of the new transaction.\n+    int64_t ancestor_size{0};\n+    CAmount ancestor_modified_fees{0};\n+    for (CTxMemPool::txiter it : ws.m_ancestors) {\n+        ancestor_size += it->GetTxSize();\n+        ancestor_modified_fees += it->GetModifiedFee();\n+    }\n+\n     CFeeRate newFeeRate(ws.m_modified_fees, ws.m_vsize);\n-    // Enforce Rule #6. The replacement transaction must have a higher feerate than its direct conflicts.\n-    // - The motivation for this check is to ensure that the replacement transaction is preferable for\n-    //   block-inclusion, compared to what would be removed from the mempool.\n-    // - This logic predates ancestor feerate-based transaction selection, which is why it doesn't\n-    //   consider feerates of descendants.\n-    // - Note: Ancestor feerate-based transaction selection has made this comparison insufficient to\n-    //   guarantee that this is incentive-compatible for miners, because it is possible for a\n-    //   descendant transaction of a direct conflict to pay a higher feerate than the transaction that\n-    //   might replace them, under these rules.\n-    if (const auto err_string{PaysMoreThanConflicts(ws.m_iters_conflicting, newFeeRate, hash)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\", *err_string);\n+    if (ancestor_modified_fees * ws.m_vsize < ws.m_modified_fees * ancestor_size) {\n+        newFeeRate = CFeeRate(ancestor_modified_fees, ancestor_size);\n     }\n \n     // Calculate all conflicting entries and enforce Rule #5.\n     if (const auto err_string{GetEntriesForConflicts(tx, m_pool, ws.m_iters_conflicting, ws.m_all_conflicting)}) {\n         return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n                              \"too many potential replacements\", *err_string);\n     }\n-    // Enforce Rule #2.\n-    if (const auto err_string{HasNoNewUnconfirmed(tx, m_pool, ws.m_iters_conflicting)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n-                             \"replacement-adds-unconfirmed\", *err_string);\n+\n+    // Enforce feerate incentive compatibility. The replacement transaction\n+    // must have a higher mining score (= min(feerate, ancestor feerate)) than\n+    // the highest possible mining score of all its conflicts.\n+    // - The motivation for this check is to ensure that the replacement transaction is preferable for\n+    //   block-inclusion, compared to what would be removed from the mempool.\n+    if (const auto err_string{PaysMoreThanConflicts(ws.m_all_conflicting, newFeeRate, hash)}) {",
      "path": "src/validation.cpp",
      "position": 63,
      "original_position": 43,
      "commit_id": "41b0a23433b545ac6e6576a2e85df929e4635323",
      "original_commit_id": "ff77ab34fb219cf4e626690f4c9f919c18dc1045",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this type of policy changes would benefit from a more binding definition of \"incentive compatibility\". If we speak about a world where the network mempools backlog is always superior to `MAX_BLOCK_WEIGHT`, optimizing for mining score based on feerate sounds the most obvious. If we add the dimension of mempools congestion variance where emptyness is a non-null outcome, I think a miner could adopt a \"pure-replace-by-fee\" mempool acceptance policy until reaching `MAX_BLOCK_WEIGHT`.\r\n\r\nAnother layer of complexity in devising \"incentive compatibility\" could be to realize the best feerate mempool plausible is a combination of the replacement policy and an order of events. E.g, if you evict 2sat/vb A for 4sat/vb A' though after 1 min you receive 4 sat/vb B child of A, your mempool is at loss. This scenario sounds far from unplausible to me in a shared-utxo future (e.g 2-of-2 LN channels), where spenders are building chain of transactions in blindness of every co-spender. A miner mempool optimization could be to run a cache of all the replacements.\r\n\r\nOn this subject, earlier this year on the ML: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-February/019921.html\r\n\r\nOf course, we could make abstraction of order of events complexity by assuming all received transactions are following templates (e.g nversion=3) where the design assumes only the most efficient package/chain of transactions propagate. However, I'm not sure how much our network transaction-relay \"transaction patterns\" (current and future) are realistic of potential miner mempools running with `DEFAULT_ANCESTOR_LIMIT=$HUGE` and out-of-band transaction-relay. If our design give margin for non-marginal fee asymmetries, in a future where fees are significantly contributing to block reward, you should expect some miners doing the efforts of capturing them.\r\n\r\nAll thoughts for future works, I think this is a good improvement for now.",
      "created_at": "2022-11-05T03:36:09Z",
      "updated_at": "2022-11-05T03:36:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#discussion_r1014556765",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014556765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 968,
      "original_line": 968,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014642326",
      "pull_request_review_id": 1169416543,
      "id": 1014642326,
      "node_id": "PRRC_kwDOABII5848ejaW",
      "diff_hunk": "@@ -922,30 +922,34 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n     const uint256& hash = ws.m_hash;\n     TxValidationState& state = ws.m_state;\n \n+    // Calculate the predicted mining score of the new transaction.\n+    int64_t ancestor_size{0};\n+    CAmount ancestor_modified_fees{0};\n+    for (CTxMemPool::txiter it : ws.m_ancestors) {\n+        ancestor_size += it->GetTxSize();\n+        ancestor_modified_fees += it->GetModifiedFee();\n+    }\n+\n     CFeeRate newFeeRate(ws.m_modified_fees, ws.m_vsize);\n-    // Enforce Rule #6. The replacement transaction must have a higher feerate than its direct conflicts.\n-    // - The motivation for this check is to ensure that the replacement transaction is preferable for\n-    //   block-inclusion, compared to what would be removed from the mempool.\n-    // - This logic predates ancestor feerate-based transaction selection, which is why it doesn't\n-    //   consider feerates of descendants.\n-    // - Note: Ancestor feerate-based transaction selection has made this comparison insufficient to\n-    //   guarantee that this is incentive-compatible for miners, because it is possible for a\n-    //   descendant transaction of a direct conflict to pay a higher feerate than the transaction that\n-    //   might replace them, under these rules.\n-    if (const auto err_string{PaysMoreThanConflicts(ws.m_iters_conflicting, newFeeRate, hash)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\", *err_string);\n+    if (ancestor_modified_fees * ws.m_vsize < ws.m_modified_fees * ancestor_size) {\n+        newFeeRate = CFeeRate(ancestor_modified_fees, ancestor_size);\n     }\n \n     // Calculate all conflicting entries and enforce Rule #5.\n     if (const auto err_string{GetEntriesForConflicts(tx, m_pool, ws.m_iters_conflicting, ws.m_all_conflicting)}) {\n         return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n                              \"too many potential replacements\", *err_string);\n     }\n-    // Enforce Rule #2.\n-    if (const auto err_string{HasNoNewUnconfirmed(tx, m_pool, ws.m_iters_conflicting)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n-                             \"replacement-adds-unconfirmed\", *err_string);\n+\n+    // Enforce feerate incentive compatibility. The replacement transaction\n+    // must have a higher mining score (= min(feerate, ancestor feerate)) than\n+    // the highest possible mining score of all its conflicts.\n+    // - The motivation for this check is to ensure that the replacement transaction is preferable for\n+    //   block-inclusion, compared to what would be removed from the mempool.\n+    if (const auto err_string{PaysMoreThanConflicts(ws.m_all_conflicting, newFeeRate, hash)}) {",
      "path": "src/validation.cpp",
      "position": 63,
      "original_position": 43,
      "commit_id": "41b0a23433b545ac6e6576a2e85df929e4635323",
      "original_commit_id": "ff77ab34fb219cf4e626690f4c9f919c18dc1045",
      "in_reply_to_id": 1014556765,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> If our design give margin for non-marginal fee asymmetries\r\n\r\nThere will always be a margin whatever design we pick as you can imagine a spending pattern that doesn't fit; we can try to shrink it as best we can.",
      "created_at": "2022-11-05T14:23:40Z",
      "updated_at": "2022-11-05T14:23:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#discussion_r1014642326",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014642326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 968,
      "original_line": 968,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014918120",
      "pull_request_review_id": 1169677717,
      "id": 1014918120,
      "node_id": "PRRC_kwDOABII5848fmvo",
      "diff_hunk": "@@ -922,30 +922,34 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n     const uint256& hash = ws.m_hash;\n     TxValidationState& state = ws.m_state;\n \n+    // Calculate the predicted mining score of the new transaction.\n+    int64_t ancestor_size{0};\n+    CAmount ancestor_modified_fees{0};\n+    for (CTxMemPool::txiter it : ws.m_ancestors) {\n+        ancestor_size += it->GetTxSize();\n+        ancestor_modified_fees += it->GetModifiedFee();\n+    }\n+\n     CFeeRate newFeeRate(ws.m_modified_fees, ws.m_vsize);\n-    // Enforce Rule #6. The replacement transaction must have a higher feerate than its direct conflicts.\n-    // - The motivation for this check is to ensure that the replacement transaction is preferable for\n-    //   block-inclusion, compared to what would be removed from the mempool.\n-    // - This logic predates ancestor feerate-based transaction selection, which is why it doesn't\n-    //   consider feerates of descendants.\n-    // - Note: Ancestor feerate-based transaction selection has made this comparison insufficient to\n-    //   guarantee that this is incentive-compatible for miners, because it is possible for a\n-    //   descendant transaction of a direct conflict to pay a higher feerate than the transaction that\n-    //   might replace them, under these rules.\n-    if (const auto err_string{PaysMoreThanConflicts(ws.m_iters_conflicting, newFeeRate, hash)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"insufficient fee\", *err_string);\n+    if (ancestor_modified_fees * ws.m_vsize < ws.m_modified_fees * ancestor_size) {\n+        newFeeRate = CFeeRate(ancestor_modified_fees, ancestor_size);\n     }\n \n     // Calculate all conflicting entries and enforce Rule #5.\n     if (const auto err_string{GetEntriesForConflicts(tx, m_pool, ws.m_iters_conflicting, ws.m_all_conflicting)}) {\n         return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n                              \"too many potential replacements\", *err_string);\n     }\n-    // Enforce Rule #2.\n-    if (const auto err_string{HasNoNewUnconfirmed(tx, m_pool, ws.m_iters_conflicting)}) {\n-        return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY,\n-                             \"replacement-adds-unconfirmed\", *err_string);\n+\n+    // Enforce feerate incentive compatibility. The replacement transaction\n+    // must have a higher mining score (= min(feerate, ancestor feerate)) than\n+    // the highest possible mining score of all its conflicts.\n+    // - The motivation for this check is to ensure that the replacement transaction is preferable for\n+    //   block-inclusion, compared to what would be removed from the mempool.\n+    if (const auto err_string{PaysMoreThanConflicts(ws.m_all_conflicting, newFeeRate, hash)}) {",
      "path": "src/validation.cpp",
      "position": 63,
      "original_position": 43,
      "commit_id": "41b0a23433b545ac6e6576a2e85df929e4635323",
      "original_commit_id": "ff77ab34fb219cf4e626690f4c9f919c18dc1045",
      "in_reply_to_id": 1014556765,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> There will always be a margin whatever design we pick as you can imagine a spending pattern that doesn't fit; we can try to shrink it as best we can.\r\n\r\nYes I think we should try to shrink it as best we can. Note the goal of avoiding non-marginal fee asymmetries that we might allow with policy changes such as nVersion=3. ",
      "created_at": "2022-11-07T00:02:42Z",
      "updated_at": "2022-11-07T00:02:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26451#discussion_r1014918120",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1014918120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26451"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 968,
      "original_line": 968,
      "side": "RIGHT"
    }
  ]
}