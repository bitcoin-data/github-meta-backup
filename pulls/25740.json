{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740",
    "id": 1012066542,
    "node_id": "PR_kwDOABII5848Uuju",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25740",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25740.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25740.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
    "number": 25740,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "assumeutxo: background validation completion",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is part of the [assumeutxo project](https://github.com/bitcoin/bitcoin/projects/11) (parent PR: https://github.com/bitcoin/bitcoin/pull/15606)\r\n\r\nPart two of replacing https://github.com/bitcoin/bitcoin/pull/24232.\r\n\r\n---\r\n\r\nWhen a user activates a snapshot, the serialized UTXO set data is used to create an \"assumed-valid\" chainstate, which becomes active in an attempt to get the node to network tip as quickly as possible. Simultaneously in the background, the already-existing chainstate continues \"conventional\" IBD to both accumulate full block data and serve as a belt-and-suspenders to validate the assumed-valid chainstate.\r\n\r\nOnce the background chainstate's tip reaches the base block of the snapshot used, we set `m_stop_use` on that chainstate and immediately take the hash of its UTXO set; we verify that this matches the assumeutxo value in the source code. Note that while we ultimately want to remove this background chainstate, we don't do so until the following initialization process, when we again check the UTXO set hash of the background chainstate, and if it continues to match, we remove the (now unnecessary) background chainstate, and move the (previously) assumed-valid chainstate into its place. We then reinitialize the chainstate in the normal way.\r\n\r\nAs noted in previous comments, we could do the filesystem operations \"inline\" immediately when the background validation completes, but that's basically just an optimization that saves disk space until the next restart. It didn't strike me as worth the risk of moving chainstate data around on disk during runtime of the node, though maybe my concerns are overblown.\r\n\r\nThe final result of this completion process is a fully-validated chain, where the only evidence that the user synced using assumeutxo is the existence of a `base_blockhash` file in the `chainstate` directory.\r\n",
    "labels": [],
    "created_at": "2022-07-29T14:52:11Z",
    "updated_at": "2023-03-13T15:20:52Z",
    "closed_at": "2023-03-07T23:55:38Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-03-07T23:55:38Z",
    "merge_commit_sha": "d5e4f9a43952f294e165381116773d2aab00100d",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "jamesob:2022-07-au.complete",
      "ref": "2022-07-au.complete",
      "sha": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 42077031,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MjA3NzAzMQ==",
        "name": "bitcoin",
        "full_name": "jamesob/bitcoin",
        "owner": {
          "login": "jamesob",
          "id": 73197,
          "node_id": "MDQ6VXNlcjczMTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jamesob",
          "html_url": "https://github.com/jamesob",
          "followers_url": "https://api.github.com/users/jamesob/followers",
          "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
          "organizations_url": "https://api.github.com/users/jamesob/orgs",
          "repos_url": "https://api.github.com/users/jamesob/repos",
          "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jamesob/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jamesob/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jamesob/bitcoin",
        "archive_url": "https://api.github.com/repos/jamesob/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jamesob/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jamesob/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jamesob/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jamesob/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jamesob/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jamesob/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jamesob/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jamesob/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jamesob/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jamesob/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jamesob/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jamesob/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jamesob/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jamesob/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jamesob/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jamesob/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jamesob/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jamesob/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jamesob/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jamesob/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jamesob/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jamesob/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jamesob/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jamesob/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jamesob/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jamesob/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jamesob/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jamesob/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jamesob/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jamesob/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jamesob/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jamesob/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jamesob/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jamesob/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jamesob/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jamesob/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jamesob/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jamesob/bitcoin/hooks",
        "svn_url": "https://github.com/jamesob/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 252891,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T19:20:56Z",
        "created_at": "2015-09-07T22:18:03Z",
        "updated_at": "2023-05-05T06:31:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "fc037c8c8395564133b066aeff04e8198708c82a",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 737,
    "deletions": 90,
    "changed_files": 5,
    "commits": 9,
    "review_comments": 74,
    "comments": 20
  },
  "events": [
    {
      "event": "commented",
      "id": 1199966506,
      "node_id": "IC_kwDOABII585Hhgkq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1199966506",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-29T21:47:10Z",
      "updated_at": "2023-03-07T23:36:46Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1459034880) |\n| Stale ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1178296226), [ariard](https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1310290473), [brunoerg](https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1324598396) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26857](https://github.com/bitcoin/bitcoin/pull/26857) (OP_VAULT draft by jamesob)\n* [#25977](https://github.com/bitcoin/bitcoin/pull/25977) (refactor: Replace `std::optional<bilingual_str>` with `util::Result` by ryanofsky)\n* [#25722](https://github.com/bitcoin/bitcoin/pull/25722) (refactor: Use util::Result class for wallet loading by ryanofsky)\n* [#25665](https://github.com/bitcoin/bitcoin/pull/25665) (refactor: Add util::Result failure values, multiple error and warning messages by ryanofsky)\n* [#24008](https://github.com/bitcoin/bitcoin/pull/24008) (assumeutxo: net_processing changes by jamesob)\n* [#15606](https://github.com/bitcoin/bitcoin/pull/15606) (assumeutxo by jamesob)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1199966506",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "commented",
      "id": 1200119940,
      "node_id": "IC_kwDOABII585HiGCE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1200119940",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-30T08:57:29Z",
      "updated_at": "2022-07-30T08:57:29Z",
      "author_association": "MEMBER",
      "body": "```\r\ntest/validation_chainstatemanager_tests.cpp:418:35: error: calling function 'DisconnectTip' requires holding mutex 'bg_chainstate.m_mempool->cs' exclusively [-Werror,-Wthread-safety-precise]\r\n        BOOST_CHECK(bg_chainstate.DisconnectTip(unused_state, &unused_pool));\r\n                                  ^\r\ntest/validation_chainstatemanager_tests.cpp:418:35: note: found near match 'mempool->cs'\r\n1 error generated.\r\n```\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1200119940",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "reviewed",
      "id": 1057565671,
      "node_id": "PRR_kwDOABII584_CSvn",
      "url": null,
      "actor": null,
      "commit_id": "d4fc4ae18c6ac4e932beed20d6a61a018a5577d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK d4fc4ae18c6ac4e932beed20d6a61a018a5577d0 if missing chainstatemanager_loadblockindex test is added back. First 12 commits were previously reviewed as part of #25667. Later commits were cherry-picked from #24232 without code changes",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1057565671",
      "submitted_at": "2022-08-01T16:47:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "labeled",
      "id": 7116892309,
      "node_id": "LE_lADOABII585O0XXKzwAAAAGoMyiV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7116892309",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T09:23:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7333507936,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAG1HHNg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7333507936",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T20:17:58Z"
    },
    {
      "event": "unlabeled",
      "id": 7333909887,
      "node_id": "UNLE_lADOABII585O0XXKzwAAAAG1IpV_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7333909887",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T21:31:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7334125885,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAG1JeE9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7334125885",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T22:14:29Z"
    },
    {
      "event": "commented",
      "id": 1238726951,
      "node_id": "IC_kwDOABII585J1Xkn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1238726951",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T22:47:36Z",
      "updated_at": "2022-09-06T22:47:36Z",
      "author_association": "MEMBER",
      "body": "Clang failure on some platforms looks spurious:\r\n\r\n```\r\ntest/validation_chainstatemanager_tests.cpp:501:35: error: calling function 'DisconnectTip' requires holding mutex 'bg_chainstate.m_mempool->cs' exclusively [-Werror,-Wthread-safety-precise]\r\n        BOOST_CHECK(bg_chainstate.DisconnectTip(unused_state, &unused_pool));\r\n                                  ^\r\ntest/validation_chainstatemanager_tests.cpp:501:35: note: found near match 'mempool->cs'\r\n1 error generated.\r\n```\r\nbut lock is taken [here](https://github.com/bitcoin/bitcoin/pull/25740/commits/a9e27d3f242361534a1a50e403ab176b556ba528#diff-dbada1fe3a3d0af884304dd28be8c9df74b592401dec2c6400f6b491aefe6c9bR500). \r\n\r\nAnyone have ideas for workarounds?",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1238726951",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "commented",
      "id": 1238729341,
      "node_id": "IC_kwDOABII585J1YJ9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1238729341",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T22:52:28Z",
      "updated_at": "2022-09-06T22:52:44Z",
      "author_association": "MEMBER",
      "body": "If the lock is for `bg_chainstate.GetMempool()->cs` but the annotation requires `bg_chainstate.m_mempool->cs`, the compiler probably isn't going to know that `GetMempool()` and `m_mempool` are the same. Probably should stick with `m_mempool`",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1238729341",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "commented",
      "id": 1238733581,
      "node_id": "IC_kwDOABII585J1ZMN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1238733581",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T23:02:05Z",
      "updated_at": "2022-09-06T23:02:43Z",
      "author_association": "MEMBER",
      "body": ">  Probably should stick with m_mempool\r\n\r\nIt's protected :grimacing:. But looks like I can use the `RETURNS_LOCK` annotation on `MempoolMutex()`.\r\n\r\nEdit: that's private too, hah.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1238733581",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7334309522,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAG1KK6S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7334309522",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-06T23:06:49Z"
    },
    {
      "event": "labeled",
      "id": 7378346964,
      "node_id": "LE_lADOABII585O0XXKzwAAAAG3yKPU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7378346964",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T16:34:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7378919437,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAG30WAN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7378919437",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T17:53:42Z"
    },
    {
      "event": "unlabeled",
      "id": 7379232928,
      "node_id": "UNLE_lADOABII585O0XXKzwAAAAG31iig",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7379232928",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T18:41:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "ready_for_review",
      "id": 7582018401,
      "node_id": "RFRE_lADOABII585O0XXKzwAAAAHD7Gth",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7582018401",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T14:34:49Z"
    },
    {
      "event": "commented",
      "id": 1277723681,
      "node_id": "IC_kwDOABII585MKIQh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1277723681",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T14:40:39Z",
      "updated_at": "2022-10-13T14:40:39Z",
      "author_association": "MEMBER",
      "body": "Reopening and closing to get Github to deduplicate commits now included on master.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1277723681",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "closed",
      "id": 7582076015,
      "node_id": "CE_lADOABII585O0XXKzwAAAAHD7Uxv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7582076015",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T14:40:39Z"
    },
    {
      "event": "reopened",
      "id": 7582076983,
      "node_id": "REE_lADOABII585O0XXKzwAAAAHD7VA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7582076983",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T14:40:44Z"
    },
    {
      "event": "commented",
      "id": 1277755175,
      "node_id": "IC_kwDOABII585MKP8n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1277755175",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T15:00:29Z",
      "updated_at": "2022-10-13T15:31:52Z",
      "author_association": "MEMBER",
      "body": "@jamesob this PR should probably be added to #15606 now that it's out of draft.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1277755175",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "mentioned",
      "id": 7582290184,
      "node_id": "MEE_lADOABII585O0XXKzwAAAAHD8JEI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7582290184",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T15:00:29Z"
    },
    {
      "event": "subscribed",
      "id": 7582290192,
      "node_id": "SE_lADOABII585O0XXKzwAAAAHD8JEQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7582290192",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T15:00:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7583393904,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAHEAWhw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7583393904",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T17:03:39Z"
    },
    {
      "event": "commented",
      "id": 1277928248,
      "node_id": "IC_kwDOABII585MK6M4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1277928248",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T17:10:40Z",
      "updated_at": "2022-10-13T17:10:40Z",
      "author_association": "MEMBER",
      "body": "Thanks for the ping @aureleoules; the parent PR description has been updated.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1277928248",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "mentioned",
      "id": 7583454110,
      "node_id": "MEE_lADOABII585O0XXKzwAAAAHEAlOe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7583454110",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T17:10:40Z"
    },
    {
      "event": "subscribed",
      "id": 7583454127,
      "node_id": "SE_lADOABII585O0XXKzwAAAAHEAlOv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7583454127",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T17:10:40Z"
    },
    {
      "event": "reviewed",
      "id": 1144767699,
      "node_id": "PRR_kwDOABII585EO8TT",
      "url": null,
      "actor": null,
      "commit_id": "50909f0d5dc3a8f15c25ebab756b9a723e2deed3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1144767699",
      "submitted_at": "2022-10-17T20:53:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "reviewed",
      "id": 1145532345,
      "node_id": "PRR_kwDOABII585ER2-5",
      "url": null,
      "actor": null,
      "commit_id": "50909f0d5dc3a8f15c25ebab756b9a723e2deed3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I reviewed all the commits and verified they all compile. The code looks good and the unit tests seem to confirm that the behavior is correct.\r\nI left some minor/nits comments.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1145532345",
      "submitted_at": "2022-10-18T12:58:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7622303113,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAHGUx2J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7622303113",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T14:36:50Z"
    },
    {
      "event": "reviewed",
      "id": 1147566419,
      "node_id": "PRR_kwDOABII585EZnlT",
      "url": null,
      "actor": null,
      "commit_id": "50909f0d5dc3a8f15c25ebab756b9a723e2deed3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks very much for the reviews @achow101 @aureleoules. I've addressed all your feedback unless otherwise noted.\r\n\r\nJust as a reminder, a previous (and very similar) version of this code was looked at by @ryanofsky @MarcoFalke back in https://github.com/bitcoin/bitcoin/pull/24232. Hopefully the code here is pretty familiar, and should make review a bit easier.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1147566419",
      "submitted_at": "2022-10-19T14:38:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7623681183,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAHGaCSf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7623681183",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T16:57:28Z"
    },
    {
      "event": "reviewed",
      "id": 1148330864,
      "node_id": "PRR_kwDOABII585EciNw",
      "url": null,
      "actor": null,
      "commit_id": "c1767471c1cb6f1b856c22d767c35c18e19045e5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Will do a more in-depth review soon",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1148330864",
      "submitted_at": "2022-10-19T22:31:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "labeled",
      "id": 7671816561,
      "node_id": "LE_lADOABII585O0XXKzwAAAAHJRqFx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7671816561",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-26T11:19:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1162441236,
      "node_id": "PRR_kwDOABII585FSXIU",
      "url": null,
      "actor": null,
      "commit_id": "07b9dea9d4e8de2ce22e8ba50172a4af85801931",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1162441236",
      "submitted_at": "2022-10-31T19:38:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "reviewed",
      "id": 1162638204,
      "node_id": "PRR_kwDOABII585FTHN8",
      "url": null,
      "actor": null,
      "commit_id": "c1767471c1cb6f1b856c22d767c35c18e19045e5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewing commit by commit. So far until 65d2ce6.\r\n\r\n-----------------------------\r\n\r\nI think this is pending on a rebase :) Few more PRs and we should be good to tag assumeutxo 0.1. Let's keep going!",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1162638204",
      "submitted_at": "2022-10-31T23:02:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7735624524,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAHNFENM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7735624524",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T20:19:19Z"
    },
    {
      "event": "unlabeled",
      "id": 7736001090,
      "node_id": "UNLE_lADOABII585O0XXKzwAAAAHNGgJC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7736001090",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T21:24:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1171289324,
      "node_id": "PRR_kwDOABII585F0HTs",
      "url": null,
      "actor": null,
      "commit_id": "e7dc5e6e52811e2b03c053ab07fc25720e6f1d10",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK e7dc5e6e52811e2b03c053ab07fc25720e6f1d10 assuming question about IsSnapshotValidated doesn't point at a real problem. Changes since last review were rebasing, adding const keywords, renaming stop_use to disabled, improving invalid snapshot message, adding mempool mutex to tests.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1171289324",
      "submitted_at": "2022-11-08T04:58:19Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7764362094,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAHOysNu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7764362094",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-08T16:00:58Z"
    },
    {
      "event": "reviewed",
      "id": 1172394735,
      "node_id": "PRR_kwDOABII585F4VLv",
      "url": null,
      "actor": null,
      "commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks as always for your good review, @ryanofsky. I've rebased on top of latest master to fix CI.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1172394735",
      "submitted_at": "2022-11-08T16:01:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "reviewed",
      "id": 1178296226,
      "node_id": "PRR_kwDOABII585GO1-i",
      "url": null,
      "actor": null,
      "commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK ab41e8b4093925dc339096c15b33fe8b4726f55a. Just rebase since last review, and some nice comment and error message improvements.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1178296226",
      "submitted_at": "2022-11-13T20:54:09Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "reviewed",
      "id": 1190503385,
      "node_id": "PRR_kwDOABII585G9aPZ",
      "url": null,
      "actor": null,
      "commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK ab41e8b\r\n\r\nThe code could be better documented, with few improvements, and the unit test coverage enhanced, however this could be done in a follow-up. Reviewed the validation and cleanup of the background chainstate from hiting the block height parity with snapshot in `ConnectTip`, to flushing the data struct when the node is re-started in `AppInitMain()`. ",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1190503385",
      "submitted_at": "2022-11-22T19:32:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "labeled",
      "id": 7959794053,
      "node_id": "LE_lADOABII585O0XXKzwAAAAHacNGF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7959794053",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-05T22:49:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7978729094,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAHbkb6G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7978729094",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T14:59:11Z"
    },
    {
      "event": "unlabeled",
      "id": 7978801915,
      "node_id": "UNLE_lADOABII585O0XXKzwAAAAHbktr7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7978801915",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-07T15:05:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 7990778017,
      "node_id": "LE_lADOABII585O0XXKzwAAAAHcSZih",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7990778017",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-08T16:25:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8037354712,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAHfEEzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8037354712",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T13:39:05Z"
    },
    {
      "event": "unlabeled",
      "id": 8037807568,
      "node_id": "UNLE_lADOABII585O0XXKzwAAAAHfFzXQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8037807568",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T14:25:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "added_to_project",
      "id": 8163108786,
      "node_id": "ATPE_lADOABII585O0XXKzwAAAAHmjyey",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8163108786",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-05T19:08:09Z",
      "project_card": {
        "id": 84622569,
        "url": "https://api.github.com/projects/columns/cards/84622569",
        "project_id": 2564674,
        "project_url": "https://api.github.com/projects/2564674",
        "column_name": "In progress"
      }
    },
    {
      "event": "commented",
      "id": 1397624252,
      "node_id": "IC_kwDOABII585TTg28",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1397624252",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-19T21:20:32Z",
      "updated_at": "2023-01-19T21:20:32Z",
      "author_association": "MEMBER",
      "body": "ACK 30e113735ae3b1465d30b2125e7826a7a1527b99\r\n\r\nThe commit message of 287bb3f4ce41341aa0aea97b8176dc790889830d \"validation: add CChainState::m_disabled and ChainMan::isUsable\" still mentions `m_stop_use` rather than `m_disabled`",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1397624252",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "labeled",
      "id": 8375545603,
      "node_id": "LE_lADOABII585O0XXKzwAAAAHzOK8D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8375545603",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T17:26:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlZTIyY2RhZmQyNTYyYmNiOGJmMGFlNjAyNWU0YjUzYzgyNjM4MmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ee22cdafd2562bcb8bf0ae6025e4b53c826382d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5ee22cdafd2562bcb8bf0ae6025e4b53c826382d",
      "tree": {
        "sha": "d77321b04b4ada83a18141bb52170c7ff388a766",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d77321b04b4ada83a18141bb52170c7ff388a766"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73966f75f67fb797163f0a766292a79d4b2c1b70",
          "sha": "73966f75f67fb797163f0a766292a79d4b2c1b70",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/73966f75f67fb797163f0a766292a79d4b2c1b70"
        }
      ],
      "message": "add ChainstateManager.GetSnapshot{BaseHeight,BaseBlock}()\n\nFor use in later commits.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-02-22T17:07:25Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-28T20:59:18Z"
      },
      "sha": "5ee22cdafd2562bcb8bf0ae6025e4b53c826382d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMyOWYyNmI0N2I4ZWY5NzhkODY4OWRjMDIyMmFhNjYzMzYxZWU2Y2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c29f26b47b8ef978d8689dc0222aa663361ee6cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c29f26b47b8ef978d8689dc0222aa663361ee6cb",
      "tree": {
        "sha": "77a8e1de311b09768e81674a8175bba7c0516eb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77a8e1de311b09768e81674a8175bba7c0516eb3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ee22cdafd2562bcb8bf0ae6025e4b53c826382d",
          "sha": "5ee22cdafd2562bcb8bf0ae6025e4b53c826382d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5ee22cdafd2562bcb8bf0ae6025e4b53c826382d"
        }
      ],
      "message": "validation: add CChainState::m_disabled and ChainMan::isUsable\n\nand remove m_snapshot_validated. This state can now be inferred by the\nnumber of isUsable chainstates.\n\nm_disabled is used to signal that a chainstate should no longer be used\nby validation logic; it is used as a sentinel when background validation\ncompletes or if the snapshot chainstate is found to be invalid.\n\nisUsable is a convenience method that incorporates m_disabled.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-02-22T17:13:11Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-02T19:40:47Z"
      },
      "sha": "c29f26b47b8ef978d8689dc0222aa663361ee6cb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYzN2E5MGI5NzNmNjA1NTVlYTRmZWY0Yjg0NWZmYTc1MzNkY2I4NjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637a90b973f60555ea4fef4b845ffa7533dcb866",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/637a90b973f60555ea4fef4b845ffa7533dcb866",
      "tree": {
        "sha": "dea813c02f401fc2d0a6218130e572d89b45f919",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dea813c02f401fc2d0a6218130e572d89b45f919"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c29f26b47b8ef978d8689dc0222aa663361ee6cb",
          "sha": "c29f26b47b8ef978d8689dc0222aa663361ee6cb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c29f26b47b8ef978d8689dc0222aa663361ee6cb"
        }
      ],
      "message": "add Chainstate::HasCoinsViews()\n\nUsed in subsequent commits. Also cleans up asserts in\ncoins_views-related convenience methods to be more exact.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-02-22T17:13:26Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-02-02T19:44:50Z"
      },
      "sha": "637a90b973f60555ea4fef4b845ffa7533dcb866"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYyYTRmMzM3NmYxNDc2YjM4YTc5YTU0OWJkODFiYTMwMDYyMjVkZjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2a4f3376f1476b38a79a549bd81ba3006225df6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f2a4f3376f1476b38a79a549bd81ba3006225df6",
      "tree": {
        "sha": "aced8235f472238e709c1612236f4df299b5d87a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aced8235f472238e709c1612236f4df299b5d87a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637a90b973f60555ea4fef4b845ffa7533dcb866",
          "sha": "637a90b973f60555ea4fef4b845ffa7533dcb866",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/637a90b973f60555ea4fef4b845ffa7533dcb866"
        }
      ],
      "message": "move-only-ish: init: factor out chainstate initialization\n\nMoves chainstate initialization into its own function. This is\nnecessary to later support a more readable way of handling\nbackground-validation chainstate cleanup during init, since the\nchainstate initialization functions may need to be repeated after\nmoving leveldb filesystem content around.\n\nThis commit isn't strictly necessary, but the alternative is to (ab)use\nthe `while` loop in init.cpp with a `continue` on the basis of a\nspecific ChainstateLoadingError return value from LoadChainstate. Not\nonly is this harder to read, but it can't be unittested.\n\nThe approach here lets us consolidate background-validation cleanup to\nLoadChainstate, and therefore exercise it within tests.\n\nThis commit is most easily reviewed with\n\n  git diff --color-moved=dimmed-zebra\n  --color-moved-ws=ignore-space-change",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-02-22T17:13:26Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-11-03T18:37:24Z"
      },
      "sha": "f2a4f3376f1476b38a79a549bd81ba3006225df6"
    },
    {
      "event": "review_requested",
      "id": 8583549610,
      "node_id": "RRE_lADOABII585O0XXKzwAAAAH_npKq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8583549610",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T17:34:27Z",
      "requested_reviewer": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 8583549648,
      "node_id": "RRE_lADOABII585O0XXKzwAAAAH_npLQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8583549648",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T17:34:27Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8583665701,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAH_oFgl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8583665701",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T17:48:56Z"
    },
    {
      "event": "commented",
      "id": 1440503591,
      "node_id": "IC_kwDOABII585V3Fcn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1440503591",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T17:50:43Z",
      "updated_at": "2023-02-22T17:50:43Z",
      "author_association": "MEMBER",
      "body": "Rebased and reworded the commit message that @achow101 pointed out was out of date. Also fixed two minor items that @ariard noted.\r\n\r\nIn attempt to encourage re-ACKers, here is the diff (including rebase items):\r\n\r\n```diff\r\ndiff <(git diff --no-color au.complete.10~9..au.complete.10) <(git diff --no-color au.complete.11~9..au.complete.11)\r\n109c109\r\n< index 60acb614b4..d36184fed7 100644\r\n---\r\n> index ba1024d22e..cd82d8743c 100644\r\n138c138\r\n< -    if (nPruneTarget == std::numeric_limits<uint64_t>::max()) {\r\n---\r\n> -    if (chainman.m_blockman.GetPruneTarget() == std::numeric_limits<uint64_t>::max()) {\r\n140,141c140,141\r\n< -    } else if (nPruneTarget) {\r\n< -        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\r\n---\r\n> -    } else if (chainman.m_blockman.GetPruneTarget()) {\r\n> -        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", chainman.m_blockman.GetPruneTarget() / 1024 / 1024);\r\n187c187\r\n< +    if (nPruneTarget == std::numeric_limits<uint64_t>::max()) {\r\n---\r\n> +    if (chainman.m_blockman.GetPruneTarget() == std::numeric_limits<uint64_t>::max()) {\r\n189,190c189,190\r\n< +    } else if (nPruneTarget) {\r\n< +        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\r\n---\r\n> +    } else if (chainman.m_blockman.GetPruneTarget()) {\r\n> +        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", chainman.m_blockman.GetPruneTarget() / 1024 / 1024);\r\n257c257\r\n< index 22b9af1201..fd6a9b4c2e 100644\r\n---\r\n> index 56867a584b..45d59b685c 100644\r\n294c294\r\n< @@ -518,10 +533,156 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\r\n---\r\n> @@ -518,10 +533,160 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\r\n366a367,368\r\n> +    const Chainstate& active_cs2 = chainman_restarted.ActiveChainstate();\r\n> +\r\n371a374,375\r\n> +        BOOST_CHECK(active_cs2.m_coinstip_cache_size_bytes > tip_cache_before_complete);\r\n> +        BOOST_CHECK(active_cs2.m_coinsdb_cache_size_bytes > db_cache_before_complete);\r\n453c457\r\n< index 76bea97341..0916827710 100644\r\n---\r\n> @@ -3067,6 +3075,14 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\r\n478c482,483\r\n< +        LogPrintf(\"m_disabled is set - this chainstate should not be in operation. Bug?.\\n\");\r\n---\r\n> +        LogPrintf(\"m_disabled is set - this chainstate should not be in operation. \" /* Continued */\r\n> +            \"Please report this as a bug. %s\\n\", PACKAGE_BUGREPORT);\r\n485c490\r\n< @@ -3080,6 +3095,15 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\r\n---\r\n\r\n\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1440503591",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "mentioned",
      "id": 8583679410,
      "node_id": "MEE_lADOABII585O0XXKzwAAAAH_oI2y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8583679410",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T17:50:43Z"
    },
    {
      "event": "subscribed",
      "id": 8583679428,
      "node_id": "SE_lADOABII585O0XXKzwAAAAH_oI3E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8583679428",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T17:50:44Z"
    },
    {
      "event": "mentioned",
      "id": 8583679448,
      "node_id": "MEE_lADOABII585O0XXKzwAAAAH_oI3Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8583679448",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T17:50:44Z"
    },
    {
      "event": "subscribed",
      "id": 8583679488,
      "node_id": "SE_lADOABII585O0XXKzwAAAAH_oI4A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8583679488",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T17:50:44Z"
    },
    {
      "event": "commented",
      "id": 1440601441,
      "node_id": "IC_kwDOABII585V3dVh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1440601441",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T18:41:43Z",
      "updated_at": "2023-02-22T18:41:43Z",
      "author_association": "MEMBER",
      "body": "re-ACK a00d0e78510d79bc9fc57ec622aec98a65efa8c0",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1440601441",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "unlabeled",
      "id": 8584295529,
      "node_id": "UNLE_lADOABII585O0XXKzwAAAAH_qfRp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8584295529",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T18:47:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1440655812,
      "node_id": "IC_kwDOABII585V3qnE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1440655812",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-22T19:14:10Z",
      "updated_at": "2023-02-22T19:14:10Z",
      "author_association": "MEMBER",
      "body": "In the pull description, could drop or update \"Since it's dependent on the commits in https://github.com/bitcoin/bitcoin/pull/25667, I'm opening this as a draft.\"",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1440655812",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "reviewed",
      "id": 1310290473,
      "node_id": "PRR_kwDOABII585OGXIp",
      "url": null,
      "actor": null,
      "commit_id": "a00d0e78510d79bc9fc57ec622aec98a65efa8c0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK a00d0e78.\r\n\r\nSince last ACK ab41e8b4:\r\n- move `nPruneTarget` usage to `BlockManager::GetPruneTarget()` in `LoadChainstate()`\r\n- bug report call message (i.e `PACKAGE_BUGREPORT`) in `LogPrintf` in `ActivateBestChain()`\r\n- move `GetUTXOStats` mention to `ComputeUTXOStats` in `MaybeCompleteSnapshotValidation` comment\r\n- new `BOOST_CHECK`s in `chainstatemanager_snapshot_completion` about cache size bytes ",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1310290473",
      "submitted_at": "2023-02-22T21:37:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "commented",
      "id": 1442260424,
      "node_id": "IC_kwDOABII585V9yXI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1442260424",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-23T18:44:57Z",
      "updated_at": "2023-02-23T18:45:23Z",
      "author_association": "MEMBER",
      "body": "I'd like to test this with `loadtxoutset`. I wonder if I can just cherry-pick a few things from #15606 to do that myself, or if a more rigorous rebase is needed...",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1442260424",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "commented",
      "id": 1448527435,
      "node_id": "IC_kwDOABII585WVsZL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448527435",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T16:58:53Z",
      "updated_at": "2023-02-28T16:58:53Z",
      "author_association": "MEMBER",
      "body": "Maintainers: what else would you like to see for a merge here?",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1448527435",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "commented",
      "id": 1448601870,
      "node_id": "IC_kwDOABII585WV-kO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448601870",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-28T17:43:42Z",
      "updated_at": "2023-02-28T17:43:42Z",
      "author_association": "MEMBER",
      "body": "> Maintainers: what else would you like to see for a merge here?\r\n\r\nWaiting for a couple more reviews.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1448601870",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "commented",
      "id": 1452426488,
      "node_id": "IC_kwDOABII585WkkT4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452426488",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T19:17:50Z",
      "updated_at": "2023-03-02T19:17:50Z",
      "author_association": "MEMBER",
      "body": "> In the pull description, could drop or update \"Since it's dependent on the commits in #25667, I'm opening this as a draft.\"\r\n\r\nDone, thanks. ",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1452426488",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "commented",
      "id": 1453928410,
      "node_id": "IC_kwDOABII585WqS_a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1453928410",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-03T18:29:06Z",
      "updated_at": "2023-03-03T18:29:06Z",
      "author_association": "MEMBER",
      "body": "> The commit message of https://github.com/bitcoin/bitcoin/commit/287bb3f4ce41341aa0aea97b8176dc790889830d \"validation: add CChainState::m_disabled and ChainMan::isUsable\" still mentions m_stop_use rather than m_disabled\r\n\r\nIn the pull description, it still mention `m_stop_use`.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1453928410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "reviewed",
      "id": 1324598396,
      "node_id": "PRR_kwDOABII585O88R8",
      "url": null,
      "actor": null,
      "commit_id": "a00d0e78510d79bc9fc57ec622aec98a65efa8c0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "crACK a00d0e78510d79bc9fc57ec622aec98a65efa8c0\r\n\r\nIn 5ee22cdafd2562bcb8bf0ae6025e4b53c826382d, it creates `ChainstateManager::GetSnapshotBaseBlock` and  `ChainstateManager::GetSnapshotBaseHeight`. `GetSnapshotBaseHeight` is used (not in this commit) in `MaybeCompleteSnapshotValidation` to check if IBD (_in background_) has been completed.\r\n\r\nIn c29f26b47b8ef978d8689dc0222aa663361ee6cb, it creates `CChainState::m_disabled` and I could check it's been used to point that a chainstate should no longer be used by validation logic. (_perhaps PR description should be updated_).\r\n\r\nSome logic I could understand:\r\n![assumeutxo2](https://user-images.githubusercontent.com/19480819/222829606-2c2d943c-35a9-48f4-bccd-0cca56d62e10.jpg)\r\n\r\n\r\nIn e91b2165103784f13316e513d03dda0d63570675, it first added in `CompleteChainstateInitialization`\r\n```cpp\r\nassert(chainman.m_total_coinstip_cache > 0);\r\nassert(chainman.m_total_coinsdb_cache > 0);\r\n```\r\nGood to check we have enough bytes available for in-memory coins caches and leveldb stuff.\r\n\r\nIn `LoadChainstate` I could check (what is mentioned):\r\n1. Loads the fully validated chainstate\r\n2. Loads a chain created from a UTXO snapshot, if any exist.\r\n\r\nWith both ones, it calls `MaybeCompleteSnapshotValidation` to compare the background chainstate's UTXO hash with the hard-coded (and expected) one. If so, it sets `m_disabled=true`. And then, we can _re-_initialize the chainstate (`InitializeChainstate`).\r\n\r\nIf we could have `loadtxoutset` (as mentioned by @Sjors), it would be good to review it and see things happen in practice.\r\n\r\n\r\n",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1324598396",
      "submitted_at": "2023-03-03T21:11:45Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "commented",
      "id": 1457287964,
      "node_id": "IC_kwDOABII585W3HMc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1457287964",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T00:45:32Z",
      "updated_at": "2023-03-07T00:46:00Z",
      "author_association": "MEMBER",
      "body": "Missed this on last review (sorry):\r\n\r\n```\r\n../../../src/validation.cpp: In member function ‘SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(std::function<void(bilingual_str)>)’:\r\n../../../src/validation.cpp:5450:14: error: catching polymorphic type ‘struct StopHashingException’ by value [-Werror=catch-value=]\r\n 5450 |     } catch (StopHashingException) {\r\n      |              ^~~~~~~~~~~~~~~~~~~~\r\n```",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1457287964",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ5NmM1OWNjNWNkMmY3M2YxZjU1YzEzM2M1MjIwODY3MWZlNzVlZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "tree": {
        "sha": "1a8031f6e3e087a9f902bc7a253d740dad547ed4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a8031f6e3e087a9f902bc7a253d740dad547ed4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2a4f3376f1476b38a79a549bd81ba3006225df6",
          "sha": "f2a4f3376f1476b38a79a549bd81ba3006225df6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f2a4f3376f1476b38a79a549bd81ba3006225df6"
        }
      ],
      "message": "validation: add ChainMan logic for completing UTXO snapshot validation\n\nTrigger completion when a background validation chainstate reaches the\nsame height as a UTXO snapshot, and handle cleaning up the chainstate\non subsequent startup.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-03-07T21:06:17Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-28T14:23:33Z"
      },
      "sha": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDczMDBjZWQ5ZGUyMmU2ZDFiZmY4MTZlNjUzOGQzMzcwY2ViZTc1MDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7300ced9de22e6d1bff816e6538d3370cebe7501",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7300ced9de22e6d1bff816e6538d3370cebe7501",
      "tree": {
        "sha": "3f000c30fda2f63ea4cb65247e77347a9432d5ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f000c30fda2f63ea4cb65247e77347a9432d5ea"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
          "sha": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d96c59cc5cd2f73f1f55c133c52208671fe75ef3"
        }
      ],
      "message": "log: add LoadBlockIndex() message for assumedvalid blocks\n\nI found this useful during unittest debugging.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-03-07T21:06:20Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-29T13:06:32Z"
      },
      "sha": "7300ced9de22e6d1bff816e6538d3370cebe7501"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3MDkxOWE4OGZjOTBhMjY2MmY5YTg0NGRlYjA4NWQwM2VlN2I1ZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d70919a88fc90a2662f9a844deb085d03ee7b5d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d70919a88fc90a2662f9a844deb085d03ee7b5d8",
      "tree": {
        "sha": "3d57fb89dada5c2f3a908c88f66fb0be4cdd95fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d57fb89dada5c2f3a908c88f66fb0be4cdd95fd"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7300ced9de22e6d1bff816e6538d3370cebe7501",
          "sha": "7300ced9de22e6d1bff816e6538d3370cebe7501",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7300ced9de22e6d1bff816e6538d3370cebe7501"
        }
      ],
      "message": "refactor: make MempoolMutex() public\n\nfor use in the following unittests.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-03-07T21:06:20Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-09-06T23:04:45Z"
      },
      "sha": "d70919a88fc90a2662f9a844deb085d03ee7b5d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg3YTExMDhjODFmZTBjYjE1YzM4NjBlM2E2N2RjMWY0M2ZmZWM3MDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87a1108c81fe0cb15c3860e3a67dc1f43ffec705",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/87a1108c81fe0cb15c3860e3a67dc1f43ffec705",
      "tree": {
        "sha": "ebaabf04fd9f20a071e4979cb91cf9382d0e1d15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebaabf04fd9f20a071e4979cb91cf9382d0e1d15"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d70919a88fc90a2662f9a844deb085d03ee7b5d8",
          "sha": "d70919a88fc90a2662f9a844deb085d03ee7b5d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d70919a88fc90a2662f9a844deb085d03ee7b5d8"
        }
      ],
      "message": "test: add snapshot completion unittests\n\nAlso adjusts the previous snapshot chainstate init tests\nto account for the fact that the init process is now attempting to\nvalidate and complete background chainstates whose tip is at the\nsnapshot base block. We use a DisconnectTip() hack to preserve the\nnature of the test.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-03-07T21:06:20Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-07-22T15:26:55Z"
      },
      "sha": "87a1108c81fe0cb15c3860e3a67dc1f43ffec705"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJiMzczZmU0OWQ2NGYwNGNlYWIyMzA5ZDNmNDBkYTdiYWM2YjM3ZDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "tree": {
        "sha": "bffbeaf72a2fda47978f06bd2e3e7469a9edf5a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bffbeaf72a2fda47978f06bd2e3e7469a9edf5a5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87a1108c81fe0cb15c3860e3a67dc1f43ffec705",
          "sha": "87a1108c81fe0cb15c3860e3a67dc1f43ffec705",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/87a1108c81fe0cb15c3860e3a67dc1f43ffec705"
        }
      ],
      "message": "docs: update assumeutxo.md\n\nInclude notes about the `chainstate_snapshot` rename as well as\nupdates for the included code.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-03-07T21:06:20Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-04-13T22:42:21Z"
      },
      "sha": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8690499813,
      "node_id": "HRFPE_lADOABII585O0XXKzwAAAAIF_oDl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8690499813",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T21:07:54Z"
    },
    {
      "event": "commented",
      "id": 1458876649,
      "node_id": "IC_kwDOABII585W9LDp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1458876649",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T21:08:12Z",
      "updated_at": "2023-03-07T21:08:12Z",
      "author_association": "MEMBER",
      "body": "> Missed this on last review (sorry):\r\n\r\nFixed!",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1458876649",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "commented",
      "id": 1459034880,
      "node_id": "IC_kwDOABII585W9xsA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1459034880",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T23:36:42Z",
      "updated_at": "2023-03-07T23:36:42Z",
      "author_association": "MEMBER",
      "body": "ACK 2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#issuecomment-1459034880",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25740"
    },
    {
      "event": "merged",
      "id": 8691607988,
      "node_id": "ME_lADOABII585O0XXKzwAAAAIGD2m0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691607988",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d5e4f9a43952f294e165381116773d2aab00100d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5e4f9a43952f294e165381116773d2aab00100d",
      "created_at": "2023-03-07T23:55:38Z"
    },
    {
      "event": "closed",
      "id": 8691608019,
      "node_id": "CE_lADOABII585O0XXKzwAAAAIGD2nT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8691608019",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T23:55:39Z"
    },
    {
      "event": "referenced",
      "id": 8692038878,
      "node_id": "REFE_lADOABII585O0XXKzwAAAAIGFfze",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8692038878",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3a3d85f88f464c8aeb2bd0605cb98ce0695326fb",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/3a3d85f88f464c8aeb2bd0605cb98ce0695326fb",
      "created_at": "2023-03-08T01:19:53Z"
    },
    {
      "event": "reviewed",
      "id": 1336046783,
      "node_id": "PRR_kwDOABII585PonS_",
      "url": null,
      "actor": null,
      "commit_id": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1336046783",
      "submitted_at": "2023-03-12T15:55:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "reviewed",
      "id": 1337282625,
      "node_id": "PRR_kwDOABII585PtVBB",
      "url": null,
      "actor": null,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some nits. Feel free to ignore",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#pullrequestreview-1337282625",
      "submitted_at": "2023-03-13T15:20:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
    },
    {
      "event": "moved_columns_in_project",
      "id": 9191358111,
      "node_id": "MCIPE_lADOABII585O0XXKzwAAAAIj2P6f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9191358111",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T14:57:10Z",
      "project_card": {
        "id": 84622569,
        "url": "https://api.github.com/projects/columns/cards/84622569",
        "project_id": 2564674,
        "project_url": "https://api.github.com/projects/2564674",
        "column_name": "Done",
        "previous_column_name": "In progress"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934711528",
      "pull_request_review_id": 1057565671,
      "id": 934711528,
      "node_id": "PRRC_kwDOABII5843tpDo",
      "diff_hunk": "@@ -387,82 +387,57 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, SnapshotTestSetup)\n     this->SetupSnapshot();\n }\n \n-//! Test LoadBlockIndex behavior when multiple chainstates are in use.\n-//!\n-//! - First, verfiy that setBlockIndexCandidates is as expected when using a single,\n-//!   fully-validating chainstate.\n-//!\n-//! - Then mark a region of the chain BLOCK_ASSUMED_VALID and introduce a second chainstate\n-//!   that will tolerate assumed-valid blocks. Run LoadBlockIndex() and ensure that the first\n-//!   chainstate only contains fully validated blocks and the other chainstate contains all blocks,\n-//!   even those assumed-valid.\n-//!\n-BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "5ff0d2f7e78a40225a1eb9aa7bbf5c358d94bf48",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"test: add testcases for snapshot initialization\" (5ff0d2f7e78a40225a1eb9aa7bbf5c358d94bf48)\r\n\r\nSomething wonky is going on in this commit. It seems like some rebase error. This is dropping the `chainstatemanager_loadblockindex` test, and replacing it with an exact copy of the `chainstatemanager_snapshot_init` below, which now appears twice (and is edited in later commit 65ad0860ffd9441b005ac4bc240f596d9a81836f to become a different chainstatemanager_snapshot_completion test)",
      "created_at": "2022-08-01T16:26:47Z",
      "updated_at": "2022-08-01T16:47:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r934711528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934711528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 404,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/964236783",
      "pull_request_review_id": 1098333048,
      "id": 964236783,
      "node_id": "PRRC_kwDOABII5845eRXv",
      "diff_hunk": "@@ -387,82 +387,57 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_activate_snapshot, SnapshotTestSetup)\n     this->SetupSnapshot();\n }\n \n-//! Test LoadBlockIndex behavior when multiple chainstates are in use.\n-//!\n-//! - First, verfiy that setBlockIndexCandidates is as expected when using a single,\n-//!   fully-validating chainstate.\n-//!\n-//! - Then mark a region of the chain BLOCK_ASSUMED_VALID and introduce a second chainstate\n-//!   that will tolerate assumed-valid blocks. Run LoadBlockIndex() and ensure that the first\n-//!   chainstate only contains fully validated blocks and the other chainstate contains all blocks,\n-//!   even those assumed-valid.\n-//!\n-BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "5ff0d2f7e78a40225a1eb9aa7bbf5c358d94bf48",
      "in_reply_to_id": 934711528,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@ryanofsky yeah, thanks - not sure what happened there. Should be fixed.",
      "created_at": "2022-09-06T22:47:56Z",
      "updated_at": "2022-09-06T22:47:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r964236783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/964236783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 404,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997479271",
      "pull_request_review_id": 1144767699,
      "id": 997479271,
      "node_id": "PRRC_kwDOABII5847dFNn",
      "diff_hunk": "@@ -5117,6 +5168,146 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_stop_use` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return SnapshotCompletionResult::SKIPPED;\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] supposed base block %s does not match the \" /* Continued */\n+          \"snapshot base block %s (height %d). Snapshot is not valid.\",\n+          index_new.ToString(), snapshot_blockhash.ToString(), snapshot_base_height);\n+       return SnapshotCompletionResult::BASE_BLOCKHASH_MISMATCH;\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 150,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc \"validation: add ChainMan logic for completing UTXO snapshot validation\"\r\n\r\nSince this is also caused by an invalid snapshot, should this be below and also call `handle_invalid_snapshot`? Otherwise it seems like this would just continue with the IBD chainstate without invalidating the snapshot chainstate which I think would be incorrect?",
      "created_at": "2022-10-17T20:25:58Z",
      "updated_at": "2022-10-17T20:53:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r997479271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997479271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 5209,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5214,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997480620",
      "pull_request_review_id": 1144767699,
      "id": 997480620,
      "node_id": "PRRC_kwDOABII5847dFis",
      "diff_hunk": "@@ -5213,6 +5404,39 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     return *m_snapshot_chainstate;\n }\n \n+void Chainstate::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    auto storage_path_maybe = this->CoinsDB().StoragePath();\n+    // Should never be called with a non-existent storage path.\n+    assert(storage_path_maybe);\n+    fs::path snapshot_datadir = *storage_path_maybe;\n+\n+    // Coins views no longer usable.\n+    m_coins_views.reset();\n+\n+    auto invalid_path = snapshot_datadir + \"_INVALID\";\n+    std::string dbpath = fs::PathToString(snapshot_datadir);\n+    std::string target = fs::PathToString(invalid_path);\n+    LogPrintf(\"[snapshot] renaming snapshot datadir %s to %s\\n\", dbpath, target);\n+\n+    try {\n+        fs::rename(snapshot_datadir, invalid_path);",
      "path": "src/validation.cpp",
      "position": 327,
      "original_position": 273,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc \"validation: add ChainMan logic for completing UTXO snapshot validation\"\r\n\r\nThis only renames the chainstate dir, it's not clear to me if/when the invalid chainstate is deleted. Considering that moving the chainstate dir and deleting it are effectively the same thing here, I think it could just do `fs::remove_all`.",
      "created_at": "2022-10-17T20:27:37Z",
      "updated_at": "2022-10-17T20:53:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r997480620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997480620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5585,
      "original_line": 5585,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997485284",
      "pull_request_review_id": 1144767699,
      "id": 997485284,
      "node_id": "PRRC_kwDOABII5847dGrk",
      "diff_hunk": "@@ -5043,13 +5089,18 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     assert(coins_cache.GetBestBlock() == base_blockhash);\n \n-    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n-\n     // As above, okay to immediately release cs_main here since no other context knows\n     // about the snapshot_chainstate.\n     CCoinsViewDB* snapshot_coinsdb = WITH_LOCK(::cs_main, return &snapshot_chainstate.CoinsDB());\n \n-    const std::optional<CCoinsStats> maybe_stats = ComputeUTXOStats(CoinStatsHashType::HASH_SERIALIZED, snapshot_coinsdb, m_blockman, breakpoint_fnc);\n+    std::optional<CCoinsStats> maybe_stats;\n+\n+    try {\n+        maybe_stats = ComputeUTXOStats(\n+            CoinStatsHashType::HASH_SERIALIZED, snapshot_coinsdb, m_blockman, SnapshotUTXOHashBreakpoint);\n+    } catch (StopHashingException) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc \"validation: add ChainMan logic for completing UTXO snapshot validation\"\r\n\r\n```\r\nvalidation.cpp: In member function ‘bool ChainstateManager::PopulateAndValidateSnapshot(Chainstate&, AutoFile&, const node::SnapshotMetadata&)’:\r\nvalidation.cpp:5103:14: warning: catching polymorphic type ‘struct StopHashingException’ by value [-Wcatch-value=]\r\n 5103 |     } catch (StopHashingException) {\r\n      |    \r\n```",
      "created_at": "2022-10-17T20:33:24Z",
      "updated_at": "2022-10-17T20:53:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r997485284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/997485284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998027021",
      "pull_request_review_id": 1145532345,
      "id": 998027021,
      "node_id": "PRRC_kwDOABII5847fK8N",
      "diff_hunk": "@@ -5211,3 +5211,16 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     m_active_chainstate = m_snapshot_chainstate.get();\n     return *m_snapshot_chainstate;\n }\n+\n+CBlockIndex* ChainstateManager::GetSnapshotBaseBlock()\n+{\n+    auto blockhash_op = this->SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return Assert(m_blockman.LookupBlockIndex(*blockhash_op));\n+}\n+\n+std::optional<int> ChainstateManager::GetSnapshotBaseHeight()\n+{\n+    CBlockIndex* base = this->GetSnapshotBaseBlock();\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "f7179525b5cb37f010d5e42f41650414e648bf45",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "f7179525b5cb37f010d5e42f41650414e648bf45: can be made const\r\n```diff\r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex a6bc06201..eb0799b15 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -5439,16 +5439,16 @@ void Chainstate::InvalidateCoinsDBOnDisk()\r\n     }\r\n }\r\n \r\n-CBlockIndex* ChainstateManager::GetSnapshotBaseBlock()\r\n+const CBlockIndex* ChainstateManager::GetSnapshotBaseBlock() const\r\n {\r\n     auto blockhash_op = this->SnapshotBlockhash();\r\n     if (!blockhash_op) return nullptr;\r\n     return Assert(m_blockman.LookupBlockIndex(*blockhash_op));\r\n }\r\n \r\n-std::optional<int> ChainstateManager::GetSnapshotBaseHeight()\r\n+std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\r\n {\r\n-    CBlockIndex* base = this->GetSnapshotBaseBlock();\r\n+    const CBlockIndex* base = this->GetSnapshotBaseBlock();\r\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\r\n }\r\n \r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex d435d76b4..7b3498d55 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -908,11 +908,11 @@ private:\r\n     std::chrono::time_point<std::chrono::steady_clock> m_last_presync_update GUARDED_BY(::cs_main) {};\r\n \r\n     //! Returns nullptr if no snapshot has been loaded.\r\n-    CBlockIndex* GetSnapshotBaseBlock() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+    const CBlockIndex* GetSnapshotBaseBlock() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n \r\n     //! Return the height of the base block of the snapshot in use, if one exists, else\r\n     //! nullopt.\r\n-    std::optional<int> GetSnapshotBaseHeight() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+    std::optional<int> GetSnapshotBaseHeight() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n \r\n     //! Return true if a chainstate is considered usable.\r\n     //!\r\n```",
      "created_at": "2022-10-18T10:33:07Z",
      "updated_at": "2022-10-18T12:58:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998027021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998027021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 5215,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5612,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998050396",
      "pull_request_review_id": 1145532345,
      "id": 998050396,
      "node_id": "PRRC_kwDOABII5847fQpc",
      "diff_hunk": "@@ -470,6 +470,13 @@ class Chainstate\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no\n+    //! longer connect blocks to the background chainstate. It may also be set\n+    //! for snapshot chainstates found to be invalid.\n+    bool m_stop_use GUARDED_BY(::cs_main) {false};",
      "path": "src/validation.h",
      "position": null,
      "original_position": 9,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "062c8883da2f32e9b58bb846d37b911f4ac365db",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "062c8883da2f32e9b58bb846d37b911f4ac365db\r\nI think it's clearer.\r\n```suggestion\r\n    bool m_disabled GUARDED_BY(::cs_main) {false};\r\n```",
      "created_at": "2022-10-18T10:58:17Z",
      "updated_at": "2022-10-18T12:58:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998050396",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998050396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 478,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998054962",
      "pull_request_review_id": 1145532345,
      "id": 998054962,
      "node_id": "PRRC_kwDOABII5847fRwy",
      "diff_hunk": "@@ -570,12 +570,14 @@ class Chainstate\n     CCoinsViewErrorCatcher& CoinsErrorCatcher() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n     {\n         AssertLockHeld(::cs_main);\n-        return m_coins_views->m_catcherview;\n+        return Assert(m_coins_views)->m_catcherview;\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n     void ResetCoinsViews() { m_coins_views.reset(); }\n \n+    bool HasCoinsViews() { return (bool)m_coins_views; }",
      "path": "src/validation.h",
      "position": null,
      "original_position": 30,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "236ae38274669ce9fd4dcd2a85ab2c373226457f",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "236ae38274669ce9fd4dcd2a85ab2c373226457f\r\n```suggestion\r\n    bool HasCoinsViews() const { return m_coins_views != nullptr; }\r\n```",
      "created_at": "2022-10-18T11:03:21Z",
      "updated_at": "2022-10-18T12:58:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998054962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998054962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998087278",
      "pull_request_review_id": 1145532345,
      "id": 998087278,
      "node_id": "PRRC_kwDOABII5847fZpu",
      "diff_hunk": "@@ -25,16 +25,52 @@\n #include <vector>\n \n namespace node {\n+",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc\r\n```suggestion\r\n```",
      "created_at": "2022-10-18T11:34:16Z",
      "updated_at": "2022-10-18T12:58:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998087278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998087278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998094634",
      "pull_request_review_id": 1145532345,
      "id": 998094634,
      "node_id": "PRRC_kwDOABII5847fbcq",
      "diff_hunk": "@@ -25,16 +25,52 @@\n #include <vector>\n \n namespace node {\n+\n // Complete initialization of chainstates after the initial call has been made\n // to ChainstateManager::InitializeChainstate().\n static ChainstateLoadResult CompleteChainstateInitialization(\n     ChainstateManager& chainman,\n     const ChainstateLoadOptions& options) EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n {\n+    if (options.check_interrupt && options.check_interrupt()) return {ChainstateLoadStatus::INTERRUPTED, {}};\n+\n+    // LoadBlockIndex will load m_have_pruned if we've ever removed a\n+    // block file from disk.\n+    // Note that it also sets fReindex global based on the disk flag!\n+    // From here on, fReindex and options.reindex values may be different!\n+    if (!chainman.LoadBlockIndex()) {\n+        if (options.check_interrupt && options.check_interrupt()) return {ChainstateLoadStatus::INTERRUPTED, {}};\n+        return {ChainstateLoadStatus::FAILURE, _(\"Error loading block database\")};\n+    }\n+\n+    // Check for changed -prune state.  What we are concerned about is a user who has pruned blocks\n+    // in the past, but is now trying to run unpruned.\n+    if (chainman.m_blockman.m_have_pruned && !options.prune) {\n+        return {ChainstateLoadStatus::FAILURE, _(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\")};",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc\r\n```suggestion\r\n        return {ChainstateLoadStatus::FAILURE, _(\"You need to rebuild the database using -reindex to go back to unpruned mode. This will redownload the entire blockchain\")};\r\n```",
      "created_at": "2022-10-18T11:42:09Z",
      "updated_at": "2022-10-18T12:58:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998094634",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998094634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998102475",
      "pull_request_review_id": 1145532345,
      "id": 998102475,
      "node_id": "PRRC_kwDOABII5847fdXL",
      "diff_hunk": "@@ -141,41 +177,46 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         }\n     }\n \n-    if (options.check_interrupt && options.check_interrupt()) return {ChainstateLoadStatus::INTERRUPTED, {}};\n-\n-    // LoadBlockIndex will load m_have_pruned if we've ever removed a\n-    // block file from disk.\n-    // Note that it also sets fReindex global based on the disk flag!\n-    // From here on, fReindex and options.reindex values may be different!\n-    if (!chainman.LoadBlockIndex()) {\n-        if (options.check_interrupt && options.check_interrupt()) return {ChainstateLoadStatus::INTERRUPTED, {}};\n-        return {ChainstateLoadStatus::FAILURE, _(\"Error loading block database\")};\n+    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, options);\n+    if (init_status != ChainstateLoadStatus::SUCCESS) {\n+        return {init_status, init_error};\n     }\n \n-    if (!chainman.BlockIndex().empty() &&\n-            !chainman.m_blockman.LookupBlockIndex(chainman.GetConsensus().hashGenesisBlock)) {\n-        // If the loaded chain has a wrong genesis, bail out immediately\n-        // (we're likely using a testnet datadir, or the other way around).\n-        return {ChainstateLoadStatus::FAILURE_INCOMPATIBLE_DB, _(\"Incorrect or no genesis block found. Wrong datadir for network?\")};\n-    }\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate. This is the expected case during snapshot completion, and\n+    // not just a belt-and-suspenders.\n+    auto snapshot_completion = chainman.MaybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion == SnapshotCompletionResult::SKIPPED) {\n+        // do nothing; expected case\n+    } else if (snapshot_completion == SnapshotCompletionResult::SUCCESS) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        if (!chainman.ValidatedSnapshotCleanup()) {\n+            AbortNode(\"Background chainstate cleanup failed unexpectedly.\");\n+        }\n \n-    // Check for changed -prune state.  What we are concerned about is a user who has pruned blocks\n-    // in the past, but is now trying to run unpruned.\n-    if (chainman.m_blockman.m_have_pruned && !options.prune) {\n-        return {ChainstateLoadStatus::FAILURE, _(\"You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain\")};\n-    }\n+        // Because ValidatedSnapshotCleanup() has torn down chainstates with\n+        // ChainstateManager::ResetChainstates(), reinitialize them here without\n+        // duplicating the blockindex work above.\n+        assert(chainman.GetAll().size() == 0);",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 99,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc\r\n```suggestion\r\n        assert(chainman.GetAll().empty());\r\n```",
      "created_at": "2022-10-18T11:50:30Z",
      "updated_at": "2022-10-18T12:58:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998102475",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998102475"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998124561",
      "pull_request_review_id": 1145532345,
      "id": 998124561,
      "node_id": "PRRC_kwDOABII5847fiwR",
      "diff_hunk": "@@ -5117,6 +5168,146 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_stop_use` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc: maybe `Assert` first?",
      "created_at": "2022-10-18T12:12:46Z",
      "updated_at": "2022-10-18T12:58:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998124561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998124561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998125501",
      "pull_request_review_id": 1145532345,
      "id": 998125501,
      "node_id": "PRRC_kwDOABII5847fi-9",
      "diff_hunk": "@@ -5117,6 +5168,146 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_stop_use` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc: `Assert` here as well and can be const",
      "created_at": "2022-10-18T12:13:43Z",
      "updated_at": "2022-10-18T12:58:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998125501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998125501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998126326",
      "pull_request_review_id": 1145532345,
      "id": 998126326,
      "node_id": "PRRC_kwDOABII5847fjL2",
      "diff_hunk": "@@ -5117,6 +5168,146 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_stop_use` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return SnapshotCompletionResult::SKIPPED;\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 143,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc: can be inlined\r\n```suggestion\r\n\tuint256 snapshot_blockhash{*Assert(SnapshotBlockhash())};",
      "created_at": "2022-10-18T12:14:33Z",
      "updated_at": "2022-10-18T12:58:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998126326",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998126326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 5206,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998169857",
      "pull_request_review_id": 1145532345,
      "id": 998169857,
      "node_id": "PRRC_kwDOABII5847ft0B",
      "diff_hunk": "@@ -5121,6 +5170,146 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_stop_use` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return SnapshotCompletionResult::SKIPPED;\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] supposed base block %s does not match the \" /* Continued */\n+          \"snapshot base block %s (height %d). Snapshot is not valid.\",\n+          index_new.ToString(), snapshot_blockhash.ToString(), snapshot_base_height);\n+       return SnapshotCompletionResult::BASE_BLOCKHASH_MISMATCH;\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = strprintf(_(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot.\"),\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        );\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_stop_use = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+        assert(this->IsUsable(m_ibd_chainstate.get()));\n+\n+        m_snapshot_chainstate->InvalidateCoinsDBOnDisk();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+    int curr_height = m_ibd_chainstate->m_chain.Height();\n+\n+    assert(snapshot_base_height == curr_height);\n+    assert(snapshot_base_height == index_new.nHeight);\n+    assert(this->IsUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = m_ibd_chainstate->CoinsDB();\n+    m_ibd_chainstate->ForceFlushStateToDisk();\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handle_invalid_snapshot();\n+        return SnapshotCompletionResult::MISSING_CHAINPARAMS;\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    std::optional<CCoinsStats> maybe_ibd_stats;\n+    LogPrintf(\"[snapshot] computing UTXO stats for background chainstate to validate \" /* Continued */\n+        \"snapshot - this could take a few minutes\\n\");\n+    try {\n+        maybe_ibd_stats = ComputeUTXOStats(\n+            CoinStatsHashType::HASH_SERIALIZED,\n+            &ibd_coins_db,\n+            m_blockman,\n+            SnapshotUTXOHashBreakpoint);\n+    } catch (StopHashingException) {\n+        return SnapshotCompletionResult::STATS_FAILED;\n+    }\n+\n+    // XXX note that this function is slow and will hold cs_main for potentially minutes.\n+    if (!maybe_ibd_stats) {\n+        LogPrintf(\"[snapshot] failed to generate stats for validation coins db\\n\");\n+        // While this isn't a problem with the snapshot per se, this condition\n+        // prevents us from validating the snapshot, so we should shut down and let the\n+        // user handle the issue manually.\n+        handle_invalid_snapshot();\n+        return SnapshotCompletionResult::STATS_FAILED;\n+    }\n+    const auto ibd_stats = *maybe_ibd_stats;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 246,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "50909f0d5dc3a8f15c25ebab756b9a723e2deed3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc\r\n```suggestion\r\n    const auto& ibd_stats = *maybe_ibd_stats;\r\n```",
      "created_at": "2022-10-18T12:52:44Z",
      "updated_at": "2022-10-18T12:58:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998169857",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998169857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5288,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998170906",
      "pull_request_review_id": 1145532345,
      "id": 998170906,
      "node_id": "PRRC_kwDOABII5847fuEa",
      "diff_hunk": "@@ -5211,3 +5405,136 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     m_active_chainstate = m_snapshot_chainstate.get();\n     return *m_snapshot_chainstate;\n }\n+\n+void Chainstate::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    auto storage_path_maybe = this->CoinsDB().StoragePath();\n+    // Should never be called with a non-existent storage path.\n+    assert(storage_path_maybe);\n+    fs::path snapshot_datadir = *storage_path_maybe;\n+\n+    // Coins views no longer usable.\n+    m_coins_views.reset();\n+\n+    auto invalid_path = snapshot_datadir + \"_INVALID\";\n+    std::string dbpath = fs::PathToString(snapshot_datadir);\n+    std::string target = fs::PathToString(invalid_path);\n+    LogPrintf(\"[snapshot] renaming snapshot datadir %s to %s\\n\", dbpath, target);\n+\n+    try {\n+        fs::rename(snapshot_datadir, invalid_path);\n+    } catch (const fs::filesystem_error& e) {\n+        auto src_str = fs::PathToString(snapshot_datadir);\n+        auto dest_str = fs::PathToString(invalid_path);\n+\n+        LogPrintf(\"%s: error renaming file '%s' -> '%s': %s\\n\",\n+                __func__, src_str, dest_str, e.what());\n+        AbortNode(strprintf(\n+            \"Rename of '%s' -> '%s' failed. \"\n+            \"Do not restart until manually moving or deleting invalid snapshot directory %s.\",\n+            src_str, dest_str, src_str));\n+    }\n+}\n+\n+CBlockIndex* ChainstateManager::GetSnapshotBaseBlock()\n+{\n+    auto blockhash_op = this->SnapshotBlockhash();\n+    if (!blockhash_op) return nullptr;\n+    return Assert(m_blockman.LookupBlockIndex(*blockhash_op));\n+}\n+\n+std::optional<int> ChainstateManager::GetSnapshotBaseHeight()\n+{\n+    CBlockIndex* base = this->GetSnapshotBaseBlock();\n+    return base ? std::make_optional(base->nHeight) : std::nullopt;\n+}\n+\n+bool ChainstateManager::ValidatedSnapshotCleanup()\n+{\n+    AssertLockHeld(::cs_main);\n+    auto get_storage_path = [](auto& chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) -> std::optional<fs::path> {\n+        if (!(chainstate && chainstate->HasCoinsViews())) {\n+            return {};\n+        }\n+        return chainstate->CoinsDB().StoragePath();\n+    };\n+    std::optional<fs::path> ibd_chainstate_path_maybe = get_storage_path(m_ibd_chainstate);\n+    std::optional<fs::path> snapshot_chainstate_path_maybe = get_storage_path(m_snapshot_chainstate);\n+\n+    if (!this->IsSnapshotValidated()) {\n+        // No need to clean up.\n+        return false;\n+    }\n+    // If either path doesn't exist, that means at least one of the chainstates\n+    // is in-memory, in which case we can't do on-disk cleanup. You'd better be\n+    // in a unittest!\n+    if (!ibd_chainstate_path_maybe || !snapshot_chainstate_path_maybe) {\n+        LogPrintf(\"[snapshot] snapshot chainstate cleanup cannot happen with \" /* Continued */\n+                  \"in-memory chainstates. You are testing, right?\\n\");\n+        return false;\n+    }\n+\n+    auto snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\n+    auto ibd_chainstate_path = *ibd_chainstate_path_maybe;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 377,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "50909f0d5dc3a8f15c25ebab756b9a723e2deed3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc\r\n```suggestion\r\n    const auto& snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\r\n    const auto& ibd_chainstate_path = *ibd_chainstate_path_maybe;\r\n```",
      "created_at": "2022-10-18T12:53:28Z",
      "updated_at": "2022-10-18T12:58:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r998170906",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/998170906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 5480,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999448628",
      "pull_request_review_id": 1147566419,
      "id": 999448628,
      "node_id": "PRRC_kwDOABII5847kmA0",
      "diff_hunk": "@@ -570,12 +570,14 @@ class Chainstate\n     CCoinsViewErrorCatcher& CoinsErrorCatcher() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n     {\n         AssertLockHeld(::cs_main);\n-        return m_coins_views->m_catcherview;\n+        return Assert(m_coins_views)->m_catcherview;\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n     void ResetCoinsViews() { m_coins_views.reset(); }\n \n+    bool HasCoinsViews() { return (bool)m_coins_views; }",
      "path": "src/validation.h",
      "position": null,
      "original_position": 30,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "236ae38274669ce9fd4dcd2a85ab2c373226457f",
      "in_reply_to_id": 998054962,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since unique_ptr has well-defined semantics for the bool operator, I'm going to leave this as is.",
      "created_at": "2022-10-19T13:28:24Z",
      "updated_at": "2022-10-19T14:38:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999448628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999448628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999530645",
      "pull_request_review_id": 1147566419,
      "id": 999530645,
      "node_id": "PRRC_kwDOABII5847k6CV",
      "diff_hunk": "@@ -5043,13 +5089,18 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     assert(coins_cache.GetBestBlock() == base_blockhash);\n \n-    auto breakpoint_fnc = [] { /* TODO insert breakpoint here? */ };\n-\n     // As above, okay to immediately release cs_main here since no other context knows\n     // about the snapshot_chainstate.\n     CCoinsViewDB* snapshot_coinsdb = WITH_LOCK(::cs_main, return &snapshot_chainstate.CoinsDB());\n \n-    const std::optional<CCoinsStats> maybe_stats = ComputeUTXOStats(CoinStatsHashType::HASH_SERIALIZED, snapshot_coinsdb, m_blockman, breakpoint_fnc);\n+    std::optional<CCoinsStats> maybe_stats;\n+\n+    try {\n+        maybe_stats = ComputeUTXOStats(\n+            CoinStatsHashType::HASH_SERIALIZED, snapshot_coinsdb, m_blockman, SnapshotUTXOHashBreakpoint);\n+    } catch (StopHashingException) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": 997485284,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2022-10-19T14:23:19Z",
      "updated_at": "2022-10-19T14:38:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999530645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999530645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999535407",
      "pull_request_review_id": 1147566419,
      "id": 999535407,
      "node_id": "PRRC_kwDOABII5847k7Mv",
      "diff_hunk": "@@ -5117,6 +5168,146 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_stop_use` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    int snapshot_tip_height = this->ActiveHeight();\n+    int snapshot_base_height = *this->GetSnapshotBaseHeight();\n+    CBlockIndex& index_new = *m_ibd_chainstate->m_chain.Tip();\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return SnapshotCompletionResult::SKIPPED;\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *SnapshotBlockhash();\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+      LogPrintf(\"[snapshot] supposed base block %s does not match the \" /* Continued */\n+          \"snapshot base block %s (height %d). Snapshot is not valid.\",\n+          index_new.ToString(), snapshot_blockhash.ToString(), snapshot_base_height);\n+       return SnapshotCompletionResult::BASE_BLOCKHASH_MISMATCH;\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 150,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": 997479271,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch! Fixed.",
      "created_at": "2022-10-19T14:26:48Z",
      "updated_at": "2022-10-19T14:38:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999535407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999535407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 5209,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5214,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999539875",
      "pull_request_review_id": 1147566419,
      "id": 999539875,
      "node_id": "PRRC_kwDOABII5847k8Sj",
      "diff_hunk": "@@ -5213,6 +5404,39 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     return *m_snapshot_chainstate;\n }\n \n+void Chainstate::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    auto storage_path_maybe = this->CoinsDB().StoragePath();\n+    // Should never be called with a non-existent storage path.\n+    assert(storage_path_maybe);\n+    fs::path snapshot_datadir = *storage_path_maybe;\n+\n+    // Coins views no longer usable.\n+    m_coins_views.reset();\n+\n+    auto invalid_path = snapshot_datadir + \"_INVALID\";\n+    std::string dbpath = fs::PathToString(snapshot_datadir);\n+    std::string target = fs::PathToString(invalid_path);\n+    LogPrintf(\"[snapshot] renaming snapshot datadir %s to %s\\n\", dbpath, target);\n+\n+    try {\n+        fs::rename(snapshot_datadir, invalid_path);",
      "path": "src/validation.cpp",
      "position": 327,
      "original_position": 273,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "a65af66bd5a292d0bd0030f0c6b49a3dfab0afcc",
      "in_reply_to_id": 997480620,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the idea is that we may want to preserve the bad snapshot datadir for later analysis or issue filing. I'll make a note in the abort node log message that the user can manually remove the directory if desired or save it for later forensics when filing an issue.",
      "created_at": "2022-10-19T14:29:31Z",
      "updated_at": "2022-10-19T14:38:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999539875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999539875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5585,
      "original_line": 5585,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999586196",
      "pull_request_review_id": 1147765130,
      "id": 999586196,
      "node_id": "PRRC_kwDOABII5847lHmU",
      "diff_hunk": "@@ -570,12 +570,14 @@ class Chainstate\n     CCoinsViewErrorCatcher& CoinsErrorCatcher() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n     {\n         AssertLockHeld(::cs_main);\n-        return m_coins_views->m_catcherview;\n+        return Assert(m_coins_views)->m_catcherview;\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n     void ResetCoinsViews() { m_coins_views.reset(); }\n \n+    bool HasCoinsViews() { return (bool)m_coins_views; }",
      "path": "src/validation.h",
      "position": null,
      "original_position": 30,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "236ae38274669ce9fd4dcd2a85ab2c373226457f",
      "in_reply_to_id": 998054962,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "alright, the function can be made const though",
      "created_at": "2022-10-19T14:59:45Z",
      "updated_at": "2022-10-19T14:59:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999586196",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999586196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999588975",
      "pull_request_review_id": 1147769381,
      "id": 999588975,
      "node_id": "PRRC_kwDOABII5847lIRv",
      "diff_hunk": "@@ -570,12 +570,14 @@ class Chainstate\n     CCoinsViewErrorCatcher& CoinsErrorCatcher() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n     {\n         AssertLockHeld(::cs_main);\n-        return m_coins_views->m_catcherview;\n+        return Assert(m_coins_views)->m_catcherview;\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n     void ResetCoinsViews() { m_coins_views.reset(); }\n \n+    bool HasCoinsViews() { return (bool)m_coins_views; }",
      "path": "src/validation.h",
      "position": null,
      "original_position": 30,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "236ae38274669ce9fd4dcd2a85ab2c373226457f",
      "in_reply_to_id": 998054962,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, done.",
      "created_at": "2022-10-19T15:02:01Z",
      "updated_at": "2022-10-19T15:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999588975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999588975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999601495",
      "pull_request_review_id": 1147788194,
      "id": 999601495,
      "node_id": "PRRC_kwDOABII5847lLVX",
      "diff_hunk": "@@ -570,12 +570,14 @@ class Chainstate\n     CCoinsViewErrorCatcher& CoinsErrorCatcher() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n     {\n         AssertLockHeld(::cs_main);\n-        return m_coins_views->m_catcherview;\n+        return Assert(m_coins_views)->m_catcherview;\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n     void ResetCoinsViews() { m_coins_views.reset(); }\n \n+    bool HasCoinsViews() { return (bool)m_coins_views; }",
      "path": "src/validation.h",
      "position": null,
      "original_position": 30,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "236ae38274669ce9fd4dcd2a85ab2c373226457f",
      "in_reply_to_id": 998054962,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It hasn't changed :grimacing: ",
      "created_at": "2022-10-19T15:12:29Z",
      "updated_at": "2022-10-19T15:12:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999601495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999601495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999722362",
      "pull_request_review_id": 1147968942,
      "id": 999722362,
      "node_id": "PRRC_kwDOABII5847lo16",
      "diff_hunk": "@@ -570,12 +570,14 @@ class Chainstate\n     CCoinsViewErrorCatcher& CoinsErrorCatcher() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n     {\n         AssertLockHeld(::cs_main);\n-        return m_coins_views->m_catcherview;\n+        return Assert(m_coins_views)->m_catcherview;\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n     void ResetCoinsViews() { m_coins_views.reset(); }\n \n+    bool HasCoinsViews() { return (bool)m_coins_views; }",
      "path": "src/validation.h",
      "position": null,
      "original_position": 30,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "236ae38274669ce9fd4dcd2a85ab2c373226457f",
      "in_reply_to_id": 998054962,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ugh oops, my mistake. Fixed.",
      "created_at": "2022-10-19T16:57:34Z",
      "updated_at": "2022-10-19T16:57:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999722362",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999722362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 580,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999975053",
      "pull_request_review_id": 1148330864,
      "id": 999975053,
      "node_id": "PRRC_kwDOABII5847mmiN",
      "diff_hunk": "@@ -167,6 +134,93 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     return {ChainstateLoadStatus::SUCCESS, {}};\n }\n \n+ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n+                                    const ChainstateLoadOptions& options)\n+{\n+    if (!hashAssumeValid.IsNull()) {\n+        LogPrintf(\"Assuming ancestors of block %s have valid signatures.\\n\", hashAssumeValid.GetHex());",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "c1767471c1cb6f1b856c22d767c35c18e19045e5",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think could do a `LookupBlockIndex` to display the block height, as it's more speaking for the node operator.",
      "created_at": "2022-10-19T22:07:33Z",
      "updated_at": "2022-10-19T22:31:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999975053",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999975053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999978823",
      "pull_request_review_id": 1148330864,
      "id": 999978823,
      "node_id": "PRRC_kwDOABII5847mndH",
      "diff_hunk": "@@ -167,6 +134,93 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     return {ChainstateLoadStatus::SUCCESS, {}};\n }\n \n+ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n+                                    const ChainstateLoadOptions& options)\n+{\n+    if (!hashAssumeValid.IsNull()) {\n+        LogPrintf(\"Assuming ancestors of block %s have valid signatures.\\n\", hashAssumeValid.GetHex());\n+    } else {\n+        LogPrintf(\"Validating signatures for all blocks.\\n\");\n+    }\n+    LogPrintf(\"Setting nMinimumChainWork=%s\\n\", nMinimumChainWork.GetHex());\n+    if (nMinimumChainWork < UintToArith256(chainman.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Warning: nMinimumChainWork set below default value of %s\\n\", chainman.GetConsensus().nMinimumChainWork.GetHex());\n+    }\n+    if (nPruneTarget == std::numeric_limits<uint64_t>::max()) {\n+        LogPrintf(\"Block pruning enabled.  Use RPC call pruneblockchain(height) to manually prune block and undo files.\\n\");\n+    } else if (nPruneTarget) {\n+        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n+    }\n+\n+    LOCK(cs_main);\n+    chainman.m_total_coinstip_cache = cache_sizes.coins;\n+    chainman.m_total_coinsdb_cache = cache_sizes.coins_db;\n+\n+    // Load the fully validated chainstate.\n+    chainman.InitializeChainstate(options.mempool);\n+\n+    // Load a chain created from a UTXO snapshot, if any exist.\n+    chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    auto& pblocktree{chainman.m_blockman.m_block_tree_db};\n+    // new CBlockTreeDB tries to delete the existing file, which\n+    // fails if it's still open from the previous loop. Close it first:\n+    pblocktree.reset();\n+    pblocktree.reset(new CBlockTreeDB(cache_sizes.block_tree_db, options.block_tree_db_in_memory, options.reindex));\n+\n+    if (options.reindex) {\n+        pblocktree->WriteReindexing(true);\n+        //If we're reindexing in prune mode, wipe away unusable block files and all undo data files\n+        if (options.prune) {\n+            CleanupBlockRevFiles();\n+        }\n+    }\n+\n+    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, options);\n+    if (init_status != ChainstateLoadStatus::SUCCESS) {\n+        return {init_status, init_error};\n+    }",
      "path": "src/node/chainstate.cpp",
      "position": 95,
      "original_position": 147,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "c1767471c1cb6f1b856c22d767c35c18e19045e5",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you could have a quick log of the chainstate initialization success, as this function has a lot of checks/ops and you can inform the node operator where he is in the initialization sequence.",
      "created_at": "2022-10-19T22:14:21Z",
      "updated_at": "2022-10-19T22:31:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999978823",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999978823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999984699",
      "pull_request_review_id": 1148330864,
      "id": 999984699,
      "node_id": "PRRC_kwDOABII5847mo47",
      "diff_hunk": "@@ -2973,6 +2985,13 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n     // we use m_chainstate_mutex to enforce mutual exclusion so that only one caller may execute this function at a time\n     LOCK(m_chainstate_mutex);\n \n+    // Belt-and-suspenders check that we aren't attempting to advance the background\n+    // chainstate past the snapshot base block.\n+    if (WITH_LOCK(::cs_main, return m_disabled)) {\n+        LogPrintf(\"m_disabled is set - this chainstate should not be in operation. Bug?.\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "c1767471c1cb6f1b856c22d767c35c18e19045e5",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you could go even further, and invite the node operator to fulfill an issue on the repository or at least indicate a communication process to feedback the bug to us ?",
      "created_at": "2022-10-19T22:24:57Z",
      "updated_at": "2022-10-19T22:31:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r999984699",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999984699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3044,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009792671",
      "pull_request_review_id": 1162441236,
      "id": 1009792671,
      "node_id": "PRRC_kwDOABII5848MDaf",
      "diff_hunk": "@@ -5117,6 +5168,149 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_disabled` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(",
      "path": "src/validation.cpp",
      "position": 142,
      "original_position": 121,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "07b9dea9d4e8de2ce22e8ba50172a4af85801931",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It looks like there has been a rebase error and two previous commits were combined into one commit that doesn't have a valid commit description. The two previous commits were:\r\n\r\n- \"move-only-ish: init: factor out chainstate initialization\" (aead772a24b1f7759cd756bf6534a70dc41ca080)\r\n- \"validation: add ChainMan logic for completing UTXO snapshot validation\" (863e5f389e08cd2069e4834df82879ec39142aac)\r\n\r\nand the new combined commit is \r\n\r\n - \"move-only-ish: init: factor out chainstate initialization\" (07b9dea9d4e8de2ce22e8ba50172a4af85801931)\r\n\r\nIt would help review to split these up and separate moveonly changes from other changes",
      "created_at": "2022-10-31T19:38:21Z",
      "updated_at": "2022-10-31T19:38:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1009792671",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009792671"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5310,
      "original_line": 5310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009927654",
      "pull_request_review_id": 1162638204,
      "id": 1009927654,
      "node_id": "PRRC_kwDOABII5848MkXm",
      "diff_hunk": "@@ -985,7 +997,10 @@ class ChainstateManager\n     std::optional<uint256> SnapshotBlockhash() const;\n \n     //! Is there a snapshot in use and has it been fully validated?",
      "path": "src/validation.h",
      "position": 197,
      "original_position": 44,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "1dda5f3f5982c8231b4c122b372e02b9ca7d4994",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment could be updated to reflect snapshot validation implied the ibd chainstate is from now disabled. No ulterior blocks should be connected.",
      "created_at": "2022-10-31T22:33:14Z",
      "updated_at": "2022-10-31T23:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1009927654",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009927654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1057,
      "original_line": 1057,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009936620",
      "pull_request_review_id": 1162638204,
      "id": 1009936620,
      "node_id": "PRRC_kwDOABII5848Mmjs",
      "diff_hunk": "@@ -470,6 +470,13 @@ class Chainstate\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "1dda5f3f5982c8231b4c122b372e02b9ca7d4994",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment is unclear if toggle is setup once \"same-height-of-snapshot' or if it also includes UTXO set hash comparison (`PopulateAndValidateSnapshot()`) ",
      "created_at": "2022-10-31T22:50:57Z",
      "updated_at": "2022-10-31T23:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1009936620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009936620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009939365",
      "pull_request_review_id": 1162638204,
      "id": 1009939365,
      "node_id": "PRRC_kwDOABII5848MnOl",
      "diff_hunk": "@@ -570,12 +570,14 @@ class Chainstate\n     CCoinsViewErrorCatcher& CoinsErrorCatcher() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n     {\n         AssertLockHeld(::cs_main);\n-        return m_coins_views->m_catcherview;\n+        return Assert(m_coins_views)->m_catcherview;\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n     void ResetCoinsViews() { m_coins_views.reset(); }\n \n+    bool HasCoinsViews() const { return (bool)m_coins_views; }",
      "path": "src/validation.h",
      "position": 59,
      "original_position": 30,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "65d2ce6417004350466017893d553d04237f4c12",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can get a one line comment. That way reduces confusion for the next contributor on a quest to refactor `validation.h`/`coins.h`, without introducing odds of weird consensus bugs. ",
      "created_at": "2022-10-31T22:56:45Z",
      "updated_at": "2022-10-31T23:02:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1009939365",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009939365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 586,
      "original_line": 586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1012923414",
      "pull_request_review_id": 1166931065,
      "id": 1012923414,
      "node_id": "PRRC_kwDOABII5848X_wW",
      "diff_hunk": "@@ -5117,6 +5168,149 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_disabled` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(",
      "path": "src/validation.cpp",
      "position": 142,
      "original_position": 121,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "07b9dea9d4e8de2ce22e8ba50172a4af85801931",
      "in_reply_to_id": 1009792671,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wow, no idea how that got so screwed up. Will fix, thanks.",
      "created_at": "2022-11-03T13:46:56Z",
      "updated_at": "2022-11-03T13:46:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1012923414",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1012923414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5310,
      "original_line": 5310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013346124",
      "pull_request_review_id": 1167589482,
      "id": 1013346124,
      "node_id": "PRRC_kwDOABII5848Zm9M",
      "diff_hunk": "@@ -167,6 +134,93 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     return {ChainstateLoadStatus::SUCCESS, {}};\n }\n \n+ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n+                                    const ChainstateLoadOptions& options)\n+{\n+    if (!hashAssumeValid.IsNull()) {\n+        LogPrintf(\"Assuming ancestors of block %s have valid signatures.\\n\", hashAssumeValid.GetHex());",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "c1767471c1cb6f1b856c22d767c35c18e19045e5",
      "in_reply_to_id": 999975053,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Out of scope for this PR, since this is just code I moved.",
      "created_at": "2022-11-03T20:00:54Z",
      "updated_at": "2022-11-03T20:00:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1013346124",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013346124"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013346413",
      "pull_request_review_id": 1167589989,
      "id": 1013346413,
      "node_id": "PRRC_kwDOABII5848ZnBt",
      "diff_hunk": "@@ -167,6 +134,93 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     return {ChainstateLoadStatus::SUCCESS, {}};\n }\n \n+ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n+                                    const ChainstateLoadOptions& options)\n+{\n+    if (!hashAssumeValid.IsNull()) {\n+        LogPrintf(\"Assuming ancestors of block %s have valid signatures.\\n\", hashAssumeValid.GetHex());\n+    } else {\n+        LogPrintf(\"Validating signatures for all blocks.\\n\");\n+    }\n+    LogPrintf(\"Setting nMinimumChainWork=%s\\n\", nMinimumChainWork.GetHex());\n+    if (nMinimumChainWork < UintToArith256(chainman.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Warning: nMinimumChainWork set below default value of %s\\n\", chainman.GetConsensus().nMinimumChainWork.GetHex());\n+    }\n+    if (nPruneTarget == std::numeric_limits<uint64_t>::max()) {\n+        LogPrintf(\"Block pruning enabled.  Use RPC call pruneblockchain(height) to manually prune block and undo files.\\n\");\n+    } else if (nPruneTarget) {\n+        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n+    }\n+\n+    LOCK(cs_main);\n+    chainman.m_total_coinstip_cache = cache_sizes.coins;\n+    chainman.m_total_coinsdb_cache = cache_sizes.coins_db;\n+\n+    // Load the fully validated chainstate.\n+    chainman.InitializeChainstate(options.mempool);\n+\n+    // Load a chain created from a UTXO snapshot, if any exist.\n+    chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    auto& pblocktree{chainman.m_blockman.m_block_tree_db};\n+    // new CBlockTreeDB tries to delete the existing file, which\n+    // fails if it's still open from the previous loop. Close it first:\n+    pblocktree.reset();\n+    pblocktree.reset(new CBlockTreeDB(cache_sizes.block_tree_db, options.block_tree_db_in_memory, options.reindex));\n+\n+    if (options.reindex) {\n+        pblocktree->WriteReindexing(true);\n+        //If we're reindexing in prune mode, wipe away unusable block files and all undo data files\n+        if (options.prune) {\n+            CleanupBlockRevFiles();\n+        }\n+    }\n+\n+    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, options);\n+    if (init_status != ChainstateLoadStatus::SUCCESS) {\n+        return {init_status, init_error};\n+    }",
      "path": "src/node/chainstate.cpp",
      "position": 95,
      "original_position": 147,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "c1767471c1cb6f1b856c22d767c35c18e19045e5",
      "in_reply_to_id": 999978823,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Out of scope or possibly follow-up given this was existing code.",
      "created_at": "2022-11-03T20:01:20Z",
      "updated_at": "2022-11-03T20:01:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1013346413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013346413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013360119",
      "pull_request_review_id": 1167610304,
      "id": 1013360119,
      "node_id": "PRRC_kwDOABII5848ZqX3",
      "diff_hunk": "@@ -570,12 +570,14 @@ class Chainstate\n     CCoinsViewErrorCatcher& CoinsErrorCatcher() EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n     {\n         AssertLockHeld(::cs_main);\n-        return m_coins_views->m_catcherview;\n+        return Assert(m_coins_views)->m_catcherview;\n     }\n \n     //! Destructs all objects related to accessing the UTXO set.\n     void ResetCoinsViews() { m_coins_views.reset(); }\n \n+    bool HasCoinsViews() const { return (bool)m_coins_views; }",
      "path": "src/validation.h",
      "position": 59,
      "original_position": 30,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "65d2ce6417004350466017893d553d04237f4c12",
      "in_reply_to_id": 1009939365,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added.",
      "created_at": "2022-11-03T20:18:40Z",
      "updated_at": "2022-11-03T20:18:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1013360119",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013360119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 586,
      "original_line": 586,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013360164",
      "pull_request_review_id": 1167610376,
      "id": 1013360164,
      "node_id": "PRRC_kwDOABII5848ZqYk",
      "diff_hunk": "@@ -470,6 +470,13 @@ class Chainstate\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots. It is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot, and signals that we should no",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "1dda5f3f5982c8231b4c122b372e02b9ca7d4994",
      "in_reply_to_id": 1009936620,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added.",
      "created_at": "2022-11-03T20:18:44Z",
      "updated_at": "2022-11-03T20:18:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1013360164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013360164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 457,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016039682",
      "pull_request_review_id": 1171289324,
      "id": 1016039682,
      "node_id": "PRRC_kwDOABII5848j4kC",
      "diff_hunk": "@@ -962,7 +976,10 @@ class ChainstateManager\n     std::optional<uint256> SnapshotBlockhash() const;\n \n     //! Is there a snapshot in use and has it been fully validated?\n-    bool IsSnapshotValidated() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main) { return m_snapshot_validated; }\n+    bool IsSnapshotValidated() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+    {\n+        return m_snapshot_chainstate && m_ibd_chainstate && m_ibd_chainstate->m_disabled;",
      "path": "src/validation.h",
      "position": 201,
      "original_position": 50,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "53f9a79c87fff061d7f5232b9c4e829f9380fa01",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add CChainState::m_disabled and ChainMan::isUsable\" (53f9a79c87fff061d7f5232b9c4e829f9380fa01)\r\n\r\nThis definition of `IsSnapshotValidated` seems to contradict earlier comment that m_disabled flag \"does *not* indicate that the background chainstate has been used to fully validate the snapshot\". If this is not a bug it might be useful to add a comment to this function to clarify, or maybe call something like `IsBackgroundChainDownloaded`.",
      "created_at": "2022-11-08T00:53:50Z",
      "updated_at": "2022-11-08T04:58:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016039682",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016039682"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1060,
      "original_line": 1060,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016045839",
      "pull_request_review_id": 1171289324,
      "id": 1016045839,
      "node_id": "PRRC_kwDOABII5848j6EP",
      "diff_hunk": "@@ -28,38 +28,13 @@\n #include <vector>\n \n namespace node {\n-ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n-                                    const ChainstateLoadOptions& options)\n+// Complete initialization of chainstates after the initial call has been made\n+// to ChainstateManager::InitializeChainstate().\n+static ChainstateLoadResult CompleteChainstateInitialization(",
      "path": "src/node/chainstate.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "15a86a4940777a427d2b1c8c7c1e533de440f951",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"move-only-ish: init: factor out chainstate initialization\" (15a86a4940777a427d2b1c8c7c1e533de440f951)\r\n\r\nThis is just an aesthetic suggestion, but instead of splitting this function in two and putting the second half below the first, half you could forward declare the second `CompleteChainstateInitialization` function, and keep the first part first and second part second. This would also make the diff a lot smaller because basically no code would have to move.",
      "created_at": "2022-11-08T01:07:08Z",
      "updated_at": "2022-11-08T04:58:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016045839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016045839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016047755",
      "pull_request_review_id": 1171289324,
      "id": 1016047755,
      "node_id": "PRRC_kwDOABII5848j6iL",
      "diff_hunk": "@@ -955,6 +990,18 @@ class ChainstateManager\n     [[nodiscard]] bool ActivateSnapshot(\n         AutoFile& coins_file, const node::SnapshotMetadata& metadata, bool in_memory);\n \n+    //! Once the background validation chainstate has reached the height which\n+    //! is the base of the UTXO snapshot in use, compare its coins to ensure\n+    //! they match those expected by the snapshot.\n+    //!\n+    //! If the coins match (expected), then mark the validation chainstate for\n+    //! deletion and continue using the snapshot chainstate as active.\n+    //! Otherwise, revert to using the ibd chainstate and shutdown (TODO).",
      "path": "src/validation.h",
      "position": null,
      "original_position": 69,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922)\r\n\r\nWhich part of this is TODO? It seems like current code is calling InvalidateCoinsDBOnDisk and shutting down as described",
      "created_at": "2022-11-08T01:11:06Z",
      "updated_at": "2022-11-08T04:58:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016047755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016047755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 999,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016053694",
      "pull_request_review_id": 1171289324,
      "id": 1016053694,
      "node_id": "PRRC_kwDOABII5848j7--",
      "diff_hunk": "@@ -183,6 +186,43 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         return {init_status, init_error};\n     }\n \n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate. This is the expected case during snapshot completion, and\n+    // not just a belt-and-suspenders.",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922)\r\n\r\nYou probably explained this somewhere previously, but I can't remember why this is expected. Could you replace \"This is expected\" sentence with something more specific like \"The background chainstate is only deleted on startup, not while the node is running, because of [reason]\".",
      "created_at": "2022-11-08T01:24:04Z",
      "updated_at": "2022-11-08T04:58:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016053694",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016053694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 191,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016061460",
      "pull_request_review_id": 1171289324,
      "id": 1016061460,
      "node_id": "PRRC_kwDOABII5848j94U",
      "diff_hunk": "@@ -5304,6 +5498,42 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     return *m_snapshot_chainstate;\n }\n \n+void Chainstate::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    auto storage_path_maybe = this->CoinsDB().StoragePath();\n+    // Should never be called with a non-existent storage path.\n+    assert(storage_path_maybe);\n+    fs::path snapshot_datadir = *storage_path_maybe;\n+\n+    // Coins views no longer usable.\n+    m_coins_views.reset();\n+\n+    auto invalid_path = snapshot_datadir + \"_INVALID\";\n+    std::string dbpath = fs::PathToString(snapshot_datadir);\n+    std::string target = fs::PathToString(invalid_path);\n+    LogPrintf(\"[snapshot] renaming snapshot datadir %s to %s\\n\", dbpath, target);\n+\n+    // The invalid snapshot datadir is simply moved and not deleted because we may\n+    // want to do forensics later during issue investigation. The user is instructed\n+    // accordingly in MaybeCompleteSnapshotValidation().\n+    try {\n+        fs::rename(snapshot_datadir, invalid_path);\n+    } catch (const fs::filesystem_error& e) {\n+        auto src_str = fs::PathToString(snapshot_datadir);\n+        auto dest_str = fs::PathToString(invalid_path);\n+\n+        LogPrintf(\"%s: error renaming file '%s' -> '%s': %s\\n\",\n+                __func__, src_str, dest_str, e.what());\n+        AbortNode(strprintf(\n+            \"Rename of '%s' -> '%s' failed. \"\n+            \"Do not restart until manually moving or deleting invalid snapshot directory %s.\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 288,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922)\r\n\r\nWhat's the reason not to restart? It seems like if you do restart the snapshot will just fail to validate again which should be safe because it will either succesfully rename, or show the same error message again. Maybe better to say what to do instead of what not to do like \"Rename of invalid chainstate '%s' -> '%s' failed. Node may refuse to start until bad chainstate is manually renamed or deleted.\"",
      "created_at": "2022-11-08T01:37:53Z",
      "updated_at": "2022-11-08T04:58:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016061460",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016061460"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016126310",
      "pull_request_review_id": 1171289324,
      "id": 1016126310,
      "node_id": "PRRC_kwDOABII5848kNtm",
      "diff_hunk": "@@ -2810,6 +2810,18 @@ bool Chainstate::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew,\n              Ticks<SecondsDouble>(time_total),\n              Ticks<MillisecondsDouble>(time_total) / num_blocks_total);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_disabled`, which is referenced immediately afterwards in\n+        // ActivateBestChain.\n+        //\n+        // If this fails (i.e. if snapshot is invalid), we will have marked the\n+        // snapshot chainstate as unusable, and will have removed its coinsdb from\n+        // disk.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922)\r\n\r\nI think it's just renamed `_INVALID`, not removed. In any case, this detail doesn't really seem relevant here. It seems more relevant that the failure is handled internally so no need to check for errors from this function.",
      "created_at": "2022-11-08T04:14:26Z",
      "updated_at": "2022-11-08T04:58:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016126310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016126310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 2819,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016126823",
      "pull_request_review_id": 1171289324,
      "id": 1016126823,
      "node_id": "PRRC_kwDOABII5848kN1n",
      "diff_hunk": "@@ -2810,6 +2810,18 @@ bool Chainstate::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew,\n              Ticks<SecondsDouble>(time_total),\n              Ticks<MillisecondsDouble>(time_total) / num_blocks_total);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_disabled`, which is referenced immediately afterwards in\n+        // ActivateBestChain.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add ChainMan logic for completing UTXO snapshot validation\" (https://github.com/bitcoin/bitcoin/commit/e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922)\r\n\r\nWould add \"so it will stop connecting new blocks\" to make it clearer what m_disabled is used for.",
      "created_at": "2022-11-08T04:15:50Z",
      "updated_at": "2022-11-08T04:58:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016126823",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016126823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 2816,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2817,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016732670",
      "pull_request_review_id": 1172272694,
      "id": 1016732670,
      "node_id": "PRRC_kwDOABII5848mhv-",
      "diff_hunk": "@@ -962,7 +976,10 @@ class ChainstateManager\n     std::optional<uint256> SnapshotBlockhash() const;\n \n     //! Is there a snapshot in use and has it been fully validated?\n-    bool IsSnapshotValidated() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main) { return m_snapshot_validated; }\n+    bool IsSnapshotValidated() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+    {\n+        return m_snapshot_chainstate && m_ibd_chainstate && m_ibd_chainstate->m_disabled;",
      "path": "src/validation.h",
      "position": 201,
      "original_position": 50,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "53f9a79c87fff061d7f5232b9c4e829f9380fa01",
      "in_reply_to_id": 1016039682,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, yeah, good catch! I moved too fast when addressing Antoine's feedback and forgot that setting `m_disabled` on the IBD chainstate _does_ indicate full snapshot validation. It's a little confusing because setting `m_disabled` on the _snapshot_ chainstate indicates that validation failed, but this definition of `IsSnapshotValidated()` is actually still correct, I just screwed up the comment.",
      "created_at": "2022-11-08T14:50:51Z",
      "updated_at": "2022-11-08T14:50:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016732670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016732670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1060,
      "original_line": 1060,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016741292",
      "pull_request_review_id": 1172285484,
      "id": 1016741292,
      "node_id": "PRRC_kwDOABII5848mj2s",
      "diff_hunk": "@@ -962,7 +976,10 @@ class ChainstateManager\n     std::optional<uint256> SnapshotBlockhash() const;\n \n     //! Is there a snapshot in use and has it been fully validated?\n-    bool IsSnapshotValidated() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main) { return m_snapshot_validated; }\n+    bool IsSnapshotValidated() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n+    {\n+        return m_snapshot_chainstate && m_ibd_chainstate && m_ibd_chainstate->m_disabled;",
      "path": "src/validation.h",
      "position": 201,
      "original_position": 50,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "53f9a79c87fff061d7f5232b9c4e829f9380fa01",
      "in_reply_to_id": 1016039682,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, that is a helpful clarification that m_disabled is set in different conditions on the different chainstates. It'd be useful to say in doxygen comment for `m_disabled` that it is is only set on background chainstate after it is validated and validation was successful, and only set on snapshot chainstate if it's invalid and needs to be deleted.",
      "created_at": "2022-11-08T14:57:21Z",
      "updated_at": "2022-11-08T14:57:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016741292",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016741292"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1060,
      "original_line": 1060,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016807732",
      "pull_request_review_id": 1172385371,
      "id": 1016807732,
      "node_id": "PRRC_kwDOABII5848m0E0",
      "diff_hunk": "@@ -28,38 +28,13 @@\n #include <vector>\n \n namespace node {\n-ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n-                                    const ChainstateLoadOptions& options)\n+// Complete initialization of chainstates after the initial call has been made\n+// to ChainstateManager::InitializeChainstate().\n+static ChainstateLoadResult CompleteChainstateInitialization(",
      "path": "src/node/chainstate.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "15a86a4940777a427d2b1c8c7c1e533de440f951",
      "in_reply_to_id": 1016045839,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I *would* do this, but repeating the function signature for a static function for perpetuity just to save on a diff that's pretty easy to read with `--color-moved=dimmed-zebra --color-moved-ws=ignore-space-change` anyway doesn't seem like the right trade to me. Will leave this as-is.\r\n\r\n",
      "created_at": "2022-11-08T15:46:22Z",
      "updated_at": "2022-11-08T15:46:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016807732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016807732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016809136",
      "pull_request_review_id": 1172387389,
      "id": 1016809136,
      "node_id": "PRRC_kwDOABII5848m0aw",
      "diff_hunk": "@@ -955,6 +990,18 @@ class ChainstateManager\n     [[nodiscard]] bool ActivateSnapshot(\n         AutoFile& coins_file, const node::SnapshotMetadata& metadata, bool in_memory);\n \n+    //! Once the background validation chainstate has reached the height which\n+    //! is the base of the UTXO snapshot in use, compare its coins to ensure\n+    //! they match those expected by the snapshot.\n+    //!\n+    //! If the coins match (expected), then mark the validation chainstate for\n+    //! deletion and continue using the snapshot chainstate as active.\n+    //! Otherwise, revert to using the ibd chainstate and shutdown (TODO).",
      "path": "src/validation.h",
      "position": null,
      "original_position": 69,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": 1016047755,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch!",
      "created_at": "2022-11-08T15:47:27Z",
      "updated_at": "2022-11-08T15:47:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016809136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016809136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 999,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016814099",
      "pull_request_review_id": 1172394735,
      "id": 1016814099,
      "node_id": "PRRC_kwDOABII5848m1oT",
      "diff_hunk": "@@ -183,6 +186,43 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n         return {init_status, init_error};\n     }\n \n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate. This is the expected case during snapshot completion, and\n+    // not just a belt-and-suspenders.",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": 1016053694,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, done.",
      "created_at": "2022-11-08T15:51:24Z",
      "updated_at": "2022-11-08T16:01:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016814099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016814099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 191,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016816857",
      "pull_request_review_id": 1172394735,
      "id": 1016816857,
      "node_id": "PRRC_kwDOABII5848m2TZ",
      "diff_hunk": "@@ -2810,6 +2810,18 @@ bool Chainstate::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew,\n              Ticks<SecondsDouble>(time_total),\n              Ticks<MillisecondsDouble>(time_total) / num_blocks_total);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_disabled`, which is referenced immediately afterwards in\n+        // ActivateBestChain.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": 1016126823,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2022-11-08T15:53:30Z",
      "updated_at": "2022-11-08T16:01:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016816857",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016816857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 2816,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2817,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016818067",
      "pull_request_review_id": 1172394735,
      "id": 1016818067,
      "node_id": "PRRC_kwDOABII5848m2mT",
      "diff_hunk": "@@ -2810,6 +2810,18 @@ bool Chainstate::ConnectTip(BlockValidationState& state, CBlockIndex* pindexNew,\n              Ticks<SecondsDouble>(time_total),\n              Ticks<MillisecondsDouble>(time_total) / num_blocks_total);\n \n+    // If we are the background validation chainstate, check to see if we are done\n+    // validating the snapshot (i.e. our tip has reached the snapshot's base block).\n+    if (this != &m_chainman.ActiveChainstate()) {\n+        // This call may set `m_disabled`, which is referenced immediately afterwards in\n+        // ActivateBestChain.\n+        //\n+        // If this fails (i.e. if snapshot is invalid), we will have marked the\n+        // snapshot chainstate as unusable, and will have removed its coinsdb from\n+        // disk.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": 1016126310,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, fixed.",
      "created_at": "2022-11-08T15:54:25Z",
      "updated_at": "2022-11-08T16:01:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016818067",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016818067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": 2819,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016821985",
      "pull_request_review_id": 1172394735,
      "id": 1016821985,
      "node_id": "PRRC_kwDOABII5848m3jh",
      "diff_hunk": "@@ -5304,6 +5498,42 @@ Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uin\n     return *m_snapshot_chainstate;\n }\n \n+void Chainstate::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    auto storage_path_maybe = this->CoinsDB().StoragePath();\n+    // Should never be called with a non-existent storage path.\n+    assert(storage_path_maybe);\n+    fs::path snapshot_datadir = *storage_path_maybe;\n+\n+    // Coins views no longer usable.\n+    m_coins_views.reset();\n+\n+    auto invalid_path = snapshot_datadir + \"_INVALID\";\n+    std::string dbpath = fs::PathToString(snapshot_datadir);\n+    std::string target = fs::PathToString(invalid_path);\n+    LogPrintf(\"[snapshot] renaming snapshot datadir %s to %s\\n\", dbpath, target);\n+\n+    // The invalid snapshot datadir is simply moved and not deleted because we may\n+    // want to do forensics later during issue investigation. The user is instructed\n+    // accordingly in MaybeCompleteSnapshotValidation().\n+    try {\n+        fs::rename(snapshot_datadir, invalid_path);\n+    } catch (const fs::filesystem_error& e) {\n+        auto src_str = fs::PathToString(snapshot_datadir);\n+        auto dest_str = fs::PathToString(invalid_path);\n+\n+        LogPrintf(\"%s: error renaming file '%s' -> '%s': %s\\n\",\n+                __func__, src_str, dest_str, e.what());\n+        AbortNode(strprintf(\n+            \"Rename of '%s' -> '%s' failed. \"\n+            \"Do not restart until manually moving or deleting invalid snapshot directory %s.\",",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 288,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e17d51768bcf5f7791fdf7d0b2ee4b11cc64d922",
      "in_reply_to_id": 1016061460,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point! Done.",
      "created_at": "2022-11-08T15:57:17Z",
      "updated_at": "2022-11-08T16:01:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1016821985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1016821985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1020962043",
      "pull_request_review_id": 1178296226,
      "id": 1020962043,
      "node_id": "PRRC_kwDOABII58482qT7",
      "diff_hunk": "@@ -451,6 +451,19 @@ class Chainstate\n     //! Manages the UTXO set, which is a reflection of the contents of `m_chain`.\n     std::unique_ptr<CoinsViews> m_coins_views;\n \n+    //! This toggle exists for use when doing background validation for UTXO\n+    //! snapshots.\n+    //!\n+    //! In the expected case, it is set once the background validation chain reaches the\n+    //! same height as the base of the snapshot and its UTXO set is found to hash to\n+    //! the expected assumeutxo value. It signals that we should no longer connect\n+    //! blocks to the background chainstate. When set on the background validation\n+    //! chainstate, it signifies that we have fully validated the snapshot chainstate.",
      "path": "src/validation.h",
      "position": 19,
      "original_position": 11,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "e07764318ad766ba27dfeafe1ca2345534f81dd5",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"validation: add CChainState::m_disabled and ChainMan::isUsable\" (e07764318ad766ba27dfeafe1ca2345534f81dd5)\r\n\r\nThis last sentence is confusing because it is part of the \"In the expected case\" paragraph, but it is referring to an different unexpected case. It's also not very clear that this sentence is referring to a different chainstate object than the rest of the paragraph.\r\n\r\nWould move this sentence to a separate paragraph and say something like \"In the error case, if the background UTXO hash does not match the expected assumeutxo valid, m_disabled will be set to true on the snapshot chainstate (not the background validation chainstate) indicating that the snapshot chainstate is invalid.\"",
      "created_at": "2022-11-13T20:50:37Z",
      "updated_at": "2022-11-13T20:54:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1020962043",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1020962043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": 483,
      "original_start_line": 460,
      "start_side": "RIGHT",
      "line": 484,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029633554",
      "pull_request_review_id": 1190503385,
      "id": 1029633554,
      "node_id": "PRRC_kwDOABII5849XvYS",
      "diff_hunk": "@@ -518,10 +533,156 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\n         // chainstate.\n         for (Chainstate* cs : chainman_restarted.GetAll()) {\n             if (cs != &chainman_restarted.ActiveChainstate()) {\n-                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 110);\n+                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 109);\n             }\n         }\n     }\n }\n \n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion, SnapshotTestSetup)\n+{\n+    this->SetupSnapshot();\n+\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    Chainstate& active_cs = chainman.ActiveChainstate();\n+    auto tip_cache_before_complete = active_cs.m_coinstip_cache_size_bytes;\n+    auto db_cache_before_complete = active_cs.m_coinsdb_cache_size_bytes;\n+\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    fs::path snapshot_chainstate_dir = *node::FindSnapshotChainstateDir();\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+    BOOST_CHECK_EQUAL(snapshot_chainstate_dir, gArgs.GetDataDirNet() / \"chainstate_snapshot\");\n+\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+    const uint256 snapshot_tip_hash = WITH_LOCK(chainman.GetMutex(),\n+        return chainman.ActiveTip()->GetBlockHash());\n+\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SUCCESS);\n+\n+    WITH_LOCK(::cs_main, BOOST_CHECK(chainman.IsSnapshotValidated()));\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+\n+    // Cache should have been rebalanced and reallocated to the \"only\" remaining\n+    // chainstate.\n+    BOOST_CHECK(active_cs.m_coinstip_cache_size_bytes > tip_cache_before_complete);\n+    BOOST_CHECK(active_cs.m_coinsdb_cache_size_bytes > db_cache_before_complete);\n+\n+    auto all_chainstates = chainman.GetAll();\n+    BOOST_CHECK_EQUAL(all_chainstates.size(), 1);\n+    BOOST_CHECK_EQUAL(all_chainstates[0], &active_cs);\n+\n+    // Trying completion again should return false.\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SKIPPED);\n+\n+    // The invalid snapshot path should not have been used.\n+    fs::path snapshot_invalid_dir = gArgs.GetDataDirNet() / \"chainstate_snapshot_INVALID\";\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should still exist.\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+\n+    // Test that simulating a shutdown (reseting ChainstateManager) and then performing\n+    // chainstate reinitializing successfully cleans up the background-validation\n+    // chainstate data, and we end up with a single chainstate that is at tip.\n+    ChainstateManager& chainman_restarted = this->SimulateNodeRestart();\n+\n+    BOOST_TEST_MESSAGE(\"Performing Load/Verify/Activate of chainstate\");\n+\n+    // This call reinitializes the chainstates, and should clean up the now unnecessary\n+    // background-validation leveldb contents.\n+    this->LoadVerifyActivateChainstate();\n+\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should now *not* exist.\n+    BOOST_CHECK(!fs::exists(snapshot_chainstate_dir));\n+\n+    {\n+        LOCK(chainman_restarted.GetMutex());\n+        BOOST_CHECK_EQUAL(chainman_restarted.GetAll().size(), 1);\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotActive());\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotValidated());",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 113,
      "original_position": 111,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As I understand this sequence of checks verifying the cleanness of our chain validation, I think you could also verify the coin cache rebalancing as done above, i.e `BOOST_CHECK(active_cs.m_coinstip_cache_size_bytes > tip_cache_before_complete)` and the other one.",
      "created_at": "2022-11-22T17:24:59Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029633554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029633554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 610,
      "original_line": 610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029641430",
      "pull_request_review_id": 1190503385,
      "id": 1029641430,
      "node_id": "PRRC_kwDOABII5849XxTW",
      "diff_hunk": "@@ -518,10 +533,156 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\n         // chainstate.\n         for (Chainstate* cs : chainman_restarted.GetAll()) {\n             if (cs != &chainman_restarted.ActiveChainstate()) {\n-                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 110);\n+                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 109);\n             }\n         }\n     }\n }\n \n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion, SnapshotTestSetup)\n+{\n+    this->SetupSnapshot();\n+\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    Chainstate& active_cs = chainman.ActiveChainstate();\n+    auto tip_cache_before_complete = active_cs.m_coinstip_cache_size_bytes;\n+    auto db_cache_before_complete = active_cs.m_coinsdb_cache_size_bytes;\n+\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    fs::path snapshot_chainstate_dir = *node::FindSnapshotChainstateDir();\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+    BOOST_CHECK_EQUAL(snapshot_chainstate_dir, gArgs.GetDataDirNet() / \"chainstate_snapshot\");\n+\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+    const uint256 snapshot_tip_hash = WITH_LOCK(chainman.GetMutex(),\n+        return chainman.ActiveTip()->GetBlockHash());\n+\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SUCCESS);\n+\n+    WITH_LOCK(::cs_main, BOOST_CHECK(chainman.IsSnapshotValidated()));\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+\n+    // Cache should have been rebalanced and reallocated to the \"only\" remaining\n+    // chainstate.\n+    BOOST_CHECK(active_cs.m_coinstip_cache_size_bytes > tip_cache_before_complete);\n+    BOOST_CHECK(active_cs.m_coinsdb_cache_size_bytes > db_cache_before_complete);\n+\n+    auto all_chainstates = chainman.GetAll();\n+    BOOST_CHECK_EQUAL(all_chainstates.size(), 1);\n+    BOOST_CHECK_EQUAL(all_chainstates[0], &active_cs);\n+\n+    // Trying completion again should return false.\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SKIPPED);\n+\n+    // The invalid snapshot path should not have been used.\n+    fs::path snapshot_invalid_dir = gArgs.GetDataDirNet() / \"chainstate_snapshot_INVALID\";\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should still exist.\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+\n+    // Test that simulating a shutdown (reseting ChainstateManager) and then performing\n+    // chainstate reinitializing successfully cleans up the background-validation\n+    // chainstate data, and we end up with a single chainstate that is at tip.\n+    ChainstateManager& chainman_restarted = this->SimulateNodeRestart();\n+\n+    BOOST_TEST_MESSAGE(\"Performing Load/Verify/Activate of chainstate\");\n+\n+    // This call reinitializes the chainstates, and should clean up the now unnecessary\n+    // background-validation leveldb contents.\n+    this->LoadVerifyActivateChainstate();\n+\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should now *not* exist.\n+    BOOST_CHECK(!fs::exists(snapshot_chainstate_dir));\n+\n+    {\n+        LOCK(chainman_restarted.GetMutex());\n+        BOOST_CHECK_EQUAL(chainman_restarted.GetAll().size(), 1);\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotActive());\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotValidated());\n+\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveTip()->GetBlockHash(), snapshot_tip_hash);\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveHeight(), 210);\n+    }\n+\n+    BOOST_TEST_MESSAGE(\n+        \"Ensure we can mine blocks on top of the \\\"new\\\" IBD chainstate\");\n+    mineBlocks(10);\n+    {\n+        LOCK(chainman_restarted.GetMutex());\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveHeight(), 220);\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion_hash_mismatch, SnapshotTestSetup)\n+{\n+    auto chainstates = this->SetupSnapshot();\n+    Chainstate& validation_chainstate = *std::get<0>(chainstates);\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    // Test tampering with the IBD UTXO set with an extra coin to ensure it causes\n+    // snapshot completion to fail.\n+    CCoinsViewCache& ibd_coins = WITH_LOCK(::cs_main,",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 140,
      "original_position": 136,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To verify the coinstats logic (`ComputeUTXOStats`) is committing well to all the attributes of the chain tip coin set, I think other variations of tampering could be done, such as picking up a random coin and inflating its `nValue` or tweaking its `scriptPubKey`.",
      "created_at": "2022-11-22T17:33:22Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029641430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029641430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 637,
      "original_line": 637,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029645606",
      "pull_request_review_id": 1190503385,
      "id": 1029645606,
      "node_id": "PRRC_kwDOABII5849XyUm",
      "diff_hunk": "@@ -518,10 +533,156 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\n         // chainstate.\n         for (Chainstate* cs : chainman_restarted.GetAll()) {\n             if (cs != &chainman_restarted.ActiveChainstate()) {\n-                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 110);\n+                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 109);\n             }\n         }\n     }\n }\n \n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion, SnapshotTestSetup)\n+{\n+    this->SetupSnapshot();\n+\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    Chainstate& active_cs = chainman.ActiveChainstate();\n+    auto tip_cache_before_complete = active_cs.m_coinstip_cache_size_bytes;\n+    auto db_cache_before_complete = active_cs.m_coinsdb_cache_size_bytes;\n+\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    fs::path snapshot_chainstate_dir = *node::FindSnapshotChainstateDir();\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+    BOOST_CHECK_EQUAL(snapshot_chainstate_dir, gArgs.GetDataDirNet() / \"chainstate_snapshot\");\n+\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+    const uint256 snapshot_tip_hash = WITH_LOCK(chainman.GetMutex(),\n+        return chainman.ActiveTip()->GetBlockHash());\n+\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SUCCESS);\n+\n+    WITH_LOCK(::cs_main, BOOST_CHECK(chainman.IsSnapshotValidated()));\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+\n+    // Cache should have been rebalanced and reallocated to the \"only\" remaining\n+    // chainstate.\n+    BOOST_CHECK(active_cs.m_coinstip_cache_size_bytes > tip_cache_before_complete);\n+    BOOST_CHECK(active_cs.m_coinsdb_cache_size_bytes > db_cache_before_complete);\n+\n+    auto all_chainstates = chainman.GetAll();\n+    BOOST_CHECK_EQUAL(all_chainstates.size(), 1);\n+    BOOST_CHECK_EQUAL(all_chainstates[0], &active_cs);\n+\n+    // Trying completion again should return false.\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SKIPPED);\n+\n+    // The invalid snapshot path should not have been used.\n+    fs::path snapshot_invalid_dir = gArgs.GetDataDirNet() / \"chainstate_snapshot_INVALID\";\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should still exist.\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+\n+    // Test that simulating a shutdown (reseting ChainstateManager) and then performing\n+    // chainstate reinitializing successfully cleans up the background-validation\n+    // chainstate data, and we end up with a single chainstate that is at tip.\n+    ChainstateManager& chainman_restarted = this->SimulateNodeRestart();\n+\n+    BOOST_TEST_MESSAGE(\"Performing Load/Verify/Activate of chainstate\");\n+\n+    // This call reinitializes the chainstates, and should clean up the now unnecessary\n+    // background-validation leveldb contents.\n+    this->LoadVerifyActivateChainstate();\n+\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should now *not* exist.\n+    BOOST_CHECK(!fs::exists(snapshot_chainstate_dir));\n+\n+    {\n+        LOCK(chainman_restarted.GetMutex());\n+        BOOST_CHECK_EQUAL(chainman_restarted.GetAll().size(), 1);\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotActive());\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotValidated());\n+\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveTip()->GetBlockHash(), snapshot_tip_hash);\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveHeight(), 210);\n+    }\n+\n+    BOOST_TEST_MESSAGE(\n+        \"Ensure we can mine blocks on top of the \\\"new\\\" IBD chainstate\");\n+    mineBlocks(10);\n+    {\n+        LOCK(chainman_restarted.GetMutex());\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveHeight(), 220);\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion_hash_mismatch, SnapshotTestSetup)\n+{\n+    auto chainstates = this->SetupSnapshot();\n+    Chainstate& validation_chainstate = *std::get<0>(chainstates);\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    // Test tampering with the IBD UTXO set with an extra coin to ensure it causes\n+    // snapshot completion to fail.\n+    CCoinsViewCache& ibd_coins = WITH_LOCK(::cs_main,\n+        return validation_chainstate.CoinsTip());\n+    Coin badcoin;\n+    badcoin.out.nValue = InsecureRand32();\n+    badcoin.nHeight = 1;\n+    badcoin.out.scriptPubKey.assign(InsecureRandBits(6), 0);\n+    uint256 txid = InsecureRand256();\n+    ibd_coins.AddCoin(COutPoint(txid, 0), std::move(badcoin), false);\n+\n+    fs::path snapshot_chainstate_dir = gArgs.GetDataDirNet() / \"chainstate_snapshot\";\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::HASH_MISMATCH);",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 154,
      "original_position": 150,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note, among the `validation_chainstatemanager_test.cpp` unit tests, I think only `SnapshotCompletionResult::HASH_MISMATCH` is exercised, I don't see checks for `MISSING_CHAINPARAMS, STATS_FAILED, BASE_BLOCKHASH_MISMATCH`. They can be added later.  ",
      "created_at": "2022-11-22T17:37:33Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029645606",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029645606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 651,
      "original_line": 651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029649960",
      "pull_request_review_id": 1190503385,
      "id": 1029649960,
      "node_id": "PRRC_kwDOABII5849XzYo",
      "diff_hunk": "@@ -5196,6 +5241,149 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 128,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe here you would like to say `ComputeUTXOStats` (used L5344), the core logic of `GetUTXOStats`.  ",
      "created_at": "2022-11-22T17:42:13Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029649960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029649960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5253,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029667346",
      "pull_request_review_id": 1190503385,
      "id": 1029667346,
      "node_id": "PRRC_kwDOABII5849X3oS",
      "diff_hunk": "@@ -170,6 +152,84 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     return {ChainstateLoadStatus::SUCCESS, {}};\n }\n \n+ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n+                                    const ChainstateLoadOptions& options)\n+{\n+    if (!chainman.AssumedValidBlock().IsNull()) {\n+        LogPrintf(\"Assuming ancestors of block %s have valid signatures.\\n\", chainman.AssumedValidBlock().GetHex());\n+    } else {\n+        LogPrintf(\"Validating signatures for all blocks.\\n\");\n+    }\n+    LogPrintf(\"Setting nMinimumChainWork=%s\\n\", chainman.MinimumChainWork().GetHex());\n+    if (chainman.MinimumChainWork() < UintToArith256(chainman.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Warning: nMinimumChainWork set below default value of %s\\n\", chainman.GetConsensus().nMinimumChainWork.GetHex());\n+    }\n+    if (nPruneTarget == std::numeric_limits<uint64_t>::max()) {\n+        LogPrintf(\"Block pruning enabled.  Use RPC call pruneblockchain(height) to manually prune block and undo files.\\n\");\n+    } else if (nPruneTarget) {\n+        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n+    }\n+\n+    LOCK(cs_main);\n+\n+    chainman.m_total_coinstip_cache = cache_sizes.coins;\n+    chainman.m_total_coinsdb_cache = cache_sizes.coins_db;\n+\n+    // Load the fully validated chainstate.\n+    chainman.InitializeChainstate(options.mempool);\n+\n+    // Load a chain created from a UTXO snapshot, if any exist.\n+    chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n+    if (init_status != ChainstateLoadStatus::SUCCESS) {\n+        return {init_status, init_error};\n+    }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    //\n+    // Why is this cleanup done here (on subsequent restart) and not just when the\n+    // snapshot is actually validated? Because this entails unusual\n+    // filesystem operations to move leveldb data directories around, and that seems\n+    // too risky to do in the middle of normal runtime.\n+    auto snapshot_completion = chainman.MaybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion == SnapshotCompletionResult::SKIPPED) {\n+        // do nothing; expected case",
      "path": "src/node/chainstate.cpp",
      "position": 108,
      "original_position": 108,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "One future improvement suggestion: I think here the boolean result of `DetectSnapshotChainstate` to completely skip the call of `MaybeCompleteSnapshotValidation` and remove `SnapshotCompletionResult::SKIPPED`. From my understanding, lack of UTXO snapshot should imply lack of background chainstate, whatever its sync state and the necessity of clean it..",
      "created_at": "2022-11-22T18:01:13Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029667346",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029667346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 200,
      "original_line": 200,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029672259",
      "pull_request_review_id": 1190503385,
      "id": 1029672259,
      "node_id": "PRRC_kwDOABII5849X41D",
      "diff_hunk": "@@ -170,6 +152,84 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     return {ChainstateLoadStatus::SUCCESS, {}};\n }\n \n+ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n+                                    const ChainstateLoadOptions& options)\n+{\n+    if (!chainman.AssumedValidBlock().IsNull()) {\n+        LogPrintf(\"Assuming ancestors of block %s have valid signatures.\\n\", chainman.AssumedValidBlock().GetHex());\n+    } else {\n+        LogPrintf(\"Validating signatures for all blocks.\\n\");\n+    }\n+    LogPrintf(\"Setting nMinimumChainWork=%s\\n\", chainman.MinimumChainWork().GetHex());\n+    if (chainman.MinimumChainWork() < UintToArith256(chainman.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Warning: nMinimumChainWork set below default value of %s\\n\", chainman.GetConsensus().nMinimumChainWork.GetHex());\n+    }\n+    if (nPruneTarget == std::numeric_limits<uint64_t>::max()) {\n+        LogPrintf(\"Block pruning enabled.  Use RPC call pruneblockchain(height) to manually prune block and undo files.\\n\");\n+    } else if (nPruneTarget) {\n+        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n+    }\n+\n+    LOCK(cs_main);\n+\n+    chainman.m_total_coinstip_cache = cache_sizes.coins;\n+    chainman.m_total_coinsdb_cache = cache_sizes.coins_db;\n+\n+    // Load the fully validated chainstate.\n+    chainman.InitializeChainstate(options.mempool);\n+\n+    // Load a chain created from a UTXO snapshot, if any exist.\n+    chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n+    if (init_status != ChainstateLoadStatus::SUCCESS) {\n+        return {init_status, init_error};\n+    }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    //\n+    // Why is this cleanup done here (on subsequent restart) and not just when the\n+    // snapshot is actually validated? Because this entails unusual\n+    // filesystem operations to move leveldb data directories around, and that seems\n+    // too risky to do in the middle of normal runtime.\n+    auto snapshot_completion = chainman.MaybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion == SnapshotCompletionResult::SKIPPED) {\n+        // do nothing; expected case\n+    } else if (snapshot_completion == SnapshotCompletionResult::SUCCESS) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        if (!chainman.ValidatedSnapshotCleanup()) {\n+            AbortNode(\"Background chainstate cleanup failed unexpectedly.\");\n+        }\n+\n+        // Because ValidatedSnapshotCleanup() has torn down chainstates with\n+        // ChainstateManager::ResetChainstates(), reinitialize them here without\n+        // duplicating the blockindex work above.\n+        assert(chainman.GetAll().empty());\n+        assert(!chainman.IsSnapshotActive());\n+        assert(!chainman.IsSnapshotValidated());",
      "path": "src/node/chainstate.cpp",
      "position": 120,
      "original_position": 120,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I believe asserting cache sanity could be also done, there is a call to `MaybeRebalanceCaches()` at the end of `MaybeCompleteSnapshotValidation()`. ",
      "created_at": "2022-11-22T18:06:57Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029672259",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029672259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 212,
      "original_line": 212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029685595",
      "pull_request_review_id": 1190503385,
      "id": 1029685595,
      "node_id": "PRRC_kwDOABII5849X8Fb",
      "diff_hunk": "@@ -170,6 +152,84 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     return {ChainstateLoadStatus::SUCCESS, {}};\n }\n \n+ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSizes& cache_sizes,\n+                                    const ChainstateLoadOptions& options)\n+{\n+    if (!chainman.AssumedValidBlock().IsNull()) {\n+        LogPrintf(\"Assuming ancestors of block %s have valid signatures.\\n\", chainman.AssumedValidBlock().GetHex());\n+    } else {\n+        LogPrintf(\"Validating signatures for all blocks.\\n\");\n+    }\n+    LogPrintf(\"Setting nMinimumChainWork=%s\\n\", chainman.MinimumChainWork().GetHex());\n+    if (chainman.MinimumChainWork() < UintToArith256(chainman.GetConsensus().nMinimumChainWork)) {\n+        LogPrintf(\"Warning: nMinimumChainWork set below default value of %s\\n\", chainman.GetConsensus().nMinimumChainWork.GetHex());\n+    }\n+    if (nPruneTarget == std::numeric_limits<uint64_t>::max()) {\n+        LogPrintf(\"Block pruning enabled.  Use RPC call pruneblockchain(height) to manually prune block and undo files.\\n\");\n+    } else if (nPruneTarget) {\n+        LogPrintf(\"Prune configured to target %u MiB on disk for block and undo files.\\n\", nPruneTarget / 1024 / 1024);\n+    }\n+\n+    LOCK(cs_main);\n+\n+    chainman.m_total_coinstip_cache = cache_sizes.coins;\n+    chainman.m_total_coinsdb_cache = cache_sizes.coins_db;\n+\n+    // Load the fully validated chainstate.\n+    chainman.InitializeChainstate(options.mempool);\n+\n+    // Load a chain created from a UTXO snapshot, if any exist.\n+    chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);\n+    if (init_status != ChainstateLoadStatus::SUCCESS) {\n+        return {init_status, init_error};\n+    }\n+\n+    // If a snapshot chainstate was fully validated by a background chainstate during\n+    // the last run, detect it here and clean up the now-unneeded background\n+    // chainstate.\n+    //\n+    // Why is this cleanup done here (on subsequent restart) and not just when the\n+    // snapshot is actually validated? Because this entails unusual\n+    // filesystem operations to move leveldb data directories around, and that seems\n+    // too risky to do in the middle of normal runtime.\n+    auto snapshot_completion = chainman.MaybeCompleteSnapshotValidation();\n+\n+    if (snapshot_completion == SnapshotCompletionResult::SKIPPED) {\n+        // do nothing; expected case\n+    } else if (snapshot_completion == SnapshotCompletionResult::SUCCESS) {\n+        LogPrintf(\"[snapshot] cleaning up unneeded background chainstate, then reinitializing\\n\");\n+        if (!chainman.ValidatedSnapshotCleanup()) {\n+            AbortNode(\"Background chainstate cleanup failed unexpectedly.\");\n+        }\n+\n+        // Because ValidatedSnapshotCleanup() has torn down chainstates with\n+        // ChainstateManager::ResetChainstates(), reinitialize them here without\n+        // duplicating the blockindex work above.\n+        assert(chainman.GetAll().empty());\n+        assert(!chainman.IsSnapshotActive());\n+        assert(!chainman.IsSnapshotValidated());\n+\n+        chainman.InitializeChainstate(options.mempool);\n+\n+        // A reload of the block index is required to recompute setBlockIndexCandidates\n+        // for the fully validated chainstate.\n+        chainman.ActiveChainstate().UnloadBlockIndex();\n+\n+        auto [init_status, init_error] = CompleteChainstateInitialization(chainman, cache_sizes, options);",
      "path": "src/node/chainstate.cpp",
      "position": 128,
      "original_position": 128,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `CompleteChainstateInitialization` would deserve to be better documented, notably the functional difference when there is a single chainstate and when multiple are present (background/snapshot). From my understanding, apart of the coin caches balancing, all the other operations are affecting the state of `ChainstateManager` / `BlockManager`, shared between both chainstates. ",
      "created_at": "2022-11-22T18:22:28Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029685595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029685595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 220,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029697008",
      "pull_request_review_id": 1190503385,
      "id": 1029697008,
      "node_id": "PRRC_kwDOABII5849X-3w",
      "diff_hunk": "@@ -5196,6 +5241,149 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_disabled` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    const int snapshot_tip_height = this->ActiveHeight();\n+    const int snapshot_base_height = *Assert(this->GetSnapshotBaseHeight());\n+    const CBlockIndex& index_new = *Assert(m_ibd_chainstate->m_chain.Tip());\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return SnapshotCompletionResult::SKIPPED;",
      "path": "src/validation.cpp",
      "position": 160,
      "original_position": 159,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A small note, I think here you could have a `SnapshotCompletionResult::NOT_MATURE_YET` as this usage doesn't really convey the same information of the previons one (i.e the lack of a background validation chainstate). ",
      "created_at": "2022-11-22T18:33:15Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029697008",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029697008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5328,
      "original_line": 5328,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029743550",
      "pull_request_review_id": 1190503385,
      "id": 1029743550,
      "node_id": "PRRC_kwDOABII5849YKO-",
      "diff_hunk": "@@ -3032,6 +3040,13 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n     // we use m_chainstate_mutex to enforce mutual exclusion so that only one caller may execute this function at a time\n     LOCK(m_chainstate_mutex);\n \n+    // Belt-and-suspenders check that we aren't attempting to advance the background\n+    // chainstate past the snapshot base block.",
      "path": "src/validation.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "From my understanding there is a marginal case where this is not *only* a belt-and-suspender. When background chainstate reaches height parity with the snapshot chainstate, the background chainstate is torn down only in `LoadChainstate->ValidatedSnapshotCleanup` by the call to `ResetChainstates()` L5584. Before, ABC could be called as the background chainstate is still `ActiveChainstate()`, at least for the block of the connection sequence, before the remaining one hit the `m_disabled` L3106. If correct, the comment could be more informative.",
      "created_at": "2022-11-22T19:29:42Z",
      "updated_at": "2022-11-22T19:32:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1029743550",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1029743550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3079,
      "original_line": 3079,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114701299",
      "pull_request_review_id": 1309794070,
      "id": 1114701299,
      "node_id": "PRRC_kwDOABII585CcP3z",
      "diff_hunk": "@@ -3032,6 +3040,13 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n     // we use m_chainstate_mutex to enforce mutual exclusion so that only one caller may execute this function at a time\n     LOCK(m_chainstate_mutex);\n \n+    // Belt-and-suspenders check that we aren't attempting to advance the background\n+    // chainstate past the snapshot base block.",
      "path": "src/validation.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": 1029743550,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For what it's worth, in future PRs I think this possibility is eliminated, since calls like `ActiveChainstate().ActivateBestChain()` in ProcessNewBlock are replaced with specific chainstate references.",
      "created_at": "2023-02-22T17:34:23Z",
      "updated_at": "2023-02-22T17:34:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1114701299",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114701299"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3079,
      "original_line": 3079,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114710206",
      "pull_request_review_id": 1309806615,
      "id": 1114710206,
      "node_id": "PRRC_kwDOABII585CcSC-",
      "diff_hunk": "@@ -518,10 +533,156 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\n         // chainstate.\n         for (Chainstate* cs : chainman_restarted.GetAll()) {\n             if (cs != &chainman_restarted.ActiveChainstate()) {\n-                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 110);\n+                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 109);\n             }\n         }\n     }\n }\n \n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion, SnapshotTestSetup)\n+{\n+    this->SetupSnapshot();\n+\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    Chainstate& active_cs = chainman.ActiveChainstate();\n+    auto tip_cache_before_complete = active_cs.m_coinstip_cache_size_bytes;\n+    auto db_cache_before_complete = active_cs.m_coinsdb_cache_size_bytes;\n+\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    fs::path snapshot_chainstate_dir = *node::FindSnapshotChainstateDir();\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+    BOOST_CHECK_EQUAL(snapshot_chainstate_dir, gArgs.GetDataDirNet() / \"chainstate_snapshot\");\n+\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+    const uint256 snapshot_tip_hash = WITH_LOCK(chainman.GetMutex(),\n+        return chainman.ActiveTip()->GetBlockHash());\n+\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SUCCESS);\n+\n+    WITH_LOCK(::cs_main, BOOST_CHECK(chainman.IsSnapshotValidated()));\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+\n+    // Cache should have been rebalanced and reallocated to the \"only\" remaining\n+    // chainstate.\n+    BOOST_CHECK(active_cs.m_coinstip_cache_size_bytes > tip_cache_before_complete);\n+    BOOST_CHECK(active_cs.m_coinsdb_cache_size_bytes > db_cache_before_complete);\n+\n+    auto all_chainstates = chainman.GetAll();\n+    BOOST_CHECK_EQUAL(all_chainstates.size(), 1);\n+    BOOST_CHECK_EQUAL(all_chainstates[0], &active_cs);\n+\n+    // Trying completion again should return false.\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SKIPPED);\n+\n+    // The invalid snapshot path should not have been used.\n+    fs::path snapshot_invalid_dir = gArgs.GetDataDirNet() / \"chainstate_snapshot_INVALID\";\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should still exist.\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+\n+    // Test that simulating a shutdown (reseting ChainstateManager) and then performing\n+    // chainstate reinitializing successfully cleans up the background-validation\n+    // chainstate data, and we end up with a single chainstate that is at tip.\n+    ChainstateManager& chainman_restarted = this->SimulateNodeRestart();\n+\n+    BOOST_TEST_MESSAGE(\"Performing Load/Verify/Activate of chainstate\");\n+\n+    // This call reinitializes the chainstates, and should clean up the now unnecessary\n+    // background-validation leveldb contents.\n+    this->LoadVerifyActivateChainstate();\n+\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should now *not* exist.\n+    BOOST_CHECK(!fs::exists(snapshot_chainstate_dir));\n+\n+    {\n+        LOCK(chainman_restarted.GetMutex());\n+        BOOST_CHECK_EQUAL(chainman_restarted.GetAll().size(), 1);\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotActive());\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotValidated());",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 113,
      "original_position": 111,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": 1029633554,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-02-22T17:42:42Z",
      "updated_at": "2023-02-22T17:51:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1114710206",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114710206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 610,
      "original_line": 610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114710366",
      "pull_request_review_id": 1309806615,
      "id": 1114710366,
      "node_id": "PRRC_kwDOABII585CcSFe",
      "diff_hunk": "@@ -518,10 +533,156 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_init, SnapshotTestSetup)\n         // chainstate.\n         for (Chainstate* cs : chainman_restarted.GetAll()) {\n             if (cs != &chainman_restarted.ActiveChainstate()) {\n-                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 110);\n+                BOOST_CHECK_EQUAL(cs->m_chain.Height(), 109);\n             }\n         }\n     }\n }\n \n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion, SnapshotTestSetup)\n+{\n+    this->SetupSnapshot();\n+\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    Chainstate& active_cs = chainman.ActiveChainstate();\n+    auto tip_cache_before_complete = active_cs.m_coinstip_cache_size_bytes;\n+    auto db_cache_before_complete = active_cs.m_coinsdb_cache_size_bytes;\n+\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    fs::path snapshot_chainstate_dir = *node::FindSnapshotChainstateDir();\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+    BOOST_CHECK_EQUAL(snapshot_chainstate_dir, gArgs.GetDataDirNet() / \"chainstate_snapshot\");\n+\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+    const uint256 snapshot_tip_hash = WITH_LOCK(chainman.GetMutex(),\n+        return chainman.ActiveTip()->GetBlockHash());\n+\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SUCCESS);\n+\n+    WITH_LOCK(::cs_main, BOOST_CHECK(chainman.IsSnapshotValidated()));\n+    BOOST_CHECK(chainman.IsSnapshotActive());\n+\n+    // Cache should have been rebalanced and reallocated to the \"only\" remaining\n+    // chainstate.\n+    BOOST_CHECK(active_cs.m_coinstip_cache_size_bytes > tip_cache_before_complete);\n+    BOOST_CHECK(active_cs.m_coinsdb_cache_size_bytes > db_cache_before_complete);\n+\n+    auto all_chainstates = chainman.GetAll();\n+    BOOST_CHECK_EQUAL(all_chainstates.size(), 1);\n+    BOOST_CHECK_EQUAL(all_chainstates[0], &active_cs);\n+\n+    // Trying completion again should return false.\n+    res = WITH_LOCK(::cs_main,\n+        return chainman.MaybeCompleteSnapshotValidation(mock_shutdown));\n+    BOOST_CHECK_EQUAL(res, SnapshotCompletionResult::SKIPPED);\n+\n+    // The invalid snapshot path should not have been used.\n+    fs::path snapshot_invalid_dir = gArgs.GetDataDirNet() / \"chainstate_snapshot_INVALID\";\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should still exist.\n+    BOOST_CHECK(fs::exists(snapshot_chainstate_dir));\n+\n+    // Test that simulating a shutdown (reseting ChainstateManager) and then performing\n+    // chainstate reinitializing successfully cleans up the background-validation\n+    // chainstate data, and we end up with a single chainstate that is at tip.\n+    ChainstateManager& chainman_restarted = this->SimulateNodeRestart();\n+\n+    BOOST_TEST_MESSAGE(\"Performing Load/Verify/Activate of chainstate\");\n+\n+    // This call reinitializes the chainstates, and should clean up the now unnecessary\n+    // background-validation leveldb contents.\n+    this->LoadVerifyActivateChainstate();\n+\n+    BOOST_CHECK(!fs::exists(snapshot_invalid_dir));\n+    // chainstate_snapshot should now *not* exist.\n+    BOOST_CHECK(!fs::exists(snapshot_chainstate_dir));\n+\n+    {\n+        LOCK(chainman_restarted.GetMutex());\n+        BOOST_CHECK_EQUAL(chainman_restarted.GetAll().size(), 1);\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotActive());\n+        BOOST_CHECK(!chainman_restarted.IsSnapshotValidated());\n+\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveTip()->GetBlockHash(), snapshot_tip_hash);\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveHeight(), 210);\n+    }\n+\n+    BOOST_TEST_MESSAGE(\n+        \"Ensure we can mine blocks on top of the \\\"new\\\" IBD chainstate\");\n+    mineBlocks(10);\n+    {\n+        LOCK(chainman_restarted.GetMutex());\n+        BOOST_CHECK_EQUAL(chainman_restarted.ActiveHeight(), 220);\n+    }\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(chainstatemanager_snapshot_completion_hash_mismatch, SnapshotTestSetup)\n+{\n+    auto chainstates = this->SetupSnapshot();\n+    Chainstate& validation_chainstate = *std::get<0>(chainstates);\n+    ChainstateManager& chainman = *Assert(m_node.chainman);\n+    SnapshotCompletionResult res;\n+    auto mock_shutdown = [](bilingual_str msg) {};\n+\n+    // Test tampering with the IBD UTXO set with an extra coin to ensure it causes\n+    // snapshot completion to fail.\n+    CCoinsViewCache& ibd_coins = WITH_LOCK(::cs_main,",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 140,
      "original_position": 136,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": 1029641430,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good for a follow-up.",
      "created_at": "2023-02-22T17:42:52Z",
      "updated_at": "2023-02-22T17:51:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1114710366",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114710366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 637,
      "original_line": 637,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114711213",
      "pull_request_review_id": 1309806615,
      "id": 1114711213,
      "node_id": "PRRC_kwDOABII585CcSSt",
      "diff_hunk": "@@ -2973,6 +2985,13 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n     // we use m_chainstate_mutex to enforce mutual exclusion so that only one caller may execute this function at a time\n     LOCK(m_chainstate_mutex);\n \n+    // Belt-and-suspenders check that we aren't attempting to advance the background\n+    // chainstate past the snapshot base block.\n+    if (WITH_LOCK(::cs_main, return m_disabled)) {\n+        LogPrintf(\"m_disabled is set - this chainstate should not be in operation. Bug?.\\n\");",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "c1767471c1cb6f1b856c22d767c35c18e19045e5",
      "in_reply_to_id": 999984699,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-02-22T17:43:44Z",
      "updated_at": "2023-02-22T17:51:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1114711213",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114711213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3044,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114711271",
      "pull_request_review_id": 1309806615,
      "id": 1114711271,
      "node_id": "PRRC_kwDOABII585CcSTn",
      "diff_hunk": "@@ -5196,6 +5241,149 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the GetUTXOStats call. This hold is necessary",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 128,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "ab41e8b4093925dc339096c15b33fe8b4726f55a",
      "in_reply_to_id": 1029649960,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2023-02-22T17:43:48Z",
      "updated_at": "2023-02-22T17:51:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1114711271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114711271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5253,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133279555",
      "pull_request_review_id": 1336046783,
      "id": 1133279555,
      "node_id": "PRRC_kwDOABII585DjHlD",
      "diff_hunk": "@@ -5243,6 +5291,149 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the ComputeUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_disabled` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    const int snapshot_tip_height = this->ActiveHeight();\n+    const int snapshot_base_height = *Assert(this->GetSnapshotBaseHeight());\n+    const CBlockIndex& index_new = *Assert(m_ibd_chainstate->m_chain.Tip());\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return SnapshotCompletionResult::SKIPPED;\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *Assert(SnapshotBlockhash());\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = strprintf(_(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot. \"\n+            \"The invalid snapshot chainstate has been left on disk in case it is \"\n+            \"helpful in diagnosing the issue that caused this error.\"),\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT\n+        );\n+\n+        LogPrintf(\"[snapshot] !!! %s\\n\", user_error.original);\n+        LogPrintf(\"[snapshot] deleting snapshot, reverting to validated chain, and stopping node\\n\");\n+\n+        m_active_chainstate = m_ibd_chainstate.get();\n+        m_snapshot_chainstate->m_disabled = true;\n+        assert(!this->IsUsable(m_snapshot_chainstate.get()));\n+        assert(this->IsUsable(m_ibd_chainstate.get()));\n+\n+        m_snapshot_chainstate->InvalidateCoinsDBOnDisk();\n+\n+        shutdown_fnc(user_error);\n+    };\n+\n+    if (index_new.GetBlockHash() != snapshot_blockhash) {\n+        LogPrintf(\"[snapshot] supposed base block %s does not match the \" /* Continued */\n+          \"snapshot base block %s (height %d). Snapshot is not valid.\",\n+          index_new.ToString(), snapshot_blockhash.ToString(), snapshot_base_height);\n+        handle_invalid_snapshot();\n+        return SnapshotCompletionResult::BASE_BLOCKHASH_MISMATCH;\n+    }\n+\n+    assert(index_new.nHeight == snapshot_base_height);\n+\n+    int curr_height = m_ibd_chainstate->m_chain.Height();\n+\n+    assert(snapshot_base_height == curr_height);\n+    assert(snapshot_base_height == index_new.nHeight);\n+    assert(this->IsUsable(m_snapshot_chainstate.get()));\n+    assert(this->GetAll().size() == 2);\n+\n+    CCoinsViewDB& ibd_coins_db = m_ibd_chainstate->CoinsDB();\n+    m_ibd_chainstate->ForceFlushStateToDisk();\n+\n+    auto maybe_au_data = ExpectedAssumeutxo(curr_height, ::Params());\n+    if (!maybe_au_data) {\n+        LogPrintf(\"[snapshot] assumeutxo data not found for height \" /* Continued */\n+            \"(%d) - refusing to validate snapshot\\n\", curr_height);\n+        handle_invalid_snapshot();\n+        return SnapshotCompletionResult::MISSING_CHAINPARAMS;\n+    }\n+\n+    const AssumeutxoData& au_data = *maybe_au_data;\n+    std::optional<CCoinsStats> maybe_ibd_stats;\n+    LogPrintf(\"[snapshot] computing UTXO stats for background chainstate to validate \" /* Continued */\n+        \"snapshot - this could take a few minutes\\n\");\n+    try {\n+        maybe_ibd_stats = ComputeUTXOStats(\n+            CoinStatsHashType::HASH_SERIALIZED,\n+            &ibd_coins_db,\n+            m_blockman,\n+            SnapshotUTXOHashBreakpoint);\n+    } catch (StopHashingException const&) {\n+        return SnapshotCompletionResult::STATS_FAILED;\n+    }\n+\n+    // XXX note that this function is slow and will hold cs_main for potentially minutes.",
      "path": "src/validation.cpp",
      "position": 237,
      "original_position": 213,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just catching up... Not sure if intentional or not but maybe the XXX here was something you still wanted to address but missed @jamesob ?",
      "created_at": "2023-03-12T15:55:06Z",
      "updated_at": "2023-03-12T15:55:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1133279555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133279555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5405,
      "original_line": 5403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134114096",
      "pull_request_review_id": 1337282625,
      "id": 1134114096,
      "node_id": "PRRC_kwDOABII585DmTUw",
      "diff_hunk": "@@ -5379,3 +5608,90 @@ std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\n     const CBlockIndex* base = this->GetSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+bool ChainstateManager::ValidatedSnapshotCleanup()\n+{\n+    AssertLockHeld(::cs_main);\n+    auto get_storage_path = [](auto& chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) -> std::optional<fs::path> {\n+        if (!(chainstate && chainstate->HasCoinsViews())) {\n+            return {};\n+        }\n+        return chainstate->CoinsDB().StoragePath();\n+    };\n+    std::optional<fs::path> ibd_chainstate_path_maybe = get_storage_path(m_ibd_chainstate);\n+    std::optional<fs::path> snapshot_chainstate_path_maybe = get_storage_path(m_snapshot_chainstate);\n+\n+    if (!this->IsSnapshotValidated()) {\n+        // No need to clean up.\n+        return false;\n+    }\n+    // If either path doesn't exist, that means at least one of the chainstates\n+    // is in-memory, in which case we can't do on-disk cleanup. You'd better be\n+    // in a unittest!\n+    if (!ibd_chainstate_path_maybe || !snapshot_chainstate_path_maybe) {\n+        LogPrintf(\"[snapshot] snapshot chainstate cleanup cannot happen with \" /* Continued */\n+                  \"in-memory chainstates. You are testing, right?\\n\");\n+        return false;\n+    }\n+\n+    const auto& snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\n+    const auto& ibd_chainstate_path = *ibd_chainstate_path_maybe;\n+\n+    // Since we're going to be moving around the underlying leveldb filesystem content\n+    // for each chainstate, make sure that the chainstates (and their constituent\n+    // CoinsViews members) have been destructed first.\n+    //\n+    // The caller of this method will be responsible for reinitializing chainstates\n+    // if they want to continue operation.\n+    this->ResetChainstates();\n+\n+    // No chainstates should be considered usable.\n+    assert(this->GetAll().size() == 0);\n+\n+    LogPrintf(\"[snapshot] deleting background chainstate directory (now unnecessary) (%s)\\n\",\n+              fs::PathToString(ibd_chainstate_path));\n+\n+    fs::path tmp_old{ibd_chainstate_path + \"_todelete\"};\n+\n+    auto rename_failed_abort = [](\n+                                   fs::path p_old,\n+                                   fs::path p_new,\n+                                   const fs::filesystem_error& err) {\n+        LogPrintf(\"%s: error renaming file (%s): %s\\n\",\n+                __func__, fs::PathToString(p_old), err.what());",
      "path": "src/validation.cpp",
      "position": 405,
      "original_position": 349,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in d96c59cc5cd2f73f1f55c133c52208671fe75ef3: No need to pass func\r\n\r\n* This is already done by log internally\r\n* This will print a useless `operator()`, twice: `[validation.cpp:5712] [operator()] operator(): error renaming file`",
      "created_at": "2023-03-13T14:59:25Z",
      "updated_at": "2023-03-13T15:20:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1134114096",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134114096"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5663,
      "original_line": 5661,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134141994",
      "pull_request_review_id": 1337282625,
      "id": 1134141994,
      "node_id": "PRRC_kwDOABII585DmaIq",
      "diff_hunk": "@@ -5379,3 +5608,90 @@ std::optional<int> ChainstateManager::GetSnapshotBaseHeight() const\n     const CBlockIndex* base = this->GetSnapshotBaseBlock();\n     return base ? std::make_optional(base->nHeight) : std::nullopt;\n }\n+\n+bool ChainstateManager::ValidatedSnapshotCleanup()\n+{\n+    AssertLockHeld(::cs_main);\n+    auto get_storage_path = [](auto& chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) -> std::optional<fs::path> {\n+        if (!(chainstate && chainstate->HasCoinsViews())) {\n+            return {};\n+        }\n+        return chainstate->CoinsDB().StoragePath();\n+    };\n+    std::optional<fs::path> ibd_chainstate_path_maybe = get_storage_path(m_ibd_chainstate);\n+    std::optional<fs::path> snapshot_chainstate_path_maybe = get_storage_path(m_snapshot_chainstate);\n+\n+    if (!this->IsSnapshotValidated()) {\n+        // No need to clean up.\n+        return false;\n+    }\n+    // If either path doesn't exist, that means at least one of the chainstates\n+    // is in-memory, in which case we can't do on-disk cleanup. You'd better be\n+    // in a unittest!\n+    if (!ibd_chainstate_path_maybe || !snapshot_chainstate_path_maybe) {\n+        LogPrintf(\"[snapshot] snapshot chainstate cleanup cannot happen with \" /* Continued */\n+                  \"in-memory chainstates. You are testing, right?\\n\");\n+        return false;\n+    }\n+\n+    const auto& snapshot_chainstate_path = *snapshot_chainstate_path_maybe;\n+    const auto& ibd_chainstate_path = *ibd_chainstate_path_maybe;\n+\n+    // Since we're going to be moving around the underlying leveldb filesystem content\n+    // for each chainstate, make sure that the chainstates (and their constituent\n+    // CoinsViews members) have been destructed first.\n+    //\n+    // The caller of this method will be responsible for reinitializing chainstates\n+    // if they want to continue operation.\n+    this->ResetChainstates();\n+\n+    // No chainstates should be considered usable.\n+    assert(this->GetAll().size() == 0);\n+\n+    LogPrintf(\"[snapshot] deleting background chainstate directory (now unnecessary) (%s)\\n\",\n+              fs::PathToString(ibd_chainstate_path));\n+\n+    fs::path tmp_old{ibd_chainstate_path + \"_todelete\"};\n+\n+    auto rename_failed_abort = [](\n+                                   fs::path p_old,\n+                                   fs::path p_new,\n+                                   const fs::filesystem_error& err) {\n+        LogPrintf(\"%s: error renaming file (%s): %s\\n\",\n+                __func__, fs::PathToString(p_old), err.what());\n+        AbortNode(strprintf(\n+            \"Rename of '%s' -> '%s' failed. \"\n+            \"Cannot clean up the background chainstate leveldb directory.\",\n+            fs::PathToString(p_old), fs::PathToString(p_new)));\n+    };\n+\n+    try {\n+        fs::rename(ibd_chainstate_path, tmp_old);\n+    } catch (const fs::filesystem_error& e) {\n+        rename_failed_abort(ibd_chainstate_path, tmp_old, e);\n+        throw;",
      "path": "src/validation.cpp",
      "position": 416,
      "original_position": 360,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit in d96c59cc5cd2f73f1f55c133c52208671fe75ef3:\r\n\r\nLooks like the LOC can be reduced by moving all of this into the lambda instead of repeating the passed paths twice and the throw logic twice.  ",
      "created_at": "2023-03-13T15:13:58Z",
      "updated_at": "2023-03-13T15:20:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1134141994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134141994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5674,
      "original_line": 5672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134147272",
      "pull_request_review_id": 1337282625,
      "id": 1134147272,
      "node_id": "PRRC_kwDOABII585DmbbI",
      "diff_hunk": "@@ -5367,6 +5558,44 @@ bool IsBIP30Unspendable(const CBlockIndex& block_index)\n            (block_index.nHeight==91812 && block_index.GetBlockHash() == uint256S(\"0x00000000000af0aed4792b1acee3d966af36cf5def14935db8de83d6f9306f2f\"));\n }\n \n+void Chainstate::InvalidateCoinsDBOnDisk()\n+{\n+    AssertLockHeld(::cs_main);\n+    // Should never be called on a non-snapshot chainstate.\n+    assert(m_from_snapshot_blockhash);\n+    auto storage_path_maybe = this->CoinsDB().StoragePath();\n+    // Should never be called with a non-existent storage path.\n+    assert(storage_path_maybe);\n+    fs::path snapshot_datadir = *storage_path_maybe;\n+\n+    // Coins views no longer usable.\n+    m_coins_views.reset();\n+\n+    auto invalid_path = snapshot_datadir + \"_INVALID\";\n+    std::string dbpath = fs::PathToString(snapshot_datadir);\n+    std::string target = fs::PathToString(invalid_path);\n+    LogPrintf(\"[snapshot] renaming snapshot datadir %s to %s\\n\", dbpath, target);\n+\n+    // The invalid snapshot datadir is simply moved and not deleted because we may\n+    // want to do forensics later during issue investigation. The user is instructed\n+    // accordingly in MaybeCompleteSnapshotValidation().\n+    try {\n+        fs::rename(snapshot_datadir, invalid_path);\n+    } catch (const fs::filesystem_error& e) {\n+        auto src_str = fs::PathToString(snapshot_datadir);\n+        auto dest_str = fs::PathToString(invalid_path);\n+\n+        LogPrintf(\"%s: error renaming file '%s' -> '%s': %s\\n\",\n+                __func__, src_str, dest_str, e.what());",
      "path": "src/validation.cpp",
      "position": 333,
      "original_position": 282,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Same about `__func__`",
      "created_at": "2023-03-13T15:16:50Z",
      "updated_at": "2023-03-13T15:20:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1134147272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134147272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5591,
      "original_line": 5589,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134152481",
      "pull_request_review_id": 1337282625,
      "id": 1134152481,
      "node_id": "PRRC_kwDOABII585Dmcsh",
      "diff_hunk": "@@ -5243,6 +5291,149 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     return true;\n }\n \n+// Currently, this function holds cs_main for its duration, which could be for\n+// multiple minutes due to the ComputeUTXOStats call. This hold is necessary\n+// because we need to avoid advancing the background validation chainstate\n+// farther than the snapshot base block - and this function is also invoked\n+// from within ConnectTip, i.e. from within ActivateBestChain, so cs_main is\n+// held anyway.\n+//\n+// Eventually (TODO), we could somehow separate this function's runtime from\n+// maintenance of the active chain, but that will either require\n+//\n+//  (i) setting `m_disabled` immediately and ensuring all chainstate accesses go\n+//      through IsUsable() checks, or\n+//\n+//  (ii) giving each chainstate its own lock instead of using cs_main for everything.\n+SnapshotCompletionResult ChainstateManager::MaybeCompleteSnapshotValidation(\n+      std::function<void(bilingual_str)> shutdown_fnc)\n+{\n+    AssertLockHeld(cs_main);\n+    if (m_ibd_chainstate.get() == &this->ActiveChainstate() ||\n+            !this->IsUsable(m_snapshot_chainstate.get()) ||\n+            !this->IsUsable(m_ibd_chainstate.get()) ||\n+            !m_ibd_chainstate->m_chain.Tip()) {\n+       // Nothing to do - this function only applies to the background\n+       // validation chainstate.\n+       return SnapshotCompletionResult::SKIPPED;\n+    }\n+    const int snapshot_tip_height = this->ActiveHeight();\n+    const int snapshot_base_height = *Assert(this->GetSnapshotBaseHeight());\n+    const CBlockIndex& index_new = *Assert(m_ibd_chainstate->m_chain.Tip());\n+\n+    if (index_new.nHeight < snapshot_base_height) {\n+        // Background IBD not complete yet.\n+        return SnapshotCompletionResult::SKIPPED;\n+    }\n+\n+    assert(SnapshotBlockhash());\n+    uint256 snapshot_blockhash = *Assert(SnapshotBlockhash());\n+\n+    auto handle_invalid_snapshot = [&]() EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        bilingual_str user_error = strprintf(_(\n+            \"%s failed to validate the -assumeutxo snapshot state. \"\n+            \"This indicates a hardware problem, or a bug in the software, or a \"\n+            \"bad software modification that allowed an invalid snapshot to be \"\n+            \"loaded. As a result of this, the node will shut down and stop using any \"\n+            \"state that was built on the snapshot, resetting the chain height \"\n+            \"from %d to %d. On the next \"\n+            \"restart, the node will resume syncing from %d \"\n+            \"without using any snapshot data. \"\n+            \"Please report this incident to %s, including how you obtained the snapshot. \"\n+            \"The invalid snapshot chainstate has been left on disk in case it is \"\n+            \"helpful in diagnosing the issue that caused this error.\"),\n+            PACKAGE_NAME, snapshot_tip_height, snapshot_base_height, snapshot_base_height, PACKAGE_BUGREPORT",
      "path": "src/validation.cpp",
      "position": 179,
      "original_position": 155,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same commit: At the risk of people running into this, I wonder if this should use `STR_INTERNAL_BUG()` so that more info is printed about the version/commit hash they were using.",
      "created_at": "2023-03-13T15:19:50Z",
      "updated_at": "2023-03-13T15:20:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1134152481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134152481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5347,
      "original_line": 5345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134153527",
      "pull_request_review_id": 1337282625,
      "id": 1134153527,
      "node_id": "PRRC_kwDOABII585Dmc83",
      "diff_hunk": "@@ -3067,6 +3075,14 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n     // we use m_chainstate_mutex to enforce mutual exclusion so that only one caller may execute this function at a time\n     LOCK(m_chainstate_mutex);\n \n+    // Belt-and-suspenders check that we aren't attempting to advance the background\n+    // chainstate past the snapshot base block.\n+    if (WITH_LOCK(::cs_main, return m_disabled)) {\n+        LogPrintf(\"m_disabled is set - this chainstate should not be in operation. \" /* Continued */\n+            \"Please report this as a bug. %s\\n\", PACKAGE_BUGREPORT);",
      "path": "src/validation.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "2b373fe49d64f04ceab2309d3f40da7bac6b37d6",
      "original_commit_id": "d96c59cc5cd2f73f1f55c133c52208671fe75ef3",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same. (`STR_INTERNAL_BUG(msg)`)",
      "created_at": "2023-03-13T15:20:25Z",
      "updated_at": "2023-03-13T15:20:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25740#discussion_r1134153527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1134153527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25740"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3082,
      "original_line": 3082,
      "side": "RIGHT"
    }
  ]
}