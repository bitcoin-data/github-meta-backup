{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768",
    "id": 1014493863,
    "node_id": "PR_kwDOABII5848d_Kn",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25768",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25768.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25768.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/3405f3eed5cf841b23a569b64a376c2e5b5026cd",
    "number": 25768,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "wallet: Properly rebroadcast unconfirmed transaction chains",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently `ResendWalletTransactions` (used for normal rebroadcasts) will attempt to rebroadcast all of the transactions in the wallet in the order they are stored in `mapWallet`. This ends up being random as `mapWallet` is a `std::unordered_map`. However `ReacceptWalletTransactions` (used for adding to the mempool on loading) first sorts the txs by wallet insertion order, then submits them. The result is that `ResendWalletTranactions` will fail to rebroadcast child transactions if their txids happen to be lexicographically less than their parent's txid. This PR resolves this issue by combining `ReacceptWalletTransactions` and `ResendWalletTransactions` into a new `ResubmitWalletTransactions` so that the iteration code and basic checks are shared.\r\n\r\nA test has also been added that checks that such transaction chains are rebroadcast correctly.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
      "id": 7150037,
      "node_id": "MI_kwDOABII584AbRnV",
      "number": 54,
      "state": "closed",
      "title": "24.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 159,
      "created_at": "2021-09-14T08:27:02Z",
      "updated_at": "2022-11-29T15:44:44Z",
      "closed_at": "2022-11-29T15:44:44Z"
    },
    "created_at": "2022-08-02T00:45:36Z",
    "updated_at": "2022-11-04T22:40:28Z",
    "closed_at": "2022-09-05T12:55:25Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-09-05T12:55:25Z",
    "merge_commit_sha": "5291933fedceb9df16eb9e4627b1d7386b53ba07",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "achow101:unify-resend-reaccept",
      "ref": "unify-resend-reaccept",
      "sha": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 34,
        "watchers_count": 34,
        "size": 238743,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-02T17:43:24Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2023-05-16T00:18:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e191fac4f3c37820f0618f72f0a8e8b524531ab8",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 111,
    "deletions": 64,
    "changed_files": 7,
    "commits": 2,
    "review_comments": 87,
    "comments": 15
  },
  "events": [
    {
      "event": "labeled",
      "id": 7105889321,
      "node_id": "LE_lADOABII585O_BAezwAAAAGni0Qp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7105889321",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T01:16:13Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 1201959223,
      "node_id": "IC_kwDOABII585HpHE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1201959223",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T02:59:34Z",
      "updated_at": "2022-08-31T05:43:22Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24683](https://github.com/bitcoin/bitcoin/pull/24683) (Add and use ForEachWallet by promag)\n* [#20892](https://github.com/bitcoin/bitcoin/pull/20892) (tests: Run both descriptor and legacy tests within a single test invocation by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1201959223",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "reviewed",
      "id": 1059050115,
      "node_id": "PRR_kwDOABII584_H9KD",
      "url": null,
      "actor": null,
      "commit_id": "cb4131c36595c74d12da6327e2c0983f352f2ca3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1059050115",
      "submitted_at": "2022-08-02T16:17:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7113502500,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGn_28k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7113502500",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T21:12:39Z"
    },
    {
      "event": "reviewed",
      "id": 1065412993,
      "node_id": "PRR_kwDOABII584_gOmB",
      "url": null,
      "actor": null,
      "commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1065412993",
      "submitted_at": "2022-08-08T15:52:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1074932972,
      "node_id": "PRR_kwDOABII585AEizs",
      "url": null,
      "actor": null,
      "commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1074932972",
      "submitted_at": "2022-08-17T01:20:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "commented",
      "id": 1217349939,
      "node_id": "IC_kwDOABII585Ij0kz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217349939",
      "actor": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T01:22:40Z",
      "updated_at": "2022-08-17T01:22:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\nwas able to run the functional test on my local and it ran fine, still want to test on regtest but still new to the project so still learning",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1217349939",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7215405010,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGuElfS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7215405010",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T15:26:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7215842926,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGuGQZu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7215842926",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T16:26:52Z"
    },
    {
      "event": "reviewed",
      "id": 1079561177,
      "node_id": "PRR_kwDOABII585AWMvZ",
      "url": null,
      "actor": null,
      "commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1079561177",
      "submitted_at": "2022-08-20T17:43:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "commented",
      "id": 1221578223,
      "node_id": "IC_kwDOABII585Iz83v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1221578223",
      "actor": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T16:27:20Z",
      "updated_at": "2022-08-21T16:27:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Would you explain what is the difference between `ResendWalletTransactions` and `ReacceptWalletTransactions`?  As you said `ResendWalletTransactions` is used for normal rebroadcasting and `ReacceptWalletTransactions` is used for rebroadcasting on loading. I'm not sure what do you mean by \"loading\", you mean something like reindex or reorg?",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1221578223",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "commented",
      "id": 1221579652,
      "node_id": "IC_kwDOABII585Iz9OE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1221579652",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T16:36:54Z",
      "updated_at": "2022-08-21T16:36:54Z",
      "author_association": "MEMBER",
      "body": "> I'm not sure what do you mean by \"loading\", you mean something like reindex or reorg?\r\n\r\n\"Loading\" as in when the wallet is read from disk and loaded into memory.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1221579652",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "commented",
      "id": 1221582628,
      "node_id": "IC_kwDOABII585Iz98k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1221582628",
      "actor": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T16:55:12Z",
      "updated_at": "2022-08-21T16:55:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "So what is the difference between rebroadcasting when loading and in normal cases?",
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1221582628",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "commented",
      "id": 1221583997,
      "node_id": "IC_kwDOABII585Iz-R9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1221583997",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-21T17:04:32Z",
      "updated_at": "2022-08-21T17:04:32Z",
      "author_association": "MEMBER",
      "body": "There are differences in which transactions will be considered for rebroadcasting. On load, all non-abandoned transactions will be rebroadcast. The periodic rebroadcast will only rebroadcast those that are more than 5 minutes older than the most recent block.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1221583997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "reviewed",
      "id": 1078630992,
      "node_id": "PRR_kwDOABII585ASppQ",
      "url": null,
      "actor": null,
      "commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1078630992",
      "submitted_at": "2022-08-22T08:59:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1083384871,
      "node_id": "PRR_kwDOABII585AkyQn",
      "url": null,
      "actor": null,
      "commit_id": "9a556564e9dc64ae0ad723c78da33d0c982f006f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1083384871",
      "submitted_at": "2022-08-24T08:33:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1083393818,
      "node_id": "PRR_kwDOABII585Ak0ca",
      "url": null,
      "actor": null,
      "commit_id": "9a556564e9dc64ae0ad723c78da33d0c982f006f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1083393818",
      "submitted_at": "2022-08-24T08:39:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1083379894,
      "node_id": "PRR_kwDOABII585AkxC2",
      "url": null,
      "actor": null,
      "commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1083379894",
      "submitted_at": "2022-08-24T08:45:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "commented",
      "id": 1225441024,
      "node_id": "IC_kwDOABII585JCr8A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1225441024",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T09:03:44Z",
      "updated_at": "2022-08-24T09:14:22Z",
      "author_association": "NONE",
      "body": "> This PR resolves this issue by refactoring ReacceptWalletTransactions sorting code into a separate function, then using that function in both ReacceptWalletTransactions and ResendWalletTransactions so that both functions will sort the transactions in the same order before processing for rebroadcast.\r\n\r\nIs it possible to shuffle transactions before `SubmitTxMemoryPoolAndRelay` rebroadcasting using [`std::shuffle`](https://en.cppreference.com/w/cpp/algorithm/random_shuffle)? Since only wallet txs are rebroadcasted which is a separate privacy issue, we could at least hide the order in which they were inserted in wallet db.",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1225441024",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "reviewed",
      "id": 1083379726,
      "node_id": "PRR_kwDOABII585AkxAO",
      "url": null,
      "actor": null,
      "commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept + tACK e40ddf36bed81bdf28d386eb961c9ed22b69e207\r\n\r\n - Verified that the tests are intermittently failing. \r\n - Failure occurring at debug log assertion `ResendWalletTransactions: resubmit 2 unconfirmed transactions`\r\n \r\n Below are just one nit comment and a conceptual question. ",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1083379726",
      "submitted_at": "2022-08-24T10:07:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "commented",
      "id": 1225914465,
      "node_id": "IC_kwDOABII585JEfhh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1225914465",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T15:54:04Z",
      "updated_at": "2022-08-24T15:54:04Z",
      "author_association": "MEMBER",
      "body": "> Is it possible to shuffle transactions before `SubmitTxMemoryPoolAndRelay` rebroadcasting using [`std::shuffle`](https://en.cppreference.com/w/cpp/algorithm/random_shuffle)? Since only wallet txs are rebroadcasted which is a separate privacy issue, we could at least hide the order in which they were inserted in wallet db.\r\n\r\nNo. Shuffling is the reason we have this issue in the first place (there is no order in an unsorted map so iterating it is basically the same as iterating a shuffled list). I don't think the insertion order is a privacy leak since it's the same order as when the transactions were originally broadcast which is public information to anyone that's connected to the network. Additionally, this is not a unilateral broadcast - it is up to the mempool relay code to determine when, how, and which transactions are actually rebroadcast. Only transactions that are not already in the mempool will be rebroadcast.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1225914465",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "commented",
      "id": 1225951484,
      "node_id": "IC_kwDOABII585JEoj8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1225951484",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T16:22:50Z",
      "updated_at": "2022-08-24T16:22:50Z",
      "author_association": "NONE",
      "body": "> No. Shuffling is the reason we have this issue in the first place (there is no order in an unsorted map so iterating it is basically the same as iterating a shuffled list). \r\n\r\nI was suggesting to shuffle the sorted list before rebroadcast. So we have all the transactions we need but do not relay in that order.\r\n\r\n> I don't think the insertion order is a privacy leak since it's the same order as when the transactions were originally broadcast which is public information to anyone that's connected to the network.\r\n\r\nIn that case, feel free to ignore my suggestion. ",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1225951484",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "commented",
      "id": 1225951698,
      "node_id": "IC_kwDOABII585JEonS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1225951698",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T16:23:01Z",
      "updated_at": "2022-08-24T16:23:01Z",
      "author_association": "NONE",
      "body": "Concept ACK",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1225951698",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "commented",
      "id": 1225965812,
      "node_id": "IC_kwDOABII585JEsD0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1225965812",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T16:34:31Z",
      "updated_at": "2022-08-24T16:34:31Z",
      "author_association": "MEMBER",
      "body": "> I was suggesting to shuffle the sorted list before rebroadcast. So we have all the transactions we need but do not relay in that order.\r\n\r\nShuffling after sorting would just undo the sorting. Sorting is not used for filtering; it is used because we need to have the transactions in order. Specifically parent transactions must be rebroadcast before child transactions, and that specific order can be obtained through the insertion order.\r\n\r\nWhile we could do something more complicated like actually building packages so that the actually order dependent things are grouped together, and then shuffling the packages, but I don't see the benefit in doing that. That might actually harm privacy because we would be broadcasting transactions that are related to each other at the same time, but only those transactions that are related to our wallet. Since a package that the wallet builds may exclude other transactions in the package that the mempool would know about, we could essentially be telling other nodes some of the scripts that our wallet is watching for as they could then look at what the rebroadcast package has that the rest of the package in the mempool does not.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1225965812",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7254467905,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGwZmVB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7254467905",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T21:40:58Z"
    },
    {
      "event": "commented",
      "id": 1226444094,
      "node_id": "IC_kwDOABII585JGg0-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1226444094",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T21:52:01Z",
      "updated_at": "2022-08-24T21:53:14Z",
      "author_association": "MEMBER",
      "body": "Based on some discussions during the PR review club today, I've made several changes to this PR. The first is that `ResendWalletTransaction` and `ReacceptWalletTransactions` are now combined into a single function `ResubmitWalletTranasctions`. There were some subtle differences between the two functions that are being preserved by using two optional parameters. The first difference is that `ReacceptWalletTransactions` would not actually ask the mempool to relay the transactions (there is a parameter for relay in `SubmitTxMemoryPoolAndRelay` that was different in both). There is a parameter `relay` with a default of `true` to handle that. The second is that `ResendWalletTransactions` would look chain status (is ibd, reindexing, etc.) and transaction time in order to determine whether to try submitting a transaction, whereas `ReacceptWalletTransactions` would not. To match the `ReaccpetWalletTransactions` behavior, a `force` option with a default of `false` is added that will bypass those checks.\r\n\r\nAdditionally, `nNextResend` was initialized the first time `ResendWalletTransactions` was run. As the new `ResubmitWalletTransactions` is always run on start, I've removed from the test the need to force it to be run as well as the handling around not actually trying to resend during that first run (we want to do the reaccept behavior in that first run). I've also removed `GetSortedTxs` and have instead taken the suggestion of filtering then sorting the transactions. This is done by inserting the `CWalletTx`s that we want to submit into a `std::set` with a custom comparator that uses `CWalletTx.nOrderPos` to determine the sort order.\r\n\r\nLastly I've updated the test to reliably fail on master. I found that `listreceivedbyaddress` and related RPCs will output txids in the order that they are found in `mapWallet`. The new test will use that to check if the child is positioned before the parent, and if it is not, it will remake the child until it does.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1226444094",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7254531579,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGwZ137",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7254531579",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T21:55:39Z"
    },
    {
      "event": "reviewed",
      "id": 1084559609,
      "node_id": "PRR_kwDOABII585ApRD5",
      "url": null,
      "actor": null,
      "commit_id": "fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/25768/commits/fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1084559609",
      "submitted_at": "2022-08-24T21:59:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1084667725,
      "node_id": "PRR_kwDOABII585AprdN",
      "url": null,
      "actor": null,
      "commit_id": "fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK fee0dea\r\n\r\nNow the test consistently fails on master, as it should.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1084667725",
      "submitted_at": "2022-08-25T01:18:49Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1084916987,
      "node_id": "PRR_kwDOABII585AqoT7",
      "url": null,
      "actor": null,
      "commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1084916987",
      "submitted_at": "2022-08-25T07:27:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1084922850,
      "node_id": "PRR_kwDOABII585Aqpvi",
      "url": null,
      "actor": null,
      "commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1084922850",
      "submitted_at": "2022-08-25T07:31:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1084935398,
      "node_id": "PRR_kwDOABII585Aqszm",
      "url": null,
      "actor": null,
      "commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1084935398",
      "submitted_at": "2022-08-25T07:38:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1085585668,
      "node_id": "PRR_kwDOABII585AtLkE",
      "url": null,
      "actor": null,
      "commit_id": "fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9\r\n\r\nVerified the test is failing reliably in master.. \r\n\r\nJust two more nit comments (questions).. ",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1085585668",
      "submitted_at": "2022-08-25T15:09:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7260592824,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGww9q4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7260592824",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T15:28:54Z"
    },
    {
      "event": "reviewed",
      "id": 1083803936,
      "node_id": "PRR_kwDOABII585AmYkg",
      "url": null,
      "actor": null,
      "commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 71b7709fa075dc4c9b55bb07304687724f67f0cb\r\n\r\nThe refactoring into `ResubmitWalletTransactions()` makes a lot of sense and improves understanding the codebase imo.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1083803936",
      "submitted_at": "2022-08-25T17:16:38Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7262704479,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGw5BNf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7262704479",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T20:41:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7262713475,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGw5DaD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7262713475",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T20:42:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7262784938,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGw5U2q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7262784938",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T20:55:00Z"
    },
    {
      "event": "reviewed",
      "id": 1086715232,
      "node_id": "PRR_kwDOABII585AxfVg",
      "url": null,
      "actor": null,
      "commit_id": "789b78430b8ecb149e5f4835493f525849db516c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1086715232",
      "submitted_at": "2022-08-26T09:55:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7268813531,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGxQUrb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7268813531",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-26T16:07:34Z"
    },
    {
      "event": "labeled",
      "id": 7270840748,
      "node_id": "LE_lADOABII585O_BAezwAAAAGxYDms",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7270840748",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-26T22:25:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7272276888,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGxdiOY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7272276888",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-27T16:20:46Z"
    },
    {
      "event": "unlabeled",
      "id": 7272322723,
      "node_id": "UNLE_lADOABII585O_BAezwAAAAGxdtaj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7272322723",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-27T17:08:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1088126712,
      "node_id": "PRR_kwDOABII585A2374",
      "url": null,
      "actor": null,
      "commit_id": "748d5c75d60505a3d84d36782f5cf4949224e103",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1088126712",
      "submitted_at": "2022-08-29T06:29:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1086006476,
      "node_id": "PRR_kwDOABII585AuyTM",
      "url": null,
      "actor": null,
      "commit_id": "748d5c75d60505a3d84d36782f5cf4949224e103",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 748d5c75d60505a3d84d36782f5cf4949224e103",
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1086006476",
      "submitted_at": "2022-08-29T15:44:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwZDkxYzVhYmU5ZWQ3ZGNjMjM3YzlkNTJjNTg4ZTdkMjZlMTYyYTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10d91c5abe9ed7dcc237c9d52c588e7d26e162a4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/10d91c5abe9ed7dcc237c9d52c588e7d26e162a4",
      "tree": {
        "sha": "35f27e60e47de78cc66bbd4df65284166cec5e58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35f27e60e47de78cc66bbd4df65284166cec5e58"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e191fac4f3c37820f0618f72f0a8e8b524531ab8",
          "sha": "e191fac4f3c37820f0618f72f0a8e8b524531ab8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e191fac4f3c37820f0618f72f0a8e8b524531ab8"
        }
      ],
      "message": "wallet: Deduplicate Resend and ReacceptWalletTransactions\n\nBoth of these functions do almost the exact same thing. They can be\ndeduplicated so that their behavior matches except for the filtering\naspect. As this function will now always be called on wallet loading,\nnNextResend will also always be initialized, so\nwallet_resendwallettransactions.py is updated to account for that.\n\nThis also resolves a bug where ResendWalletTransactions would fail to\nrebroadcast txs in insertion order thereby potentially rebroadcasting a\nchild transaction before its parent and causing the child to not\nactually get rebroadcast.\n\nAlso names the combined function to ResubmitWalletTransactions as the\nfunction just submits the transactions to the mempool rather than doing\nany sending by itself.",
      "committer": {
        "name": "Andrew Chow",
        "email": "github@achow101.com",
        "date": "2022-08-29T16:38:06Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2022-08-24T20:40:30Z"
      },
      "sha": "10d91c5abe9ed7dcc237c9d52c588e7d26e162a4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0MDVmM2VlZDVjZjg0MWIyM2E1NjliNjRhMzc2YzJlNWI1MDI2Y2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "tree": {
        "sha": "41cf004d7f5a6b0e8b6285041f4e8f41f73597d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41cf004d7f5a6b0e8b6285041f4e8f41f73597d7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10d91c5abe9ed7dcc237c9d52c588e7d26e162a4",
          "sha": "10d91c5abe9ed7dcc237c9d52c588e7d26e162a4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/10d91c5abe9ed7dcc237c9d52c588e7d26e162a4"
        }
      ],
      "message": "test: Test that an unconfirmed not-in-mempool chain is rebroadcast\n\nThe test checks that parent txs are broadcast before child txs.\n\nThe previous behavior is that the rebroadcasting would simply iterate mapWallet. As\nmapWallet is a std::unsorted_map, the child can sometimes come before the parent and thus\nbe rebroadcast in the wrong order and fail the test.",
      "committer": {
        "name": "Andrew Chow",
        "email": "github@achow101.com",
        "date": "2022-08-29T16:41:50Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2022-08-02T00:01:35Z"
      },
      "sha": "3405f3eed5cf841b23a569b64a376c2e5b5026cd"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7280413829,
      "node_id": "HRFPE_lADOABII585O_BAezwAAAAGx8kyF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7280413829",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-29T16:42:13Z"
    },
    {
      "event": "reviewed",
      "id": 1089147526,
      "node_id": "PRR_kwDOABII585A6xKG",
      "url": null,
      "actor": null,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/25768/commits/3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1089147526",
      "submitted_at": "2022-08-29T18:04:47Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "commented",
      "id": 1231196093,
      "node_id": "IC_kwDOABII585JYo-9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1231196093",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-30T06:19:24Z",
      "updated_at": "2022-08-30T06:19:24Z",
      "author_association": "MEMBER",
      "body": "utACK 3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1231196093",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "reviewed",
      "id": 1090238146,
      "node_id": "PRR_kwDOABII585A-7bC",
      "url": null,
      "actor": null,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Late code review ACK 3405f3ee\r\n\r\nThe only orthogonal question that arises from my side is why are we trying to resubmit txes after every import RPC command. Can anything change at the, already created, wallet txes level after an import?",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1090238146",
      "submitted_at": "2022-08-30T12:56:45Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "reviewed",
      "id": 1090438016,
      "node_id": "PRR_kwDOABII585A_sOA",
      "url": null,
      "actor": null,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some minor nits, which can be addressed the next time this code is touched",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1090438016",
      "submitted_at": "2022-08-30T14:40:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "review_requested",
      "id": 7304415887,
      "node_id": "RRE_lADOABII585O_BAezwAAAAGzYIqP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7304415887",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T11:40:21Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1087116790,
      "node_id": "PRR_kwDOABII585AzBX2",
      "url": null,
      "actor": null,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1087116790",
      "submitted_at": "2022-09-05T12:00:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "milestoned",
      "id": 7322496659,
      "node_id": "MIE_lADOABII585O_BAezwAAAAG0dG6T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7322496659",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-05T12:13:22Z",
      "milestone": {
        "title": "24.0"
      }
    },
    {
      "event": "merged",
      "id": 7322858447,
      "node_id": "ME_lADOABII585O_BAezwAAAAG0efPP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7322858447",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5291933fedceb9df16eb9e4627b1d7386b53ba07",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5291933fedceb9df16eb9e4627b1d7386b53ba07",
      "created_at": "2022-09-05T12:55:25Z"
    },
    {
      "event": "closed",
      "id": 7322858495,
      "node_id": "CE_lADOABII585O_BAezwAAAAG0efP_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7322858495",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-05T12:55:25Z"
    },
    {
      "event": "referenced",
      "id": 7324737127,
      "node_id": "REFE_lADOABII585O_BAezwAAAAG0lp5n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7324737127",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "66165db6953437985b249152951d89e9fbc04e89",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/66165db6953437985b249152951d89e9fbc04e89",
      "created_at": "2022-09-05T16:53:24Z"
    },
    {
      "event": "comment_deleted",
      "id": 7325897111,
      "node_id": "CDE_lADOABII585O_BAezwAAAAG0qFGX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7325897111",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-05T23:08:35Z"
    },
    {
      "event": "referenced",
      "id": 7383453725,
      "node_id": "REFE_lADOABII585O_BAezwAAAAG4FpAd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7383453725",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fa44670f9a2e42a9680e438f834bd8943ae58bed",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/fa44670f9a2e42a9680e438f834bd8943ae58bed",
      "created_at": "2022-09-14T08:31:09Z"
    },
    {
      "event": "referenced",
      "id": 7386603254,
      "node_id": "REFE_lADOABII585O_BAezwAAAAG4Rp72",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7386603254",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "faa4916529699f9a057e2bf2459d957bcec1de84",
      "commit_url": "https://api.github.com/repos/MarcoFalke/b-c/commits/faa4916529699f9a057e2bf2459d957bcec1de84",
      "created_at": "2022-09-14T14:42:02Z"
    },
    {
      "event": "reviewed",
      "id": 1113527156,
      "node_id": "PRR_kwDOABII585CXxN0",
      "url": null,
      "actor": null,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#pullrequestreview-1113527156",
      "submitted_at": "2022-09-20T10:09:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
    },
    {
      "event": "commented",
      "id": 1252619427,
      "node_id": "IC_kwDOABII585KqXSj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252619427",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T16:40:35Z",
      "updated_at": "2022-09-20T16:40:35Z",
      "author_association": "MEMBER",
      "body": "If a user calls `importaddress` every 6 hours, this will block any p2p relay from ever happening?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1252619427",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "commented",
      "id": 1262560534,
      "node_id": "IC_kwDOABII585LQSUW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1262560534",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T17:05:37Z",
      "updated_at": "2022-09-29T17:05:37Z",
      "author_association": "MEMBER",
      "body": "> If a user calls importaddress every 6 hours, this will block any p2p relay from ever happening?\r\n\r\nI addressed that in #26205",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#issuecomment-1262560534",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25768"
    },
    {
      "event": "referenced",
      "id": 7577124122,
      "node_id": "REFE_lADOABII585O_BAezwAAAAHDob0a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7577124122",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "aa6fb37accc6445855c81b6b236e574586df9c28",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/aa6fb37accc6445855c81b6b236e574586df9c28",
      "created_at": "2022-10-13T04:10:00Z"
    },
    {
      "event": "referenced",
      "id": 7648533882,
      "node_id": "REFE_lADOABII585O_BAezwAAAAHH4116",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7648533882",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "15e781feafe591de8311f0f542102caab7a13a58",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/15e781feafe591de8311f0f542102caab7a13a58",
      "created_at": "2022-10-23T15:26:49Z"
    },
    {
      "event": "referenced",
      "id": 8318735153,
      "node_id": "REFE_lADOABII585O_BAezwAAAAHv1dMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8318735153",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d23ce23a941535c7cbf93f64bbeced0f9fdaddc6",
      "commit_url": "https://api.github.com/repos/BitgesellOfficial/bitgesell/commits/d23ce23a941535c7cbf93f64bbeced0f9fdaddc6",
      "created_at": "2023-01-20T06:53:16Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940399989",
      "pull_request_review_id": 1065412993,
      "id": 940399989,
      "node_id": "PRRC_kwDOABII5844DV11",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Question: Is this test meant to fail without the first commit?",
      "created_at": "2022-08-08T15:52:24Z",
      "updated_at": "2022-08-08T15:52:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r940399989",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940399989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940414500",
      "pull_request_review_id": 1065431869,
      "id": 940414500,
      "node_id": "PRRC_kwDOABII5844DZYk",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes",
      "created_at": "2022-08-08T16:04:10Z",
      "updated_at": "2022-08-08T16:04:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r940414500",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/940414500"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947369069",
      "pull_request_review_id": 1074932972,
      "id": 947369069,
      "node_id": "PRRC_kwDOABII5844d7Rt",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);\n+        sorted_txs.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+    }\n+    std::vector<CWalletTx*> out;\n+    for (auto [pos, wtx] : sorted_txs) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: not sure if we need `pos` here doesn't seem to be used",
      "created_at": "2022-08-17T01:20:16Z",
      "updated_at": "2022-08-17T01:20:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r947369069",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/947369069"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1831,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949264337",
      "pull_request_review_id": 1077536943,
      "id": 949264337,
      "node_id": "PRRC_kwDOABII5844lJ_R",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's passing for me on master :thinking: ",
      "created_at": "2022-08-18T15:06:48Z",
      "updated_at": "2022-08-18T15:06:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949264337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949264337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949281171",
      "pull_request_review_id": 1077559871,
      "id": 949281171,
      "node_id": "PRRC_kwDOABII5844lOGT",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since master has `mapWallet` as a `std::unsorted_map`, this will now only fail randomly on it. It should fail half of the time, on average. I don't know how we can guarantee that the child will come before the parent in an unsorted map.",
      "created_at": "2022-08-18T15:17:36Z",
      "updated_at": "2022-08-18T15:17:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949281171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949281171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949294145",
      "pull_request_review_id": 1077575374,
      "id": 949294145,
      "node_id": "PRRC_kwDOABII5844lRRB",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've removed the \"make a spend that will come before\" and updated the comment to explain that.",
      "created_at": "2022-08-18T15:26:48Z",
      "updated_at": "2022-08-18T15:26:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949294145",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949294145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949294456",
      "pull_request_review_id": 1077575775,
      "id": 949294456,
      "node_id": "PRRC_kwDOABII5844lRV4",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);\n+        sorted_txs.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+    }\n+    std::vector<CWalletTx*> out;\n+    for (auto [pos, wtx] : sorted_txs) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 947369069,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-18T15:27:02Z",
      "updated_at": "2022-08-18T15:27:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949294456",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949294456"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1831,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949309147",
      "pull_request_review_id": 1077596699,
      "id": 949309147,
      "node_id": "PRRC_kwDOABII5844lU7b",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, I see what you're saying about `std::unsorted_map` and it makes sense to me, but I've run the test >20 times and haven't gotten a failure yet...",
      "created_at": "2022-08-18T15:39:43Z",
      "updated_at": "2022-08-18T15:39:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949309147",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949309147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949359987",
      "pull_request_review_id": 1077665110,
      "id": 949359987,
      "node_id": "PRRC_kwDOABII5844lhVz",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Found a bug in the test. It should fail intermittently on master now",
      "created_at": "2022-08-18T16:26:54Z",
      "updated_at": "2022-08-18T16:26:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949359987",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949359987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949367933",
      "pull_request_review_id": 1077676409,
      "id": 949367933,
      "node_id": "PRRC_kwDOABII5844ljR9",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Aha, fails intermittently on master for me now :) thanks!",
      "created_at": "2022-08-18T16:34:16Z",
      "updated_at": "2022-08-18T16:34:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949367933",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949367933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949431753",
      "pull_request_review_id": 1077766051,
      "id": 949431753,
      "node_id": "PRRC_kwDOABII5844ly3J",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm seeing the test fail intermittently on commit [e40ddf3](https://github.com/bitcoin/bitcoin/pull/25768/commits/e40ddf36bed81bdf28d386eb961c9ed22b69e207) does that sound right or should the test only fail on the master branch",
      "created_at": "2022-08-18T17:48:45Z",
      "updated_at": "2022-08-18T17:48:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949431753",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949431753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949457466",
      "pull_request_review_id": 1077802478,
      "id": 949457466,
      "node_id": "PRRC_kwDOABII5844l5I6",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It should only fail on master. It should not fail on this PR. Make sure that you've compiled this PR before running the test.",
      "created_at": "2022-08-18T18:20:51Z",
      "updated_at": "2022-08-18T18:20:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949457466",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949457466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949600989",
      "pull_request_review_id": 1078006899,
      "id": 949600989,
      "node_id": "PRRC_kwDOABII5844mcLd",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmm I think I've compiled it correctly (still new to the repo so might be doing it incorrectly), this is what I did\r\n\r\n```\r\ngit fetch origin pull/25768/head:PR25768\r\ngit checkout  PR25768\r\n./autogen.sh\r\n./configure\r\nmake clean\r\nmake -j \"$(($(sysctl -n hw.physicalcpu)+1))\"\r\n./test/functional/wallet_resendwallettransactions.py\r\n```\r\n\r\nThis is the error I see after I run the test, sometimes it passes\r\n\r\n```\r\n2022-08-18T20:38:25.914000Z TestFramework (INFO): Initializing test directory /var/folders/9g/cvx014yx4dq5lwl_x5zvn_j80000gn/T/bitcoin_func_test_43xe3o56\r\n2022-08-18T20:38:28.879000Z TestFramework (INFO): Create a new transaction and wait until it's broadcast\r\n2022-08-18T20:38:29.627000Z TestFramework (INFO): Create a block\r\n2022-08-18T20:38:29.634000Z TestFramework (INFO): Bump time & check that transaction is rebroadcast\r\n2022-08-18T20:38:29.905000Z TestFramework (INFO): Chain of unconfirmed not-in-mempool txs are rebroadcast\r\n2022-08-18T20:38:31.037000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/Users/kevkevin/DEVDIR/bitcoin/test/functional/test_framework/test_framework.py\", line 133, in main\r\n    self.run_test()\r\n  File \"/Users/kevkevin/DEVDIR/bitcoin/./test/functional/wallet_resendwallettransactions.py\", line 107, in run_test\r\n    assert_raises_rpc_error(-5, \"Transaction not in mempool\", node.getmempoolentry, txid)\r\n  File \"/Users/kevkevin/DEVDIR/bitcoin/test/functional/test_framework/util.py\", line 126, in assert_raises_rpc_error\r\n    assert try_rpc(code, message, fun, *args, **kwds), \"No exception raised\"\r\nAssertionError: No exception raised\r\n2022-08-18T20:38:31.089000Z TestFramework (INFO): Stopping nodes\r\n2022-08-18T20:38:31.508000Z TestFramework (WARNING): Not cleaning up dir /var/folders/9g/cvx014yx4dq5lwl_x5zvn_j80000gn/T/bitcoin_func_test_43xe3o56\r\n2022-08-18T20:38:31.508000Z TestFramework (ERROR): Test failed. Test logging available at /var/folders/9g/cvx014yx4dq5lwl_x5zvn_j80000gn/T/bitcoin_func_test_43xe3o56/test_framework.log\r\n2022-08-18T20:38:31.508000Z TestFramework (ERROR):\r\n2022-08-18T20:38:31.509000Z TestFramework (ERROR): Hint: Call /Users/kevkevin/DEVDIR/bitcoin/test/functional/combine_logs.py '/var/folders/9g/cvx014yx4dq5lwl_x5zvn_j80000gn/T/bitcoin_func_test_43xe3o56' to consolidate all logs\r\n2022-08-18T20:38:31.509000Z TestFramework (ERROR):\r\n2022-08-18T20:38:31.509000Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log.\r\n2022-08-18T20:38:31.509000Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues\r\n2022-08-18T20:38:31.509000Z TestFramework (ERROR):\r\n```\r\n\r\nrunning on MacOs Monterey Version 12.3.1 ",
      "created_at": "2022-08-18T21:04:47Z",
      "updated_at": "2022-08-18T21:04:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949600989",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949600989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949625730",
      "pull_request_review_id": 1078043153,
      "id": 949625730,
      "node_id": "PRRC_kwDOABII5844miOC",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not seeing that error even when running on a loop.",
      "created_at": "2022-08-18T21:40:44Z",
      "updated_at": "2022-08-18T21:40:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949625730",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949625730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949920275",
      "pull_request_review_id": 1078443840,
      "id": 949920275,
      "node_id": "PRRC_kwDOABII5844nqIT",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> git checkout  PR25768\r\n\r\nCan you check that `git log -1` prints the correct hash, or alternatively just checkout the correct hash directly? Also, make sure that the working tree is clean.\r\n\r\n```\r\ngit fetch origin e40ddf36bed81bdf28d386eb961c9ed22b69e207\r\ngit checkout e40ddf36bed81bdf28d386eb961c9ed22b69e207\r\ngit reset --hard HEAD # warning!! wipes unstaged changes in the tree if there still are some",
      "created_at": "2022-08-19T08:10:41Z",
      "updated_at": "2022-08-19T08:10:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r949920275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/949920275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950239284",
      "pull_request_review_id": 1078630992,
      "id": 950239284,
      "node_id": "PRRC_kwDOABII5844o4A0",
      "diff_hunk": "@@ -27,7 +29,10 @@ def run_test(self):\n         peer_first = node.add_p2p_connection(P2PTxInvStore())\n \n         self.log.info(\"Create a new transaction and wait until it's broadcast\")\n-        txid = node.sendtoaddress(node.getnewaddress(), 1)\n+        unspent = node.listunspent()\n+        parent_utxo = unspent[0]\n+        indep_utxo = unspent[1]",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 20,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps it's worth doing the test with, say, 10 parent-child pairs? That would catch this bug more reliably without needing to run the test multiple times.",
      "created_at": "2022-08-19T14:18:07Z",
      "updated_at": "2022-08-22T08:59:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r950239284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950239284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 33,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950722047",
      "pull_request_review_id": 1079561177,
      "id": 950722047,
      "node_id": "PRRC_kwDOABII5844qt3_",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": null,
      "user": {
        "login": "Riahiamirreza",
        "id": 54557628,
        "node_id": "MDQ6VXNlcjU0NTU3NjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/54557628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Riahiamirreza",
        "html_url": "https://github.com/Riahiamirreza",
        "followers_url": "https://api.github.com/users/Riahiamirreza/followers",
        "following_url": "https://api.github.com/users/Riahiamirreza/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Riahiamirreza/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Riahiamirreza/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Riahiamirreza/subscriptions",
        "organizations_url": "https://api.github.com/users/Riahiamirreza/orgs",
        "repos_url": "https://api.github.com/users/Riahiamirreza/repos",
        "events_url": "https://api.github.com/users/Riahiamirreza/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Riahiamirreza/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorry, I don't understand the need for `assert(wtx.GetHash() == wtxid);`. In which case can this `assert` fails? Only when the data is corrupted?",
      "created_at": "2022-08-20T17:37:16Z",
      "updated_at": "2022-08-20T17:43:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r950722047",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950722047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950729044",
      "pull_request_review_id": 1079568640,
      "id": 950729044,
      "node_id": "PRRC_kwDOABII5844qvlU",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950722047,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "There is never a *need* for an assert. Assertions verify assumptions about the codebase, and should only fail if something you believe to be impossible in the codebase to be the case. It should *never* trigger, unless there is a bug in the code.\r\n\r\nBy writing this, the code author signals to readers of the code \"here you can assume that wtxid is always equal to `wtx.GetHash()`\". Further, this is verified during all tests, so we know it is also true for all scenarios any test case runs through.",
      "created_at": "2022-08-20T18:54:38Z",
      "updated_at": "2022-08-20T18:54:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r950729044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950729044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950765131",
      "pull_request_review_id": 1079602666,
      "id": 950765131,
      "node_id": "PRRC_kwDOABII5844q4ZL",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "still getting the error and I am able to see I'm on the correct commit with `git log -1` and tried thee commands you posted aswell, I'll try and dig deeper to see what may be the issue",
      "created_at": "2022-08-21T00:33:24Z",
      "updated_at": "2022-08-21T00:33:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r950765131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950765131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950773406",
      "pull_request_review_id": 1079611195,
      "id": 950773406,
      "node_id": "PRRC_kwDOABII5844q6ae",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 55,
      "original_position": 29,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "b11cceaf16a6a674122947a5f12bfb00a75382fe",
      "in_reply_to_id": 940399989,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not exactly sure what happened but after rebuilding master then rebuilding this PR's branch twice the test passes now sorry for any confusion",
      "created_at": "2022-08-21T01:50:28Z",
      "updated_at": "2022-08-21T01:50:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r950773406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/950773406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951186151",
      "pull_request_review_id": 1078630992,
      "id": 951186151,
      "node_id": "PRRC_kwDOABII5844sfLn",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950722047,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wait, I see this is just moved and not new, but is this key wtxid or txid? Or does the \"w\" mean wallet instead of witness?\r\n\r\nIf it's wtxid, this assertion could fail when wtxid != txid since `CWalletTx::GetHash()` calls `tx->GetHash()`. But AFAICT it is a txid, so should be called txid instead? https://github.com/bitcoin/bitcoin/blob/02aefa169a9e6ed12c7bd8f3392adcd073d8d56b/src/wallet/wallet.cpp#L956-L971",
      "created_at": "2022-08-22T08:59:00Z",
      "updated_at": "2022-08-22T09:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r951186151",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951186151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951620089",
      "pull_request_review_id": 1080759984,
      "id": 951620089,
      "node_id": "PRRC_kwDOABII5844uJH5",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950722047,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The \"w\" refers to \"wallet\".",
      "created_at": "2022-08-22T16:04:59Z",
      "updated_at": "2022-08-22T16:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r951620089",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/951620089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953495707",
      "pull_request_review_id": 1083364044,
      "id": 953495707,
      "node_id": "PRRC_kwDOABII58441TCb",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950722047,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is it good time to rename it to `wallet_txid` for clarification?\r\nWithout @glozow comment, i would just assume w stands for witness without any doubt...",
      "created_at": "2022-08-24T08:18:43Z",
      "updated_at": "2022-08-24T08:18:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953495707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953495707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953506952",
      "pull_request_review_id": 1083379726,
      "id": 953506952,
      "node_id": "PRRC_kwDOABII58441VyI",
      "diff_hunk": "@@ -27,7 +29,10 @@ def run_test(self):\n         peer_first = node.add_p2p_connection(P2PTxInvStore())\n \n         self.log.info(\"Create a new transaction and wait until it's broadcast\")\n-        txid = node.sendtoaddress(node.getnewaddress(), 1)\n+        unspent = node.listunspent()\n+        parent_utxo = unspent[0]\n+        indep_utxo = unspent[1]\n+        txid = node.send(outputs=[{node.getnewaddress(): 1}], options={\"inputs\": [parent_utxo]})[\"txid\"]\n \n         # Wallet rebroadcast is first scheduled 1 sec after startup (see\n         # nNextResend in ResendWalletTransactions()). Tell scheduler to call",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 24,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment on scheduling the resending logic at 1 sec after the startup seems to be visible in the `StartWallets()` function, rather than in `ResendWalletTransactions()`'s `nNextResend` timepoint setting.\r\n\r\nSo maybe this comment should point to this part of the code instead?\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/713ea7a4181f411949a3e9bb9a358533388b1159/src/wallet/load.cpp#L154\r\n",
      "created_at": "2022-08-24T08:29:39Z",
      "updated_at": "2022-08-24T10:07:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953506952",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953506952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 37,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953507075",
      "pull_request_review_id": 1083379894,
      "id": 953507075,
      "node_id": "PRRC_kwDOABII58441V0D",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);\n+        sorted_txs.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+    }\n+    std::vector<CWalletTx*> out;\n+    for (auto [_, wtx] : sorted_txs) {\n+        out.push_back(wtx);\n+    }\n+    return out;\n+}\n+\n void CWallet::ReacceptWalletTransactions()\n {\n     // If transactions aren't being broadcasted, don't let them into local mempool either\n     if (!fBroadcastTransactions)\n         return;\n-    std::map<int64_t, CWalletTx*> mapSorted;\n \n-    // Sort pending wallet transactions based on their initial wallet insertion order\n-    for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-        const uint256& wtxid = item.first;\n-        CWalletTx& wtx = item.second;\n-        assert(wtx.GetHash() == wtxid);\n-\n-        int nDepth = GetTxDepthInMainChain(wtx);\n+    // Try to add wallet transactions to memory pool\n+    for (auto wtx : GetSortedTxs()) {\n+        int nDepth = GetTxDepthInMainChain(*wtx);\n \n-        if (!wtx.IsCoinBase() && (nDepth == 0 && !wtx.isAbandoned())) {\n-            mapSorted.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+        if (!wtx->IsCoinBase() && (nDepth == 0 && !wtx->isAbandoned())) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "When looking at `CWallet::GetTxDepthInMainChain`, if `nDepth == 0`, isn't that equivalent to `!wtx->IsConfirmed() && !wtx->IsConflicted()`, which in turn in combination with `!wtx->isAbandoned()` is equivalent to `!wtx->IsUnconfirmed()` - am I missing something? (I know this is moved code)\r\n```suggestion\r\n        if (!wtx->IsCoinBase() && !wtx->IsUnconfirmed()) {\r\n```",
      "created_at": "2022-08-24T08:29:46Z",
      "updated_at": "2022-08-24T08:45:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953507075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953507075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1847,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953510641",
      "pull_request_review_id": 1083384871,
      "id": 953510641,
      "node_id": "PRRC_kwDOABII58441Wrx",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "9a556564e9dc64ae0ad723c78da33d0c982f006f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should we specify in variable name what kind of sorting is applied?",
      "created_at": "2022-08-24T08:33:06Z",
      "updated_at": "2022-08-24T08:33:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953510641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953510641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953517049",
      "pull_request_review_id": 1083393818,
      "id": 953517049,
      "node_id": "PRRC_kwDOABII58441YP5",
      "diff_hunk": "@@ -1914,15 +1919,14 @@ void CWallet::ResendWalletTransactions()\n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n+        // Try to add wallet transactions to memory pool",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "9a556564e9dc64ae0ad723c78da33d0c982f006f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"and relay\"?",
      "created_at": "2022-08-24T08:39:20Z",
      "updated_at": "2022-08-24T08:39:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953517049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953517049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1922,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953521903",
      "pull_request_review_id": 1083379894,
      "id": 953521903,
      "node_id": "PRRC_kwDOABII58441Zbv",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "9a556564e9dc64ae0ad723c78da33d0c982f006f",
      "in_reply_to_id": 953510641,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was about to add the same suggestion 👍 ",
      "created_at": "2022-08-24T08:43:59Z",
      "updated_at": "2022-08-24T08:45:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953521903",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953521903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953605477",
      "pull_request_review_id": 1083379726,
      "id": 953605477,
      "node_id": "PRRC_kwDOABII58441t1l",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # Ideally we would add a transaction that would spend the existing transaction and also be\n+        # in mapWallet before it. However mapWallet is a std::unsorted_map which means that it is\n+        # hard for us to externally construct such a transaction. So we will ignore that fact and\n+        # rely on the fact that because there are only two items in mapWallet, 50% of the time the\n+        # child will be placed before the parent in mapWallet. The incorrect behavior that this\n+        # test tries to catch should thus fail intermittently at a rate of 50%.",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 35,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am a bit confused on the intermittent test failure occurring here, maybe I am missing something.\r\n\r\nIsn't sorting the order by wallet insertion index is what this PR fixes? So why would it still fail to reboadcast if `child.txid() < parent.txid()`? \r\n\r\nAlso, does it make sense to have some unit testing to ensure this behavior of the `GetSorted()` function itself?  ",
      "created_at": "2022-08-24T10:05:30Z",
      "updated_at": "2022-08-24T10:07:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953605477",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953605477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953795948",
      "pull_request_review_id": 1083803936,
      "id": 953795948,
      "node_id": "PRRC_kwDOABII58442cVs",
      "diff_hunk": "@@ -27,7 +29,10 @@ def run_test(self):\n         peer_first = node.add_p2p_connection(P2PTxInvStore())\n \n         self.log.info(\"Create a new transaction and wait until it's broadcast\")\n-        txid = node.sendtoaddress(node.getnewaddress(), 1)\n+        unspent = node.listunspent()\n+        parent_utxo = unspent[0]\n+        indep_utxo = unspent[1]",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 20,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could use a one-liner which imo is equally readable?\r\n```suggestion\r\n        parent_utxo, indep_utxo = node.listunspent()[:2]\r\n```",
      "created_at": "2022-08-24T13:22:24Z",
      "updated_at": "2022-08-25T17:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953795948",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953795948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 32,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953832319",
      "pull_request_review_id": 1083803936,
      "id": 953832319,
      "node_id": "PRRC_kwDOABII58442lN_",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # Ideally we would add a transaction that would spend the existing transaction and also be\n+        # in mapWallet before it. However mapWallet is a std::unsorted_map which means that it is\n+        # hard for us to externally construct such a transaction. So we will ignore that fact and\n+        # rely on the fact that because there are only two items in mapWallet, 50% of the time the\n+        # child will be placed before the parent in mapWallet. The incorrect behavior that this\n+        # test tries to catch should thus fail intermittently at a rate of 50%.\n+        send_res = node.send(outputs=[{node.getnewaddress(): 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}], \"add_to_wallet\": False})\n+        child_txid = send_res[\"txid\"]\n+        node.sendrawtransaction(send_res[\"hex\"])\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()\n+\n+        # Evict these txs from the mempool\n+        evict_time = block_time + 60 * 60 * 336 + 5",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 49,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `DEFAULT_MEMPOOL_EXPIRY_HOURS` is defined in `test/functional/mempool_expiry.py`. Similarly to #25810, could move that to `messages.py` and have the benefit of using a named var instead of a less obvious literal?",
      "created_at": "2022-08-24T13:52:24Z",
      "updated_at": "2022-08-25T17:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953832319",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953832319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953893376",
      "pull_request_review_id": 1083803936,
      "id": 953893376,
      "node_id": "PRRC_kwDOABII584420IA",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # Ideally we would add a transaction that would spend the existing transaction and also be\n+        # in mapWallet before it. However mapWallet is a std::unsorted_map which means that it is\n+        # hard for us to externally construct such a transaction. So we will ignore that fact and\n+        # rely on the fact that because there are only two items in mapWallet, 50% of the time the\n+        # child will be placed before the parent in mapWallet. The incorrect behavior that this\n+        # test tries to catch should thus fail intermittently at a rate of 50%.\n+        send_res = node.send(outputs=[{node.getnewaddress(): 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}], \"add_to_wallet\": False})\n+        child_txid = send_res[\"txid\"]\n+        node.sendrawtransaction(send_res[\"hex\"])\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()\n+\n+        # Evict these txs from the mempool\n+        evict_time = block_time + 60 * 60 * 336 + 5\n+        node.setmocktime(evict_time)\n+        indep_send = node.send(outputs=[{node.getnewaddress(): 1}], options={\"inputs\": [indep_utxo]})\n+        node.syncwithvalidationinterfacequeue()\n+        node.getmempoolentry(indep_send[\"txid\"])\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\", node.getmempoolentry, txid)\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\", node.getmempoolentry, child_txid)\n+\n+        # Rebroadcast and check that parent and child are both in the mempool\n+        with node.assert_debug_log(['ResendWalletTransactions: resubmit 2 unconfirmed transactions']):\n+            node.setmocktime(evict_time + 36 * 60 * 60)",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 59,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: perhaps useful to explain the `36` literal?\r\n```suggestion\r\n            node.setmocktime(evict_time + 36 * 60 * 60)  # 36h is the upper limit in CWallet::ResendWalletTransactions()`\r\n```",
      "created_at": "2022-08-24T14:42:39Z",
      "updated_at": "2022-08-25T17:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953893376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953893376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953921759",
      "pull_request_review_id": 1083987653,
      "id": 953921759,
      "node_id": "PRRC_kwDOABII584427Df",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950722047,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The variable name also confused me , +1 to renaming it ",
      "created_at": "2022-08-24T15:06:01Z",
      "updated_at": "2022-08-24T15:06:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953921759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953921759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953921801",
      "pull_request_review_id": 1083987709,
      "id": 953921801,
      "node_id": "PRRC_kwDOABII584427EJ",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950722047,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I got the same confusion before reading the entire thread, thought it came from witness...",
      "created_at": "2022-08-24T15:06:02Z",
      "updated_at": "2022-08-24T15:06:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953921801",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953921801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953985890",
      "pull_request_review_id": 1084077199,
      "id": 953985890,
      "node_id": "PRRC_kwDOABII58443Kti",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950722047,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The variable names `wtxid` and `wtx` are used very frequently throughout the wallet code to refer to wallet transactions and their txids. If people find this confusing, then I think it would be more appropriate to have a scripted-diff PR rename all of those rather than renaming each individual instance that occurs in a PR.",
      "created_at": "2022-08-24T15:56:34Z",
      "updated_at": "2022-08-24T15:56:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953985890",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953985890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953995963",
      "pull_request_review_id": 1084090764,
      "id": 953995963,
      "node_id": "PRRC_kwDOABII58443NK7",
      "diff_hunk": "@@ -1914,15 +1919,14 @@ void CWallet::ResendWalletTransactions()\n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n+        // Try to add wallet transactions to memory pool",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "9a556564e9dc64ae0ad723c78da33d0c982f006f",
      "in_reply_to_id": 953517049,
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "you meant the variable? the change is on `void CWallet::ResendWalletTransactions()`.",
      "created_at": "2022-08-24T16:05:19Z",
      "updated_at": "2022-08-24T16:05:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r953995963",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953995963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1922,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954000712",
      "pull_request_review_id": 1084097496,
      "id": 954000712,
      "node_id": "PRRC_kwDOABII58443OVI",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);\n+        sorted_txs.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+    }\n+    std::vector<CWalletTx*> out;\n+    for (auto [_, wtx] : sorted_txs) {\n+        out.push_back(wtx);\n+    }\n+    return out;\n+}\n+\n void CWallet::ReacceptWalletTransactions()\n {\n     // If transactions aren't being broadcasted, don't let them into local mempool either\n     if (!fBroadcastTransactions)\n         return;\n-    std::map<int64_t, CWalletTx*> mapSorted;\n \n-    // Sort pending wallet transactions based on their initial wallet insertion order\n-    for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-        const uint256& wtxid = item.first;\n-        CWalletTx& wtx = item.second;\n-        assert(wtx.GetHash() == wtxid);\n-\n-        int nDepth = GetTxDepthInMainChain(wtx);\n+    // Try to add wallet transactions to memory pool\n+    for (auto wtx : GetSortedTxs()) {\n+        int nDepth = GetTxDepthInMainChain(*wtx);\n \n-        if (!wtx.IsCoinBase() && (nDepth == 0 && !wtx.isAbandoned())) {\n-            mapSorted.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+        if (!wtx->IsCoinBase() && (nDepth == 0 && !wtx->isAbandoned())) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953507075,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, those should be equivalent. Will do if I need to re-push.",
      "created_at": "2022-08-24T16:09:37Z",
      "updated_at": "2022-08-24T16:09:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954000712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954000712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1847,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954007405",
      "pull_request_review_id": 1084108351,
      "id": 954007405,
      "node_id": "PRRC_kwDOABII58443P9t",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # Ideally we would add a transaction that would spend the existing transaction and also be\n+        # in mapWallet before it. However mapWallet is a std::unsorted_map which means that it is\n+        # hard for us to externally construct such a transaction. So we will ignore that fact and\n+        # rely on the fact that because there are only two items in mapWallet, 50% of the time the\n+        # child will be placed before the parent in mapWallet. The incorrect behavior that this\n+        # test tries to catch should thus fail intermittently at a rate of 50%.",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 35,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953605477,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Isn't sorting the order by wallet insertion index is what this PR fixes? So why would it still fail to reboadcast if `child.txid() < parent.txid()`?\r\n\r\nThe comment is talking about the code before this PR and how the test tries to catch it, not that this test should fail intermittently after the PR.\r\n\r\n> Also, does it make sense to have some unit testing to ensure this behavior of the `GetSorted()` function itself?\r\n\r\nThere are already tests for the underlying `wtxOrdered` itself (or tests that end up testing that behavior, although perhaps not specifically).",
      "created_at": "2022-08-24T16:16:00Z",
      "updated_at": "2022-08-24T16:16:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954007405",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954007405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954040401",
      "pull_request_review_id": 1084184375,
      "id": 954040401,
      "node_id": "PRRC_kwDOABII58443YBR",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # Ideally we would add a transaction that would spend the existing transaction and also be\n+        # in mapWallet before it. However mapWallet is a std::unsorted_map which means that it is\n+        # hard for us to externally construct such a transaction. So we will ignore that fact and\n+        # rely on the fact that because there are only two items in mapWallet, 50% of the time the\n+        # child will be placed before the parent in mapWallet. The incorrect behavior that this\n+        # test tries to catch should thus fail intermittently at a rate of 50%.",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 35,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953605477,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So that means the code should not fail intermittently?? I will double check again that I am testing the correct binary, but I thoughts that's expected behavior from the comment.. ",
      "created_at": "2022-08-24T16:49:06Z",
      "updated_at": "2022-08-24T16:49:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954040401",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954040401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954046581",
      "pull_request_review_id": 1084197557,
      "id": 954046581,
      "node_id": "PRRC_kwDOABII58443Zh1",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # Ideally we would add a transaction that would spend the existing transaction and also be\n+        # in mapWallet before it. However mapWallet is a std::unsorted_map which means that it is\n+        # hard for us to externally construct such a transaction. So we will ignore that fact and\n+        # rely on the fact that because there are only two items in mapWallet, 50% of the time the\n+        # child will be placed before the parent in mapWallet. The incorrect behavior that this\n+        # test tries to catch should thus fail intermittently at a rate of 50%.",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 35,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953605477,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It should only fail intermittently on master.",
      "created_at": "2022-08-24T16:54:43Z",
      "updated_at": "2022-08-24T16:54:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954046581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954046581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954331424",
      "pull_request_review_id": 1084554689,
      "id": 954331424,
      "node_id": "PRRC_kwDOABII58444fEg",
      "diff_hunk": "@@ -27,7 +29,10 @@ def run_test(self):\n         peer_first = node.add_p2p_connection(P2PTxInvStore())\n \n         self.log.info(\"Create a new transaction and wait until it's broadcast\")\n-        txid = node.sendtoaddress(node.getnewaddress(), 1)\n+        unspent = node.listunspent()\n+        parent_utxo = unspent[0]\n+        indep_utxo = unspent[1]\n+        txid = node.send(outputs=[{node.getnewaddress(): 1}], options={\"inputs\": [parent_utxo]})[\"txid\"]\n \n         # Wallet rebroadcast is first scheduled 1 sec after startup (see\n         # nNextResend in ResendWalletTransactions()). Tell scheduler to call",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 24,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953506952,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment is removed now that this behavior is no longer needed.",
      "created_at": "2022-08-24T21:53:32Z",
      "updated_at": "2022-08-24T21:53:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954331424",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954331424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 37,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954331626",
      "pull_request_review_id": 1084554952,
      "id": 954331626,
      "node_id": "PRRC_kwDOABII58444fHq",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);\n+        sorted_txs.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+    }\n+    std::vector<CWalletTx*> out;\n+    for (auto [_, wtx] : sorted_txs) {\n+        out.push_back(wtx);\n+    }\n+    return out;\n+}\n+\n void CWallet::ReacceptWalletTransactions()\n {\n     // If transactions aren't being broadcasted, don't let them into local mempool either\n     if (!fBroadcastTransactions)\n         return;\n-    std::map<int64_t, CWalletTx*> mapSorted;\n \n-    // Sort pending wallet transactions based on their initial wallet insertion order\n-    for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-        const uint256& wtxid = item.first;\n-        CWalletTx& wtx = item.second;\n-        assert(wtx.GetHash() == wtxid);\n-\n-        int nDepth = GetTxDepthInMainChain(wtx);\n+    // Try to add wallet transactions to memory pool\n+    for (auto wtx : GetSortedTxs()) {\n+        int nDepth = GetTxDepthInMainChain(*wtx);\n \n-        if (!wtx.IsCoinBase() && (nDepth == 0 && !wtx.isAbandoned())) {\n-            mapSorted.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+        if (!wtx->IsCoinBase() && (nDepth == 0 && !wtx->isAbandoned())) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953507075,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-24T21:53:52Z",
      "updated_at": "2022-08-24T21:53:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954331626",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954331626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1847,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954332841",
      "pull_request_review_id": 1084556488,
      "id": 954332841,
      "node_id": "PRRC_kwDOABII58444fap",
      "diff_hunk": "@@ -1914,15 +1919,14 @@ void CWallet::ResendWalletTransactions()\n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n+        // Try to add wallet transactions to memory pool",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 62,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "9a556564e9dc64ae0ad723c78da33d0c982f006f",
      "in_reply_to_id": 953517049,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-24T21:55:45Z",
      "updated_at": "2022-08-24T21:55:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954332841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954332841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1922,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954332953",
      "pull_request_review_id": 1084556628,
      "id": 954332953,
      "node_id": "PRRC_kwDOABII58444fcZ",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "9a556564e9dc64ae0ad723c78da33d0c982f006f",
      "in_reply_to_id": 953510641,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The function has ended up being removed.",
      "created_at": "2022-08-24T21:55:57Z",
      "updated_at": "2022-08-24T21:55:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954332953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954332953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954333221",
      "pull_request_review_id": 1084556947,
      "id": 954333221,
      "node_id": "PRRC_kwDOABII58444fgl",
      "diff_hunk": "@@ -27,7 +29,10 @@ def run_test(self):\n         peer_first = node.add_p2p_connection(P2PTxInvStore())\n \n         self.log.info(\"Create a new transaction and wait until it's broadcast\")\n-        txid = node.sendtoaddress(node.getnewaddress(), 1)\n+        unspent = node.listunspent()\n+        parent_utxo = unspent[0]\n+        indep_utxo = unspent[1]",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 20,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950239284,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've reimplemented the test so that it always fails on master.",
      "created_at": "2022-08-24T21:56:21Z",
      "updated_at": "2022-08-24T21:56:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954333221",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954333221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 33,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954333296",
      "pull_request_review_id": 1084557038,
      "id": 954333296,
      "node_id": "PRRC_kwDOABII58444fhw",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 950722047,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Renamed to `txid`.",
      "created_at": "2022-08-24T21:56:29Z",
      "updated_at": "2022-08-24T21:56:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954333296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954333296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954595959",
      "pull_request_review_id": 1084916987,
      "id": 954595959,
      "node_id": "PRRC_kwDOABII58445fp3",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become",
      "path": "src/wallet/wallet.cpp",
      "position": 74,
      "original_position": 61,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd say this comment is now slightly outdated. My first thought was \"so all those calls with force=true will spam now?\". Then I realized they all have `relay=false`.\r\n\r\nI think extending this comment would improve readability. Might as well document what force does exactly (in broader terms is fine).",
      "created_at": "2022-08-25T07:27:12Z",
      "updated_at": "2022-08-25T07:27:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954595959",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954595959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1931,
      "original_line": 1931,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954600083",
      "pull_request_review_id": 1084922850,
      "id": 954600083,
      "node_id": "PRRC_kwDOABII58445gqT",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    if (!force && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;",
      "path": "src/wallet/wallet.cpp",
      "position": 87,
      "original_position": 73,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It took me some time to realize why it's safe. I think it's worth expanding `On startup, we will do this for all unconfirmed // transactions but will not ask the mempool to relay them.` saying it protects privacy as a side effect?\r\n",
      "created_at": "2022-08-25T07:31:49Z",
      "updated_at": "2022-08-25T07:31:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954600083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954600083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1949,
      "original_line": 1949,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954605982",
      "pull_request_review_id": 1084935398,
      "id": 954605982,
      "node_id": "PRRC_kwDOABII58445iGe",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    if (!force && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;\n \n     int submitted_tx_count = 0;\n \n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n-            // Attempt to rebroadcast all txes more than 5 minutes older than\n-            // the last block. SubmitTxMemoryPoolAndRelay() will not rebroadcast\n-            // any confirmed or conflicting txs.\n-            if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+        // First filter for the transactions we want to rebroadcast.\n+        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\n+        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\n+        for (auto& [txid, wtx] : mapWallet) {\n+            // Only rebroadcast unconfirmed txs\n+            if (!wtx.isUnconfirmed()) continue;\n+\n+            // For periodic rebroadcast (force == false),\n+            // attempt to rebroadcast all txes more than 5 minutes older than\n+            // the last block.\n+            if (!force && wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": 110,
      "original_position": 97,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Slightly off-topic, is this code prone to privacy leaks? Imagine a fork appearing: one (empty) block with a timestamp in the past. Would many own transactions get rebroadcast? If yes, i assume other nodes won't forward them because they had them already, and it becomes apparent who is the source?",
      "created_at": "2022-08-25T07:38:14Z",
      "updated_at": "2022-08-25T07:38:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r954605982",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/954605982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1956,
      "original_line": 1956,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955059960",
      "pull_request_review_id": 1085585668,
      "id": 955059960,
      "node_id": "PRRC_kwDOABII58447Q74",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    if (!force && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;\n \n     int submitted_tx_count = 0;\n \n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n-            // Attempt to rebroadcast all txes more than 5 minutes older than\n-            // the last block. SubmitTxMemoryPoolAndRelay() will not rebroadcast\n-            // any confirmed or conflicting txs.\n-            if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+        // First filter for the transactions we want to rebroadcast.\n+        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\n+        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\n+        for (auto& [txid, wtx] : mapWallet) {\n+            // Only rebroadcast unconfirmed txs\n+            if (!wtx.isUnconfirmed()) continue;\n+\n+            // For periodic rebroadcast (force == false),\n+            // attempt to rebroadcast all txes more than 5 minutes older than\n+            // the last block.\n+            if (!force && wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+            to_submit.insert(&wtx);\n+        }\n+        // Now try submitting the transactions to the memory pool and (optionally) relay them.\n+        for (auto wtx : to_submit) {\n             std::string unused_err_string;\n-            if (SubmitTxMemoryPoolAndRelay(wtx, unused_err_string, true)) ++submitted_tx_count;\n+            if (SubmitTxMemoryPoolAndRelay(*wtx, unused_err_string, relay)) ++submitted_tx_count;",
      "path": "src/wallet/wallet.cpp",
      "position": 117,
      "original_position": 104,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I might be wrong, but I thought we write bool variables with an `f` prefix, so should this be `frelay`? ",
      "created_at": "2022-08-25T14:44:01Z",
      "updated_at": "2022-08-25T15:09:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955059960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955059960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1962,
      "original_line": 1962,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955066271",
      "pull_request_review_id": 1085594854,
      "id": 955066271,
      "node_id": "PRRC_kwDOABII58447Sef",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    if (!force && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;\n \n     int submitted_tx_count = 0;\n \n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n-            // Attempt to rebroadcast all txes more than 5 minutes older than\n-            // the last block. SubmitTxMemoryPoolAndRelay() will not rebroadcast\n-            // any confirmed or conflicting txs.\n-            if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+        // First filter for the transactions we want to rebroadcast.\n+        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\n+        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\n+        for (auto& [txid, wtx] : mapWallet) {\n+            // Only rebroadcast unconfirmed txs\n+            if (!wtx.isUnconfirmed()) continue;\n+\n+            // For periodic rebroadcast (force == false),\n+            // attempt to rebroadcast all txes more than 5 minutes older than\n+            // the last block.\n+            if (!force && wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": 110,
      "original_position": 97,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "in_reply_to_id": 954605982,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think so. Your own transactions would be submitted to your node's mempool first, and only if it does not know about those transactions will it try to broadcast them.",
      "created_at": "2022-08-25T14:48:57Z",
      "updated_at": "2022-08-25T14:48:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955066271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955066271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1956,
      "original_line": 1956,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955075029",
      "pull_request_review_id": 1085585668,
      "id": 955075029,
      "node_id": "PRRC_kwDOABII58447UnV",
      "diff_hunk": "@@ -66,14 +66,61 @@ def run_test(self):\n         self.log.info(\"Bump time & check that transaction is rebroadcast\")\n         # Transaction should be rebroadcast approximately 24 hours in the future,\n         # but can range from 12-36. So bump 36 hours to be sure.\n-        with node.assert_debug_log(['ResendWalletTransactions: resubmit 1 unconfirmed transactions']):\n+        with node.assert_debug_log(['resubmit 1 unconfirmed transactions']):\n             node.setmocktime(now + 36 * 60 * 60)\n             # Tell scheduler to call MaybeResendWalletTxn now.\n             node.mockscheduler(1)\n         # Give some time for trickle to occur\n         node.setmocktime(now + 36 * 60 * 60 + 600)",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 52,
      "original_position": 51,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9",
      "in_reply_to_id": null,
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe this is simpler when written as `mockscheduler(600)`? ",
      "created_at": "2022-08-25T14:55:37Z",
      "updated_at": "2022-08-25T15:09:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955075029",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955075029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955107397",
      "pull_request_review_id": 1085658350,
      "id": 955107397,
      "node_id": "PRRC_kwDOABII58447chF",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become",
      "path": "src/wallet/wallet.cpp",
      "position": 74,
      "original_position": 61,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "in_reply_to_id": 954595959,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've expanded the comment and also added `relay` to the check. This way we guarantee that we won't spam if we want to relay, regardless of `force`.",
      "created_at": "2022-08-25T15:23:05Z",
      "updated_at": "2022-08-25T15:23:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955107397",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955107397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1931,
      "original_line": 1931,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955107531",
      "pull_request_review_id": 1085658480,
      "id": 955107531,
      "node_id": "PRRC_kwDOABII58447cjL",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    if (!force && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;",
      "path": "src/wallet/wallet.cpp",
      "position": 87,
      "original_position": 73,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "in_reply_to_id": 954600083,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2022-08-25T15:23:10Z",
      "updated_at": "2022-08-25T15:23:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955107531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955107531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1949,
      "original_line": 1949,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955108860",
      "pull_request_review_id": 1085660027,
      "id": 955108860,
      "node_id": "PRRC_kwDOABII58447c38",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    if (!force && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;\n \n     int submitted_tx_count = 0;\n \n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n-            // Attempt to rebroadcast all txes more than 5 minutes older than\n-            // the last block. SubmitTxMemoryPoolAndRelay() will not rebroadcast\n-            // any confirmed or conflicting txs.\n-            if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+        // First filter for the transactions we want to rebroadcast.\n+        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\n+        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\n+        for (auto& [txid, wtx] : mapWallet) {\n+            // Only rebroadcast unconfirmed txs\n+            if (!wtx.isUnconfirmed()) continue;\n+\n+            // For periodic rebroadcast (force == false),\n+            // attempt to rebroadcast all txes more than 5 minutes older than\n+            // the last block.\n+            if (!force && wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+            to_submit.insert(&wtx);\n+        }\n+        // Now try submitting the transactions to the memory pool and (optionally) relay them.\n+        for (auto wtx : to_submit) {\n             std::string unused_err_string;\n-            if (SubmitTxMemoryPoolAndRelay(wtx, unused_err_string, true)) ++submitted_tx_count;\n+            if (SubmitTxMemoryPoolAndRelay(*wtx, unused_err_string, relay)) ++submitted_tx_count;",
      "path": "src/wallet/wallet.cpp",
      "position": 117,
      "original_position": 104,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9",
      "in_reply_to_id": 955059960,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No. We have had a new style in effect for the past several years. It only applies to new code, so a bunch of the old code written under the old style is still around.",
      "created_at": "2022-08-25T15:24:10Z",
      "updated_at": "2022-08-25T15:24:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955108860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955108860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1962,
      "original_line": 1962,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955111328",
      "pull_request_review_id": 1085663881,
      "id": 955111328,
      "node_id": "PRRC_kwDOABII58447deg",
      "diff_hunk": "@@ -66,14 +66,61 @@ def run_test(self):\n         self.log.info(\"Bump time & check that transaction is rebroadcast\")\n         # Transaction should be rebroadcast approximately 24 hours in the future,\n         # but can range from 12-36. So bump 36 hours to be sure.\n-        with node.assert_debug_log(['ResendWalletTransactions: resubmit 1 unconfirmed transactions']):\n+        with node.assert_debug_log(['resubmit 1 unconfirmed transactions']):\n             node.setmocktime(now + 36 * 60 * 60)\n             # Tell scheduler to call MaybeResendWalletTxn now.\n             node.mockscheduler(1)\n         # Give some time for trickle to occur\n         node.setmocktime(now + 36 * 60 * 60 + 600)",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 52,
      "original_position": 51,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "fee0dea1b1e32832dc5efca3621cfc8ba7c6c8f9",
      "in_reply_to_id": 955075029,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`mockscheduler` does not change the mocked time.",
      "created_at": "2022-08-25T15:25:53Z",
      "updated_at": "2022-08-25T15:25:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955111328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955111328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955161231",
      "pull_request_review_id": 1083803936,
      "id": 955161231,
      "node_id": "PRRC_kwDOABII58447pqP",
      "diff_hunk": "@@ -1818,32 +1818,37 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n     return result;\n }\n \n+std::vector<CWalletTx*> CWallet::GetSortedTxs()\n+{\n+    AssertLockHeld(cs_wallet);\n+    // Sort pending transactions based on their initial wallet insertion order\n+    std::map<int64_t, CWalletTx*> sorted_txs;\n+    for (auto& [wtxid, wtx] : mapWallet) {\n+        assert(wtx.GetHash() == wtxid);\n+        sorted_txs.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+    }\n+    std::vector<CWalletTx*> out;\n+    for (auto [_, wtx] : sorted_txs) {\n+        out.push_back(wtx);\n+    }\n+    return out;\n+}\n+\n void CWallet::ReacceptWalletTransactions()\n {\n     // If transactions aren't being broadcasted, don't let them into local mempool either\n     if (!fBroadcastTransactions)\n         return;\n-    std::map<int64_t, CWalletTx*> mapSorted;\n \n-    // Sort pending wallet transactions based on their initial wallet insertion order\n-    for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-        const uint256& wtxid = item.first;\n-        CWalletTx& wtx = item.second;\n-        assert(wtx.GetHash() == wtxid);\n-\n-        int nDepth = GetTxDepthInMainChain(wtx);\n+    // Try to add wallet transactions to memory pool\n+    for (auto wtx : GetSortedTxs()) {\n+        int nDepth = GetTxDepthInMainChain(*wtx);\n \n-        if (!wtx.IsCoinBase() && (nDepth == 0 && !wtx.isAbandoned())) {\n-            mapSorted.insert(std::make_pair(wtx.nOrderPos, &wtx));\n+        if (!wtx->IsCoinBase() && (nDepth == 0 && !wtx->isAbandoned())) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953507075,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch that `!IsCoinBase()` is redundant in combination with `!IsUnconfirmed()` 👍 ",
      "created_at": "2022-08-25T16:05:00Z",
      "updated_at": "2022-08-25T17:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955161231",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955161231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1847,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955165088",
      "pull_request_review_id": 1083803936,
      "id": 955165088,
      "node_id": "PRRC_kwDOABII58447qmg",
      "diff_hunk": "@@ -1886,43 +1858,70 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+//\n+// The `force` option results in all unconfirmed transactions being submitted to\n+// the mempool. This does not necessarily result in those transactions being relayed,\n+// that depends on the `relay` option. Periodic rebroadcast uses the pattern\n+// relay=true force=false (also the default values), while loading into the mempool\n+// (on start, or after import) uses relay=false force=true.\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)",
      "path": "src/wallet/wallet.cpp",
      "position": 68,
      "original_position": 67,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: intuitively I'd expect a `force` parameter to not respect flags like `fBroadcastTransactions`. I think something like `force_ready` would make it more obvious that this is not an absolute force. Probably personal preference?\r\n```suggestion\r\nvoid CWallet::ResubmitWalletTransactions(bool relay, bool force_ready)\r\n```",
      "created_at": "2022-08-25T16:07:57Z",
      "updated_at": "2022-08-25T17:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955165088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955165088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1925,
      "original_line": 1925,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955182098",
      "pull_request_review_id": 1083803936,
      "id": 955182098,
      "node_id": "PRRC_kwDOABII58447uwS",
      "diff_hunk": "@@ -1886,43 +1858,70 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+//\n+// The `force` option results in all unconfirmed transactions being submitted to\n+// the mempool. This does not necessarily result in those transactions being relayed,\n+// that depends on the `relay` option. Periodic rebroadcast uses the pattern\n+// relay=true force=false (also the default values), while loading into the mempool\n+// (on start, or after import) uses relay=false force=true.\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    // We only allow forcing mempool submission when not relaying to avoid this spam.\n+    if (!force && relay && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;\n \n     int submitted_tx_count = 0;\n \n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n-            // Attempt to rebroadcast all txes more than 5 minutes older than\n-            // the last block. SubmitTxMemoryPoolAndRelay() will not rebroadcast\n-            // any confirmed or conflicting txs.\n-            if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+        // First filter for the transactions we want to rebroadcast.\n+        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\n+        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\n+        for (auto& [txid, wtx] : mapWallet) {\n+            // Only rebroadcast unconfirmed txs\n+            if (!wtx.isUnconfirmed()) continue;\n+\n+            // For periodic rebroadcast (force == false),\n+            // attempt to rebroadcast all txes more than 5 minutes older than\n+            // the last block.",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think this comment is confusing, from just this I'd think the below code _only_ executes for  periodic rebroadcast.\r\n\r\n```suggestion\r\n            // Attempt to rebroadcast all txes more than 5 minutes older than\r\n            // the last block, or all txes if force is true.\r\n```",
      "created_at": "2022-08-25T16:20:42Z",
      "updated_at": "2022-08-25T17:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955182098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955182098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 1915,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1917,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955188975",
      "pull_request_review_id": 1083803936,
      "id": 955188975,
      "node_id": "PRRC_kwDOABII58447wbv",
      "diff_hunk": "@@ -1886,43 +1858,70 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: while you're touching this docstring and fn, worth slapping in a TODO here for increased visibility?",
      "created_at": "2022-08-25T16:27:44Z",
      "updated_at": "2022-08-25T17:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955188975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955188975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955229056",
      "pull_request_review_id": 1083803936,
      "id": 955229056,
      "node_id": "PRRC_kwDOABII584476OA",
      "diff_hunk": "@@ -305,6 +305,13 @@ class CWalletTx\n     CWalletTx(CWalletTx const &) = delete;\n     void operator=(CWalletTx const &x) = delete;\n };\n+\n+struct WalletTxOrderComparator {",
      "path": "src/wallet/transaction.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What do you think about a lambda function instead? Quite a bit less code, and imo about equally readable? As long as we're not using this comparator anywhere else the lambda would have my preference, but I'm okay with the current implementation too.\r\n\r\n<details>\r\n<summary> git diff </summary>\r\n\r\n```diff\r\ndiff --git a/src/wallet/transaction.h b/src/wallet/transaction.h\r\nindex 27983e356..c36cbeb23 100644\r\n--- a/src/wallet/transaction.h\r\n+++ b/src/wallet/transaction.h\r\n@@ -306,12 +306,6 @@ public:\r\n     void operator=(CWalletTx const &x) = delete;\r\n };\r\n \r\n-struct WalletTxOrderComparator {\r\n-    bool operator()(const CWalletTx* a, const CWalletTx* b) const\r\n-    {\r\n-        return a->nOrderPos < b->nOrderPos;\r\n-    }\r\n-};\r\n } // namespace wallet\r\n \r\n #endif // BITCOIN_WALLET_TRANSACTION_H\r\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/wallet.cpp\r\nindex 69957ed9e..ad20f332a 100644\r\n--- a/src/wallet/wallet.cpp\r\n+++ b/src/wallet/wallet.cpp\r\n@@ -1906,8 +1906,9 @@ void CWallet::ResubmitWalletTransactions(bool relay, bool force)\r\n         LOCK(cs_wallet);\r\n \r\n         // First filter for the transactions we want to rebroadcast.\r\n-        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\r\n-        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\r\n+        // We use a set ordered by nOrderPos so that rebroadcasting occurs in insertion order\r\n+        auto cmp = [](const CWalletTx* a, const CWalletTx* b) { return a->nOrderPos < b->nOrderPos; };\r\n+        std::set<CWalletTx*, decltype(cmp)> to_submit(cmp);\r\n         for (auto& [txid, wtx] : mapWallet) {\r\n             // Only rebroadcast unconfirmed txs\r\n             if (!wtx.isUnconfirmed()) continue;\r\n```\r\n\r\n</details>",
      "created_at": "2022-08-25T17:13:17Z",
      "updated_at": "2022-08-25T17:16:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955229056",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955229056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 309,
      "original_line": 309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955250267",
      "pull_request_review_id": 1085857075,
      "id": 955250267,
      "node_id": "PRRC_kwDOABII58447_Zb",
      "diff_hunk": "@@ -305,6 +305,13 @@ class CWalletTx\n     CWalletTx(CWalletTx const &) = delete;\n     void operator=(CWalletTx const &x) = delete;\n };\n+\n+struct WalletTxOrderComparator {",
      "path": "src/wallet/transaction.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": 955229056,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the comparator might actually be useful in other places too.",
      "created_at": "2022-08-25T17:38:05Z",
      "updated_at": "2022-08-25T17:38:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955250267",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955250267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 309,
      "original_line": 309,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955349275",
      "pull_request_review_id": 1086006476,
      "id": 955349275,
      "node_id": "PRRC_kwDOABII58448Xkb",
      "diff_hunk": "@@ -1936,7 +1935,7 @@ void CWallet::ResendWalletTransactions()\n void MaybeResendWalletTxs(WalletContext& context)\n {\n     for (const std::shared_ptr<CWallet>& pwallet : GetWallets(context)) {\n-        pwallet->ResendWalletTransactions();\n+        pwallet->ResubmitWalletTransactions();",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": null,
      "user": {
        "login": "LarryRuane",
        "id": 8321330,
        "node_id": "MDQ6VXNlcjgzMjEzMzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LarryRuane",
        "html_url": "https://github.com/LarryRuane",
        "followers_url": "https://api.github.com/users/LarryRuane/followers",
        "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
        "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
        "repos_url": "https://api.github.com/users/LarryRuane/repos",
        "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, this is the only call site that takes advantage of default arguments, so making this change would allow this method to not need default arguments. (Personally, I dislike default arguments unless there's a good reason for them.)\r\n```suggestion\r\n        pwallet->ResubmitWalletTransactions(/*relay=*/true, /*force=*/false);\r\n```",
      "created_at": "2022-08-25T19:32:30Z",
      "updated_at": "2022-08-29T15:44:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955349275",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955349275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955402239",
      "pull_request_review_id": 1086082896,
      "id": 955402239,
      "node_id": "PRRC_kwDOABII58448kf_",
      "diff_hunk": "@@ -1886,43 +1858,70 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+//\n+// The `force` option results in all unconfirmed transactions being submitted to\n+// the mempool. This does not necessarily result in those transactions being relayed,\n+// that depends on the `relay` option. Periodic rebroadcast uses the pattern\n+// relay=true force=false (also the default values), while loading into the mempool\n+// (on start, or after import) uses relay=false force=true.\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)",
      "path": "src/wallet/wallet.cpp",
      "position": 68,
      "original_position": 67,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": 955165088,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree that `force` implies that more will happen than actually does, but I couldn't think of anything better to call it. I don't think `force_ready` is any clearer.",
      "created_at": "2022-08-25T20:37:52Z",
      "updated_at": "2022-08-25T20:37:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955402239",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955402239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1925,
      "original_line": 1925,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405099",
      "pull_request_review_id": 1086086977,
      "id": 955405099,
      "node_id": "PRRC_kwDOABII58448lMr",
      "diff_hunk": "@@ -27,7 +29,10 @@ def run_test(self):\n         peer_first = node.add_p2p_connection(P2PTxInvStore())\n \n         self.log.info(\"Create a new transaction and wait until it's broadcast\")\n-        txid = node.sendtoaddress(node.getnewaddress(), 1)\n+        unspent = node.listunspent()\n+        parent_utxo = unspent[0]\n+        indep_utxo = unspent[1]",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 20,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953795948,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-25T20:41:47Z",
      "updated_at": "2022-08-25T20:41:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955405099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 32,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405145",
      "pull_request_review_id": 1086087046,
      "id": 955405145,
      "node_id": "PRRC_kwDOABII58448lNZ",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # Ideally we would add a transaction that would spend the existing transaction and also be\n+        # in mapWallet before it. However mapWallet is a std::unsorted_map which means that it is\n+        # hard for us to externally construct such a transaction. So we will ignore that fact and\n+        # rely on the fact that because there are only two items in mapWallet, 50% of the time the\n+        # child will be placed before the parent in mapWallet. The incorrect behavior that this\n+        # test tries to catch should thus fail intermittently at a rate of 50%.\n+        send_res = node.send(outputs=[{node.getnewaddress(): 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}], \"add_to_wallet\": False})\n+        child_txid = send_res[\"txid\"]\n+        node.sendrawtransaction(send_res[\"hex\"])\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()\n+\n+        # Evict these txs from the mempool\n+        evict_time = block_time + 60 * 60 * 336 + 5",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 49,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953832319,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-25T20:41:52Z",
      "updated_at": "2022-08-25T20:41:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955405145",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405255",
      "pull_request_review_id": 1086087191,
      "id": 955405255,
      "node_id": "PRRC_kwDOABII58448lPH",
      "diff_hunk": "@@ -74,6 +79,41 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # Ideally we would add a transaction that would spend the existing transaction and also be\n+        # in mapWallet before it. However mapWallet is a std::unsorted_map which means that it is\n+        # hard for us to externally construct such a transaction. So we will ignore that fact and\n+        # rely on the fact that because there are only two items in mapWallet, 50% of the time the\n+        # child will be placed before the parent in mapWallet. The incorrect behavior that this\n+        # test tries to catch should thus fail intermittently at a rate of 50%.\n+        send_res = node.send(outputs=[{node.getnewaddress(): 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}], \"add_to_wallet\": False})\n+        child_txid = send_res[\"txid\"]\n+        node.sendrawtransaction(send_res[\"hex\"])\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()\n+\n+        # Evict these txs from the mempool\n+        evict_time = block_time + 60 * 60 * 336 + 5\n+        node.setmocktime(evict_time)\n+        indep_send = node.send(outputs=[{node.getnewaddress(): 1}], options={\"inputs\": [indep_utxo]})\n+        node.syncwithvalidationinterfacequeue()\n+        node.getmempoolentry(indep_send[\"txid\"])\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\", node.getmempoolentry, txid)\n+        assert_raises_rpc_error(-5, \"Transaction not in mempool\", node.getmempoolentry, child_txid)\n+\n+        # Rebroadcast and check that parent and child are both in the mempool\n+        with node.assert_debug_log(['ResendWalletTransactions: resubmit 2 unconfirmed transactions']):\n+            node.setmocktime(evict_time + 36 * 60 * 60)",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 59,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "e40ddf36bed81bdf28d386eb961c9ed22b69e207",
      "in_reply_to_id": 953893376,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-25T20:42:01Z",
      "updated_at": "2022-08-25T20:42:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955405255",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405296",
      "pull_request_review_id": 1086087261,
      "id": 955405296,
      "node_id": "PRRC_kwDOABII58448lPw",
      "diff_hunk": "@@ -1886,43 +1858,70 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+//\n+// The `force` option results in all unconfirmed transactions being submitted to\n+// the mempool. This does not necessarily result in those transactions being relayed,\n+// that depends on the `relay` option. Periodic rebroadcast uses the pattern\n+// relay=true force=false (also the default values), while loading into the mempool\n+// (on start, or after import) uses relay=false force=true.\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    // We only allow forcing mempool submission when not relaying to avoid this spam.\n+    if (!force && relay && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;\n \n     int submitted_tx_count = 0;\n \n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n-            // Attempt to rebroadcast all txes more than 5 minutes older than\n-            // the last block. SubmitTxMemoryPoolAndRelay() will not rebroadcast\n-            // any confirmed or conflicting txs.\n-            if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+        // First filter for the transactions we want to rebroadcast.\n+        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\n+        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\n+        for (auto& [txid, wtx] : mapWallet) {\n+            // Only rebroadcast unconfirmed txs\n+            if (!wtx.isUnconfirmed()) continue;\n+\n+            // For periodic rebroadcast (force == false),\n+            // attempt to rebroadcast all txes more than 5 minutes older than\n+            // the last block.",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": 955182098,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-25T20:42:06Z",
      "updated_at": "2022-08-25T20:42:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955405296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": 1915,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1917,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405384",
      "pull_request_review_id": 1086087347,
      "id": 955405384,
      "node_id": "PRRC_kwDOABII58448lRI",
      "diff_hunk": "@@ -1886,43 +1858,70 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": 955188975,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-25T20:42:11Z",
      "updated_at": "2022-08-25T20:42:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955405384",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955405384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955848588",
      "pull_request_review_id": 1086675667,
      "id": 955848588,
      "node_id": "PRRC_kwDOABII5844-ReM",
      "diff_hunk": "@@ -1886,43 +1858,57 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. Otherwise this\n+// function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n // Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    if (!force && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;\n \n     int submitted_tx_count = 0;\n \n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n-            // Attempt to rebroadcast all txes more than 5 minutes older than\n-            // the last block. SubmitTxMemoryPoolAndRelay() will not rebroadcast\n-            // any confirmed or conflicting txs.\n-            if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+        // First filter for the transactions we want to rebroadcast.\n+        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\n+        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\n+        for (auto& [txid, wtx] : mapWallet) {\n+            // Only rebroadcast unconfirmed txs\n+            if (!wtx.isUnconfirmed()) continue;\n+\n+            // For periodic rebroadcast (force == false),\n+            // attempt to rebroadcast all txes more than 5 minutes older than\n+            // the last block.\n+            if (!force && wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": 110,
      "original_position": 97,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "bec0579357daebb420d0249caf4665428221a61f",
      "in_reply_to_id": 954605982,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, thank you.",
      "created_at": "2022-08-26T09:22:53Z",
      "updated_at": "2022-08-26T09:22:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955848588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955848588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1956,
      "original_line": 1956,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955876726",
      "pull_request_review_id": 1086715232,
      "id": 955876726,
      "node_id": "PRRC_kwDOABII5844-YV2",
      "diff_hunk": "@@ -68,6 +73,53 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the parent transaction.",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 32,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "789b78430b8ecb149e5f4835493f525849db516c",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`the parent transaction before the parent transaction`?",
      "created_at": "2022-08-26T09:55:01Z",
      "updated_at": "2022-08-26T09:55:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r955876726",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/955876726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956149136",
      "pull_request_review_id": 1087116790,
      "id": 956149136,
      "node_id": "PRRC_kwDOABII5844_a2Q",
      "diff_hunk": "@@ -1924,43 +1896,69 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed",
      "path": "src/wallet/wallet.cpp",
      "position": 42,
      "original_position": 42,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "789b78430b8ecb149e5f4835493f525849db516c",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: perhaps this first sentence should live in `wallet.h`?",
      "created_at": "2022-08-26T15:13:10Z",
      "updated_at": "2022-09-05T12:00:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r956149136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956149136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": 1900,
      "original_start_line": 1899,
      "start_side": "RIGHT",
      "line": 1901,
      "original_line": 1901,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956195855",
      "pull_request_review_id": 1087184718,
      "id": 956195855,
      "node_id": "PRRC_kwDOABII5844_mQP",
      "diff_hunk": "@@ -68,6 +73,53 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the parent transaction.",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 32,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "789b78430b8ecb149e5f4835493f525849db516c",
      "in_reply_to_id": 955876726,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, fixed.",
      "created_at": "2022-08-26T16:07:22Z",
      "updated_at": "2022-08-26T16:07:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r956195855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956195855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956937924",
      "pull_request_review_id": 1088126712,
      "id": 956937924,
      "node_id": "PRRC_kwDOABII5845CbbE",
      "diff_hunk": "@@ -68,6 +73,53 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the child transaction.\n+        # The previous behavior is that the rebroadcasting would simply iterate mapWallet. As",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 33,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "748d5c75d60505a3d84d36782f5cf4949224e103",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I think `the previous behavior` stuff belongs to the commit message, not to the file content.",
      "created_at": "2022-08-29T06:29:06Z",
      "updated_at": "2022-08-29T06:29:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r956937924",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/956937924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957563605",
      "pull_request_review_id": 1089022321,
      "id": 957563605,
      "node_id": "PRRC_kwDOABII5845E0LV",
      "diff_hunk": "@@ -68,6 +73,53 @@ def run_test(self):\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the child transaction.\n+        # The previous behavior is that the rebroadcasting would simply iterate mapWallet. As",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": null,
      "original_position": 33,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "748d5c75d60505a3d84d36782f5cf4949224e103",
      "in_reply_to_id": 956937924,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-08-29T16:41:56Z",
      "updated_at": "2022-08-29T16:41:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r957563605",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957563605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957563733",
      "pull_request_review_id": 1089022534,
      "id": 957563733,
      "node_id": "PRRC_kwDOABII5845E0NV",
      "diff_hunk": "@@ -1936,7 +1935,7 @@ void CWallet::ResendWalletTransactions()\n void MaybeResendWalletTxs(WalletContext& context)\n {\n     for (const std::shared_ptr<CWallet>& pwallet : GetWallets(context)) {\n-        pwallet->ResendWalletTransactions();\n+        pwallet->ResubmitWalletTransactions();",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "71b7709fa075dc4c9b55bb07304687724f67f0cb",
      "in_reply_to_id": 955349275,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed the default arguments.",
      "created_at": "2022-08-29T16:42:06Z",
      "updated_at": "2022-08-29T16:42:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r957563733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/957563733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1976,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958425911",
      "pull_request_review_id": 1090238146,
      "id": 958425911,
      "node_id": "PRRC_kwDOABII5845IGs3",
      "diff_hunk": "@@ -1925,43 +1897,69 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n-// Ideally, we'd only resend transactions that we think should have been\n+// TODO: Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+//\n+// The `force` option results in all unconfirmed transactions being submitted to\n+// the mempool. This does not necessarily result in those transactions being relayed,\n+// that depends on the `relay` option. Periodic rebroadcast uses the pattern\n+// relay=true force=false (also the default values), while loading into the mempool\n+// (on start, or after import) uses relay=false force=true.\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    // We only allow forcing mempool submission when not relaying to avoid this spam.\n+    if (!force && relay && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;",
      "path": "src/wallet/wallet.cpp",
      "position": 84,
      "original_position": 84,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "10d91c5abe9ed7dcc237c9d52c588e7d26e162a4",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "At this point of the review, this is just a minor nit but code would be a bit clearer in this way:\r\n```c++\r\nif (!force) {\r\n    // During reindex, importing and IBD, old wallet transactions become\r\n    // unconfirmed. Don't resend them as that would spam other nodes.\r\n    // We only allow forcing mempool submission when not relaying to avoid this spam.\r\n    if (relay && !chain().isReadyToBroadcast()) return;\r\n\r\n    // Do this infrequently and randomly to avoid giving away\r\n    // that these are our transactions.\r\n    if (GetTime() < nNextResend) return;\r\n}\r\n```",
      "created_at": "2022-08-30T12:38:18Z",
      "updated_at": "2022-08-30T12:56:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r958425911",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958425911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": 1931,
      "original_start_line": 1931,
      "start_side": "RIGHT",
      "line": 1938,
      "original_line": 1938,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958562071",
      "pull_request_review_id": 1090438016,
      "id": 958562071,
      "node_id": "PRRC_kwDOABII5845In8X",
      "diff_hunk": "@@ -66,14 +65,57 @@ def run_test(self):\n         self.log.info(\"Bump time & check that transaction is rebroadcast\")\n         # Transaction should be rebroadcast approximately 24 hours in the future,\n         # but can range from 12-36. So bump 36 hours to be sure.\n-        with node.assert_debug_log(['ResendWalletTransactions: resubmit 1 unconfirmed transactions']):\n+        with node.assert_debug_log(['resubmit 1 unconfirmed transactions']):\n             node.setmocktime(now + 36 * 60 * 60)\n             # Tell scheduler to call MaybeResendWalletTxs now.\n             node.mockscheduler(60)\n         # Give some time for trickle to occur\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the child transaction.\n+        # To test that scenario, we need a method to reliably get a child transaction placed\n+        # in mapWallet positioned before the parent. We cannot predict the position in mapWallet,\n+        # but we can observe it using listreceivedbyaddress and other related RPCs.\n+        #\n+        # So we will create the child transaction, use listreceivedbyaddress to see what the\n+        # ordering of mapWallet is, if the child is not before the parent, we will create a new\n+        # child (via bumpfee) and remove the old child (via removeprunedfunds) until we get the\n+        # ordering of child before parent.\n+        child_txid = node.send(outputs=[{addr: 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}]})[\"txid\"]\n+        while True:\n+            txids = node.listreceivedbyaddress(minconf=0, address_filter=addr)[0][\"txids\"]\n+            if txids == [child_txid, txid]:\n+                break\n+            bumped = node.bumpfee(child_txid)\n+            node.removeprunedfunds(child_txid)\n+            child_txid = bumped[\"txid\"]\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()\n+\n+        # Evict these txs from the mempool\n+        evict_time = block_time + 60 * 60 * DEFAULT_MEMPOOL_EXPIRY_HOURS + 5\n+        node.setmocktime(evict_time)\n+        indep_send = node.send(outputs=[{node.getnewaddress(): 1}], options={\"inputs\": [indep_utxo]})\n+        node.syncwithvalidationinterfacequeue()",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 86,
      "original_position": 86,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you explain why this is needed? Generally this is only needed when forcing the wallet to receive all in-flight mempool notifications. However, there is no wallet call that follows. Also, there is no `m_best_block_time` update.",
      "created_at": "2022-08-30T14:31:52Z",
      "updated_at": "2022-08-30T14:40:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r958562071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958562071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958566606",
      "pull_request_review_id": 1090438016,
      "id": 958566606,
      "node_id": "PRRC_kwDOABII5845IpDO",
      "diff_hunk": "@@ -66,14 +65,57 @@ def run_test(self):\n         self.log.info(\"Bump time & check that transaction is rebroadcast\")\n         # Transaction should be rebroadcast approximately 24 hours in the future,\n         # but can range from 12-36. So bump 36 hours to be sure.\n-        with node.assert_debug_log(['ResendWalletTransactions: resubmit 1 unconfirmed transactions']):\n+        with node.assert_debug_log(['resubmit 1 unconfirmed transactions']):\n             node.setmocktime(now + 36 * 60 * 60)\n             # Tell scheduler to call MaybeResendWalletTxs now.\n             node.mockscheduler(60)\n         # Give some time for trickle to occur\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the child transaction.\n+        # To test that scenario, we need a method to reliably get a child transaction placed\n+        # in mapWallet positioned before the parent. We cannot predict the position in mapWallet,\n+        # but we can observe it using listreceivedbyaddress and other related RPCs.\n+        #\n+        # So we will create the child transaction, use listreceivedbyaddress to see what the\n+        # ordering of mapWallet is, if the child is not before the parent, we will create a new\n+        # child (via bumpfee) and remove the old child (via removeprunedfunds) until we get the\n+        # ordering of child before parent.\n+        child_txid = node.send(outputs=[{addr: 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}]})[\"txid\"]\n+        while True:\n+            txids = node.listreceivedbyaddress(minconf=0, address_filter=addr)[0][\"txids\"]\n+            if txids == [child_txid, txid]:\n+                break\n+            bumped = node.bumpfee(child_txid)\n+            node.removeprunedfunds(child_txid)\n+            child_txid = bumped[\"txid\"]\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 80,
      "original_position": 80,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you explain why this is needed? Maybe duplicate the comment \"Set correct m_best_block_time\" from above?",
      "created_at": "2022-08-30T14:35:27Z",
      "updated_at": "2022-08-30T14:40:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r958566606",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958566606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 101,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958571943",
      "pull_request_review_id": 1090438016,
      "id": 958571943,
      "node_id": "PRRC_kwDOABII5845IqWn",
      "diff_hunk": "@@ -1925,43 +1897,69 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n-// Ideally, we'd only resend transactions that we think should have been\n+// TODO: Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+//\n+// The `force` option results in all unconfirmed transactions being submitted to\n+// the mempool. This does not necessarily result in those transactions being relayed,\n+// that depends on the `relay` option. Periodic rebroadcast uses the pattern\n+// relay=true force=false (also the default values), while loading into the mempool",
      "path": "src/wallet/wallet.cpp",
      "position": 66,
      "original_position": 66,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n// relay=true force=false, while loading into the mempool\r\n```",
      "created_at": "2022-08-30T14:39:38Z",
      "updated_at": "2022-08-30T14:40:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r958571943",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958571943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1923,
      "original_line": 1923,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958572522",
      "pull_request_review_id": 1090438016,
      "id": 958572522,
      "node_id": "PRRC_kwDOABII5845Iqfq",
      "diff_hunk": "@@ -1925,43 +1897,69 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n-// Ideally, we'd only resend transactions that we think should have been\n+// TODO: Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+//\n+// The `force` option results in all unconfirmed transactions being submitted to\n+// the mempool. This does not necessarily result in those transactions being relayed,\n+// that depends on the `relay` option. Periodic rebroadcast uses the pattern\n+// relay=true force=false (also the default values), while loading into the mempool\n+// (on start, or after import) uses relay=false force=true.\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    // We only allow forcing mempool submission when not relaying to avoid this spam.\n+    if (!force && relay && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;\n     // resend 12-36 hours from now, ~1 day on average.\n     nNextResend = GetTime() + (12 * 60 * 60) + GetRand(24 * 60 * 60);\n-    if (fFirst) return;\n \n     int submitted_tx_count = 0;\n \n     { // cs_wallet scope\n         LOCK(cs_wallet);\n \n-        // Relay transactions\n-        for (std::pair<const uint256, CWalletTx>& item : mapWallet) {\n-            CWalletTx& wtx = item.second;\n-            // Attempt to rebroadcast all txes more than 5 minutes older than\n-            // the last block. SubmitTxMemoryPoolAndRelay() will not rebroadcast\n-            // any confirmed or conflicting txs.\n-            if (wtx.nTimeReceived > m_best_block_time - 5 * 60) continue;\n+        // First filter for the transactions we want to rebroadcast.\n+        // We use a set with WalletTxOrderComparator so that rebroadcasting occurs in insertion order\n+        std::set<CWalletTx*, WalletTxOrderComparator> to_submit;\n+        for (auto& [txid, wtx] : mapWallet) {\n+            // Only rebroadcast unconfirmed txs\n+            if (!wtx.isUnconfirmed()) continue;\n+\n+            // attempt to rebroadcast all txes more than 5 minutes older than",
      "path": "src/wallet/wallet.cpp",
      "position": 108,
      "original_position": 108,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            // Attempt to rebroadcast all txes more than 5 minutes older than\r\n```\r\n\r\nAny reason that this `A` changed into `a`?",
      "created_at": "2022-08-30T14:40:08Z",
      "updated_at": "2022-08-30T14:40:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r958572522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958572522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1954,
      "original_line": 1954,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958746874",
      "pull_request_review_id": 1090705743,
      "id": 958746874,
      "node_id": "PRRC_kwDOABII5845JVD6",
      "diff_hunk": "@@ -66,14 +65,57 @@ def run_test(self):\n         self.log.info(\"Bump time & check that transaction is rebroadcast\")\n         # Transaction should be rebroadcast approximately 24 hours in the future,\n         # but can range from 12-36. So bump 36 hours to be sure.\n-        with node.assert_debug_log(['ResendWalletTransactions: resubmit 1 unconfirmed transactions']):\n+        with node.assert_debug_log(['resubmit 1 unconfirmed transactions']):\n             node.setmocktime(now + 36 * 60 * 60)\n             # Tell scheduler to call MaybeResendWalletTxs now.\n             node.mockscheduler(60)\n         # Give some time for trickle to occur\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the child transaction.\n+        # To test that scenario, we need a method to reliably get a child transaction placed\n+        # in mapWallet positioned before the parent. We cannot predict the position in mapWallet,\n+        # but we can observe it using listreceivedbyaddress and other related RPCs.\n+        #\n+        # So we will create the child transaction, use listreceivedbyaddress to see what the\n+        # ordering of mapWallet is, if the child is not before the parent, we will create a new\n+        # child (via bumpfee) and remove the old child (via removeprunedfunds) until we get the\n+        # ordering of child before parent.\n+        child_txid = node.send(outputs=[{addr: 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}]})[\"txid\"]\n+        while True:\n+            txids = node.listreceivedbyaddress(minconf=0, address_filter=addr)[0][\"txids\"]\n+            if txids == [child_txid, txid]:\n+                break\n+            bumped = node.bumpfee(child_txid)\n+            node.removeprunedfunds(child_txid)\n+            child_txid = bumped[\"txid\"]\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()\n+\n+        # Evict these txs from the mempool\n+        evict_time = block_time + 60 * 60 * DEFAULT_MEMPOOL_EXPIRY_HOURS + 5\n+        node.setmocktime(evict_time)\n+        indep_send = node.send(outputs=[{node.getnewaddress(): 1}], options={\"inputs\": [indep_utxo]})\n+        node.syncwithvalidationinterfacequeue()",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 86,
      "original_position": 86,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "in_reply_to_id": 958562071,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Also, there is no `m_best_block_time` update.\r\n\r\nWhy not? IIRC this was done in order to update `m_best_block_time` so that the transaction would be properly evicted later.",
      "created_at": "2022-08-30T17:22:57Z",
      "updated_at": "2022-08-30T17:22:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r958746874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958746874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958748595",
      "pull_request_review_id": 1090708240,
      "id": 958748595,
      "node_id": "PRRC_kwDOABII5845JVez",
      "diff_hunk": "@@ -66,14 +65,57 @@ def run_test(self):\n         self.log.info(\"Bump time & check that transaction is rebroadcast\")\n         # Transaction should be rebroadcast approximately 24 hours in the future,\n         # but can range from 12-36. So bump 36 hours to be sure.\n-        with node.assert_debug_log(['ResendWalletTransactions: resubmit 1 unconfirmed transactions']):\n+        with node.assert_debug_log(['resubmit 1 unconfirmed transactions']):\n             node.setmocktime(now + 36 * 60 * 60)\n             # Tell scheduler to call MaybeResendWalletTxs now.\n             node.mockscheduler(60)\n         # Give some time for trickle to occur\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the child transaction.\n+        # To test that scenario, we need a method to reliably get a child transaction placed\n+        # in mapWallet positioned before the parent. We cannot predict the position in mapWallet,\n+        # but we can observe it using listreceivedbyaddress and other related RPCs.\n+        #\n+        # So we will create the child transaction, use listreceivedbyaddress to see what the\n+        # ordering of mapWallet is, if the child is not before the parent, we will create a new\n+        # child (via bumpfee) and remove the old child (via removeprunedfunds) until we get the\n+        # ordering of child before parent.\n+        child_txid = node.send(outputs=[{addr: 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}]})[\"txid\"]\n+        while True:\n+            txids = node.listreceivedbyaddress(minconf=0, address_filter=addr)[0][\"txids\"]\n+            if txids == [child_txid, txid]:\n+                break\n+            bumped = node.bumpfee(child_txid)\n+            node.removeprunedfunds(child_txid)\n+            child_txid = bumped[\"txid\"]\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()\n+\n+        # Evict these txs from the mempool\n+        evict_time = block_time + 60 * 60 * DEFAULT_MEMPOOL_EXPIRY_HOURS + 5\n+        node.setmocktime(evict_time)\n+        indep_send = node.send(outputs=[{node.getnewaddress(): 1}], options={\"inputs\": [indep_utxo]})\n+        node.syncwithvalidationinterfacequeue()",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 86,
      "original_position": 86,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "in_reply_to_id": 958562071,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The transaction is evicted from the mempool, not the wallet. (Only the wallet has an `m_best_block_time`)\r\n\r\nAlso, there is no new best block, so `m_best_block_time` won't be updated either way.",
      "created_at": "2022-08-30T17:24:56Z",
      "updated_at": "2022-08-30T17:24:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r958748595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958748595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958764740",
      "pull_request_review_id": 1090731869,
      "id": 958764740,
      "node_id": "PRRC_kwDOABII5845JZbE",
      "diff_hunk": "@@ -66,14 +65,57 @@ def run_test(self):\n         self.log.info(\"Bump time & check that transaction is rebroadcast\")\n         # Transaction should be rebroadcast approximately 24 hours in the future,\n         # but can range from 12-36. So bump 36 hours to be sure.\n-        with node.assert_debug_log(['ResendWalletTransactions: resubmit 1 unconfirmed transactions']):\n+        with node.assert_debug_log(['resubmit 1 unconfirmed transactions']):\n             node.setmocktime(now + 36 * 60 * 60)\n             # Tell scheduler to call MaybeResendWalletTxs now.\n             node.mockscheduler(60)\n         # Give some time for trickle to occur\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])\n \n+        self.log.info(\"Chain of unconfirmed not-in-mempool txs are rebroadcast\")\n+        # This tests that the node broadcasts the parent transaction before the child transaction.\n+        # To test that scenario, we need a method to reliably get a child transaction placed\n+        # in mapWallet positioned before the parent. We cannot predict the position in mapWallet,\n+        # but we can observe it using listreceivedbyaddress and other related RPCs.\n+        #\n+        # So we will create the child transaction, use listreceivedbyaddress to see what the\n+        # ordering of mapWallet is, if the child is not before the parent, we will create a new\n+        # child (via bumpfee) and remove the old child (via removeprunedfunds) until we get the\n+        # ordering of child before parent.\n+        child_txid = node.send(outputs=[{addr: 0.5}], options={\"inputs\": [{\"txid\":txid, \"vout\":0}]})[\"txid\"]\n+        while True:\n+            txids = node.listreceivedbyaddress(minconf=0, address_filter=addr)[0][\"txids\"]\n+            if txids == [child_txid, txid]:\n+                break\n+            bumped = node.bumpfee(child_txid)\n+            node.removeprunedfunds(child_txid)\n+            child_txid = bumped[\"txid\"]\n+        entry_time = node.getmempoolentry(child_txid)[\"time\"]\n+\n+        block_time = entry_time + 6 * 60\n+        node.setmocktime(block_time)\n+        block = create_block(int(node.getbestblockhash(), 16), create_coinbase(node.getblockcount() + 1), block_time)\n+        block.solve()\n+        node.submitblock(block.serialize().hex())\n+        node.syncwithvalidationinterfacequeue()\n+\n+        # Evict these txs from the mempool\n+        evict_time = block_time + 60 * 60 * DEFAULT_MEMPOOL_EXPIRY_HOURS + 5\n+        node.setmocktime(evict_time)\n+        indep_send = node.send(outputs=[{node.getnewaddress(): 1}], options={\"inputs\": [indep_utxo]})\n+        node.syncwithvalidationinterfacequeue()",
      "path": "test/functional/wallet_resendwallettransactions.py",
      "position": 86,
      "original_position": 86,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "in_reply_to_id": 958562071,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, wrong line. I think this `syncwithvalidationinterfacequeue` is probably unneeded.",
      "created_at": "2022-08-30T17:43:21Z",
      "updated_at": "2022-08-30T17:43:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r958764740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958764740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962828563",
      "pull_request_review_id": 1087116790,
      "id": 962828563,
      "node_id": "PRRC_kwDOABII5845Y5kT",
      "diff_hunk": "@@ -1925,43 +1897,69 @@ std::set<uint256> CWallet::GetTxConflicts(const CWalletTx& wtx) const\n     return result;\n }\n \n-// Rebroadcast transactions from the wallet. We do this on a random timer\n-// to slightly obfuscate which transactions come from our wallet.\n+// Resubmit transactions from the wallet to the mempool, optionally asking the\n+// mempool to relay them. On startup, we will do this for all unconfirmed\n+// transactions but will not ask the mempool to relay them. We do this on startup\n+// to ensure that our own mempool is aware of our transactions, and to also\n+// initialize nNextResend so that the actual rebroadcast is scheduled. There\n+// is a privacy side effect here as not broadcasting on startup also means that we won't\n+// inform the world of our wallet's state, particularly if the wallet (or node) is not\n+// yet synced.\n+//\n+// Otherwise this function is called periodically in order to relay our unconfirmed txs.\n+// We do this on a random timer to slightly obfuscate which transactions\n+// come from our wallet.\n //\n-// Ideally, we'd only resend transactions that we think should have been\n+// TODO: Ideally, we'd only resend transactions that we think should have been\n // mined in the most recent block. Any transaction that wasn't in the top\n // blockweight of transactions in the mempool shouldn't have been mined,\n // and so is probably just sitting in the mempool waiting to be confirmed.\n // Rebroadcasting does nothing to speed up confirmation and only damages\n // privacy.\n-void CWallet::ResendWalletTransactions()\n+//\n+// The `force` option results in all unconfirmed transactions being submitted to\n+// the mempool. This does not necessarily result in those transactions being relayed,\n+// that depends on the `relay` option. Periodic rebroadcast uses the pattern\n+// relay=true force=false (also the default values), while loading into the mempool\n+// (on start, or after import) uses relay=false force=true.\n+void CWallet::ResubmitWalletTransactions(bool relay, bool force)\n {\n+    // Don't attempt to resubmit if the wallet is configured to not broadcast,\n+    // even if forcing.\n+    if (!fBroadcastTransactions) return;\n+\n     // During reindex, importing and IBD, old wallet transactions become\n     // unconfirmed. Don't resend them as that would spam other nodes.\n-    if (!chain().isReadyToBroadcast()) return;\n+    // We only allow forcing mempool submission when not relaying to avoid this spam.\n+    if (!force && relay && !chain().isReadyToBroadcast()) return;\n \n     // Do this infrequently and randomly to avoid giving away\n     // that these are our transactions.\n-    if (GetTime() < nNextResend || !fBroadcastTransactions) return;\n-    bool fFirst = (nNextResend == 0);\n+    if (!force && GetTime() < nNextResend) return;",
      "path": "src/wallet/wallet.cpp",
      "position": 84,
      "original_position": 84,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "10d91c5abe9ed7dcc237c9d52c588e7d26e162a4",
      "in_reply_to_id": 958425911,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think both these checks would be more appropriate in `MaybeResendWalletTxs()` since they're more scheduling-like in nature. It would also address furszy's comment them since we don't need to check for `force` anymore (it's always True there). If you do this, you probably also want to duplicate `if (!fBroadcastTransactions)` there since it's a very cheap check and we could avoid iterating over the wallets.\r\n\r\nUnfortunately, we still need the `force` parameter when iterating over the transactions, otherwise `ResubmitWalletTransactions()`'s signature could have been simplified.",
      "created_at": "2022-09-05T11:59:26Z",
      "updated_at": "2022-09-05T12:01:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r962828563",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/962828563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": 1931,
      "original_start_line": 1931,
      "start_side": "RIGHT",
      "line": 1938,
      "original_line": 1938,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975155047",
      "pull_request_review_id": 1113527156,
      "id": 975155047,
      "node_id": "PRRC_kwDOABII5846H69n",
      "diff_hunk": "@@ -295,7 +295,7 @@ RPCHelpMan importaddress()\n         RescanWallet(*pwallet, reserver);\n         {\n             LOCK(pwallet->cs_wallet);",
      "path": "src/wallet/rpc/backup.cpp",
      "position": 3,
      "original_position": 3,
      "commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "original_commit_id": "3405f3eed5cf841b23a569b64a376c2e5b5026cd",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The locks are no longer needed and can be removed",
      "created_at": "2022-09-20T10:09:23Z",
      "updated_at": "2022-09-20T10:09:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25768#discussion_r975155047",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975155047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25768"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 297,
      "original_line": 297,
      "side": "RIGHT"
    }
  ]
}