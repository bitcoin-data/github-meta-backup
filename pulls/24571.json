{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571",
    "id": 880402221,
    "node_id": "PR_kwDOABII5840ed8t",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24571",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24571.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24571.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d70034232759d2cd88c5bf21e08896ec2b9dbede",
    "number": 24571,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "p2p: Prevent block index fingerprinting by sending additional getheaders messages",
    "user": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The block index might contain stale blocks that are not part of the main chain. If a malicious peer is able to probe a node's block index for certain stale blocks then it can use this information to fingerprint the node.\r\n\r\nWhen receiving headers (either through a `cmpctblock` or `headers` messages) a node will send `getheaders` if the predecessor of the first header does not exist. This leaks information from the block index if the predecessor of the header is a stale block because no `getheaders` will be sent in that case revealing that the stale block exists in the index.\r\n\r\nThis PR prevents this fingerprinting by sending additional `getheaders` messages in cases where not doing so leaks the existence of stale blocks. To determine when additional messages should be send, we introduce the `PeerManagerImpl::m_chain_tips_sets` map which keeps track of seen chain tips per network, effectively creating a per network view of the node's global block index.  We only try to accept new headers if they connect to anything in our global index and they connect to our active chain or to a chain that was previously sent to us by a peer on the same network. We send a `getheaders` message should these conditions not be met.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 749416508,
        "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
        "name": "Up for grabs",
        "color": "99a810",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2022-03-15T16:47:34Z",
    "updated_at": "2023-05-30T15:22:31Z",
    "closed_at": "2023-05-30T15:21:38Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "3cffa6722e3ec57f86152f56d7e6acf85096d2e5",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "dergoegge:2022-03-header-fingerprinting",
      "ref": "2022-03-header-fingerprinting",
      "sha": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 315023492,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTUwMjM0OTI=",
        "name": "bitcoin",
        "full_name": "dergoegge/bitcoin",
        "owner": {
          "login": "dergoegge",
          "id": 8077169,
          "node_id": "MDQ6VXNlcjgwNzcxNjk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dergoegge",
          "html_url": "https://github.com/dergoegge",
          "followers_url": "https://api.github.com/users/dergoegge/followers",
          "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
          "organizations_url": "https://api.github.com/users/dergoegge/orgs",
          "repos_url": "https://api.github.com/users/dergoegge/repos",
          "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dergoegge/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dergoegge/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dergoegge/bitcoin",
        "archive_url": "https://api.github.com/repos/dergoegge/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dergoegge/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dergoegge/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dergoegge/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dergoegge/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dergoegge/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dergoegge/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dergoegge/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dergoegge/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dergoegge/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dergoegge/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dergoegge/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dergoegge/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dergoegge/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dergoegge/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dergoegge/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dergoegge/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dergoegge/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dergoegge/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dergoegge/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dergoegge/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dergoegge/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dergoegge/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dergoegge/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dergoegge/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dergoegge/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dergoegge/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dergoegge/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dergoegge/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dergoegge/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dergoegge/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dergoegge/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dergoegge/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dergoegge/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dergoegge/bitcoin/hooks",
        "svn_url": "https://github.com/dergoegge/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 222378,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T10:23:38Z",
        "created_at": "2020-11-22T11:41:30Z",
        "updated_at": "2023-05-05T12:10:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f523df1ee8661e0c4738694b9054952769bfff65",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 271,
    "deletions": 25,
    "changed_files": 4,
    "commits": 6,
    "review_comments": 123,
    "comments": 23
  },
  "events": [
    {
      "event": "labeled",
      "id": 6245013582,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAF0O1hO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6245013582",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-15T17:11:54Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6245394320,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAF0QSeQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6245394320",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-15T18:11:04Z"
    },
    {
      "event": "commented",
      "id": 1068342401,
      "node_id": "IC_kwDOABII584_rZyB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1068342401",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-15T18:50:41Z",
      "updated_at": "2023-03-03T19:35:42Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1073010413), [ariard](https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-941295811), [fjahr](https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1107843661), [sdaftuar](https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-990551171), [stratospher](https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1324479813) |\n| Stale ACK | [jnewbery](https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-989409348) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26621](https://github.com/bitcoin/bitcoin/pull/26621) (refactor: Continue moving application data from CNode to Peer by dergoegge)\n* [#26593](https://github.com/bitcoin/bitcoin/pull/26593) (tracing: Only prepare tracepoint arguments when actually tracing by 0xB10C)\n* [#26378](https://github.com/bitcoin/bitcoin/pull/26378) (refactor: Pass reference to last header, not pointer by MarcoFalke)\n* [#25968](https://github.com/bitcoin/bitcoin/pull/25968) (Optimizations & simplifications following #25717 by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1068342401",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6245927253,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAF0SUlV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6245927253",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-15T19:41:05Z"
    },
    {
      "event": "commented",
      "id": 1073010413,
      "node_id": "IC_kwDOABII584_9Nbt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1073010413",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-19T13:29:04Z",
      "updated_at": "2022-03-19T13:29:04Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\nNeat and creative finding.\r\n\r\nAs I understood it,\r\nAn attacker is currently able to see whether a node received a stale block previously, by sending headers *on top of that stale block* (does it require proof-of-work for this attack?).\r\nThis PR prevents it by sending `getheaders` even if a block was received already (but was marked stale).",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1073010413",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "reviewed",
      "id": 915003480,
      "node_id": "PRR_kwDOABII5842idhY",
      "url": null,
      "actor": null,
      "commit_id": "3a112657530f09e62b96c2575cbb5284461606b3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-915003480",
      "submitted_at": "2022-03-19T13:35:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 915007116,
      "node_id": "PRR_kwDOABII5842ieaM",
      "url": null,
      "actor": null,
      "commit_id": "3a112657530f09e62b96c2575cbb5284461606b3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-915007116",
      "submitted_at": "2022-03-19T14:23:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 915007247,
      "node_id": "PRR_kwDOABII5842iecP",
      "url": null,
      "actor": null,
      "commit_id": "3a112657530f09e62b96c2575cbb5284461606b3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-915007247",
      "submitted_at": "2022-03-19T14:25:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6275691796,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAF2D3UU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6275691796",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-21T13:48:31Z"
    },
    {
      "event": "commented",
      "id": 1073932160,
      "node_id": "IC_kwDOABII585AAueA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1073932160",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-21T13:59:01Z",
      "updated_at": "2022-03-21T13:59:01Z",
      "author_association": "MEMBER",
      "body": "Thank you @naumenkogs for the review!\r\n\r\n> does it require proof-of-work for this attack?\r\n\r\nIt does not, the header that the attacker uses can be completely invalid. The proof-of-work check happens later on in `ChainstateManager::ProcessNewBlockHeaders`. The test i included also uses headers that do not have any proof-of-work on them.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1073932160",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6275778472,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAF2EMeo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6275778472",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-21T13:59:01Z"
    },
    {
      "event": "subscribed",
      "id": 6275778478,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAF2EMeu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6275778478",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-21T13:59:01Z"
    },
    {
      "event": "reviewed",
      "id": 933756078,
      "node_id": "PRR_kwDOABII5843p_yu",
      "url": null,
      "actor": null,
      "commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I found the wording of the first sentence of the second paragraph in the commit \"[net processing] Prevent block index fingerprinting when receiving he…\" to be confusing. It sounds like we now send (in)valid headers to prevent the attack.\r\n\r\n> This commit prevents malicious peers from performing such an attack by sending (in)valid headers that extend a stale chain on the victims node.\r\n\r\nMaybe drop the \"performing such an attack\"\r\n\r\n> This commit prevents malicious peers from sending (in)valid headers that extend a stale chain on the victims node.\r\n\r\nMaybe relevant for other reviewers: https://bitcoincore.reviews/24571\r\n\r\nI'm planning to test this against a node on my reorg-Signet. ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-933756078",
      "submitted_at": "2022-04-07T07:55:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 934838825,
      "node_id": "PRR_kwDOABII5843uIIp",
      "url": null,
      "actor": null,
      "commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-934838825",
      "submitted_at": "2022-04-07T10:27:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 941295811,
      "node_id": "PRR_kwDOABII5844GwjD",
      "url": null,
      "actor": null,
      "commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nDo you think such anti-fingerprinting protections should be extended to BIP157 messages request handling ? Even if there are few nodes offering such service now.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-941295811",
      "submitted_at": "2022-04-13T17:07:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "commented",
      "id": 1099354920,
      "node_id": "IC_kwDOABII585BhtMo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1099354920",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-14T16:13:00Z",
      "updated_at": "2022-04-14T16:33:22Z",
      "author_association": "MEMBER",
      "body": "Thanks everyone for the review so far! I am working on addressing all your feedback.\r\nI will mark this as a draft for now and rework my approach because currently this messes with large reorgs in some instances. I am working on a functional test for these scenarios which i might PR separately as none of the current tests caught this.\r\n\r\n@ariard Good point bringing up BIP157 requests but luckily we already handle them safely, see: https://github.com/bitcoin/bitcoin/blob/b69fd5eaa99f84b62a49d7c7f48d8cee1227592a/src/net_processing.cpp#L2437",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1099354920",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6435744532,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAF_masU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6435744532",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-14T16:13:00Z"
    },
    {
      "event": "subscribed",
      "id": 6435744536,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAF_masY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6435744536",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-14T16:13:00Z"
    },
    {
      "event": "convert_to_draft",
      "id": 6435746161,
      "node_id": "CTDE_lADOABII585Fu7RlzwAAAAF_mbFx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6435746161",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-14T16:13:16Z"
    },
    {
      "event": "labeled",
      "id": 6462340673,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAGBL35B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6462340673",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T11:23:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1107843661,
      "node_id": "IC_kwDOABII585CCFpN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1107843661",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-24T13:36:51Z",
      "updated_at": "2022-04-24T13:36:51Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1107843661",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6506234362,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGDzUH6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6506234362",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T11:33:46Z"
    },
    {
      "event": "commented",
      "id": 1110900017,
      "node_id": "IC_kwDOABII585CNv0x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1110900017",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T11:41:03Z",
      "updated_at": "2022-04-27T11:41:03Z",
      "author_association": "MEMBER",
      "body": "I updated this PR with the new approach (see commits and new PR description) and it’s now ready for review again. Most of the review comments did not apply anymore so i marked them as resolved.\r\n\r\nThe previous approach can be found on [this](https://github.com/dergoegge/bitcoin/tree/2022-03-header-fingerprinting-v1) branch.\r\nThe test for the reorg issue i [mentioned](https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1099354920) before can be found [here](https://github.com/dergoegge/bitcoin/commits/2022-04-large-reorg-test).",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1110900017",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "ready_for_review",
      "id": 6506279271,
      "node_id": "RFRE_lADOABII585Fu7RlzwAAAAGDzfFn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6506279271",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T11:41:10Z"
    },
    {
      "event": "unlabeled",
      "id": 6507124081,
      "node_id": "UNLE_lADOABII585Fu7RlzwAAAAGD2tVx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6507124081",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T13:39:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 960165091,
      "node_id": "PRR_kwDOABII5845OvTj",
      "url": null,
      "actor": null,
      "commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Nice find.\r\n\r\nAs an alternative approach, did you consider pruning stale tips from the block index once they're more than a certain age (eg a month)? Or perhaps just making them unavailable from outside validation if no peer has informed you about them for some period of time.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-960165091",
      "submitted_at": "2022-05-03T10:18:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "commented",
      "id": 1121305345,
      "node_id": "IC_kwDOABII585C1cMB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1121305345",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-09T16:16:39Z",
      "updated_at": "2022-05-09T16:16:39Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @jnewbery !\r\n\r\n> As an alternative approach, did you consider pruning stale tips from the block index once they're more than a certain age (eg a month)?\r\n\r\nI did and that would squash this class of fingerprinting once and for all but I decided not pursue this idea because we pass around `CBlockIndex` pointers in a lot of places and I was worried that we invalidate pointers by erasing them from the block index while some other component still holds a reference to them. It seems to me that the assumption \"nothing ever gets deleted from the block index\" is one of the reasons why we pass around `CBlockIndex` pointers so much and I did not want to mess with that assumption.\r\n\r\n> Or perhaps just making them unavailable from outside validation if no peer has informed you about them for some period of time.\r\n\r\nWill take a look into going more in this direction.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1121305345",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6574545723,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGH35s7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6574545723",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-09T16:16:40Z"
    },
    {
      "event": "subscribed",
      "id": 6574545736,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGH35tI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6574545736",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-09T16:16:40Z"
    },
    {
      "event": "labeled",
      "id": 6603551533,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAGJmjMt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6603551533",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-13T07:39:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6625006708,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGK4ZR0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6625006708",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T14:25:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6625182858,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGK5ESK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6625182858",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T14:44:59Z"
    },
    {
      "event": "commented",
      "id": 1128965795,
      "node_id": "IC_kwDOABII585DSqaj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1128965795",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T14:47:45Z",
      "updated_at": "2022-05-17T14:47:45Z",
      "author_association": "MEMBER",
      "body": "Rebased and addressed @jnewbery's review.\r\n\r\n* We now keep track of one chain tip set per network instead of one per peer\r\n* The chain tip set logic has moved to `validation.h/cpp`",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1128965795",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6625206278,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGK5KAG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6625206278",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T14:47:45Z"
    },
    {
      "event": "subscribed",
      "id": 6625206286,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGK5KAO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6625206286",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T14:47:45Z"
    },
    {
      "event": "reviewed",
      "id": 975638189,
      "node_id": "PRR_kwDOABII5846Jw6t",
      "url": null,
      "actor": null,
      "commit_id": "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-975638189",
      "submitted_at": "2022-05-17T15:01:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "unlabeled",
      "id": 6625944394,
      "node_id": "UNLE_lADOABII585Fu7RlzwAAAAGK7-NK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6625944394",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T16:21:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6625990139,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGK8JX7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6625990139",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T16:28:04Z"
    },
    {
      "event": "commented",
      "id": 1129080369,
      "node_id": "IC_kwDOABII585DTGYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1129080369",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T16:32:01Z",
      "updated_at": "2022-05-17T16:32:01Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @MarcoFalke! I took all your suggestions.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1129080369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6626016411,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGK8Pyb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6626016411",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T16:32:01Z"
    },
    {
      "event": "subscribed",
      "id": 6626016417,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGK8Pyh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6626016417",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T16:32:01Z"
    },
    {
      "event": "reviewed",
      "id": 976906677,
      "node_id": "PRR_kwDOABII5846Omm1",
      "url": null,
      "actor": null,
      "commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept and approach ACK. This is looking good!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-976906677",
      "submitted_at": "2022-05-18T14:17:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6641100517,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGL1ybl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6641100517",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T09:59:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6641171944,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGL2D3o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6641171944",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T10:09:13Z"
    },
    {
      "event": "commented",
      "id": 1131509058,
      "node_id": "IC_kwDOABII585DcXVC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1131509058",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T10:17:13Z",
      "updated_at": "2022-05-19T10:17:13Z",
      "author_association": "MEMBER",
      "body": "Thanks @jnewbery for the review and for pointing out to me that the same fingerprinting issue exists for blocktxn requests. I added an additional commit for that as well as one more location (receiving invs for blocks). \r\n\r\nI would encourage reviewers to have a look at all uses of  `LookupBlockIndex()` to see if there are more places that allow for this type of fingerprinting. Any use of `LookupBlockIndex()` that results in externally observable behavior changes should be amended.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1131509058",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6641226810,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGL2RQ6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6641226810",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T10:17:14Z"
    },
    {
      "event": "subscribed",
      "id": 6641226822,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGL2RRG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6641226822",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-19T10:17:14Z"
    },
    {
      "event": "labeled",
      "id": 6652555091,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAGMhe9T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6652555091",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-20T17:53:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6658711942,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGM4-GG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6658711942",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T08:06:02Z"
    },
    {
      "event": "unlabeled",
      "id": 6658850466,
      "node_id": "UNLE_lADOABII585Fu7RlzwAAAAGM5f6i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6658850466",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T08:23:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 981333790,
      "node_id": "PRR_kwDOABII5846ffce",
      "url": null,
      "actor": null,
      "commit_id": "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK faf80f4f9cc5f05c877eaec661b9729792a14471",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-981333790",
      "submitted_at": "2022-05-23T09:32:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 982021779,
      "node_id": "PRR_kwDOABII5846iHaT",
      "url": null,
      "actor": null,
      "commit_id": "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "If I understand this correctly, the current approach is a cache `m_chain_tip_sets` which gets cleared each time the node stops and restarts.\r\nSince I would assume that many nodes would restart at least once in the timespan where enough alternative tips for fingerprinting exist, isn't this effectively a limitation similar to the one-month one in `BlockRequestAllowed` but based on uptime instead of a fixed period, with the actual tip set database per network only having a real effect for extremely stable peers that have been running non-stop for many months or years?\r\n\r\nIIRC, an earlier version of this PR basically enforced the 1-month limit for non-best-chain blocks of `BlockRequestAllowed` also for `HEADERS`etc. - if that approach had a problem with large reorgs, wouldn't the same problem also apply to peers that happened to restart recently and lost their tips database (and therefore sometimes for reorgs much smaller than one month if a restart happened more recently)?",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-982021779",
      "submitted_at": "2022-05-23T16:07:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "commented",
      "id": 1137582437,
      "node_id": "IC_kwDOABII585DziFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1137582437",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-25T17:15:44Z",
      "updated_at": "2022-05-25T17:15:44Z",
      "author_association": "MEMBER",
      "body": "@mzumsande The problem with the one-month limit was that it would reject headers that connect to an old fork chain that is longer than 2000 (`MAX_HEADERS_RESULTS`) blocks.\r\nExample:\r\n![block-index(2)](https://user-images.githubusercontent.com/8077169/170252908-772c7ae3-137d-49f6-a2de-7a51920ca3e6.png)\r\nWith the \"one month limit\" approach, if block x is older than one month we reject any headers that build on top of x and re-request the 2000 headers that connect to c, so we can't reorg to the chain of block x if needed.\r\nWith the tip set approach we would also reject and re-request but when the re-requested headers arrive we add the tip of those to the tip set for that network, so further headers that connect to that tip would be not be rejected.\r\n\r\nIf a node restarts and then receives headers that connect to an old fork it would re-download the entire fork and update the tip set accordingly to allow for forks of arbitrary length.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1137582437",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6679657262,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGOI3su",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6679657262",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-25T17:15:44Z"
    },
    {
      "event": "subscribed",
      "id": 6679657269,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGOI3s1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6679657269",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-25T17:15:44Z"
    },
    {
      "event": "commented",
      "id": 1138377193,
      "node_id": "IC_kwDOABII585D2kHp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138377193",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T10:14:01Z",
      "updated_at": "2022-05-26T10:14:01Z",
      "author_association": "MEMBER",
      "body": "> The problem with the one-month limit was that it would reject headers that connect to an old fork chain that is longer than 2000 (`MAX_HEADERS_RESULTS`) blocks.\r\n\r\nThanks a lot for the explanation, that wasn't clear to me at all! Maybe also link this explanation in the OP so that it becomes clear why you chose the tip set approach over simpler alternatives (that wouldn't work with large reorgs).",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1138377193",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6702224335,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGPe9PP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6702224335",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-30T11:23:11Z"
    },
    {
      "event": "reviewed",
      "id": 989409348,
      "node_id": "PRR_kwDOABII5846-TBE",
      "url": null,
      "actor": null,
      "commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 0f816ff2e60c5e440543ebb738db29bd285facb0",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-989409348",
      "submitted_at": "2022-05-30T14:12:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 990087625,
      "node_id": "PRR_kwDOABII5847A4nJ",
      "url": null,
      "actor": null,
      "commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-990087625",
      "submitted_at": "2022-05-31T08:57:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 990551171,
      "node_id": "PRR_kwDOABII5847CpyD",
      "url": null,
      "actor": null,
      "commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK (and nice find!)\r\n\r\nI think we can make this better by going back to using the `BlockRequestAllowed` criteria, and coupling that with global and per-peer checks to see if a block header should be observable, which would eliminate the need for per-network maps that get reset when nodes go offline.  \r\n\r\nAlso, I'm not entirely sure the idea of per-network visibility into our block index makes sense, as it opens the door to fingerprinting over time or being able to test whether a node has been online for a while or not.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-990551171",
      "submitted_at": "2022-05-31T15:27:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 994936772,
      "node_id": "PRR_kwDOABII5847TYfE",
      "url": null,
      "actor": null,
      "commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-994936772",
      "submitted_at": "2022-06-03T14:30:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "labeled",
      "id": 6769215585,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAGTeghh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6769215585",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-08T12:05:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6786220307,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGUfYET",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6786220307",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-10T13:56:52Z"
    },
    {
      "event": "commented",
      "id": 1152399468,
      "node_id": "IC_kwDOABII585EsDhs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1152399468",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-10T14:05:50Z",
      "updated_at": "2022-06-10T14:05:50Z",
      "author_association": "MEMBER",
      "body": "@sdaftuar Thanks for the thorough review and for challenging the approach! I rebased and addressed all your comments.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1152399468",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6786320796,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGUfwmc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6786320796",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-10T14:05:50Z"
    },
    {
      "event": "subscribed",
      "id": 6786320802,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGUfwmi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6786320802",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-10T14:05:50Z"
    },
    {
      "event": "reviewed",
      "id": 1002864858,
      "node_id": "PRR_kwDOABII5847xoDa",
      "url": null,
      "actor": null,
      "commit_id": "4696d9f2027b783e0a5e10d5c761296d075913eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1002864858",
      "submitted_at": "2022-06-10T14:16:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6786509533,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGUgerd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6786509533",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-10T14:30:41Z"
    },
    {
      "event": "unlabeled",
      "id": 6786800564,
      "node_id": "UNLE_lADOABII585Fu7RlzwAAAAGUhlu0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6786800564",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-10T15:09:47Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1005707824,
      "node_id": "PRR_kwDOABII58478eIw",
      "url": null,
      "actor": null,
      "commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1005707824",
      "submitted_at": "2022-06-14T12:20:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1004790235,
      "node_id": "PRR_kwDOABII58474-Hb",
      "url": null,
      "actor": null,
      "commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1004790235",
      "submitted_at": "2022-06-14T18:48:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "commented",
      "id": 1156510945,
      "node_id": "IC_kwDOABII585E7vTh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1156510945",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-15T13:58:33Z",
      "updated_at": "2022-06-15T13:58:33Z",
      "author_association": "MEMBER",
      "body": "Benchmarked this at the request of @sdaftuar; looks like there's no degradation in performance.\r\n\r\n![ibd local range 667200 697200](https://user-images.githubusercontent.com/73197/173845561-ab8350b5-ed48-4614-abd1-bdbd1f671162.png)\r\n\r\n\r\n### commands index\r\n|          bench name           |                                                                                                     command                                                                                                      |\r\n|-------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| ibd.local.range.667200.697200 | `bitcoind -dbcache=10000 -debug=coindb -debug=bench -listen=0 -connect=0 -addnode=127.0.0.1:8888 -prune=9999999 -printtoconsole=0 -assumevalid=000000000000000000176c192f42ad13ab159fdb20198b87e7ba3c001e47b876` |\r\n\r\n\r\n### #24571 vs. $mergebase (absolute)\r\n|                  bench name                   |  x  |          #24571           |        $mergebase         |\r\n|-----------------------------------------------|----:|---------------------------|---------------------------|\r\n| ibd.local.range.667200.697200.total_secs      |   2 | 4929.4609 (± 1.3847)      | 4953.3385 (± 5.9733)      |\r\n| ibd.local.range.667200.697200.peak_rss_KiB    |   2 | 4808580.0000 (± 780.0000) | 4809936.0000 (± 728.0000) |\r\n| ibd.local.range.667200.697200.cpu_kernel_secs |   2 | 234.0400 (± 0.3800)       | 235.5450 (± 0.2550)       |\r\n| ibd.local.range.667200.697200.cpu_user_secs   |   2 | 28716.0650 (± 1.6650)     | 28770.5150 (± 0.4050)     |\r\n\r\n\r\n### #24571 vs. $mergebase (relative)\r\n|                  bench name                   |  x  | #24571 | $mergebase |\r\n|-----------------------------------------------|----:|-------:|-----------:|\r\n| ibd.local.range.667200.697200.total_secs      |   2 |      1 |      1.005 |\r\n| ibd.local.range.667200.697200.peak_rss_KiB    |   2 |      1 |      1.000 |\r\n| ibd.local.range.667200.697200.cpu_kernel_secs |   2 |      1 |      1.006 |\r\n| ibd.local.range.667200.697200.cpu_user_secs   |   2 |      1 |      1.002 |\r\n\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1156510945",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6813285665,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGWGn0h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6813285665",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-15T13:58:33Z"
    },
    {
      "event": "subscribed",
      "id": 6813285676,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGWGn0s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6813285676",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-15T13:58:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6845672796,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGYCK1c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6845672796",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T09:19:42Z"
    },
    {
      "event": "commented",
      "id": 1161495256,
      "node_id": "IC_kwDOABII585FOwLY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1161495256",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T09:27:13Z",
      "updated_at": "2022-06-21T09:27:13Z",
      "author_association": "MEMBER",
      "body": "Thanks @jnewbery and @sdaftuar for the reviews and thanks @jamesob for the benchmark! ",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1161495256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 6845729707,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGYCYur",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6845729707",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T09:27:14Z"
    },
    {
      "event": "subscribed",
      "id": 6845729715,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGYCYuz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6845729715",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T09:27:14Z"
    },
    {
      "event": "mentioned",
      "id": 6845729728,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGYCYvA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6845729728",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T09:27:14Z"
    },
    {
      "event": "subscribed",
      "id": 6845729785,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGYCYv5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6845729785",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T09:27:14Z"
    },
    {
      "event": "mentioned",
      "id": 6845729803,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGYCYwL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6845729803",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T09:27:15Z"
    },
    {
      "event": "subscribed",
      "id": 6845729811,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGYCYwT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6845729811",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-21T09:27:15Z"
    },
    {
      "event": "commented",
      "id": 1164348941,
      "node_id": "IC_kwDOABII585FZo4N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1164348941",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-23T12:31:46Z",
      "updated_at": "2022-06-23T12:31:46Z",
      "author_association": "MEMBER",
      "body": "I've manually tested that a localhost, testnet node on 772ee2ccbfe4c57b12d4bdd1187e295a64ee2b95 sends a `getheaders` for all fake headers building on top of a testnet stale block sent to it via a `headers` message. Running the same manual test on `master` reveals which stale blocks the node knows. \r\n\r\nI've not tested this for compact blocks (covered in functional tests) or block invs (not covered). Also not tested the `PeerManagerImpl::m_chain_tips_sets` per network logic (not covered).",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1164348941",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "labeled",
      "id": 6884276321,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAGaVbhh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6884276321",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-27T11:01:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6886156400,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGacmhw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6886156400",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-27T15:03:06Z"
    },
    {
      "event": "unlabeled",
      "id": 6886264411,
      "node_id": "UNLE_lADOABII585Fu7RlzwAAAAGadA5b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6886264411",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-27T15:16:09Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1022421575,
      "node_id": "PRR_kwDOABII58488OpH",
      "url": null,
      "actor": null,
      "commit_id": "fbf449731005f5b1c5934ec6343fd305ba427699",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1022421575",
      "submitted_at": "2022-06-28T21:14:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6900157138,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGbSArS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6900157138",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-29T08:14:18Z"
    },
    {
      "event": "labeled",
      "id": 6930130875,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAGdEWe7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6930130875",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-04T21:07:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6935926003,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGdadTz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6935926003",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T16:34:52Z"
    },
    {
      "event": "unlabeled",
      "id": 6936426146,
      "node_id": "UNLE_lADOABII585Fu7RlzwAAAAGdcXai",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6936426146",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-05T18:02:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 7018642040,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAGiV_p4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7018642040",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T08:38:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1188771060,
      "node_id": "IC_kwDOABII585G2zT0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1188771060",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T08:42:46Z",
      "updated_at": "2022-07-19T08:42:46Z",
      "author_association": "MEMBER",
      "body": "> Also not tested the `PeerManagerImpl::m_chain_tips_sets` per network logic (not covered).\r\n\r\nIIRC @dergoegge you've mentioned offline that we should be possible to test this (I don't recall exactly how though). Do you think it's worth adding a unit or functional test for this? ",
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1188771060",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 7018675319,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGiWHx3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7018675319",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T08:42:46Z"
    },
    {
      "event": "subscribed",
      "id": 7018675325,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGiWHx9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7018675325",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T08:42:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7021509785,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGig7yZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7021509785",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T14:57:05Z"
    },
    {
      "event": "commented",
      "id": 1189172884,
      "node_id": "IC_kwDOABII585G4VaU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1189172884",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T15:07:58Z",
      "updated_at": "2022-07-19T15:07:58Z",
      "author_association": "MEMBER",
      "body": "Rebased.\r\n\r\n@0xB10C Thanks for the reminder! Yes, we could (and probably should) test that a header received on one network is only visible (via the fingerprinting technique) on that same network but not on others. We can simulate Tor connections in the functional tests using the `-bind=...=onion` option (the `p2p_getaddr_caching.py` test also does this). I actually think that the functional test I have here currently could be improved to better cover the use of `m_chain_tips_sets` in general (gonna push an update for that this week).",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1189172884",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 7021608362,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAGihT2q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7021608362",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T15:07:59Z"
    },
    {
      "event": "subscribed",
      "id": 7021608375,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAGihT23",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7021608375",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T15:07:59Z"
    },
    {
      "event": "unlabeled",
      "id": 7022492744,
      "node_id": "UNLE_lADOABII585Fu7RlzwAAAAGikrxI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7022492744",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-19T17:04:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7074486965,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAGlrBq1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7074486965",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T16:28:42Z"
    },
    {
      "event": "commented",
      "id": 1196984239,
      "node_id": "IC_kwDOABII585HWIev",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1196984239",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T16:31:43Z",
      "updated_at": "2022-07-27T16:31:43Z",
      "author_association": "MEMBER",
      "body": "Updated the tests. They now better cover the use of the chain tip sets and simulate an onion connection using `-bind=...=onion`.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1196984239",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "reviewed",
      "id": 1089696217,
      "node_id": "PRR_kwDOABII585A83HZ",
      "url": null,
      "actor": null,
      "commit_id": "a424f96cd90c2a23d752c7d9d02eeffd87fea4b5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1089696217",
      "submitted_at": "2022-08-30T06:25:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1089703710,
      "node_id": "PRR_kwDOABII585A848e",
      "url": null,
      "actor": null,
      "commit_id": "a424f96cd90c2a23d752c7d9d02eeffd87fea4b5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1089703710",
      "submitted_at": "2022-08-30T06:33:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1089708513,
      "node_id": "PRR_kwDOABII585A86Hh",
      "url": null,
      "actor": null,
      "commit_id": "4af7fc8be10c3ba135d7d63be0378eec461f552a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1089708513",
      "submitted_at": "2022-08-30T06:38:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1089713925,
      "node_id": "PRR_kwDOABII585A87cF",
      "url": null,
      "actor": null,
      "commit_id": "4af7fc8be10c3ba135d7d63be0378eec461f552a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1089713925",
      "submitted_at": "2022-08-30T06:43:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1089720302,
      "node_id": "PRR_kwDOABII585A88_u",
      "url": null,
      "actor": null,
      "commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1089720302",
      "submitted_at": "2022-08-30T06:49:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1089724955,
      "node_id": "PRR_kwDOABII585A8-Ib",
      "url": null,
      "actor": null,
      "commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1089724955",
      "submitted_at": "2022-08-30T06:53:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1089749648,
      "node_id": "PRR_kwDOABII585A9EKQ",
      "url": null,
      "actor": null,
      "commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1089749648",
      "submitted_at": "2022-08-30T07:13:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1089983612,
      "node_id": "PRR_kwDOABII585A99R8",
      "url": null,
      "actor": null,
      "commit_id": "a89e7e690f48aa133395406a1c289f2316b45191",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1089983612",
      "submitted_at": "2022-08-30T09:36:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "reviewed",
      "id": 1090059219,
      "node_id": "PRR_kwDOABII585A-PvT",
      "url": null,
      "actor": null,
      "commit_id": "88615157f8eca50ba51b17a9abfb60a420dd1b52",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1090059219",
      "submitted_at": "2022-08-30T10:26:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "labeled",
      "id": 7289250895,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAGyeSRP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7289250895",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-30T16:35:30Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZiZjE5MjEzMDAxZjMwZWUxNWE0MWM4ZjkyM2FiNGYxMjQ3NTg1MDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbf19213001f30ee15a41c8f923ab4f124758502",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fbf19213001f30ee15a41c8f923ab4f124758502",
      "tree": {
        "sha": "f191bbcc114bd26b64fdfc48664f313401df1939",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f191bbcc114bd26b64fdfc48664f313401df1939"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc44d1796e4df5824423d7d13de3082fe204db7d",
          "sha": "fc44d1796e4df5824423d7d13de3082fe204db7d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fc44d1796e4df5824423d7d13de3082fe204db7d"
        }
      ],
      "message": "[net] Create GetUniqueNetworkID helper\n\nThis commit extracts the logic from the addr cache id generation into\nits own function (GetUniqueNetworkID).",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-09-12T09:55:50Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-05-17T12:28:23Z"
      },
      "sha": "fbf19213001f30ee15a41c8f923ab4f124758502"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7370411410,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAG3T42S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7370411410",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T19:14:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7370454287,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAG3UDUP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7370454287",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T19:20:53Z"
    },
    {
      "event": "commented",
      "id": 1244214685,
      "node_id": "IC_kwDOABII585KKTWd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1244214685",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T19:21:00Z",
      "updated_at": "2022-09-12T19:21:00Z",
      "author_association": "MEMBER",
      "body": "Rebased.\r\n\r\n@naumenkogs Thanks for the review! I have addressed some of your comments and will get to the others as soon as I can.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1244214685",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 7370455102,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAG3UDg-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7370455102",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T19:21:00Z"
    },
    {
      "event": "subscribed",
      "id": 7370455107,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAG3UDhD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7370455107",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T19:21:00Z"
    },
    {
      "event": "unlabeled",
      "id": 7371183620,
      "node_id": "UNLE_lADOABII585Fu7RlzwAAAAG3W1YE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7371183620",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-12T21:20:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2ZjE5YmRhYjc4YzA5YTEyNGIxNWUyZDRhNzI0MzlmMTMyODE5OTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86f19bdab78c09a124b15e2d4a72439f13281999",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/86f19bdab78c09a124b15e2d4a72439f13281999",
      "tree": {
        "sha": "195861554d06ac8daf98cb2c9a989d34043efa76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/195861554d06ac8daf98cb2c9a989d34043efa76"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbf19213001f30ee15a41c8f923ab4f124758502",
          "sha": "fbf19213001f30ee15a41c8f923ab4f124758502",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fbf19213001f30ee15a41c8f923ab4f124758502"
        }
      ],
      "message": "[net processing] Keep track of seen chain tips per network\n\nThis commit introduces the `PeerManagerImpl::m_chain_tip_sets` map which\nkeeps track of seen chain tips per network. No DoS risk is introduced by\nkeeping these sets of chain tips since each set in the map will have at\nmost as many entries as there are chain tips in our global index.",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-09-14T17:25:42Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-04-19T11:10:58Z"
      },
      "sha": "86f19bdab78c09a124b15e2d4a72439f13281999"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIxMDU2OWU4YmJjNjZhMGY5YzEwYTYzOTU4NDMzODhiMDRjNDg5ZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b10569e8bbc66a0f9c10a6395843388b04c489de",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b10569e8bbc66a0f9c10a6395843388b04c489de",
      "tree": {
        "sha": "970c4e520450a5f3bdf04a493a1e5d1dcdfe1541",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/970c4e520450a5f3bdf04a493a1e5d1dcdfe1541"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86f19bdab78c09a124b15e2d4a72439f13281999",
          "sha": "86f19bdab78c09a124b15e2d4a72439f13281999",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/86f19bdab78c09a124b15e2d4a72439f13281999"
        }
      ],
      "message": "[net processing] Prevent fingerprinting when receiving headers\n\nThe block index might contain stale blocks that are not part of the main\nchain. If a malicious peer is able to probe a node's block index for\ncertain stale blocks then it can use this information to fingerprint the\nnode.\n\nBefore this commit such an attack is possible due to the logic when\nreceiving headers. A malicous peer can probe for a stale block in a\nnode's index by sending a headers message in which the first header\nextends a stale chain and has invalid proof-of-work. Nodes behave\ndifferently when receiving such a headers message, depending on whether\nor not the stale block exists in its block index. If it exists, the node\nwill disconnect as the proof-of-work on the new header was invalid. If\nit does not exist, the node will send a getheaders message in an attempt\nto connect the two chains.\n\nIn this commit we prevent this attack by making use of the\n`PeerManagerImpl::m_chain_tip_sets` map which we introduced in the\nprevious commit. We only try to accept new headers if they connect to\nanything in our global index and they connect to our active chain or to\na chain that was previously sent to us by a peer on the same network. We\nsend a getheaders message should these conditions not be met.",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-09-14T17:25:42Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-04-19T07:26:30Z"
      },
      "sha": "b10569e8bbc66a0f9c10a6395843388b04c489de"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA2Y2M4YWUwNzdiNTJiMmM1OGM4ZWQ4NmVhNDA3ZWRiZGRlM2IyYTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06cc8ae077b52b2c58c8ed86ea407edbdde3b2a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/06cc8ae077b52b2c58c8ed86ea407edbdde3b2a7",
      "tree": {
        "sha": "094dab7b7598121106b88c4c57b062ad1659f229",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/094dab7b7598121106b88c4c57b062ad1659f229"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b10569e8bbc66a0f9c10a6395843388b04c489de",
          "sha": "b10569e8bbc66a0f9c10a6395843388b04c489de",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b10569e8bbc66a0f9c10a6395843388b04c489de"
        }
      ],
      "message": "[net processing] Prevent fingerprinting when receiving compact blocks\n\nThis commit prevents the same attack that was described in the previous\ncommit when receiving compact blocks.",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-09-14T17:25:42Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-04-26T15:40:17Z"
      },
      "sha": "06cc8ae077b52b2c58c8ed86ea407edbdde3b2a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU2ZWUyNzc0NzAwMzUyZTg1OTcxYzBjMDVjMWNjMmMwODkyZmVjNjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56ee2774700352e85971c0c05c1cc2c0892fec65",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/56ee2774700352e85971c0c05c1cc2c0892fec65",
      "tree": {
        "sha": "4b8f737c1309313a31f224ca0b77112d3fec9425",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b8f737c1309313a31f224ca0b77112d3fec9425"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06cc8ae077b52b2c58c8ed86ea407edbdde3b2a7",
          "sha": "06cc8ae077b52b2c58c8ed86ea407edbdde3b2a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/06cc8ae077b52b2c58c8ed86ea407edbdde3b2a7"
        }
      ],
      "message": "[net processing] Prevent fingerprinting when receiving block invs",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-09-14T17:25:42Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-05-18T17:12:28Z"
      },
      "sha": "56ee2774700352e85971c0c05c1cc2c0892fec65"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3MDAzNDIzMjc1OWQyY2Q4OGM1YmYyMWUwODg5NmVjMmI5ZGJlZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "tree": {
        "sha": "06e8b944d2e58362ffc50c98c1c3bdf8c921ec9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06e8b944d2e58362ffc50c98c1c3bdf8c921ec9f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56ee2774700352e85971c0c05c1cc2c0892fec65",
          "sha": "56ee2774700352e85971c0c05c1cc2c0892fec65",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/56ee2774700352e85971c0c05c1cc2c0892fec65"
        }
      ],
      "message": "[test] Extend header fingerprinting tests",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-09-14T17:25:42Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2022-03-15T16:14:59Z"
      },
      "sha": "d70034232759d2cd88c5bf21e08896ec2b9dbede"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7388050609,
      "node_id": "HRFPE_lADOABII585Fu7RlzwAAAAG4XLSx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7388050609",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-14T17:29:22Z"
    },
    {
      "event": "reviewed",
      "id": 1110495204,
      "node_id": "PRR_kwDOABII585CMM_k",
      "url": null,
      "actor": null,
      "commit_id": "fbf19213001f30ee15a41c8f923ab4f124758502",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1110495204",
      "submitted_at": "2022-09-16T10:47:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "commented",
      "id": 1342984034,
      "node_id": "IC_kwDOABII585QDE9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1342984034",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-08T16:29:45Z",
      "updated_at": "2022-12-08T16:29:45Z",
      "author_association": "MEMBER",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1342984034",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "labeled",
      "id": 7990812983,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAHcSiE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7990812983",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-08T16:29:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1324479813,
      "node_id": "PRR_kwDOABII585O8fVF",
      "url": null,
      "actor": null,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. I've tested this out on a [couple of reorg scenarios](https://github.com/stratospher/bitcoin/blob/be01796b74d0751498a604dc56c3eebfbe772126/test/functional/basic_p2p_fingerprint.py) in regtest. Liked how `test_header_leak_via_headers()` checks whether stale header leaks should happen or not.\r\n\r\nSummarising this PR in case it's useful to other reviewers  - if a node on 2 different networks have same stale block indices, it's highly possible that it's the same node (fingerprinting).\r\n*behaviour on master :*\r\n\r\n- node1 sends sequence of headers built on some stale block to node2.\r\n- if node2 knows stale block, node2 won't send GETHEADERS\r\n- if node2 doesn't know stale block, node2 sends GETHEADERS (of it’s active chain tip)\r\n- this behaviour difference can be used to identify the stale blocks a node has.\r\n\r\n*behaviour on PR:*\r\n\r\n- node1 sends sequence of headers built on some stale block to node2.\r\n- if node2 knows stale block, node2 sends GETHEADERS (of it’s active chain tip)\r\n- if node2 doesn't know stale block, node2 sends GETHEADERS  (of it’s active chain tip)\r\n- presence/absence of stale blocks can't be identified now.",
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#pullrequestreview-1324479813",
      "submitted_at": "2023-03-03T19:35:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
    },
    {
      "event": "commented",
      "id": 1475286226,
      "node_id": "IC_kwDOABII585X7xTS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1475286226",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-19T15:06:43Z",
      "updated_at": "2023-03-19T15:06:43Z",
      "author_association": "MEMBER",
      "body": "@stratospher Thank you for having a look at this! There is an alternative approach to the one in this PR that I have been meaning to implement and I forgot to put this PR in draft mode.\r\n\r\nWe made some changes to the headers sync logic (https://github.com/bitcoin/bitcoin/pull/25454), which causes us to now only have one `getheaders` request in flight for the same peer. If we start storing the locator that is sent in the `getheaders` message and only allow `headers` in response that connect to the locator, then the issue described in this PR is avoided as well. There are some edge cases around `headers` announcements which are received without sending a `getheaders` prior but otherwise this approach would be much less complex.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1475286226",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "mentioned",
      "id": 8788001035,
      "node_id": "MEE_lADOABII585Fu7RlzwAAAAILzkEL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8788001035",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-19T15:06:44Z"
    },
    {
      "event": "subscribed",
      "id": 8788001038,
      "node_id": "SE_lADOABII585Fu7RlzwAAAAILzkEO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8788001038",
      "actor": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-19T15:06:44Z"
    },
    {
      "event": "convert_to_draft",
      "id": 8788001177,
      "node_id": "CTDE_lADOABII585Fu7RlzwAAAAILzkGZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8788001177",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-19T15:06:50Z"
    },
    {
      "event": "commented",
      "id": 1568632278,
      "node_id": "IC_kwDOABII585df23W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1568632278",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T15:21:38Z",
      "updated_at": "2023-05-30T15:21:38Z",
      "author_association": "MEMBER",
      "body": "Closing for now, can be marked up for grabs.\r\n\r\nSomeone should look into implementing the alternative approach I have described here: https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1475286226.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#issuecomment-1568632278",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24571"
    },
    {
      "event": "closed",
      "id": 9379872365,
      "node_id": "CE_lADOABII585Fu7RlzwAAAAIvFX5t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9379872365",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T15:21:38Z"
    },
    {
      "event": "labeled",
      "id": 9379883237,
      "node_id": "LE_lADOABII585Fu7RlzwAAAAIvFajl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9379883237",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T15:22:31Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830484846",
      "pull_request_review_id": 915003480,
      "id": 830484846,
      "node_id": "PRRC_kwDOABII584xgDFu",
      "diff_hunk": "@@ -614,7 +614,7 @@ class PeerManagerImpl final : public PeerManager\n      * and in best equivalent proof of work) than the best header chain we know\n      * about and we fully-validated them at some point.\n      */\n-    bool BlockRequestAllowed(const CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool BlockRequestAllowed(const CBlockIndex* pindex, bool check_valid_scripts = true) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "3a112657530f09e62b96c2575cbb5284461606b3",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure this is a good var name. This specific PR has nothing to do with valid scripts for example.",
      "created_at": "2022-03-19T13:35:37Z",
      "updated_at": "2022-03-19T13:35:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830484846",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830484846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 617,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489678",
      "pull_request_review_id": 915007116,
      "id": 830489678,
      "node_id": "PRRC_kwDOABII584xgERO",
      "diff_hunk": "@@ -1451,12 +1451,12 @@ bool PeerManagerImpl::MaybePunishNodeForTx(NodeId nodeid, const TxValidationStat\n     return false;\n }\n \n-bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex)\n+bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, bool check_valid_scripts)\n {\n     AssertLockHeld(cs_main);\n     if (m_chainman.ActiveChain().Contains(pindex)) return true;\n-    return pindex->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != nullptr) &&\n-           (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() < STALE_RELAY_AGE_LIMIT) &&\n+    return (!check_valid_scripts || pindex->IsValid(BLOCK_VALID_SCRIPTS)) &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "3a112657530f09e62b96c2575cbb5284461606b3",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like a good refactor candidate, as these conditions are hard to follow and review.",
      "created_at": "2022-03-19T14:23:48Z",
      "updated_at": "2022-03-19T14:23:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830489678",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1458,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489913",
      "pull_request_review_id": 915007247,
      "id": 830489913,
      "node_id": "PRRC_kwDOABII584xgEU5",
      "diff_hunk": "@@ -2129,7 +2129,8 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n         //   don't connect before giving DoS points\n         // - Once a headers message is received that is valid and does connect,\n         //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock);\n+        if ((!prev_header_index || !BlockRequestAllowed(prev_header_index, false)) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "3a112657530f09e62b96c2575cbb5284461606b3",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here and below, we would benefit from explaining why it's fine to `getheaders` if we have a parent, but it is a stale block",
      "created_at": "2022-03-19T14:25:33Z",
      "updated_at": "2022-03-19T14:25:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r830489913",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/830489913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831128364",
      "pull_request_review_id": 915772756,
      "id": 831128364,
      "node_id": "PRRC_kwDOABII584xigMs",
      "diff_hunk": "@@ -1451,12 +1451,12 @@ bool PeerManagerImpl::MaybePunishNodeForTx(NodeId nodeid, const TxValidationStat\n     return false;\n }\n \n-bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex)\n+bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, bool check_valid_scripts)\n {\n     AssertLockHeld(cs_main);\n     if (m_chainman.ActiveChain().Contains(pindex)) return true;\n-    return pindex->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != nullptr) &&\n-           (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() < STALE_RELAY_AGE_LIMIT) &&\n+    return (!check_valid_scripts || pindex->IsValid(BLOCK_VALID_SCRIPTS)) &&",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "3a112657530f09e62b96c2575cbb5284461606b3",
      "in_reply_to_id": 830489678,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, i added a refactor commit that also adds some comments.",
      "created_at": "2022-03-21T13:49:40Z",
      "updated_at": "2022-03-21T13:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r831128364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831128364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1458,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831130729",
      "pull_request_review_id": 915776369,
      "id": 831130729,
      "node_id": "PRRC_kwDOABII584xigxp",
      "diff_hunk": "@@ -2129,7 +2129,8 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n         //   don't connect before giving DoS points\n         // - Once a headers message is received that is valid and does connect,\n         //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock);\n+        if ((!prev_header_index || !BlockRequestAllowed(prev_header_index, false)) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "3a112657530f09e62b96c2575cbb5284461606b3",
      "in_reply_to_id": 830489913,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I will actually think about this some more because i am not sure if there are no side effects to requesting headers that we already have in our index.",
      "created_at": "2022-03-21T13:51:57Z",
      "updated_at": "2022-03-21T13:51:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r831130729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/831130729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818488",
      "pull_request_review_id": 933756078,
      "id": 844818488,
      "node_id": "PRRC_kwDOABII584yWug4",
      "diff_hunk": "@@ -614,7 +614,7 @@ class PeerManagerImpl final : public PeerManager\n      * and in best equivalent proof of work) than the best header chain we know\n      * about and we fully-validated them at some point.\n      */\n-    bool BlockRequestAllowed(const CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    bool BlockRequestAllowed(const CBlockIndex* pindex, bool allow_potentially_invalid_headers = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "in_reply_to_id": null,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    bool BlockRequestAllowed(const CBlockIndex* pindex, const bool allow_potentially_invalid_headers = false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n```",
      "created_at": "2022-04-07T07:41:07Z",
      "updated_at": "2022-04-07T07:55:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844818488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 617,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818766",
      "pull_request_review_id": 933756078,
      "id": 844818766,
      "node_id": "PRRC_kwDOABII584yWulO",
      "diff_hunk": "@@ -1451,13 +1451,38 @@ bool PeerManagerImpl::MaybePunishNodeForTx(NodeId nodeid, const TxValidationStat\n     return false;\n }\n \n-bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex)\n+bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, bool allow_potentially_invalid_headers)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "in_reply_to_id": null,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\nbool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, const bool allow_potentially_invalid_headers)\r\n```",
      "created_at": "2022-04-07T07:41:26Z",
      "updated_at": "2022-04-07T07:55:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844818766",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844818766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844821753",
      "pull_request_review_id": 933756078,
      "id": 844821753,
      "node_id": "PRRC_kwDOABII584yWvT5",
      "diff_hunk": "@@ -1451,13 +1451,38 @@ bool PeerManagerImpl::MaybePunishNodeForTx(NodeId nodeid, const TxValidationStat\n     return false;\n }\n \n-bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex)\n+bool PeerManagerImpl::BlockRequestAllowed(const CBlockIndex* pindex, bool allow_potentially_invalid_headers)\n {\n     AssertLockHeld(cs_main);\n-    if (m_chainman.ActiveChain().Contains(pindex)) return true;\n-    return pindex->IsValid(BLOCK_VALID_SCRIPTS) && (pindexBestHeader != nullptr) &&\n-           (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() < STALE_RELAY_AGE_LIMIT) &&\n-           (GetBlockProofEquivalentTime(*pindexBestHeader, *pindex, *pindexBestHeader, m_chainparams.GetConsensus()) < STALE_RELAY_AGE_LIMIT);\n+\n+    if (!m_chainman.ActiveChain().Contains(pindex)) {\n+        // This is a stale block and we restrict access to them under certain\n+        // conditions to avoid leaking a fingerprint.\n+\n+        if (!allow_potentially_invalid_headers) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "in_reply_to_id": null,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "As mentioned in the PR review club, the motivation for introducing `allow_potentially_invalid_headers` isn't clear from the PR or commit.",
      "created_at": "2022-04-07T07:44:48Z",
      "updated_at": "2022-04-07T10:28:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844821753",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844821753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1462,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844974612",
      "pull_request_review_id": 934838825,
      "id": 844974612,
      "node_id": "PRRC_kwDOABII584yXUoU",
      "diff_hunk": "@@ -2129,7 +2154,8 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n         //   don't connect before giving DoS points\n         // - Once a headers message is received that is valid and does connect,\n         //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock);\n+        if ((!prev_header_index || !BlockRequestAllowed(prev_header_index, /* allow_potentially_invalid_headers= */ true)) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "in_reply_to_id": null,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        if ((!prev_header_index || !BlockRequestAllowed(prev_header_index, /*allow_potentially_invalid_headers=*/true)) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\r\n```\r\nAnywhere you are adding / touching named args, please use the [style from the developer docs](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-c-named-arguments).",
      "created_at": "2022-04-07T10:27:10Z",
      "updated_at": "2022-04-07T10:27:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r844974612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844974612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849710370",
      "pull_request_review_id": 941295811,
      "id": 849710370,
      "node_id": "PRRC_kwDOABII584ypY0i",
      "diff_hunk": "@@ -3505,7 +3531,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock);\n+        if (!prev_header_index || !BlockRequestAllowed(prev_header_index, /* allow_potentially_invalid_headers= */ true)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here and above you might add a `LogPrint` notifying a non-allowed header has been denied of request, like the others callsites of `BlockRequestAllowed` (\"ignoring request from peer=%i for old blocks that isn't in the main chain\"). Nice to monitor eventual fingerprinting attacks attempts or other anomalies.",
      "created_at": "2022-04-13T17:06:00Z",
      "updated_at": "2022-04-13T17:07:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r849710370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/849710370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3535,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859689379",
      "pull_request_review_id": 954749411,
      "id": 859689379,
      "node_id": "PRRC_kwDOABII584zPdGj",
      "diff_hunk": "@@ -3505,7 +3531,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock);\n+        if (!prev_header_index || !BlockRequestAllowed(prev_header_index, /* allow_potentially_invalid_headers= */ true)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4e4150671da770f7d2756ec7c1d199ff8d3ef4ca",
      "in_reply_to_id": 849710370,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "With the new approach the log message reflects whether the previous block existed or if the peer was not allowed to know about it (potential fingerprint).",
      "created_at": "2022-04-27T11:37:33Z",
      "updated_at": "2022-04-27T11:37:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r859689379",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/859689379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3535,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863637321",
      "pull_request_review_id": 960165091,
      "id": 863637321,
      "node_id": "PRRC_kwDOABII584zeg9J",
      "diff_hunk": "@@ -640,6 +652,9 @@ class PeerManagerImpl final : public PeerManager\n     void UpdateBlockAvailability(NodeId nodeid, const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     bool CanDirectFetch() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    void UpdateKnownChainTips(NodeId node_id, const CBlockIndex& new_index);\n+    bool IsIndexOnKnownChain(NodeId node_id, const CBlockIndex& index);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This function could be introduced in commit 0fdd0eb66a85189f2c32c33defb4322fd2a914dd (*[net processing] Prevent fingerprinting when receiving header*), rather than the previous commit.\r\n",
      "created_at": "2022-05-03T10:09:32Z",
      "updated_at": "2022-05-03T10:18:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863637321",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863637321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 656,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638047",
      "pull_request_review_id": 960165091,
      "id": 863638047,
      "node_id": "PRRC_kwDOABII584zehIf",
      "diff_hunk": "@@ -2158,34 +2221,36 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        if (!prev_header_index || !IsIndexOnKnownChain(pfrom.GetId(), *prev_header_index)) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n-            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n                      headers[0].GetHash().ToString(),\n+                     prev_header_index ? \"we should not leak the existence of the previous block\" : \"missing prev block\",\n                      headers[0].hashPrevBlock.ToString(),\n                      m_chainman.m_best_header->nHeight,\n                      pfrom.GetId(), nodestate->nUnconnectingHeaders);\n-            // Set hashLastUnknownBlock for this peer, so that if we\n-            // eventually get the headers - even from a different peer -\n-            // we can use this peer to download.\n-            UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n \n-            if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n-                Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+            if (nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+                nodestate->nUnconnectingHeaders++;\n+\n+                // Set hashLastUnknownBlock for this peer, so that if we\n+                // eventually get the headers - even from a different peer -\n+                // we can use this peer to download.\n+                UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n+\n+                if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n+                    Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+                }\n+            } else {\n+                BlockValidationState state;\n+                state.Invalid(BlockValidationResult::BLOCK_MISSING_PREV, \"prev-blk-not-found\");",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems wrong to set a validation state in net_processing - these should be set in validation and acted on by the client. I think here you could just call `Misbehaving()` directly.",
      "created_at": "2022-05-03T10:10:45Z",
      "updated_at": "2022-05-03T10:18:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863638047",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638631",
      "pull_request_review_id": 960165091,
      "id": 863638631,
      "node_id": "PRRC_kwDOABII584zehRn",
      "diff_hunk": "@@ -1068,6 +1083,54 @@ void PeerManagerImpl::UpdateBlockAvailability(NodeId nodeid, const uint256 &hash\n     }\n }\n \n+void PeerManagerImpl::UpdateKnownChainTips(NodeId node_id, const CBlockIndex& new_index)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Did you look at implementing this logic in validation? Carrying out logic on chain tips and ancestors seems like a job for validation rather than net_processing.",
      "created_at": "2022-05-03T10:11:43Z",
      "updated_at": "2022-05-03T10:18:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863638631",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863638631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863639865",
      "pull_request_review_id": 960165091,
      "id": 863639865,
      "node_id": "PRRC_kwDOABII584zehk5",
      "diff_hunk": "@@ -324,6 +324,18 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    struct CompareCBlockIndexRef {\n+        bool operator()(const CBlockIndex& a, const CBlockIndex& b) const { return &a < &b; }\n+    };\n+    /** Protects m_known_chain_tips */\n+    Mutex m_known_chain_tips_mutex;\n+    /**\n+     * Chain tips that this peer knows we have because they send them to us.\n+     * Limited to the number of chain tips in our global block index.\n+     */\n+    std::set<std::reference_wrapper<const CBlockIndex>, CompareCBlockIndexRef>",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would it be better to track chain tips per-network rather than per-peer? Is it a privacy leak if one peer on a network can determine that the node received a stale block header from a different peer on the same network?",
      "created_at": "2022-05-03T10:13:46Z",
      "updated_at": "2022-05-03T10:18:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r863639865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/863639865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868191984",
      "pull_request_review_id": 966448200,
      "id": 868191984,
      "node_id": "PRRC_kwDOABII584zv47w",
      "diff_hunk": "@@ -324,6 +324,18 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    struct CompareCBlockIndexRef {\n+        bool operator()(const CBlockIndex& a, const CBlockIndex& b) const { return &a < &b; }\n+    };\n+    /** Protects m_known_chain_tips */\n+    Mutex m_known_chain_tips_mutex;\n+    /**\n+     * Chain tips that this peer knows we have because they send them to us.\n+     * Limited to the number of chain tips in our global block index.\n+     */\n+    std::set<std::reference_wrapper<const CBlockIndex>, CompareCBlockIndexRef>",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "in_reply_to_id": 863639865,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You are right, per-network would be enough, no need to keep this around for every peer. That would probably also require less changes to the tests.",
      "created_at": "2022-05-09T16:20:06Z",
      "updated_at": "2022-05-09T16:20:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r868191984",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/868191984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874888665",
      "pull_request_review_id": 975578891,
      "id": 874888665,
      "node_id": "PRRC_kwDOABII5840Jb3Z",
      "diff_hunk": "@@ -1068,6 +1083,54 @@ void PeerManagerImpl::UpdateBlockAvailability(NodeId nodeid, const uint256 &hash\n     }\n }\n \n+void PeerManagerImpl::UpdateKnownChainTips(NodeId node_id, const CBlockIndex& new_index)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "in_reply_to_id": 863638631,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the suggestion, I moved this into validation",
      "created_at": "2022-05-17T14:26:35Z",
      "updated_at": "2022-05-17T14:26:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874888665",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874888665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1086,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874930208",
      "pull_request_review_id": 975638189,
      "id": 874930208,
      "node_id": "PRRC_kwDOABII5840JmAg",
      "diff_hunk": "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index || m_best_header == index) return true;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    if (m_best_header->GetAncestor(index->nHeight) == index) return true;\r\n```\r\n\r\nnit: Is this needed?",
      "created_at": "2022-05-17T14:57:53Z",
      "updated_at": "2022-05-17T15:01:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874930208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874930208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5234,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932201",
      "pull_request_review_id": 975638189,
      "id": 874932201,
      "node_id": "PRRC_kwDOABII5840Jmfp",
      "diff_hunk": "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index || m_best_header == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assume(m_blockman.LookupBlockIndex(tip_hash))};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        const CBlockIndex& tip_index{*Assert(m_blockman.LookupBlockIndex(tip_hash))};\r\n```\r\n\r\nOtherwise you might be running into UB in production.",
      "created_at": "2022-05-17T14:59:26Z",
      "updated_at": "2022-05-17T15:01:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874932201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932847",
      "pull_request_review_id": 975638189,
      "id": 874932847,
      "node_id": "PRRC_kwDOABII5840Jmpv",
      "diff_hunk": "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index || m_best_header == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assume(m_blockman.LookupBlockIndex(tip_hash))};\n+        return index == &tip_index || tip_index.GetAncestor(index->nHeight) == index;\n+    });\n+}\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* new_index{m_blockman.LookupBlockIndex(new_blockhash)};\n+    if (!new_index) return;\n+\n+    const auto& last_tip_it = std::find_if(chain_tips.cbegin(), chain_tips.cend(), [&new_index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assume(m_blockman.LookupBlockIndex(tip_hash))};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same",
      "created_at": "2022-05-17T14:59:54Z",
      "updated_at": "2022-05-17T15:01:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874932847",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874932847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5262,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874935034",
      "pull_request_review_id": 975638189,
      "id": 874935034,
      "node_id": "PRRC_kwDOABII5840JnL6",
      "diff_hunk": "@@ -2585,7 +2608,12 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        const PeerRef peer{Assume(GetPeerRef(node.GetId()))};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 112,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "7b847b85c292977e53f166da7eef8e5e84fa5061",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is peer unused?",
      "created_at": "2022-05-17T15:01:43Z",
      "updated_at": "2022-05-17T15:01:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r874935034",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/874935034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2612,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875660418",
      "pull_request_review_id": 976620068,
      "id": 875660418,
      "node_id": "PRRC_kwDOABII5840MYSC",
      "diff_hunk": "@@ -324,6 +324,18 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    struct CompareCBlockIndexRef {\n+        bool operator()(const CBlockIndex& a, const CBlockIndex& b) const { return &a < &b; }\n+    };\n+    /** Protects m_known_chain_tips */\n+    Mutex m_known_chain_tips_mutex;\n+    /**\n+     * Chain tips that this peer knows we have because they send them to us.\n+     * Limited to the number of chain tips in our global block index.\n+     */\n+    std::set<std::reference_wrapper<const CBlockIndex>, CompareCBlockIndexRef>",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "in_reply_to_id": 863639865,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does it mean that the attack will be still possible for a tor-only node with one bind=onion?",
      "created_at": "2022-05-18T09:11:33Z",
      "updated_at": "2022-05-18T09:11:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875660418",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875660418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875857841",
      "pull_request_review_id": 976906677,
      "id": 875857841,
      "node_id": "PRRC_kwDOABII5840NIex",
      "diff_hunk": "@@ -267,6 +267,15 @@ std::optional<CAddress> GetLocalAddrForPeer(CNode *pnode)\n     return std::nullopt;\n }\n \n+uint64_t GetUniqueNetworkID(const CConnman& connman, const CNode& node)\n+{\n+    auto local_socket_bytes = node.addrBind.GetAddrBytes();\n+    return connman.GetDeterministicRandomizer(RANDOMIZER_ID_UNIQUE_NETWORK_ID)",
      "path": "src/net.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(Doesn't necessarily need to be done in this PR)\r\n\r\n`GetDeterministicRandomizer()` doesn't need to be a member of `CConnman` since it's a stateless util function. It could be moved to src/random.cpp. Then, `GetUniqueNetworkID()` wouldn't need to take a `CConnman&` argument.",
      "created_at": "2022-05-18T12:54:39Z",
      "updated_at": "2022-05-18T14:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875857841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875857841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 271,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875872793",
      "pull_request_review_id": 976906677,
      "id": 875872793,
      "node_id": "PRRC_kwDOABII5840NMIZ",
      "diff_hunk": "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assert(m_blockman.LookupBlockIndex(tip_hash))};\n+        return tip_index.GetAncestor(index->nHeight) == index;\n+    });\n+}\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* new_index{m_blockman.LookupBlockIndex(new_blockhash)};\n+    if (!new_index) return;\n+\n+    const auto& last_tip_it = std::find_if(chain_tips.cbegin(), chain_tips.cend(), [&new_index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think performance is critical here, but it seems more efficient to pass over chain_tips once and do both the ancestor and descendant check on the same pass. Is there a reason you chose not to do that?",
      "created_at": "2022-05-18T13:06:31Z",
      "updated_at": "2022-05-18T14:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875872793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875872793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875874050",
      "pull_request_review_id": 976906677,
      "id": 875874050,
      "node_id": "PRRC_kwDOABII5840NMcC",
      "diff_hunk": "@@ -621,6 +621,17 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);\n+\n+    /** Get the chain tip set for pfrom's network. */\n+    std::set<uint256>& GetChainTipSetForPeer(CNode& pfrom) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe name this `GetChainTipSetForPeerNetwork()`?",
      "created_at": "2022-05-18T13:07:42Z",
      "updated_at": "2022-05-18T14:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875874050",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875874050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875878840",
      "pull_request_review_id": 976906677,
      "id": 875878840,
      "node_id": "PRRC_kwDOABII5840NNm4",
      "diff_hunk": "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps:\r\n\r\n```suggestion\r\n    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\r\n```\r\n\r\nsince `blockman` in the lambda is a local variable, not a member variable.",
      "created_at": "2022-05-18T13:11:55Z",
      "updated_at": "2022-05-18T14:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875878840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875878840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875944415",
      "pull_request_review_id": 976906677,
      "id": 875944415,
      "node_id": "PRRC_kwDOABII5840Ndnf",
      "diff_hunk": "@@ -2159,34 +2175,38 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        bool prev_block_on_known_chain = prev_header_index &&\n+                                         (m_chainman.IsBlockInMainOrBestChain(prev_header_index->GetBlockHash()) ||\n+                                          m_chainman.IsBlockInChainTipSet(prev_header_index->GetBlockHash(), GetChainTipSetForPeer(pfrom)));\n+        if (!prev_block_on_known_chain) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n-            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n                      headers[0].GetHash().ToString(),\n+                     prev_header_index ? \"we should not leak the existence of the previous block\" : \"missing prev block\",\n                      headers[0].hashPrevBlock.ToString(),\n                      m_chainman.m_best_header->nHeight,\n                      pfrom.GetId(), nodestate->nUnconnectingHeaders);\n-            // Set hashLastUnknownBlock for this peer, so that if we\n-            // eventually get the headers - even from a different peer -\n-            // we can use this peer to download.\n-            UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n \n-            if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n-                Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+            if (nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+                nodestate->nUnconnectingHeaders++;\n+\n+                // Set hashLastUnknownBlock for this peer, so that if we\n+                // eventually get the headers - even from a different peer -\n+                // we can use this peer to download.\n+                UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n+\n+                if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n+                    Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+                }\n+            } else {\n+                // Same as MaybePunishNodeForBlock for BlockValidationResult::BLOCK_MISSING_PREV\n+                Misbehaving(pfrom.GetId(), 10, \"invalid header received\");",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I understand that this is here to maintain existing behaviour. I think in a future PR we could remove this special casing and always handle this with the nUnconnectingHeaders method, even if nCount == MAX_BLOCKS_TO_ANNOUNCE",
      "created_at": "2022-05-18T14:07:02Z",
      "updated_at": "2022-05-18T14:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875944415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875944415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": 2207,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875955684",
      "pull_request_review_id": 976906677,
      "id": 875955684,
      "node_id": "PRRC_kwDOABII5840NgXk",
      "diff_hunk": "@@ -2159,34 +2175,38 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        bool prev_block_on_known_chain = prev_header_index &&\n+                                         (m_chainman.IsBlockInMainOrBestChain(prev_header_index->GetBlockHash()) ||\n+                                          m_chainman.IsBlockInChainTipSet(prev_header_index->GetBlockHash(), GetChainTipSetForPeer(pfrom)));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe this should be factored into its own function, instead of repeated twice.\r\n\r\nIn general, I think we should look at all calls to `LookupBlockIndex()` and check whether they result in externally observable behaviour changes, and consider changing those `LookupBlockIndex()` calls to use this function.",
      "created_at": "2022-05-18T14:16:29Z",
      "updated_at": "2022-05-18T14:18:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r875955684",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/875955684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": 2183,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867479",
      "pull_request_review_id": 978308207,
      "id": 876867479,
      "node_id": "PRRC_kwDOABII5840Q--X",
      "diff_hunk": "@@ -267,6 +267,15 @@ std::optional<CAddress> GetLocalAddrForPeer(CNode *pnode)\n     return std::nullopt;\n }\n \n+uint64_t GetUniqueNetworkID(const CConnman& connman, const CNode& node)\n+{\n+    auto local_socket_bytes = node.addrBind.GetAddrBytes();\n+    return connman.GetDeterministicRandomizer(RANDOMIZER_ID_UNIQUE_NETWORK_ID)",
      "path": "src/net.cpp",
      "position": 16,
      "original_position": 16,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": 875857841,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`GetDeterministicRandomizer()` does make use of `nSeed0` and `nSeed1` to construct the hasher but I think we could also just be using a `CSipHasher(0, 0)` here, since these IDs don't need to be unique per node. I left it as is to maintain current behavior.",
      "created_at": "2022-05-19T10:03:50Z",
      "updated_at": "2022-05-19T10:03:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876867479",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 271,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867902",
      "pull_request_review_id": 978308815,
      "id": 876867902,
      "node_id": "PRRC_kwDOABII5840Q_E-",
      "diff_hunk": "@@ -5224,3 +5224,60 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;\n+    if (ActiveChain().Contains(index)) return true;\n+\n+    return false;\n+}\n+\n+bool ChainstateManager::IsBlockInChainTipSet(const uint256& blockhash, const std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    // `index` is in the chain tip set if one the tips has `index` as an ancestor.\n+    return std::any_of(chain_tips.cbegin(), chain_tips.cend(), [&index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {\n+        const CBlockIndex& tip_index{*Assert(m_blockman.LookupBlockIndex(tip_hash))};\n+        return tip_index.GetAncestor(index->nHeight) == index;\n+    });\n+}\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* new_index{m_blockman.LookupBlockIndex(new_blockhash)};\n+    if (!new_index) return;\n+\n+    const auto& last_tip_it = std::find_if(chain_tips.cbegin(), chain_tips.cend(), [&new_index, &m_blockman = m_blockman](const uint256& tip_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": 875872793,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No reason, changed this to be done in one pass.",
      "created_at": "2022-05-19T10:04:18Z",
      "updated_at": "2022-05-19T10:04:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876867902",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876867902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876874036",
      "pull_request_review_id": 978316976,
      "id": 876874036,
      "node_id": "PRRC_kwDOABII5840RAk0",
      "diff_hunk": "@@ -2159,34 +2175,38 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        bool prev_block_on_known_chain = prev_header_index &&\n+                                         (m_chainman.IsBlockInMainOrBestChain(prev_header_index->GetBlockHash()) ||\n+                                          m_chainman.IsBlockInChainTipSet(prev_header_index->GetBlockHash(), GetChainTipSetForPeer(pfrom)));\n+        if (!prev_block_on_known_chain) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n-            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n                      headers[0].GetHash().ToString(),\n+                     prev_header_index ? \"we should not leak the existence of the previous block\" : \"missing prev block\",\n                      headers[0].hashPrevBlock.ToString(),\n                      m_chainman.m_best_header->nHeight,\n                      pfrom.GetId(), nodestate->nUnconnectingHeaders);\n-            // Set hashLastUnknownBlock for this peer, so that if we\n-            // eventually get the headers - even from a different peer -\n-            // we can use this peer to download.\n-            UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n \n-            if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n-                Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+            if (nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n+                nodestate->nUnconnectingHeaders++;\n+\n+                // Set hashLastUnknownBlock for this peer, so that if we\n+                // eventually get the headers - even from a different peer -\n+                // we can use this peer to download.\n+                UpdateBlockAvailability(pfrom.GetId(), headers.back().GetHash());\n+\n+                if (nodestate->nUnconnectingHeaders % MAX_UNCONNECTING_HEADERS == 0) {\n+                    Misbehaving(pfrom.GetId(), 20, strprintf(\"%d non-connecting headers\", nodestate->nUnconnectingHeaders));\n+                }\n+            } else {\n+                // Same as MaybePunishNodeForBlock for BlockValidationResult::BLOCK_MISSING_PREV\n+                Misbehaving(pfrom.GetId(), 10, \"invalid header received\");",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": 875944415,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed, but wanted to leave this for a future PR.",
      "created_at": "2022-05-19T10:10:41Z",
      "updated_at": "2022-05-19T10:10:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876874036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876874036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": 2207,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876875509",
      "pull_request_review_id": 978319008,
      "id": 876875509,
      "node_id": "PRRC_kwDOABII5840RA71",
      "diff_hunk": "@@ -2159,34 +2175,38 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        const CBlockIndex* prev_header_index = m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock);\n+        bool prev_block_on_known_chain = prev_header_index &&\n+                                         (m_chainman.IsBlockInMainOrBestChain(prev_header_index->GetBlockHash()) ||\n+                                          m_chainman.IsBlockInChainTipSet(prev_header_index->GetBlockHash(), GetChainTipSetForPeer(pfrom)));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "59a8a59bc4e5c6f8cd413cce5285a8661f5f092e",
      "in_reply_to_id": 875955684,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Put this into its own function `LookupBlockIndexForPeer` and replaced two more uses of `LookupBlockIndex()` that allowed for the same type of fingerprinting.",
      "created_at": "2022-05-19T10:12:20Z",
      "updated_at": "2022-05-19T10:12:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876875509",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876875509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": 2183,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876882602",
      "pull_request_review_id": 978329030,
      "id": 876882602,
      "node_id": "PRRC_kwDOABII5840RCqq",
      "diff_hunk": "@@ -324,6 +324,18 @@ struct Peer {\n     /** Work queue of items requested by this peer **/\n     std::deque<CInv> m_getdata_requests GUARDED_BY(m_getdata_requests_mutex);\n \n+    struct CompareCBlockIndexRef {\n+        bool operator()(const CBlockIndex& a, const CBlockIndex& b) const { return &a < &b; }\n+    };\n+    /** Protects m_known_chain_tips */\n+    Mutex m_known_chain_tips_mutex;\n+    /**\n+     * Chain tips that this peer knows we have because they send them to us.\n+     * Limited to the number of chain tips in our global block index.\n+     */\n+    std::set<std::reference_wrapper<const CBlockIndex>, CompareCBlockIndexRef>",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "2021f7c706fbd34f6dcc53398ed7de5b2a15ffc1",
      "in_reply_to_id": 863639865,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could you elaborate how you think the attack would be possible in that case?",
      "created_at": "2022-05-19T10:20:27Z",
      "updated_at": "2022-05-19T10:20:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r876882602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/876882602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879162372",
      "pull_request_review_id": 981333790,
      "id": 879162372,
      "node_id": "PRRC_kwDOABII5840ZvQE",
      "diff_hunk": "@@ -655,6 +655,26 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);\n+\n+    /** Get the chain tip set for pfrom's network. */\n+    std::set<uint256>& GetChainTipSetForPeerNetwork(const CNode& pfrom) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+     * Lookup a block index for a peer in a privacy preserving manner.\n+     *\n+     * The block index will only be returned if it exists in our global index\n+     * and if the peer is allowed to know about it.\n+     */\n+    const CBlockIndex* LookupBlockIndexForPeer(const CNode& pfrom, const uint256& hash)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    const CBlockIndex* LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\r\n```\r\n\r\npfrom is the old hungarian-style naming where p stood for \"pointer to\".\r\n\r\n(same for the other new functions)",
      "created_at": "2022-05-23T08:28:16Z",
      "updated_at": "2022-05-23T09:32:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879162372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879162372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 675,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219198",
      "pull_request_review_id": 981333790,
      "id": 879219198,
      "node_id": "PRRC_kwDOABII5840Z9H-",
      "diff_hunk": "@@ -3110,7 +3156,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n+                const bool fAlreadyHave = AlreadyHaveBlock(pfrom, inv.hash);\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 156,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This log can now be misleading if we receive a block INV for a block we already have, but the peer shouldn't know about, since it'll say \"new\".",
      "created_at": "2022-05-23T09:25:24Z",
      "updated_at": "2022-05-23T09:32:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879219198",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219198"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219764",
      "pull_request_review_id": 981333790,
      "id": 879219764,
      "node_id": "PRRC_kwDOABII5840Z9Q0",
      "diff_hunk": "@@ -1815,9 +1853,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n     return m_recent_rejects.contains(hash) || m_mempool.exists(gtxid);\n }\n \n-bool PeerManagerImpl::AlreadyHaveBlock(const uint256& block_hash)\n+bool PeerManagerImpl::AlreadyHaveBlock(const CNode& pfrom, const uint256& block_hash)\n {\n-    return m_chainman.m_blockman.LookupBlockIndex(block_hash) != nullptr;\n+    return LookupBlockIndexForPeer(pfrom, block_hash) != nullptr;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should we just get rid of this function and inline this single line in the only place that `AlreadyHaveBlock()` is called?",
      "created_at": "2022-05-23T09:25:56Z",
      "updated_at": "2022-05-23T09:32:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879219764",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879219764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879633236",
      "pull_request_review_id": 982021779,
      "id": 879633236,
      "node_id": "PRRC_kwDOABII5840biNU",
      "diff_hunk": "@@ -3305,7 +3305,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            const CBlockIndex* pindex{LookupBlockIndexForPeer(pfrom, req.blockhash)};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "da1240c742076e7ee9885849cbbef44f5714b00e",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How could one have used `BLOCKTXN` for fingerprinting considering that we'd not serve data for blocks with a height difference of <10 to our tip (`MAX_BLOCKTXN_DEPTH`) anyway?",
      "created_at": "2022-05-23T16:01:00Z",
      "updated_at": "2022-05-23T16:07:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r879633236",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/879633236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881526668",
      "pull_request_review_id": 984632823,
      "id": 881526668,
      "node_id": "PRRC_kwDOABII5840iweM",
      "diff_hunk": "@@ -3305,7 +3305,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            const CBlockIndex* pindex{LookupBlockIndexForPeer(pfrom, req.blockhash)};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "da1240c742076e7ee9885849cbbef44f5714b00e",
      "in_reply_to_id": 879633236,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good that you made me double check, because this can actually not be used for fingerprinting but for a different reason than the one you mentioned.\r\n\r\nIf the requested block is older than `MAX_BLOCKTXN_DEPTH` blocks, we treat it as a normal `getdata` request for that block see: https://github.com/bitcoin/bitcoin/blob/8c721fff3a007db613b22464b40fe7cd6b1ead80/src/net_processing.cpp#L3278-L3287\r\n\r\nSo *i thought* the fingerprint would be:\r\nIf the block exists in the nodes index, it will respond with `blocktxn` or `block` depending on the height.\r\nIf the block does not exist, it won't respond at all.\r\n\r\nHowever, when we process block requests (`ProcessGetBlockData()`) we check for non main chain requests using `BlockRequestAllowed()`, so `GETBLOCKTXN` can not be abused for fingerprinting.\r\nhttps://github.com/bitcoin/bitcoin/blob/8c721fff3a007db613b22464b40fe7cd6b1ead80/src/net_processing.cpp#L1933-L1936\r\n\r\nI will remove the commit.",
      "created_at": "2022-05-25T11:11:32Z",
      "updated_at": "2022-05-25T11:11:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r881526668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881526668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881597258",
      "pull_request_review_id": 984731553,
      "id": 881597258,
      "node_id": "PRRC_kwDOABII5840jBtK",
      "diff_hunk": "@@ -3305,7 +3305,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            const CBlockIndex* pindex{LookupBlockIndexForPeer(pfrom, req.blockhash)};",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "da1240c742076e7ee9885849cbbef44f5714b00e",
      "in_reply_to_id": 879633236,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@mzumsande and I discussed this yesterday and we came to the same conclusion - that this could be used to determine what stale blocks the peer has that are older than 10 blocks but less than 30 days old. That's not a fingerprint attack.\r\n\r\nI think that we can probably just remove the whole logic below \"If an older block is requested...\":\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/b4f686952a60bbadc7ed2250651d0d6af0959f4d/src/net_processing.cpp#L3278-L3289)\r\n\r\nand exit early if the block is deeper than 10 deep.\r\n\r\nThe rationale of using outbound bandwidth as DoS mitigation doesn't seem very good to me, and if we return early because the block is older than 10 deep, then we don't have an expensive disk read (we just look up the block index in the in-memory BlockMap and then return immediately). I think that can be done in a follow-up PR.",
      "created_at": "2022-05-25T12:34:01Z",
      "updated_at": "2022-05-25T12:34:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r881597258",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/881597258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724454",
      "pull_request_review_id": 989204898,
      "id": 884724454,
      "node_id": "PRRC_kwDOABII5840u9Lm",
      "diff_hunk": "@@ -3110,7 +3156,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n+                const bool fAlreadyHave = AlreadyHaveBlock(pfrom, inv.hash);\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 156,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "in_reply_to_id": 879219198,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed it to \"maybe new\", is that better?\r\n\r\nIn this location we are not able to tell from the result of `LookupBlockIndexForPeer` whether the index did not exist or if the peer should not know about it. I could add logging `LookupBlockIndexForPeer`, what do you think about that?",
      "created_at": "2022-05-30T11:26:22Z",
      "updated_at": "2022-05-30T11:26:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884724454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724915",
      "pull_request_review_id": 989205572,
      "id": 884724915,
      "node_id": "PRRC_kwDOABII5840u9Sz",
      "diff_hunk": "@@ -1815,9 +1853,9 @@ bool PeerManagerImpl::AlreadyHaveTx(const GenTxid& gtxid)\n     return m_recent_rejects.contains(hash) || m_mempool.exists(gtxid);\n }\n \n-bool PeerManagerImpl::AlreadyHaveBlock(const uint256& block_hash)\n+bool PeerManagerImpl::AlreadyHaveBlock(const CNode& pfrom, const uint256& block_hash)\n {\n-    return m_chainman.m_blockman.LookupBlockIndex(block_hash) != nullptr;\n+    return LookupBlockIndexForPeer(pfrom, block_hash) != nullptr;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "in_reply_to_id": 879219764,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Inlined the call to `LookupBlockIndexForPeer`.",
      "created_at": "2022-05-30T11:26:58Z",
      "updated_at": "2022-05-30T11:26:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884724915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884724915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884870667",
      "pull_request_review_id": 989409348,
      "id": 884870667,
      "node_id": "PRRC_kwDOABII5840vg4L",
      "diff_hunk": "@@ -3110,8 +3151,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n-                LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n+                const bool fAlreadyHave = LookupBlockIndexForPeer(pfrom, inv.hash) != nullptr;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 156,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                const bool fAlreadyHave{LookupBlockIndexForPeer(pfrom, inv.hash) != nullpt};\r\n```",
      "created_at": "2022-05-30T14:10:15Z",
      "updated_at": "2022-05-30T14:12:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884870667",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884870667"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884893351",
      "pull_request_review_id": 989440646,
      "id": 884893351,
      "node_id": "PRRC_kwDOABII5840vman",
      "diff_hunk": "@@ -3110,7 +3156,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n+                const bool fAlreadyHave = AlreadyHaveBlock(pfrom, inv.hash);\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 156,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "ba6edfbdd4ca03db19fd3aa1ca64abb451219cad",
      "in_reply_to_id": 879219198,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Changed it to \"maybe new\", is that better?\r\n\r\nThat seems sufficient here.\r\n\r\n> I could add logging LookupBlockIndexForPeer, what do you think about that?\r\n\r\n`LookupBlockIndexForPeer()` is a utility function which is called from several places, so I think that might be a bit noisy.",
      "created_at": "2022-05-30T14:35:06Z",
      "updated_at": "2022-05-30T14:35:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r884893351",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/884893351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885383393",
      "pull_request_review_id": 990087625,
      "id": 885383393,
      "node_id": "PRRC_kwDOABII5840xeDh",
      "diff_hunk": "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like this data structure is append-only for each new connection?",
      "created_at": "2022-05-31T08:57:48Z",
      "updated_at": "2022-05-31T08:57:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885383393",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885383393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885444582",
      "pull_request_review_id": 990172068,
      "id": 885444582,
      "node_id": "PRRC_kwDOABII5840xs_m",
      "diff_hunk": "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "in_reply_to_id": 885383393,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is append only (just like the block index) but not every new connection will add something to it. If a connection from a new network is made, then a new `std::set<uint256>` is added to the map for that network. The `std::set<uint256>` itself is limited to the number of tips in the block index.",
      "created_at": "2022-05-31T09:58:12Z",
      "updated_at": "2022-05-31T09:58:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885444582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885444582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885461034",
      "pull_request_review_id": 990195238,
      "id": 885461034,
      "node_id": "PRRC_kwDOABII5840xxAq",
      "diff_hunk": "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "in_reply_to_id": 885383393,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am mostly asking because I am worried about nodes running OOM after they cycled through connections for a few months",
      "created_at": "2022-05-31T10:16:21Z",
      "updated_at": "2022-05-31T10:16:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885461034",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885461034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885529317",
      "pull_request_review_id": 990292117,
      "id": 885529317,
      "node_id": "PRRC_kwDOABII5840yBrl",
      "diff_hunk": "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "in_reply_to_id": 885383393,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I had that same worry when writing this code but OOM errors should not be possible unless there is a bug in my implementation.\r\n\r\nThe logic for adding an entry to the `m_chain_tip_sets` map is the same logic that is used for the addr cache, so it can have at most as many entries as the addr cache (ie one for each network/bound address).\r\n\r\nThe chain tips sets are only modified through `ChainstateManager::UpdateChainTipSet` and an entry can only be added to the set if it already exists in the block index. See: https://github.com/dergoegge/bitcoin/blob/0f816ff2e60c5e440543ebb738db29bd285facb0/src/validation.cpp#L5259-L5260\r\nIf the new entry has one of the tips in the tip set as an ancestor then the existing tip is replaced, so there will never be more tips in each tip set than there are tips in the global index.",
      "created_at": "2022-05-31T11:38:19Z",
      "updated_at": "2022-05-31T11:49:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885529317",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885529317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885591993",
      "pull_request_review_id": 990381620,
      "id": 885591993,
      "node_id": "PRRC_kwDOABII5840yQ-5",
      "diff_hunk": "@@ -655,6 +655,27 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "0f816ff2e60c5e440543ebb738db29bd285facb0",
      "in_reply_to_id": 885383393,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Looks like this data structure is append-only for each new connection?\r\n\r\n@MarcoFalke note that this map is keyed by the unique network id, i.e. a combination of the peer's network and the local bound address/port. For most nodes, there is only one unique network id (ipv4 with a single bound local address), but for nodes running tor/i2p/etc or with multiple -bind addresses, there may be a handful.",
      "created_at": "2022-05-31T12:44:52Z",
      "updated_at": "2022-05-31T12:44:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885591993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885591993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885706555",
      "pull_request_review_id": 990551171,
      "id": 885706555,
      "node_id": "PRRC_kwDOABII5840ys87",
      "diff_hunk": "@@ -2626,7 +2645,11 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        m_chainman.UpdateChainTipSet(block->GetHash(), GetChainTipSetForPeerNetwork(node));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Logically, I think this line should be in `UpdatedBlockTip()`?  `ProcessNewBlock()` success does not imply that the new block was accepted as a tip, just that it passed enough checks to be stored to disk.\r\n\r\nThis is probably harmless because of the checks in `UpdateChainTipSet()` to ensure that we're only adding appropriate things anyway, but someone reading the code in the future might wonder why something that operates on chain tips is here and not in `UpdatedBlockTip()`.",
      "created_at": "2022-05-31T14:23:05Z",
      "updated_at": "2022-05-31T15:27:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885706555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885706555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2650,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885728130",
      "pull_request_review_id": 990551171,
      "id": 885728130,
      "node_id": "PRRC_kwDOABII5840yyOC",
      "diff_hunk": "@@ -5225,6 +5225,33 @@ ChainstateManager::~ChainstateManager()\n     }\n }\n \n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rather than check `m_best_header`, I think we can permit lookup of any block header that has at least as much work as our tip.  There may be multiple chain tips that have more work than our active tip, and there's not much reason to prefer one to the others.  Using `m_best_header` is implicitly relying on proof-of-work as an our anti-DoS measure, and so we can generalize that to any chain with more work than our tip.",
      "created_at": "2022-05-31T14:41:04Z",
      "updated_at": "2022-05-31T15:27:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885728130",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885728130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885763133",
      "pull_request_review_id": 990551171,
      "id": 885763133,
      "node_id": "PRRC_kwDOABII5840y6w9",
      "diff_hunk": "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we add the criteria that a block is observable by a peer if it is an ancestor of `pindexBestKnownBlock` for the peer that is giving it to us, then I think we can go back to keeping the `BlockRequestAllowed()` rule that I believe was originally in this PR, so that old blocks that are off the main chain are generally unobservable.\r\n\r\nThis should allow us to process a large reorg from a peer while providing better fingerprinting protection, by not allowing any blocks that are sufficiently old and off the main chain from being observable by anyone (other than peer that is in the middle of giving such a chain to us).  In particular this prevents fingerprinting a node over time -- how useful that is, if we are using the same network address anyway is admittedly not very clear to me(!), but it just seems like an easier heuristic to understand that we never allow old blocks that are off the main chain to be observable.\r\n\r\nIf we did that, then I'm not sure we need any kind of per-network map for evaluating observability; the rule could be that an entry in our block index is observable by a given peer if:\r\n1) it is on the main chain, or\r\n2) it has at last as much work as our tip, or\r\n3) it forks off the main chain recently (ie the `BlockRequestAllowed` test), or\r\n4) it is an ancestor of the peer's `pindexBestKnownBlock`\r\n\r\nThis seems to be sufficient for anti-fingerprinting while still allowing headers sync.",
      "created_at": "2022-05-31T15:11:26Z",
      "updated_at": "2022-05-31T15:27:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885763133",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885763133"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885995834",
      "pull_request_review_id": 990957943,
      "id": 885995834,
      "node_id": "PRRC_kwDOABII5840zzk6",
      "diff_hunk": "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": 885763133,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree that using `BlockRequestAllowed` for this would be better as it comes with less complexity than what is in this PR. In practice, it would probably also always work out since we don't really expect large reorgs (1000s of blocks). However, I don't see how using `pindexBestKnownBlock` would solve the issues with that approach. `pindexBestKnownBlock` is of type `const CBlockIndex*`, so it can only point to something that already exists in our block index. We have to accept a header from a peer for us to set `pindexBestKnownBlock`.\r\n\r\nThe description in [this gist](https://gist.github.com/dergoegge/e8748c00ffe20b31108c95d88ba0ac73) should make it clear what the actual problem was. It is quite the edge case but I don't know how to get around it without keeping track of which chain tip a peer is allowed to build on. In the gist's example, `pindexBestKnownBlock` would still be set to block \"z\" for the peer that is sending us headers building on block \"x\", so the ancestor check for it does not seem to work here.\r\n\r\n> In particular this prevents fingerprinting a node over time \r\n\r\nWe could also reset the chain tip set once per month (or every n blocks) to achieve this.",
      "created_at": "2022-05-31T18:22:48Z",
      "updated_at": "2022-05-31T18:22:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r885995834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/885995834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886012370",
      "pull_request_review_id": 990980121,
      "id": 886012370,
      "node_id": "PRRC_kwDOABII5840z3nS",
      "diff_hunk": "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": 885763133,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah right, if the peer's best known block has more work than the last header we receive from them when we're downloading headers towards their new tip, then we won't reset it until we get to a header that has more work.  So you're right, what I wrote doesn't work.\r\n\r\nI think we could still get the job done with just a small amount of per-peer state.  If we stored the last locator we sent a peer in a getheaders message, then in theory we should permit observability of any header referenced in the locator by the peer that we sent the message to.  The downside to trying that now is that currently we don't limit the number of simultaneous in-flight getheaders messages, so it is slightly messy to keep track of (potentially) multiple locators.  But given that we currently generate our locators as being ancestors of some last header, perhaps it would be enough to essentially keep a set of chain tips per peer that represent the last header of some outstanding getheaders message, and then remove from that set after some timeout or after a getheaders response comes in that builds off such a tip?\r\n\r\nTypically you'd expect the set to be empty or have one entry in it, but if somehow you triggered multiple outstanding getheaders messages, you'd be able to deal with it.  (I actually have a branch I'm working on that would try to prevent sending multiple getheaders simultaneously to a peer, perhaps we can discuss offline sometime.)\r\n\r\nIf the approach I'm suggesting is too complex for now, I also think it would be ok to proceed along the lines of what you have, which seems conceptually to be a strict improvement, and we could revisit this logic down the road.",
      "created_at": "2022-05-31T18:38:30Z",
      "updated_at": "2022-05-31T18:38:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r886012370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886012370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888794337",
      "pull_request_review_id": 994696964,
      "id": 888794337,
      "node_id": "PRRC_kwDOABII5840-ezh",
      "diff_hunk": "@@ -5225,6 +5225,33 @@ ChainstateManager::~ChainstateManager()\n     }\n }\n \n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": 885728130,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This sounds good to me, however I am not sure if it should replace the `m_best_header` ancestor check or if it should be added as a third check.\r\n\r\nAncestors of `m_best_header` (or any header that has more work than the active tip) could have less work than the active tip and therefore simply doing the \"more work\" check would lead to `IsBlockInMainOrBestChain` returning false for them. Doing the ancestor check for all headers that have more work than the tip would be ideal but that does not seem easily doable atm.\r\n\r\nMaybe we should use `BlockRequestAllowed` instead and get rid of `IsBlockInMainOrBestChain`. What do you think of that?",
      "created_at": "2022-06-03T09:44:28Z",
      "updated_at": "2022-06-03T09:44:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888794337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888794337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888813940",
      "pull_request_review_id": 994723325,
      "id": 888813940,
      "node_id": "PRRC_kwDOABII5840-jl0",
      "diff_hunk": "@@ -2626,7 +2645,11 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        m_chainman.UpdateChainTipSet(block->GetHash(), GetChainTipSetForPeerNetwork(node));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 885706555,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`UpdatedBlockTip()` does not convey any information about the origin (the peer that sent us the block) of the new tip which makes it impossible to update the tip set without storing that information separately. `mapBlockSource` would work for that, if we wouldn't remove elements from it in `BlockChecked`.\r\n\r\nA slight improvement could be to move the `UpdateChainTipSet()` call a couple lines down into `if(new_block)`?\r\n\r\nThere are also two more calls to `UpdateChainTipSet()` (when receiving headers and compact blocks) that could not be moved into `UpdatedBlockTip()`, since `UpdatedBlockTip()` only fires for full blocks but we need to update the tip set if we only receive headers as well.\r\n\r\n",
      "created_at": "2022-06-03T10:11:40Z",
      "updated_at": "2022-06-03T10:11:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888813940",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888813940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2650,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888901612",
      "pull_request_review_id": 994849550,
      "id": 888901612,
      "node_id": "PRRC_kwDOABII5840-4_s",
      "diff_hunk": "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": 885763133,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  perhaps it would be enough to essentially keep a set of chain tips per peer that represent the last header of some outstanding getheaders message\r\n\r\nI like this idea and maybe some of the current logic in this PR could be reused for that (mainly the chain tip set logic). But its not just headers that allowed for this fingerprinting, there are two more uses of `LookupBlockindex` that are problematic. i.e. when receiving invs for blocks and receiving compact blocks, see [here](https://github.com/bitcoin/bitcoin/blob/2cf8c2caea90d9a3c314ba5f88bb76b3b5273d62/src/net_processing.cpp#L3113-L3124) and [here](https://github.com/bitcoin/bitcoin/blob/2cf8c2caea90d9a3c314ba5f88bb76b3b5273d62/src/net_processing.cpp#L3601).\r\n\r\n> If the approach I'm suggesting is too complex for now, I also think it would be ok to proceed along the lines of what you have, which seems conceptually to be a strict improvement, and we could revisit this logic down the road.\r\n\r\nYea, i would prefer keeping it as is and maybe revisit later on if we find an even better solution. ",
      "created_at": "2022-06-03T12:34:21Z",
      "updated_at": "2022-06-03T12:34:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888901612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888901612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888925363",
      "pull_request_review_id": 994886696,
      "id": 888925363,
      "node_id": "PRRC_kwDOABII5840--yz",
      "diff_hunk": "@@ -1809,6 +1818,19 @@ std::set<uint256>& PeerManagerImpl::GetChainTipSetForPeerNetwork(const CNode& no\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<uint256>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (m_chainman.IsBlockInMainOrBestChain(hash) ||\n+        m_chainman.IsBlockInChainTipSet(hash, GetChainTipSetForPeerNetwork(node))) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": 885763133,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Yea, i would prefer keeping it as is and maybe revisit later on if we find an even better solution.\r\n\r\nAgreed, the more I think about this the more I'm concluding that the improvements I'm thinking of would be much easier if we got to a place where we've improved the way we send getheaders messages (so that we don't have more than one in flight to a peer).  I think that would help with the situations where we're in the middle of headers sync and somehow receive an INV or a compact block, and have to reason about whether the header in question should be observable.  (The easiest answer, I think, is that if we're in the middle of headers sync we shouldn't be issuing a new getheaders in the first place!)\r\n\r\nI guess the only downside is that I do think the per-network visibility rules introduced here may not be necessary in the future, but I think that's okay on the whole even if it turned out to be the case, as it would still be an improvement for now.  I'll try to focus the remainder of my review on this particular approach!  Thanks for the discussion.",
      "created_at": "2022-06-03T13:04:53Z",
      "updated_at": "2022-06-03T13:04:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888925363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888925363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1827,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888960524",
      "pull_request_review_id": 994936772,
      "id": 888960524,
      "node_id": "PRRC_kwDOABII5840_HYM",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this function in `ChainstateManager`, and why are we passing in hashes rather than `const CBlockIndex* ` objects?  Operating on existing `const CBlockIndex*` entries (ie to find ancestors and look at values like the height) is permitted without holding `cs_main`, so nothing in here strikes me as needing to be in `validation.cpp`.  \r\n\r\nInstead I think we could just make this part of `net_processing`'s `PeerManagerImpl`, which makes sense to me as this is logic in support of something that doesn't need to be viewable outside of our net processing code.\r\n\r\nAlso the `chain_tips` set could be a set of pointers, rather than a set of uint256's, which is slightly better.",
      "created_at": "2022-06-03T13:45:42Z",
      "updated_at": "2022-06-03T14:30:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888960524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888960524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888963248",
      "pull_request_review_id": 994936772,
      "id": 888963248,
      "node_id": "PRRC_kwDOABII5840_ICw",
      "diff_hunk": "@@ -655,6 +655,18 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may be better to not guard this by `cs_main`, to avoid unnecessary lock contention.",
      "created_at": "2022-06-03T13:48:50Z",
      "updated_at": "2022-06-03T14:30:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888963248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888963248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888966079",
      "pull_request_review_id": 994936772,
      "id": 888966079,
      "node_id": "PRRC_kwDOABII5840_Iu_",
      "diff_hunk": "@@ -2626,7 +2645,11 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        m_chainman.UpdateChainTipSet(block->GetHash(), GetChainTipSetForPeerNetwork(node));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 885706555,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "On reflection, perhaps the best thing is to leave this as-is and just add a comment mentioning that while this blockhash may not be a chain tip, it's possible that a new header was added and so we invoke `UpdateChainTipSet` anyway to ensure that the header would be observable by the peer if a chain were to be built on top of it (and ancestors of existing tips are filtered anyway).",
      "created_at": "2022-06-03T13:52:05Z",
      "updated_at": "2022-06-03T14:30:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888966079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888966079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2650,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888969003",
      "pull_request_review_id": 994936772,
      "id": 888969003,
      "node_id": "PRRC_kwDOABII5840_Jcr",
      "diff_hunk": "@@ -5225,6 +5225,33 @@ ChainstateManager::~ChainstateManager()\n     }\n }\n \n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Similar to my other comment, I think this function makes more sense in `net_processing.cpp`.",
      "created_at": "2022-06-03T13:55:23Z",
      "updated_at": "2022-06-03T14:30:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888969003",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888969003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888975716",
      "pull_request_review_id": 994936772,
      "id": 888975716,
      "node_id": "PRRC_kwDOABII5840_LFk",
      "diff_hunk": "@@ -2217,34 +2239,36 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since this `getheaders` message uses `m_best_header` for the locator, it's possible that before we get the response, that `m_best_header` might change to be a different chain tip (if we learn of a more work headers chain from another peer in between).\r\n\r\nIn that situation, we might get a response from our peer that would appear to be trying to observe a header that is not permitted, and thus trigger another `getheaders` message, which would be unfortunate.\r\n\r\nI think to avoid this, we need to explicitly add the chain tip we're building a locator from to the chain tip set for a peer network whenever we send out a getheaders. (This would cover the cases where we send a getheaders based on our active chain tip as well, in the event that we reorged away from it.)",
      "created_at": "2022-06-03T14:02:52Z",
      "updated_at": "2022-06-03T14:30:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888975716",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888975716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888982320",
      "pull_request_review_id": 994936772,
      "id": 888982320,
      "node_id": "PRRC_kwDOABII5840_Msw",
      "diff_hunk": "@@ -2217,34 +2239,36 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Gating the logic below only on whether the header lookup succeeds means, in particular, that if a peer sends us a full headers message that doesn't connect to our block index, then we'll issue a getheaders message in response to try again.  While we also will assign DoS points, this is a behavior change that I'm not sure is necessary?  In the event a peer is giving us full headers that don't connect, they are likely broken, and going into an infinite loop of 2000 headers being dumped at us would be unfortunate (ie if it was with a peer that had the noban permission set).\r\n\r\nI think it would be better to only request more headers if it looks like a BIP 130 unconnecting headers situation, and otherwise just assign DoS points.",
      "created_at": "2022-06-03T14:10:37Z",
      "updated_at": "2022-06-03T14:30:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888982320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888982320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2570,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888996110",
      "pull_request_review_id": 994936772,
      "id": 888996110,
      "node_id": "PRRC_kwDOABII5840_QEO",
      "diff_hunk": "@@ -5225,6 +5225,33 @@ ChainstateManager::~ChainstateManager()\n     }\n }\n \n+bool ChainstateManager::IsBlockInMainOrBestChain(const uint256& blockhash) const\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_blockman.LookupBlockIndex(blockhash)};\n+    if (!index) return false;\n+\n+    if (m_best_header->GetAncestor(index->nHeight) == index) return true;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": 885728130,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was thinking about why we have this function, and I think it's for two reasons:\r\n1) We may have used our current active chain or m_best_header in generating a locator that went out in a getheaders message to this peer.\r\n2) We want the common case of lookups into a high-work chain (ie where proof-of-work is used to prevent inexpensive fingerprinting) to work wherever possible, without an extra round trip.\r\n\r\nFor case 1), I mentioned elsewhere that I think we need to explicitly insert (or otherwise track) the chain tips we send in a locator into the peer's network's chain tip set, or else we could get a failure to process a response if we reorg in between (or if m_best_header updates to an alternate fork).\r\n\r\nFor case 2), I think we want to generally be permissive for anything that would be hard for an attacker to use to cheaply fingerprint us, but if we get everything else right then we shouldn't need to catch every case.  For instance I think if there's some high-work header that no one on our particular network has given us and that we haven't used in a locator, that there's no reason we need to allow it to be observable immediately (though of course there's also no harm in making it observable).\r\n\r\nTo that end, I think this code is fine as-is (perhaps a comment could be added  \r\nto further explain the thinking here).  If we wanted to make slight improvements, we could consider things like looking at the work on the header, and if it has more work than our tip we can make it observable, or we could go further and track all chain tips that have more work than our tip (not just the one cached in m_best_header) and compare against their ancestors, etc.  However, none of that seems necessary to me right now for reasonably efficient performance.",
      "created_at": "2022-06-03T14:25:33Z",
      "updated_at": "2022-06-03T14:30:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r888996110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/888996110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889011430",
      "pull_request_review_id": 995012275,
      "id": 889011430,
      "node_id": "PRRC_kwDOABII5840_Tzm",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it'd be much better if net processing wasn't holding pointers into validation's internal data. We're moving in a direction where the validation engine is more modularized and isolated from the rest of the application (eg see https://github.com/bitcoin/bitcoin/issues/24303), so we should be reducing the places where other components hold pointers into validation's data.\r\n\r\nI think it might make sense eventually for validation to prune out stale block headers from the block index that are older than a certain age. That's not currently possible because although the ChainstateManager owns the CBlockIndex objects (through BlockManager.m_block_index), other components may be holding raw pointers to that data.",
      "created_at": "2022-06-03T14:42:44Z",
      "updated_at": "2022-06-03T14:42:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889011430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889011430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889022409",
      "pull_request_review_id": 995027847,
      "id": 889022409,
      "node_id": "PRRC_kwDOABII5840_WfJ",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this logic makes sense here -- I don't think we'll be removing the concept of what a CBlockIndex is from net_processing, certainly not anytime soon and probably not ever, particularly with regards to the fundamental data structure of what a headers chain is, and the idea of what proof-of-work is (which is used implicitly as anti-DoS in many places, and likely more in the future).\r\n\r\nSo I'd say that operations that exist only on CBlockIndex objects don't need to be tied to validation, as this interface is exposed to our whole codebase right now.\r\n\r\nTo your point about pruning, it doesn't seem plausible to me to even consider pruning until we do a lot more work on what parts of the block index are exposed, and in particular, to allow net_processing to communicate to the hypothetical block index pruner which block index entries shouldn't be pruned (because they may be needed in a headers sync, for example).  That is so far away that trying to design for that now seems impractical, and in the meantime we would be introducing additional code complexity in logic (like in this PR) where we don't take advantage of the fact that these entries persist once inserted -- which in turn raises questions around whether headers sync is guaranteed to work if a header were to be pruned from the index in the middle of that process.",
      "created_at": "2022-06-03T14:55:18Z",
      "updated_at": "2022-06-03T14:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889022409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889022409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889065592",
      "pull_request_review_id": 995089433,
      "id": 889065592,
      "node_id": "PRRC_kwDOABII5840_hB4",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we're just going to fundamentally disagree on this point. An object should never hold a raw pointer to another component's internal data. It's unsafe and leads to all kinds of data corruption, use-after-free, etc bugs.\r\n\r\nI understand that Bitcoin Core has historically used lots of raw pointers to memory not owned by the object holding the pointer, and that many examples still exist. I don't think that's a good reason to add another instance. Projects accumulate technical debt by thousands of incremental changes. We should always try to avoid adding more unsafe code, unless there's a very very good reason to go in the other direction.\r\n\r\nTo your point on code complexity, that's also subjective. I've reviewed both versions of this PR (with the logic in net_processing and validation), and this version seems no more complex to me. In fact, keeping data as private as possible within components and defining interfaces to access the minimal information seems to me to reduce complexity over the long run.",
      "created_at": "2022-06-03T15:45:11Z",
      "updated_at": "2022-06-03T15:45:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889065592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889065592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889223368",
      "pull_request_review_id": 995307628,
      "id": 889223368,
      "node_id": "PRRC_kwDOABII5841AHjI",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you're right that we're going to disagree, but for a topic like this -- of where in our code base it is permitted to access `CBlockIndex*` objects and their member functions, and where it's permitted to use and store these objects while not holding a lock -- the project needs to make a decision about what our architecture looks like, and arrive at a common understanding (even if some might disagree on what the optimal architecture would be).  So towards that end, I will try to explain further why I think it's illogical to use general arguments around \"holding raw pointers to another component's data\" as a reason to have this code live in validation specifically for the functions introduced in this PR.\r\n\r\nThese functions -- `UpdateChainTipSet()`, `IsBlockInMainOrBestChain()`, and `IsBlockInChainTipSet()` -- seem to do the following:\r\n1) look up block index entries in our blockmanager\r\n2) look up our current chain tip (ActiveChain.Tip())\r\n3) look up m_best_header (the most-work header we know of)\r\n4) invoke public functions on block index entries (namely, `GetAncestor()`)\r\n\r\nOther than the block index and ActiveChain.Tip(), no chainstate-specific state is accessed and (importantly!) no consensus validation of any sort is performed in these functions.  These functions do not change any state inside of validation either.\r\n\r\nSo to argue that these functions do not belong in `net_processing`, I think you'd have to argue that some of those operations should be private to the validation code.  It is difficult for me to see for which of those that should be the case, because I don't think `net_processing` would work at all without being able to look at the current tip (and see how much work it has, compared to the work of other headers a peer might be announcing), or look up block index entries, or know what the most work headers chain is (really this is a value that only exists for net_processing in the first place, so that we can save time when performing headers sync on startup).  I'd add that the public functions of `CBlockIndex` would seem to exist precisely so that they could be invoked by other modules (otherwise they would not be public).\r\n\r\nSo the only remaining point that I think you are making which we could consider is whether caching CBlockIndex pointers after lookup and using them without holding `cs_main` is harmful.  If that were possibly the case, then our validation interface callbacks -- which pass `const CBlockIndex*` arguments without holding `cs_main` -- would be broken.  All of the places in our code where we look up a block index entry and then release `cs_main` and continue to operate on it -- including in code touched by this PR (see `ProcessHeadersMessage`) -- would also be broken.  Never mind the countless other places in at least `net_processing` where we cache pointers to block index entries, such as in `CNodeState`.\r\n\r\nComing back to the particular functions introduced here: the data structures passed around to these functions (the sets of chain tips that are being processed) are not even a validation data structure.  They are created in this PR and are owned by `net_processing`.  The semantics of what goes in them is specified by net_processing.  Having checks on them happen in validation is moving `net_processing` logic into validation -- a layer violation.\r\n\r\nIn summary, this general philosophical claim that using CBlockIndex* pointers in `net_processing` is dangerous strikes me as unhelpful and out of sync with how our code is designed.  And it's hard for me to see what operations these particular functions do that we don't want `net_processing` to be able to do generally, while it also seems like adding a `net_processing` specific function to validation is leaking implementation specifics outside their natural scope.",
      "created_at": "2022-06-03T18:22:57Z",
      "updated_at": "2022-06-03T18:22:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r889223368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889223368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893940113",
      "pull_request_review_id": 1001964700,
      "id": 893940113,
      "node_id": "PRRC_kwDOABII5841SHGR",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Although this is undoubtedly an important convo to have, I don’t think dergoegge opened this PR to spend time on finding the perfect ownership design is for this vestigial part of our code. So let’s find a good place for this PR, then we can discuss architecture in a separate issue.\r\n\rHow about the below:\r\n\r\n1. `UpdateChainTipSet` should be moved to `PeerManagerImpl` (or even to a static function to really limit its scope) since it ostensibly only operates on `PeerManagerImpl::m_chain_tip_sets`. It should definitely not be part of anything’s public interface in a commonly-included header file.\r\n2. While I totally agree that we should minimize our use of raw pointers especially across objects with no ownership relations, I also don’t think that using a `uint256` is the best in-between substitute since it introduces some indirections. In the long run I don't think we'll end up using `const CBlockIndex *` or `uint256` here, so I don't think we should spend any more brain power on this in this PR. Let's leave it as is and open a separate discussion about how to deal with `CBlockIndex` ownership.",
      "created_at": "2022-06-09T20:46:27Z",
      "updated_at": "2022-06-10T03:40:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r893940113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/893940113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894566739",
      "pull_request_review_id": 1002843842,
      "id": 894566739,
      "node_id": "PRRC_kwDOABII5841UgFT",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks Carl for chiming in and for helping me decide how to move forward here.\r\n\r\nI moved all the chain tip logic back into `net_processing` (static functions) and switched back to using `const CBlockIndex*` for the sets.",
      "created_at": "2022-06-10T14:00:49Z",
      "updated_at": "2022-06-10T14:00:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r894566739",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894566739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894566952",
      "pull_request_review_id": 1002844162,
      "id": 894566952,
      "node_id": "PRRC_kwDOABII5841UgIo",
      "diff_hunk": "@@ -655,6 +655,18 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<uint256>> m_chain_tip_sets GUARDED_BY(cs_main);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888963248,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`cs_main` is already held in all the relevant locations so I thought I might as well use `cs_main` here instead of introducing another mutex (not even sure if that would be needed).",
      "created_at": "2022-06-10T14:01:02Z",
      "updated_at": "2022-06-10T14:01:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r894566952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894566952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894567413",
      "pull_request_review_id": 1002844827,
      "id": 894567413,
      "node_id": "PRRC_kwDOABII5841UgP1",
      "diff_hunk": "@@ -2217,34 +2239,36 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": 888975716,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point, added a call to `UpdateChainTipSet` whenever we sent out a `getheaders`. It's probably a rather rare edge case but still worth handling imo.",
      "created_at": "2022-06-10T14:01:29Z",
      "updated_at": "2022-06-10T14:01:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r894567413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894567413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894567541",
      "pull_request_review_id": 1002845045,
      "id": 894567541,
      "node_id": "PRRC_kwDOABII5841UgR1",
      "diff_hunk": "@@ -2217,34 +2239,36 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f8f0dd4afa15797e73738b1aa8f6ffa1faafbdd7",
      "in_reply_to_id": 888982320,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch, i did not intent to introduce a behavior change here. Fixed!",
      "created_at": "2022-06-10T14:01:36Z",
      "updated_at": "2022-06-10T14:01:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r894567541",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894567541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2570,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894581129",
      "pull_request_review_id": 1002864858,
      "id": 894581129,
      "node_id": "PRRC_kwDOABII5841UjmJ",
      "diff_hunk": "@@ -2627,7 +2722,18 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        // The block might not be a tip but it's possible that the header was\n+        // not previously received on this peer's network and so we invoke\n+        // UpdateChainTipSet to ensure that the header is observable by any\n+        // peer on the same network. (Ancestors of existings tips are ignored\n+        // by UpdateChainTipSet)\n+        const CBlockIndex* block_index{nullptr};\n+        WITH_LOCK(cs_main, block_index = m_chainman.m_blockman.LookupBlockIndex(block->GetHash()));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 216,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4696d9f2027b783e0a5e10d5c761296d075913eb",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Funny that this compiles (Edit, probably fixed by this pull request: https://github.com/bitcoin/bitcoin/pull/24931/files#r887670454)\r\n\r\nIf you decide to keep cs_main, would be good to remove this double lock:\r\n\r\n```suggestion\r\n        block_index = m_chainman.m_blockman.LookupBlockIndex(block->GetHash());\r\n```\r\n\r\nIf you decide to switch to a new mutex for `GetChainTipSetForPeerNetwork`, you can keep it.",
      "created_at": "2022-06-10T14:15:52Z",
      "updated_at": "2022-06-10T14:20:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r894581129",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894581129"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894599173",
      "pull_request_review_id": 1002891301,
      "id": 894599173,
      "node_id": "PRRC_kwDOABII5841UoAF",
      "diff_hunk": "@@ -2627,7 +2722,18 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        // The block might not be a tip but it's possible that the header was\n+        // not previously received on this peer's network and so we invoke\n+        // UpdateChainTipSet to ensure that the header is observable by any\n+        // peer on the same network. (Ancestors of existings tips are ignored\n+        // by UpdateChainTipSet)\n+        const CBlockIndex* block_index{nullptr};\n+        WITH_LOCK(cs_main, block_index = m_chainman.m_blockman.LookupBlockIndex(block->GetHash()));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 216,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4696d9f2027b783e0a5e10d5c761296d075913eb",
      "in_reply_to_id": 894581129,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch, very interesting that this compiles without a warning.",
      "created_at": "2022-06-10T14:34:44Z",
      "updated_at": "2022-06-10T14:34:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r894599173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894599173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894624354",
      "pull_request_review_id": 1002927497,
      "id": 894624354,
      "node_id": "PRRC_kwDOABII5841UuJi",
      "diff_hunk": "@@ -2627,7 +2722,18 @@ void PeerManagerImpl::ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv)\n void PeerManagerImpl::ProcessBlock(CNode& node, const std::shared_ptr<const CBlock>& block, bool force_processing)\n {\n     bool new_block{false};\n-    m_chainman.ProcessNewBlock(block, force_processing, &new_block);\n+    if (m_chainman.ProcessNewBlock(block, force_processing, &new_block)) {\n+        LOCK(cs_main);\n+        // The block might not be a tip but it's possible that the header was\n+        // not previously received on this peer's network and so we invoke\n+        // UpdateChainTipSet to ensure that the header is observable by any\n+        // peer on the same network. (Ancestors of existings tips are ignored\n+        // by UpdateChainTipSet)\n+        const CBlockIndex* block_index{nullptr};\n+        WITH_LOCK(cs_main, block_index = m_chainman.m_blockman.LookupBlockIndex(block->GetHash()));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 216,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4696d9f2027b783e0a5e10d5c761296d075913eb",
      "in_reply_to_id": 894581129,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, checked with #24931  merged:\r\n\r\n\r\n```\r\nnet_processing.cpp:2733:10: warning: cannot call function 'MaybeCheckNotHeld' while mutex 'cs_main' is held [-Wthread-safety-analysis]\r\n         WITH_LOCK(cs_main, block_index = m_chainman.m_blockman.LookupBlockIndex(block->GetHash()));\r\n         ^\r\n./sync.h:305:30: note: expanded from macro 'WITH_LOCK'\r\n#define WITH_LOCK(cs, code) (MaybeCheckNotHeld(cs), [&]() -> decltype(auto) { LOCK(cs); code; }())\r\n                             ^\r\n",
      "created_at": "2022-06-10T14:59:31Z",
      "updated_at": "2022-06-10T14:59:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r894624354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/894624354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896036215",
      "pull_request_review_id": 1004790235,
      "id": 896036215,
      "node_id": "PRRC_kwDOABII5841aG13",
      "diff_hunk": "@@ -2267,6 +2318,8 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n \n         assert(pindexLast);\n         UpdateBlockAvailability(pfrom.GetId(), pindexLast->GetBlockHash());\n+        UpdateChainTipSet(GetChainTipSetForPeerNetwork(pfrom), pindexLast);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "7f992f50af11e07723469a35bc258c8ce26ba44c",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I noticed that we only add to the chain tip set if headers validation for the entire group of headers succeeds.  This is an edge-case scenario, but if an (eg) inbound peer relayed us a set of headers that ended in a header which was \"cached invalid\", then we wouldn't ban the peer, and we also wouldn't update the chain tip set for the headers that led up to the invalid one. \r\n\r\nI think this could manifest itself if, say, there were a fork and some inbound peer was relaying a competing chain to us, but occasionally relaying valid blocks that fork away from the invalid ones too.  Perhaps we can check to see if `pindexLast` is set (after invoking `ProcessNewBlockHeaders`) and if it is, then we update the chain tip set before returning?",
      "created_at": "2022-06-13T18:54:37Z",
      "updated_at": "2022-06-14T18:48:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896036215",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896036215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896674213",
      "pull_request_review_id": 1005654203,
      "id": 896674213,
      "node_id": "PRRC_kwDOABII5841ciml",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks @dongcarl - I agree that this PR shouldn't be held up on this discussion, and I'm certainly not going to stand in the way if people prefer the alternative approach.\r\n\r\nHowever, I do think some points have been raised here that are incorrect:\r\n\r\n1.\r\n> Coming back to the particular functions introduced here: the data structures passed around to these functions (the sets of chain tips that are being processed) are not even a validation data structure. They are created in this PR and are owned by net_processing.\r\n\r\n> UpdateChainTipSet should be moved to PeerManagerImpl (or even to a static function to really limit its scope) since it ostensibly only operates on PeerManagerImpl::m_chain_tip_sets.\r\n\r\n`UpdateChainTipSet()` and `UpdateChainTipSet()` act on `uint256&` or stl containers of `uint256`s. Those are completely generic types that already exist in validation's public interface. They're not net-processing-specific, even if the only client component that uses these methods are net_processing.\r\n\r\n2.\r\n> Other than the block index and ActiveChain.Tip(), no chainstate-specific state is accessed and (importantly!) no consensus validation of any sort is performed in these functions.\r\n\r\nIt's absolutely fine for an object to expose public methods that use but don't change internal state, which is exactly why the `const` keyword exists for methods. We already have const methods exposed by `ChainstateManager`, such as `UpdateUncommittedBlockStructures()` and ` GenerateCoinbaseCommitment()`, which both use internal validation functions (eg ` GenerateCoinbaseCommitment()`) and expose a public interface to a single client component (in that case, the miner). For `IsBlockInMainOrBestChain()` and `IsBlockInChainTipSet()` we use the internal state of the block storage module and `m_block_index` and expose a public interface to net_processing. Those methods are completely analogous, and this is exactly how a loosely-coupled project should be structured.\r\n\r\n> Let's leave it as is and open a separate discussion about how to deal with CBlockIndex ownership.\r\n\r\nGood idea! Please let me know if you open an issue/PR.\r\n\r\n> While I totally agree that we should minimize our use of raw pointers especially across objects with no ownership relations, I also don’t think that using a uint256 is the best in-between substitute since it introduces some indirections.\r\n\r\nI'm not sure I understand what you mean by indirections here. Net processing needs a handle to look up and refer to blocks within validation. We could use pointers to addresses in validation's memory, which isn't safe. We could use uint256s which are guaranteed to be unique per block as long as sha256 isn't broken, but are 256 bits instead of 64 bits. We could hash the block hash down to a smaller domain if memory is a concern (which isn't the case here).",
      "created_at": "2022-06-14T10:56:45Z",
      "updated_at": "2022-06-14T10:56:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896674213",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896674213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896711320",
      "pull_request_review_id": 1005707824,
      "id": 896711320,
      "node_id": "PRRC_kwDOABII5841crqY",
      "diff_hunk": "@@ -927,6 +947,61 @@ static void AddKnownTx(Peer& peer, const uint256& hash)\n     tx_relay->m_tx_inventory_known_filter.insert(hash);\n }\n \n+/**\n+ * Update a chain tip set for a given new block hash by replacing an existing\n+ * tip if it is an ancestor of the new block or by adding a new tip if none of\n+ * the existing chain tips were replaced.\n+ */\n+static void UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    AssertLockHeld(cs_main);\n+    if (!potential_new_tip) return;\n+\n+    for (const CBlockIndex* tip_index : chain_tips) {\n+        assert(tip_index);\n+\n+        if (tip_index->GetAncestor(potential_new_tip->nHeight) == potential_new_tip) {\n+            // We ignore the new blockhash if one of the tips in the tip set\n+            // had the new block as an ancestor.\n+            return;\n+        }\n+\n+        if (potential_new_tip->GetAncestor(tip_index->nHeight) == tip_index) {\n+            // If one of the tips is the ancestor of the new block then we\n+            // replace the tip with the new block.\n+            chain_tips.erase(tip_index);\n+            break;\n+        }\n+    }\n+\n+    // The new blockhash is either replacing an existing tip or we are adding a\n+    // new fork to the tip set.\n+    chain_tips.insert(potential_new_tip);\n+}\n+\n+/** Check if a block is on the main chain or best (more work than the active tip) chain. */\n+static bool IsBlockInMainOrBestChain(const CBlockIndex& index, const CChain& active_chain,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this require `cs_main`? The only place it's called has cs_main locked, and the chain could change while this function is being called if it's not held.",
      "created_at": "2022-06-14T11:41:51Z",
      "updated_at": "2022-06-14T12:20:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896711320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896711320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 983,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896714510",
      "pull_request_review_id": 1005707824,
      "id": 896714510,
      "node_id": "PRRC_kwDOABII5841cscO",
      "diff_hunk": "@@ -927,6 +947,61 @@ static void AddKnownTx(Peer& peer, const uint256& hash)\n     tx_relay->m_tx_inventory_known_filter.insert(hash);\n }\n \n+/**\n+ * Update a chain tip set for a given new block hash by replacing an existing\n+ * tip if it is an ancestor of the new block or by adding a new tip if none of\n+ * the existing chain tips were replaced.\n+ */\n+static void UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    AssertLockHeld(cs_main);\n+    if (!potential_new_tip) return;\n+\n+    for (const CBlockIndex* tip_index : chain_tips) {\n+        assert(tip_index);\n+\n+        if (tip_index->GetAncestor(potential_new_tip->nHeight) == potential_new_tip) {\n+            // We ignore the new blockhash if one of the tips in the tip set\n+            // had the new block as an ancestor.\n+            return;\n+        }\n+\n+        if (potential_new_tip->GetAncestor(tip_index->nHeight) == tip_index) {\n+            // If one of the tips is the ancestor of the new block then we\n+            // replace the tip with the new block.\n+            chain_tips.erase(tip_index);\n+            break;\n+        }\n+    }\n+\n+    // The new blockhash is either replacing an existing tip or we are adding a\n+    // new fork to the tip set.\n+    chain_tips.insert(potential_new_tip);\n+}\n+\n+/** Check if a block is on the main chain or best (more work than the active tip) chain. */\n+static bool IsBlockInMainOrBestChain(const CBlockIndex& index, const CChain& active_chain,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I _really_ don't like the idea of passing around references to `CChain` objects in net_processing. Yes, I know they're already exposed by `m_chainman.ActiveChain()`, but this is the first place that `CChain` is explicitly used as a type in a function signature in net_processing. That seems to be moving us in the wrong direction.\r\n\r\nI'm also not sure what the benefit of making these functions `static` is. `PeerManagerImpl` is inside the unnamed namespace and so only has internal linkage. Making it static doesn't limit its scope any more and only means you need to pass additional parameters in.",
      "created_at": "2022-06-14T11:45:38Z",
      "updated_at": "2022-06-14T12:20:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896714510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896714510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 983,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896741428",
      "pull_request_review_id": 1005707824,
      "id": 896741428,
      "node_id": "PRRC_kwDOABII5841czA0",
      "diff_hunk": "@@ -2201,34 +2291,37 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n-            m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n-            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 160,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This log is wrong now that you've put the `PushMessage()` call inside the `if (nCount < MAX_BLOCKS_TO_ANNOUNCE)` block below (we'll log that we're sending getheaders even if we don't send getheaders).\r\n ",
      "created_at": "2022-06-14T12:15:57Z",
      "updated_at": "2022-06-14T12:20:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896741428",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896741428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896745232",
      "pull_request_review_id": 1005707824,
      "id": 896745232,
      "node_id": "PRRC_kwDOABII5841cz8Q",
      "diff_hunk": "@@ -3599,10 +3705,12 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        if (!LookupBlockIndexForPeer(pfrom, cmpctblock.header.hashPrevBlock)) {\n             // Doesn't connect (or is genesis), instead of DoSing in AcceptBlockHeader, request deeper headers\n-            if (!m_chainman.ActiveChainstate().IsInitialBlockDownload())\n+            if (!m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\n                 m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n+                UpdateChainTipSet(GetChainTipSetForPeerNetwork(pfrom), m_chainman.m_best_header);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are we calling `UpdateChainTipSet()` any time a getheaders message is sent? If so, what do you think about factoring that out into a function, so that if more `PushMessage(getheaders)` are added, people don't forget to add `UpdateChainTipSet()`?",
      "created_at": "2022-06-14T12:20:01Z",
      "updated_at": "2022-06-14T12:20:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896745232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896745232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3712,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896807423",
      "pull_request_review_id": 1004790235,
      "id": 896807423,
      "node_id": "PRRC_kwDOABII5841dDH_",
      "diff_hunk": "@@ -3599,10 +3705,12 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        if (!LookupBlockIndexForPeer(pfrom, cmpctblock.header.hashPrevBlock)) {\n             // Doesn't connect (or is genesis), instead of DoSing in AcceptBlockHeader, request deeper headers\n-            if (!m_chainman.ActiveChainstate().IsInitialBlockDownload())\n+            if (!m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\n                 m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n+                UpdateChainTipSet(GetChainTipSetForPeerNetwork(pfrom), m_chainman.m_best_header);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": 896745232,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I also think this is a good idea, but I wanted to mention that if you don't feel like doing it here, I'd be happy to include this in a followup PR (I'm working on a branch that would improve our logic for sending getheaders messages in the first place, so that we wouldn't have more than one in-flight to a peer at a time, and as part of that I'm consolidating the calls to `PushMessage(getheaders)` into a single function already).",
      "created_at": "2022-06-14T13:18:05Z",
      "updated_at": "2022-06-14T18:48:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896807423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896807423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3712,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896928661",
      "pull_request_review_id": 1004790235,
      "id": 896928661,
      "node_id": "PRRC_kwDOABII5841dguV",
      "diff_hunk": "@@ -3222,8 +3216,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n-                LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n+                const bool fAlreadyHave{LookupBlockIndexForPeer(pfrom, inv.hash) != nullptr};\n+                LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"maybe new\", pfrom.GetId());\n \n                 UpdateBlockAvailability(pfrom.GetId(), inv.hash);",
      "path": "src/net_processing.cpp",
      "position": 228,
      "original_position": 29,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f3ed724ac15ccaa925ca9c7bcba53714daaf9c48",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This call to `UpdateBlockAvailability` means that if we get an INV for a block that should not be observable, then we'll still set `pindexBestKnownBlock` for the peer to be the block index entry that we're hiding.\r\n\r\nI have been trying to figure out whether there is some way this can be leaked (because if so, that would be a fingerprint vector) but I have not yet come up with one that doesn't require extensive proof-of-work.  However I wanted to mention this in case someone else comes up with a way that we might leak the value.",
      "created_at": "2022-06-14T14:52:26Z",
      "updated_at": "2022-06-14T18:48:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896928661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896928661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3713,
      "original_line": 3713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896983250",
      "pull_request_review_id": 1006096541,
      "id": 896983250,
      "node_id": "PRRC_kwDOABII5841duDS",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I completely agree with the aim to move away from exposing CBlockIndex's internals to all its users. It complicates reasoning about locking, makes it harder to move to different representations (which perhaps split concerns and mutable/immutable values better), makes it hard to even consider options like not keeping all headers in memory all the time, and just generally makes code hard to reason about.\r\n\r\nHowever, I don't think the option (as I understand what you're envisioning is) of (a) making validation responsible for managing the internals/ownership of CBlockIndex (or whatever replaces its function), and (b) having the interface to its users to identify block header be uint256 block hashes... is the only possibility.\r\n\r\nSpecifically, what I'd envision is something like:\r\n* A separate module that manages/owns the set of block headers. While validation/blockstorage is probably the only one that needs the ability to modify the set/contents of block-related data currently held in CBlockIndex, there are lots of places in the code that need information about blocks and their relation. I think it would be cleaner to separate from validation.\r\n* Other modules (including validation, and net_processing, and wallet, ...) refer to block headers using some sort of black box handler type. It may be a wrapper around a pointer to an internal object (like CBlockIndex*), or something that holds an index number in a table held by this block header management module. All operations (gathering information, changing state, finding common ancestors, ...) on it however require calling the block header module. This has the advantage over raw CBlockIndex* points of getting the encapsulation needed for reasons listed above. But it also has the advantage over `uint256`s that it's (a) smaller, most likely (b) more efficient (doesn't need constant lookup in a map for every operations) and (c) can support a model where not all block headers are always get in memory but while still guaranteeing that something won't disappear while another module is referencing it.\r\n\r\nTo be clear, I'm not arguing for this specific approach, but mostly giving it as an example that there are multiple possible avenues this can go in. And from the perspective of this potential outcome, I think moving block header relation logic to validation, and using uint256s as a way to reference them, is a step away from the goal rather than towards it. An approach where modules do keep working with CBlockIndex*es now, and if and when this refactor happens, those pointers are replaced with handle types and indirections are replaced with block header module function calls, would be much less of a detour.",
      "created_at": "2022-06-14T15:34:39Z",
      "updated_at": "2022-06-14T15:34:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r896983250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/896983250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897004041",
      "pull_request_review_id": 1006124674,
      "id": 897004041,
      "node_id": "PRRC_kwDOABII5841dzIJ",
      "diff_hunk": "@@ -5224,3 +5224,32 @@ ChainstateManager::~ChainstateManager()\n         i.clear();\n     }\n }\n+\n+void ChainstateManager::UpdateChainTipSet(const uint256& new_blockhash, std::set<uint256>& chain_tips) const",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a66b8e2a0a40dde9771a4ea6f2967538fff96e37",
      "in_reply_to_id": 888960524,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks @sipa. Interesting. It's not immediately obvious to me how the relationship between validation and a block header module would work (would validation be a client of the block header module with special write access?), but we can leave that discussion for another issue.",
      "created_at": "2022-06-14T15:51:07Z",
      "updated_at": "2022-06-14T15:51:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r897004041",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/897004041"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902375920",
      "pull_request_review_id": 1013259730,
      "id": 902375920,
      "node_id": "PRRC_kwDOABII5841ySnw",
      "diff_hunk": "@@ -927,6 +947,61 @@ static void AddKnownTx(Peer& peer, const uint256& hash)\n     tx_relay->m_tx_inventory_known_filter.insert(hash);\n }\n \n+/**\n+ * Update a chain tip set for a given new block hash by replacing an existing\n+ * tip if it is an ancestor of the new block or by adding a new tip if none of\n+ * the existing chain tips were replaced.\n+ */\n+static void UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    AssertLockHeld(cs_main);\n+    if (!potential_new_tip) return;\n+\n+    for (const CBlockIndex* tip_index : chain_tips) {\n+        assert(tip_index);\n+\n+        if (tip_index->GetAncestor(potential_new_tip->nHeight) == potential_new_tip) {\n+            // We ignore the new blockhash if one of the tips in the tip set\n+            // had the new block as an ancestor.\n+            return;\n+        }\n+\n+        if (potential_new_tip->GetAncestor(tip_index->nHeight) == tip_index) {\n+            // If one of the tips is the ancestor of the new block then we\n+            // replace the tip with the new block.\n+            chain_tips.erase(tip_index);\n+            break;\n+        }\n+    }\n+\n+    // The new blockhash is either replacing an existing tip or we are adding a\n+    // new fork to the tip set.\n+    chain_tips.insert(potential_new_tip);\n+}\n+\n+/** Check if a block is on the main chain or best (more work than the active tip) chain. */\n+static bool IsBlockInMainOrBestChain(const CBlockIndex& index, const CChain& active_chain,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": 896714510,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moved the functions to `PeerManagerImpl`.",
      "created_at": "2022-06-21T09:20:35Z",
      "updated_at": "2022-06-21T09:20:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r902375920",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902375920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 983,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902376009",
      "pull_request_review_id": 1013259862,
      "id": 902376009,
      "node_id": "PRRC_kwDOABII5841ySpJ",
      "diff_hunk": "@@ -927,6 +947,61 @@ static void AddKnownTx(Peer& peer, const uint256& hash)\n     tx_relay->m_tx_inventory_known_filter.insert(hash);\n }\n \n+/**\n+ * Update a chain tip set for a given new block hash by replacing an existing\n+ * tip if it is an ancestor of the new block or by adding a new tip if none of\n+ * the existing chain tips were replaced.\n+ */\n+static void UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+{\n+    AssertLockHeld(cs_main);\n+    if (!potential_new_tip) return;\n+\n+    for (const CBlockIndex* tip_index : chain_tips) {\n+        assert(tip_index);\n+\n+        if (tip_index->GetAncestor(potential_new_tip->nHeight) == potential_new_tip) {\n+            // We ignore the new blockhash if one of the tips in the tip set\n+            // had the new block as an ancestor.\n+            return;\n+        }\n+\n+        if (potential_new_tip->GetAncestor(tip_index->nHeight) == tip_index) {\n+            // If one of the tips is the ancestor of the new block then we\n+            // replace the tip with the new block.\n+            chain_tips.erase(tip_index);\n+            break;\n+        }\n+    }\n+\n+    // The new blockhash is either replacing an existing tip or we are adding a\n+    // new fork to the tip set.\n+    chain_tips.insert(potential_new_tip);\n+}\n+\n+/** Check if a block is on the main chain or best (more work than the active tip) chain. */\n+static bool IsBlockInMainOrBestChain(const CBlockIndex& index, const CChain& active_chain,",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": 896711320,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes it should, fixed!",
      "created_at": "2022-06-21T09:20:41Z",
      "updated_at": "2022-06-21T09:20:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r902376009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902376009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 983,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902376103",
      "pull_request_review_id": 1013259992,
      "id": 902376103,
      "node_id": "PRRC_kwDOABII5841ySqn",
      "diff_hunk": "@@ -2201,34 +2291,37 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n     }\n \n     bool received_new_header = false;\n-    const CBlockIndex *pindexLast = nullptr;\n+    const CBlockIndex* pindexLast = nullptr;\n     {\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom.GetId());\n \n-        // If this looks like it could be a block announcement (nCount <\n-        // MAX_BLOCKS_TO_ANNOUNCE), use special logic for handling headers that\n-        // don't connect:\n-        // - Send a getheaders message in response to try to connect the chain.\n-        // - The peer can send up to MAX_UNCONNECTING_HEADERS in a row that\n-        //   don't connect before giving DoS points\n-        // - Once a headers message is received that is valid and does connect,\n-        //   nUnconnectingHeaders gets reset back to 0.\n-        if (!m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n-            nodestate->nUnconnectingHeaders++;\n-            m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n-            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 160,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": 896741428,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed the log message. It no longer prints \"sending getheaders\" but additionally prints `nCount` which indicates whether or not a `getheaders` was sent. ",
      "created_at": "2022-06-21T09:20:47Z",
      "updated_at": "2022-06-21T09:20:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r902376103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902376103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902376909",
      "pull_request_review_id": 1013261145,
      "id": 902376909,
      "node_id": "PRRC_kwDOABII5841yS3N",
      "diff_hunk": "@@ -3599,10 +3705,12 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        if (!LookupBlockIndexForPeer(pfrom, cmpctblock.header.hashPrevBlock)) {\n             // Doesn't connect (or is genesis), instead of DoSing in AcceptBlockHeader, request deeper headers\n-            if (!m_chainman.ActiveChainstate().IsInitialBlockDownload())\n+            if (!m_chainman.ActiveChainstate().IsInitialBlockDownload()) {\n                 m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::GETHEADERS, m_chainman.ActiveChain().GetLocator(m_chainman.m_best_header), uint256()));\n+                UpdateChainTipSet(GetChainTipSetForPeerNetwork(pfrom), m_chainman.m_best_header);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 251,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "be75d3d3d8666131161a73f44e58c93ab73b1946",
      "in_reply_to_id": 896745232,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seemed easy enough, so i included it here.",
      "created_at": "2022-06-21T09:21:37Z",
      "updated_at": "2022-06-21T09:21:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r902376909",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902376909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3712,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902378592",
      "pull_request_review_id": 1013263427,
      "id": 902378592,
      "node_id": "PRRC_kwDOABII5841yTRg",
      "diff_hunk": "@@ -2267,6 +2318,8 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, const Peer& peer,\n \n         assert(pindexLast);\n         UpdateBlockAvailability(pfrom.GetId(), pindexLast->GetBlockHash());\n+        UpdateChainTipSet(GetChainTipSetForPeerNetwork(pfrom), pindexLast);",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "7f992f50af11e07723469a35bc258c8ce26ba44c",
      "in_reply_to_id": 896036215,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good catch, I did not think about this at all.\r\n\r\nAdded a commit to ensure that we always continue processing if `pindexLast` is not `nullptr` after `m_chainman.ProcessNewBlockHeaders`.",
      "created_at": "2022-06-21T09:23:11Z",
      "updated_at": "2022-06-21T09:23:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r902378592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/902378592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908957755",
      "pull_request_review_id": 1022421575,
      "id": 908957755,
      "node_id": "PRRC_kwDOABII5842LZg7",
      "diff_hunk": "@@ -2259,10 +2258,18 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     }\n \n     BlockValidationState state;\n+    const CBlockIndex* pindexLast{nullptr};\n     if (!m_chainman.ProcessNewBlockHeaders(headers, state, &pindexLast)) {\n         if (state.IsInvalid()) {\n             MaybePunishNodeForBlock(pfrom.GetId(), state, via_compact_block, \"invalid header received\");\n-            return;\n+\n+            // The received headers chain could contain valid headers followed\n+            // by invalid headers. We still want to continue processing the\n+            // valid headers. `pindexLast` will point to block index of the\n+            // last valid header.\n+            if (!pindexLast) {\n+                return;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "fbf449731005f5b1c5934ec6343fd305ba427699",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, so this is a bigger change than I was trying to suggest; I only meant that we should update the chain tip set if pindexLast is non null, even if an invalid block is encountered.  I'm not sure we should invoke all the logic that follows, because some of the processing after this includes sending new p2p messages (such as getheaders if the message was full), which wouldn't make sense if we encountered an invalid header, even if we weren't going to disconnect the peer.\r\n\r\nI think it's possible that some of the logic that follows _could_ be invoked for the valid headers if we knew that we we weren't about to disconnect this peer, but I feel like such a significant behavior change is out of scope for this PR.  \r\n\r\nMy suggestion would be to drop this commit and instead just invoke `UpdateChainTipSet` for `pindexLast` (if non-null) before returning, after calling `MaybePunishNodeForBlock`?",
      "created_at": "2022-06-28T21:14:13Z",
      "updated_at": "2022-06-28T21:14:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r908957755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/908957755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909337093",
      "pull_request_review_id": 1022928539,
      "id": 909337093,
      "node_id": "PRRC_kwDOABII5842M2IF",
      "diff_hunk": "@@ -2259,10 +2258,18 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     }\n \n     BlockValidationState state;\n+    const CBlockIndex* pindexLast{nullptr};\n     if (!m_chainman.ProcessNewBlockHeaders(headers, state, &pindexLast)) {\n         if (state.IsInvalid()) {\n             MaybePunishNodeForBlock(pfrom.GetId(), state, via_compact_block, \"invalid header received\");\n-            return;\n+\n+            // The received headers chain could contain valid headers followed\n+            // by invalid headers. We still want to continue processing the\n+            // valid headers. `pindexLast` will point to block index of the\n+            // last valid header.\n+            if (!pindexLast) {\n+                return;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "fbf449731005f5b1c5934ec6343fd305ba427699",
      "in_reply_to_id": 908957755,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You are right, i went a bit overboard with this. Changed it to just update the chain tip set like you suggested.",
      "created_at": "2022-06-29T08:17:54Z",
      "updated_at": "2022-06-29T08:17:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r909337093",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/909337093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958053003",
      "pull_request_review_id": 1089696217,
      "id": 958053003,
      "node_id": "PRRC_kwDOABII5845GrqL",
      "diff_hunk": "@@ -1141,6 +1141,12 @@ class CConnman\n     friend struct ConnmanTestMsg;\n };\n \n+/**\n+ * Get a unique identifier for a peer based on the connections network and the",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a424f96cd90c2a23d752c7d9d02eeffd87fea4b5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This might be confusing for the reader:\r\n- function name refers to Network ID\r\n- the comment refers to network + socket address",
      "created_at": "2022-08-30T06:25:53Z",
      "updated_at": "2022-08-30T06:25:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958053003",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958053003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958058376",
      "pull_request_review_id": 1089703710,
      "id": 958058376,
      "node_id": "PRRC_kwDOABII5845Gs-I",
      "diff_hunk": "@@ -266,6 +266,18 @@ std::optional<CService> GetLocalAddrForPeer(CNode& node)\n     return std::nullopt;\n }\n \n+uint64_t GetUniqueNetworkID(const CConnman& connman, const CNode& node)\n+{\n+    auto local_socket_bytes = node.addrBind.GetAddrBytes();",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a424f96cd90c2a23d752c7d9d02eeffd87fea4b5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This could be `const`? (yeah i know i wrote this code :P)",
      "created_at": "2022-08-30T06:33:30Z",
      "updated_at": "2022-08-30T06:33:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958058376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958058376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958061702",
      "pull_request_review_id": 1089708513,
      "id": 958061702,
      "node_id": "PRRC_kwDOABII5845GtyG",
      "diff_hunk": "@@ -996,6 +1016,33 @@ static bool CanServeWitnesses(const Peer& peer)\n     return peer.m_their_services & NODE_WITNESS;\n }\n \n+void PeerManagerImpl::UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip)\n+{\n+    AssertLockHeld(cs_main);\n+    if (!potential_new_tip) return;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4af7fc8be10c3ba135d7d63be0378eec461f552a",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the reason of allowing a nullptr here, but then terminating if it's passed?\r\nPerhaps this check is better before the call, and here the parameter should be non-nullptr?",
      "created_at": "2022-08-30T06:38:08Z",
      "updated_at": "2022-08-30T06:38:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958061702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958061702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958065550",
      "pull_request_review_id": 1089713925,
      "id": 958065550,
      "node_id": "PRRC_kwDOABII5845GuuO",
      "diff_hunk": "@@ -996,6 +1016,33 @@ static bool CanServeWitnesses(const Peer& peer)\n     return peer.m_their_services & NODE_WITNESS;\n }\n \n+void PeerManagerImpl::UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4af7fc8be10c3ba135d7d63be0378eec461f552a",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why don't pass the peer instead of `chain_tips` here, and call `GetChainTipSetForPeerNetwork` internally?",
      "created_at": "2022-08-30T06:43:10Z",
      "updated_at": "2022-08-30T06:43:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958065550",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958065550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958070110",
      "pull_request_review_id": 1089720302,
      "id": 958070110,
      "node_id": "PRRC_kwDOABII5845Gv1e",
      "diff_hunk": "@@ -721,6 +721,26 @@ class PeerManagerImpl final : public PeerManager\n     void UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /** Check if a block is on the main chain or best (more work than the active tip) chain. */",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "unless `best` is some terminology, `better` should be more accurate?",
      "created_at": "2022-08-30T06:49:00Z",
      "updated_at": "2022-08-30T06:49:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958070110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958070110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 724,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958071428",
      "pull_request_review_id": 1089722173,
      "id": 958071428,
      "node_id": "PRRC_kwDOABII5845GwKE",
      "diff_hunk": "@@ -721,6 +721,26 @@ class PeerManagerImpl final : public PeerManager\n     void UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /** Check if a block is on the main chain or best (more work than the active tip) chain. */",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "in_reply_to_id": 958070110,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "terminology i guess (`m_best_header`), feel free to ignore and close this comment",
      "created_at": "2022-08-30T06:50:43Z",
      "updated_at": "2022-08-30T06:50:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958071428",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958071428"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 724,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958073444",
      "pull_request_review_id": 1089724955,
      "id": 958073444,
      "node_id": "PRRC_kwDOABII5845Gwpk",
      "diff_hunk": "@@ -1043,6 +1063,25 @@ void PeerManagerImpl::UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips\n     chain_tips.insert(potential_new_tip);\n }\n \n+bool PeerManagerImpl::IsBlockInMainOrBestChain(const CBlockIndex& index)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    if (m_chainman.ActiveChain().Contains(&index)) return true;\n+    if (m_chainman.m_best_header && m_chainman.m_best_header->GetAncestor(index.nHeight) == &index) return true;\n+    return false;\n+}\n+\n+bool PeerManagerImpl::IsBlockInChainTipSet(const CBlockIndex& index, const std::set<const CBlockIndex*>& chain_tips)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Similarly to the previous commit, why don't obtain `GetChainTipSetForPeerNetwork` internally?",
      "created_at": "2022-08-30T06:53:20Z",
      "updated_at": "2022-08-30T06:53:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958073444",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958073444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958090635",
      "pull_request_review_id": 1089749648,
      "id": 958090635,
      "node_id": "PRRC_kwDOABII5845G02L",
      "diff_hunk": "@@ -2522,17 +2571,28 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     const CBlockIndex *pindexLast = nullptr;\n \n     // Do these headers connect to something in our block index?\n-    bool headers_connect_blockindex{WITH_LOCK(::cs_main, return m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) != nullptr)};\n-    if (!headers_connect_blockindex) {\n-        if (nCount <= MAX_BLOCKS_TO_ANNOUNCE) {\n-            // If this looks like it could be a BIP 130 block announcement, use\n-            // special logic for handling headers that don't connect, as this\n-            // could be benign.\n-            HandleFewUnconnectingHeaders(pfrom, peer, headers);\n-        } else {\n-            Misbehaving(peer, 10, \"invalid header received\");\n+    {\n+        LOCK(cs_main);\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {\n+            CNodeState* node_state{State(pfrom.GetId())};\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s (peer=%d, nUnconnectingHeaders=%d, nCount=%d)\\n\",\n+                     headers[0].GetHash().ToString(),\n+                     m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock) ?\n+                         \"we should not leak the existence of the previous block\" :\n+                         \"missing prev block\",\n+                     headers[0].hashPrevBlock.ToString(),\n+                     pfrom.GetId(), node_state->nUnconnectingHeaders,\n+                     nCount);\n+            if (nCount <= MAX_BLOCKS_TO_ANNOUNCE) {\n+                // If this looks like it could be a BIP 130 block announcement, use\n+                // special logic for handling headers that don't connect, as this\n+                // could be benign.\n+                HandleFewUnconnectingHeaders(pfrom, peer, headers);\n+            } else {\n+                Misbehaving(peer, 10, \"invalid header received\");\n+            }\n+            return;\n         }\n-        return;\n     }\n \n     // At this point, the headers connect to something in our block index.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment is kinda outdated now (should add `for a given peer/network` or something?)?",
      "created_at": "2022-08-30T07:13:44Z",
      "updated_at": "2022-08-30T07:13:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958090635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958090635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958249936",
      "pull_request_review_id": 1089983612,
      "id": 958249936,
      "node_id": "PRRC_kwDOABII5845HbvQ",
      "diff_hunk": "@@ -3856,7 +3856,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        if (!LookupBlockIndexForPeer(pfrom, cmpctblock.header.hashPrevBlock)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a89e7e690f48aa133395406a1c289f2316b45191",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I might be not getting something... In previous commit, we `MaybeSendGetHeaders` if this condition is true. Here, we `MaybeSendGetHeaders` if the same condition is false. Seems strange, but maybe I'm missing the reasoning.",
      "created_at": "2022-08-30T09:36:22Z",
      "updated_at": "2022-08-30T09:36:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958249936",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958249936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958255353",
      "pull_request_review_id": 1089991170,
      "id": 958255353,
      "node_id": "PRRC_kwDOABII5845HdD5",
      "diff_hunk": "@@ -3856,7 +3856,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        if (!LookupBlockIndexForPeer(pfrom, cmpctblock.header.hashPrevBlock)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a89e7e690f48aa133395406a1c289f2316b45191",
      "in_reply_to_id": 958249936,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, I guess this branch assumes that this new header extends our best chain, and would try to build on it.\r\n\r\nSo the probe would be to send two different compact blocks: one on top of the stale block, another one not on top of it. After this change, it would make a difference only if the stale block is registered by the peer's network id. Alright, makes sense. Feel free to resolve.",
      "created_at": "2022-08-30T09:41:30Z",
      "updated_at": "2022-08-30T09:41:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958255353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958255353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958255491",
      "pull_request_review_id": 1089991385,
      "id": 958255491,
      "node_id": "PRRC_kwDOABII5845HdGD",
      "diff_hunk": "@@ -3856,7 +3856,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        if (!LookupBlockIndexForPeer(pfrom, cmpctblock.header.hashPrevBlock)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a89e7e690f48aa133395406a1c289f2316b45191",
      "in_reply_to_id": 958249936,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could benefit from a comment :)",
      "created_at": "2022-08-30T09:41:39Z",
      "updated_at": "2022-08-30T09:41:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958255491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958255491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958263845",
      "pull_request_review_id": 1090003521,
      "id": 958263845,
      "node_id": "PRRC_kwDOABII5845HfIl",
      "diff_hunk": "@@ -3222,8 +3216,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n-                LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n+                const bool fAlreadyHave{LookupBlockIndexForPeer(pfrom, inv.hash) != nullptr};\n+                LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"maybe new\", pfrom.GetId());\n \n                 UpdateBlockAvailability(pfrom.GetId(), inv.hash);",
      "path": "src/net_processing.cpp",
      "position": 228,
      "original_position": 29,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "f3ed724ac15ccaa925ca9c7bcba53714daaf9c48",
      "in_reply_to_id": 896928661,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point!\r\nI haven't found a way to actually exploit it either.",
      "created_at": "2022-08-30T09:49:57Z",
      "updated_at": "2022-08-30T09:49:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958263845",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958263845"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3713,
      "original_line": 3713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958281429",
      "pull_request_review_id": 1090030248,
      "id": 958281429,
      "node_id": "PRRC_kwDOABII5845HjbV",
      "diff_hunk": "@@ -1141,6 +1141,12 @@ class CConnman\n     friend struct ConnmanTestMsg;\n };\n \n+/**\n+ * Get a unique identifier for a peer based on the connections network and the",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a424f96cd90c2a23d752c7d9d02eeffd87fea4b5",
      "in_reply_to_id": 958053003,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess the issue is `Network's ID` vs `peer's ID`, or even the meaning of the word `network` (Internet is the network too...)\r\n(not 100% sure this is worth addressing)",
      "created_at": "2022-08-30T10:06:07Z",
      "updated_at": "2022-08-30T10:08:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958281429",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958281429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958301302",
      "pull_request_review_id": 1090059219,
      "id": 958301302,
      "node_id": "PRRC_kwDOABII5845HoR2",
      "diff_hunk": "@@ -3365,8 +3359,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n-                LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n+                const bool fAlreadyHave{LookupBlockIndexForPeer(pfrom, inv.hash) != nullptr};",
      "path": "src/net_processing.cpp",
      "position": 225,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "88615157f8eca50ba51b17a9abfb60a420dd1b52",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Variable name should be updated to `already_heard_from_peer` or something",
      "created_at": "2022-08-30T10:26:08Z",
      "updated_at": "2022-08-30T10:26:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r958301302",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/958301302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3710,
      "original_line": 3710,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/967280373",
      "pull_request_review_id": 1102626316,
      "id": 967280373,
      "node_id": "PRRC_kwDOABII5845p4b1",
      "diff_hunk": "@@ -721,6 +721,26 @@ class PeerManagerImpl final : public PeerManager\n     void UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /** Check if a block is on the main chain or best (more work than the active tip) chain. */",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "in_reply_to_id": 958070110,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "#25717 actually introduced `IsAncestorOfBestHeaderOrTip` which essentially does the same thing that `IsBlockInMainOrBestChain` is doing, so i have dropped `IsBlockInMainOrBestChain` entirely.",
      "created_at": "2022-09-09T16:53:33Z",
      "updated_at": "2022-09-12T19:16:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r967280373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/967280373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 724,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/967280446",
      "pull_request_review_id": 1102626316,
      "id": 967280446,
      "node_id": "PRRC_kwDOABII5845p4c-",
      "diff_hunk": "@@ -266,6 +266,18 @@ std::optional<CService> GetLocalAddrForPeer(CNode& node)\n     return std::nullopt;\n }\n \n+uint64_t GetUniqueNetworkID(const CConnman& connman, const CNode& node)\n+{\n+    auto local_socket_bytes = node.addrBind.GetAddrBytes();",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a424f96cd90c2a23d752c7d9d02eeffd87fea4b5",
      "in_reply_to_id": 958058376,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-09-09T16:53:38Z",
      "updated_at": "2022-09-12T19:16:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r967280446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/967280446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/967283340",
      "pull_request_review_id": 1102626316,
      "id": 967283340,
      "node_id": "PRRC_kwDOABII5845p5KM",
      "diff_hunk": "@@ -3365,8 +3359,8 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (inv.IsMsgBlk()) {\n-                const bool fAlreadyHave = AlreadyHaveBlock(inv.hash);\n-                LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n+                const bool fAlreadyHave{LookupBlockIndexForPeer(pfrom, inv.hash) != nullptr};",
      "path": "src/net_processing.cpp",
      "position": 225,
      "original_position": 26,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "88615157f8eca50ba51b17a9abfb60a420dd1b52",
      "in_reply_to_id": 958301302,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You're right, it's not the greatest name but i think renaming it is out-of-scope here.",
      "created_at": "2022-09-09T16:57:32Z",
      "updated_at": "2022-09-12T19:16:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r967283340",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/967283340"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3710,
      "original_line": 3710,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/967291695",
      "pull_request_review_id": 1102626316,
      "id": 967291695,
      "node_id": "PRRC_kwDOABII5845p7Mv",
      "diff_hunk": "@@ -1141,6 +1141,12 @@ class CConnman\n     friend struct ConnmanTestMsg;\n };\n \n+/**\n+ * Get a unique identifier for a peer based on the connections network and the",
      "path": "src/net.h",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a424f96cd90c2a23d752c7d9d02eeffd87fea4b5",
      "in_reply_to_id": 958053003,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have changed the comment up a bit, let me know if you think that was an improvement",
      "created_at": "2022-09-09T17:08:08Z",
      "updated_at": "2022-09-12T19:16:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r967291695",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/967291695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1145,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968835250",
      "pull_request_review_id": 1102626316,
      "id": 968835250,
      "node_id": "PRRC_kwDOABII5845v0Cy",
      "diff_hunk": "@@ -3856,7 +3856,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         {\n         LOCK(cs_main);\n \n-        if (!m_chainman.m_blockman.LookupBlockIndex(cmpctblock.header.hashPrevBlock)) {\n+        if (!LookupBlockIndexForPeer(pfrom, cmpctblock.header.hashPrevBlock)) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "a89e7e690f48aa133395406a1c289f2316b45191",
      "in_reply_to_id": 958249936,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added some comments here",
      "created_at": "2022-09-12T19:15:44Z",
      "updated_at": "2022-09-12T19:16:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r968835250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/968835250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971113915",
      "pull_request_review_id": 1107942626,
      "id": 971113915,
      "node_id": "PRRC_kwDOABII58454gW7",
      "diff_hunk": "@@ -996,6 +1016,33 @@ static bool CanServeWitnesses(const Peer& peer)\n     return peer.m_their_services & NODE_WITNESS;\n }\n \n+void PeerManagerImpl::UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip)\n+{\n+    AssertLockHeld(cs_main);\n+    if (!potential_new_tip) return;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4af7fc8be10c3ba135d7d63be0378eec461f552a",
      "in_reply_to_id": 958061702,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed this to take a reference to CBlockIndex, since most of the call sites where guaranteed to pass a non-null index anyway.",
      "created_at": "2022-09-14T17:36:19Z",
      "updated_at": "2022-09-14T17:36:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r971113915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971113915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971113961",
      "pull_request_review_id": 1107942707,
      "id": 971113961,
      "node_id": "PRRC_kwDOABII58454gXp",
      "diff_hunk": "@@ -996,6 +1016,33 @@ static bool CanServeWitnesses(const Peer& peer)\n     return peer.m_their_services & NODE_WITNESS;\n }\n \n+void PeerManagerImpl::UpdateChainTipSet(std::set<const CBlockIndex*>& chain_tips, const CBlockIndex* potential_new_tip)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "4af7fc8be10c3ba135d7d63be0378eec461f552a",
      "in_reply_to_id": 958065550,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done!",
      "created_at": "2022-09-14T17:36:23Z",
      "updated_at": "2022-09-14T17:36:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r971113961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971113961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971114471",
      "pull_request_review_id": 1107943491,
      "id": 971114471,
      "node_id": "PRRC_kwDOABII58454gfn",
      "diff_hunk": "@@ -2522,17 +2571,28 @@ void PeerManagerImpl::ProcessHeadersMessage(CNode& pfrom, Peer& peer,\n     const CBlockIndex *pindexLast = nullptr;\n \n     // Do these headers connect to something in our block index?\n-    bool headers_connect_blockindex{WITH_LOCK(::cs_main, return m_chainman.m_blockman.LookupBlockIndex(headers[0].hashPrevBlock) != nullptr)};\n-    if (!headers_connect_blockindex) {\n-        if (nCount <= MAX_BLOCKS_TO_ANNOUNCE) {\n-            // If this looks like it could be a BIP 130 block announcement, use\n-            // special logic for handling headers that don't connect, as this\n-            // could be benign.\n-            HandleFewUnconnectingHeaders(pfrom, peer, headers);\n-        } else {\n-            Misbehaving(peer, 10, \"invalid header received\");\n+    {\n+        LOCK(cs_main);\n+        if (!LookupBlockIndexForPeer(pfrom, headers.front().hashPrevBlock)) {\n+            CNodeState* node_state{State(pfrom.GetId())};\n+            LogPrint(BCLog::NET, \"received header %s: %s: %s (peer=%d, nUnconnectingHeaders=%d, nCount=%d)\\n\",\n+                     headers[0].GetHash().ToString(),\n+                     m_chainman.m_blockman.LookupBlockIndex(headers.front().hashPrevBlock) ?\n+                         \"we should not leak the existence of the previous block\" :\n+                         \"missing prev block\",\n+                     headers[0].hashPrevBlock.ToString(),\n+                     pfrom.GetId(), node_state->nUnconnectingHeaders,\n+                     nCount);\n+            if (nCount <= MAX_BLOCKS_TO_ANNOUNCE) {\n+                // If this looks like it could be a BIP 130 block announcement, use\n+                // special logic for handling headers that don't connect, as this\n+                // could be benign.\n+                HandleFewUnconnectingHeaders(pfrom, peer, headers);\n+            } else {\n+                Misbehaving(peer, 10, \"invalid header received\");\n+            }\n+            return;\n         }\n-        return;\n     }\n \n     // At this point, the headers connect to something in our block index.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "509b073c462bdb4506f8827017004329b6c9cd60",
      "in_reply_to_id": 958090635,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this comment is still accurate, at that point the headers will never not connect to something in the index.",
      "created_at": "2022-09-14T17:36:58Z",
      "updated_at": "2022-09-14T17:36:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r971114471",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/971114471"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2937,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/972896603",
      "pull_request_review_id": 1110495204,
      "id": 972896603,
      "node_id": "PRRC_kwDOABII5845_Tlb",
      "diff_hunk": "@@ -1167,6 +1167,13 @@ class CConnman\n     friend struct ConnmanTestMsg;\n };\n \n+/**\n+ * Get a unique identifier for the network (e.g. Tor, IPv4/6) of a connection.",
      "path": "src/net.h",
      "position": 5,
      "original_position": 5,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "fbf19213001f30ee15a41c8f923ab4f124758502",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: From my reading of the first line of the comment, it looks like this is just a network type identifier (without the local socket). e.g., tor=0, ipv4=1, etc.",
      "created_at": "2022-09-16T10:47:30Z",
      "updated_at": "2022-09-16T10:47:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r972896603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/972896603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1171,
      "original_line": 1171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1124917812",
      "pull_request_review_id": 1324479813,
      "id": 1124917812,
      "node_id": "PRRC_kwDOABII585DDOI0",
      "diff_hunk": "@@ -773,6 +773,26 @@ class PeerManagerImpl final : public PeerManager\n     bool AlreadyHaveTx(const GenTxid& gtxid)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main, !m_recent_confirmed_transactions_mutex);\n \n+    /**\n+     * Map of seen chain tip sets keyed by unique network ID.\n+     *\n+     * The size of each chain tip set is limited to the number of chain tips in\n+     * our global block index.\n+     */\n+    std::map<uint64_t, std::set<const CBlockIndex*>> m_chain_tip_sets GUARDED_BY(cs_main);\n+\n+    /** Get the chain tip set for pfrom's network. */\n+    std::set<const CBlockIndex*>& GetChainTipSetForPeerNetwork(const CNode& node)\n+        EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+     * Update the chain tip set for a given peer and new block hash by\n+     * replacing an existing tip if it is an ancestor of the new block or by\n+     * adding a new tip if none of the existing chain tips were replaced.\n+     */\n+    void UpdateChainTipSet(const CNode& node, const CBlockIndex& potential_new_tip)",
      "path": "src/net_processing.cpp",
      "position": 21,
      "original_position": 21,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "86f19bdab78c09a124b15e2d4a72439f13281999",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "did i understand this correctly? - `UpdateChainTipSet` updates chain tip set based on: \r\n    1. the whole block/valid headers we received and were told of from other nodes on the same network\r\n    2. when we switch networks, chain tip set initially would only contain [tip of active chain.](https://github.com/bitcoin/bitcoin/blob/86f19bdab78c09a124b15e2d4a72439f13281999/src/net_processing.cpp#L2653)\r\n    3. inbound and outbound connections on same network would have different chain tip set. is this intentional?\r\n\r\nif we mine a block and tell other nodes on the network about it, should we update the chain tip set? (i haven't checked if `UpdateChainTipSet` is called in all the locations.) are there other situations in which a block isn’t inserted into the chain tip set?",
      "created_at": "2023-03-03T19:21:59Z",
      "updated_at": "2023-03-03T19:35:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r1124917812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1124917812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 793,
      "original_line": 793,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1124920540",
      "pull_request_review_id": 1324479813,
      "id": 1124920540,
      "node_id": "PRRC_kwDOABII585DDOzc",
      "diff_hunk": "@@ -2018,6 +2046,21 @@ std::set<const CBlockIndex*>& PeerManagerImpl::GetChainTipSetForPeerNetwork(cons\n     return m_chain_tip_sets.emplace(GetUniqueNetworkID(m_connman, node), std::set<const CBlockIndex*>()).first->second;\n }\n \n+const CBlockIndex* PeerManagerImpl::LookupBlockIndexForPeer(const CNode& node, const uint256& hash)\n+{\n+    AssertLockHeld(cs_main);\n+\n+    const CBlockIndex* index{m_chainman.m_blockman.LookupBlockIndex(hash)};\n+    if (!index) return nullptr;\n+\n+    if (IsAncestorOfBestHeaderOrTip(index) ||",
      "path": "src/net_processing.cpp",
      "position": 53,
      "original_position": 53,
      "commit_id": "d70034232759d2cd88c5bf21e08896ec2b9dbede",
      "original_commit_id": "b10569e8bbc66a0f9c10a6395843388b04c489de",
      "in_reply_to_id": null,
      "user": {
        "login": "stratospher",
        "id": 44024636,
        "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stratospher",
        "html_url": "https://github.com/stratospher",
        "followers_url": "https://api.github.com/users/stratospher/followers",
        "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
        "organizations_url": "https://api.github.com/users/stratospher/orgs",
        "repos_url": "https://api.github.com/users/stratospher/repos",
        "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stratospher/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`IsAncestorOfBestHeaderOrTip` would already by contained in `IsBlockInChainTipSet` right? do we include `IsAncestorOfBestHeaderOrTip` check for performance gain instead of iterating over all the chain tips? or is there some other reason?",
      "created_at": "2023-03-03T19:25:00Z",
      "updated_at": "2023-03-03T19:35:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24571#discussion_r1124920540",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1124920540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24571"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2055,
      "original_line": 2056,
      "side": "RIGHT"
    }
  ]
}