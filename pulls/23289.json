{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289",
    "id": 759514583,
    "node_id": "PR_kwDOABII584tRUXX",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23289",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/23289.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/23289.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d9803f7a0a33688f7429cf10384244f4770851ca",
    "number": 23289,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: add stress tests for initialization",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In the course of coming up with a test plan for #23280, I thought it would be neat to include a Python snippet showing how I tested the initialization process. I quickly realized I was reinventing the functional test framework... so here's a new test.\r\n\r\nThis change bangs init around like the Fonz hitting a jukebox. It adds some interesting (read: lazy and random) coverage for the initialization process by \r\n- interrupting init with SIGTERM after certain log statements,\r\n- interrupting init at random points, and\r\n- starting init with some essential data missing (block files, block indices, etc.) to test init error paths.\r\n\r\nAs far as I can tell, some of these code paths are uncovered otherwise (namely the startup errors).\r\n\r\n---\r\n\r\nIncidentally, I think I may have uncovered some kind of a bug or race condition with indexing initialization based on an intermittent failure in this testcase. This test sometimes fails after shutting down immediately after `loadblk` thread start:\r\n```\r\n2021-10-15T21:14:51.295000Z TestFramework (INFO): Starting node and will exit after line 'loadblk thread start'\r\n  36   │ 2021-10-15T21:14:51.296000Z TestFramework.node0 (DEBUG): bitcoind started, waiting for RPC to come up\r\n  37   │ 2021-10-15T21:14:51.493000Z TestFramework (INFO): terminating node after 110 log lines seen\r\n  38   │ 2021-10-15T21:14:51.625000Z TestFramework (INFO): Starting node and will exit after line 'txindex thread start'\r\n  39   │ 2021-10-15T21:14:51.625000Z TestFramework.node0 (DEBUG): bitcoind started, waiting for RPC to come up\r\n  ------> [[ FAILURE HERE ]] 2021-10-15T21:15:21.626000Z TestFramework (WARNING): missed line {bail_line}; bailing now after {num_lines} lines\r\n```\r\nand then fails to start up afterwards. Combined logs showing `Error: txindex best block of the index goes beyond pruned data`, when the node under test is not pruned:\r\n\r\n```\r\n  node0 2021-10-15T21:16:51.848439Z [shutoff] [validationinterface.cpp:244] [ChainStateFlushed] Enqueuing ChainStateFlushed: block hash=1014bc4ff4917602ae53d10e9dfe230af4b7d52a6cdaa8a47798b9c288180907\r\n   node0 2021-10-15T21:16:51.848954Z [shutoff] [init.cpp:302] [Shutdown] Shutdown: done\r\n   test  2021-10-15T21:16:51.882000Z TestFramework (ERROR): Unexpected exception caught during testing\r\n\t\t\t\t     Traceback (most recent call last):\r\n\t\t\t\t       File \"/home/james/src/bitcoin/test/functional/test_framework/test_framework.py\", line 132, in main\r\n\t\t\t\t\t self.run_test()\r\n\t\t\t\t       File \"/home/james/src/bitcoin/./test/functional/stress_init.py\", line 87, in run_test\r\n\t\t\t\t\t check_clean_start()\r\n\t\t\t\t       File \"/home/james/src/bitcoin/./test/functional/stress_init.py\", line 60, in check_clean_start\r\n\t\t\t\t\t node.wait_for_rpc_connection()\r\n\t\t\t\t       File \"/home/james/src/bitcoin/test/functional/test_framework/test_node.py\", line 224, in wait_for_rpc_connection\r\n\t\t\t\t\t raise FailedToStartError(self._node_msg(\r\n\t\t\t\t     test_framework.test_node.FailedToStartError: [node 0] bitcoind exited with status 1 during initialization\r\n   test  2021-10-15T21:16:51.882000Z TestFramework (DEBUG): Closing down network thread\r\n   test  2021-10-15T21:16:51.933000Z TestFramework (INFO): Stopping nodes\r\n   test  2021-10-15T21:16:51.933000Z TestFramework.node0 (DEBUG): Stopping node\r\n\r\n   node0 stderr Error: txindex best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\r\n   node0 stderr Error: txindex best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\r\n   node0 stderr Error: txindex best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\r\n   node0 stderr Error: txindex best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\r\n   node0 stderr Error: txindex best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\r\n```",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2021-10-15T21:46:43Z",
    "updated_at": "2022-12-10T10:02:16Z",
    "closed_at": "2021-11-30T19:50:23Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-11-30T19:50:23Z",
    "merge_commit_sha": "aef8c7cf82cff24ddd88fab0a3c5fb93de467886",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "jamesob:2021-10-stress-test-init",
      "ref": "2021-10-stress-test-init",
      "sha": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 42077031,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MjA3NzAzMQ==",
        "name": "bitcoin",
        "full_name": "jamesob/bitcoin",
        "owner": {
          "login": "jamesob",
          "id": 73197,
          "node_id": "MDQ6VXNlcjczMTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jamesob",
          "html_url": "https://github.com/jamesob",
          "followers_url": "https://api.github.com/users/jamesob/followers",
          "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
          "organizations_url": "https://api.github.com/users/jamesob/orgs",
          "repos_url": "https://api.github.com/users/jamesob/repos",
          "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jamesob/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jamesob/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jamesob/bitcoin",
        "archive_url": "https://api.github.com/repos/jamesob/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jamesob/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jamesob/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jamesob/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jamesob/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jamesob/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jamesob/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jamesob/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jamesob/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jamesob/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jamesob/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jamesob/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jamesob/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jamesob/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jamesob/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jamesob/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jamesob/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jamesob/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jamesob/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jamesob/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jamesob/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jamesob/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jamesob/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jamesob/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jamesob/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jamesob/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jamesob/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jamesob/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jamesob/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jamesob/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jamesob/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jamesob/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jamesob/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jamesob/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jamesob/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jamesob/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jamesob/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jamesob/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jamesob/bitcoin/hooks",
        "svn_url": "https://github.com/jamesob/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 252891,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T19:20:56Z",
        "created_at": "2015-09-07T22:18:03Z",
        "updated_at": "2023-05-05T06:31:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e77d9679fd0c6ad3be997e6160ccdbfc11ac7be7",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 194,
    "deletions": 3,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 45,
    "comments": 15
  },
  "events": [
    {
      "event": "review_requested",
      "id": 5472103525,
      "node_id": "RRE_lADOABII5849Q6pazwAAAAFGKaxl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5472103525",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-15T21:53:10Z",
      "requested_reviewer": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5472124422,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFGKf4G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5472124422",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-15T22:01:25Z"
    },
    {
      "event": "labeled",
      "id": 5472158873,
      "node_id": "LE_lADOABII5849Q6pazwAAAAFGKoSZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5472158873",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-15T22:13:55Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5472161931,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFGKpCL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5472161931",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-15T22:15:12Z"
    },
    {
      "event": "reviewed",
      "id": 781389546,
      "node_id": "PRR_kwDOABII584ukw7q",
      "url": null,
      "actor": null,
      "commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-781389546",
      "submitted_at": "2021-10-16T21:00:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "reviewed",
      "id": 781432011,
      "node_id": "PRR_kwDOABII584uk7TL",
      "url": null,
      "actor": null,
      "commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Strong concept ACK. I tried doing this manually for a few releases in the past, but a functional test simplifies that a lot.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-781432011",
      "submitted_at": "2021-10-17T10:20:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "commented",
      "id": 945181371,
      "node_id": "IC_kwDOABII5844VlK7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/945181371",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-17T19:30:35Z",
      "updated_at": "2021-10-17T19:30:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Strong Concept ACK\r\n\r\nFunctional testing, unit testing, fuzz testing and now stress testing: great to see!\r\n\r\nFault injection testing and mutation testing next in line? :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-945181371",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "reviewed",
      "id": 782156405,
      "node_id": "PRR_kwDOABII584unsJ1",
      "url": null,
      "actor": null,
      "commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Tested ACK 1888c8d on Ubuntu 20.04",
      "user": {
        "login": "lsilva01",
        "id": 84432093,
        "node_id": "MDQ6VXNlcjg0NDMyMDkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lsilva01",
        "html_url": "https://github.com/lsilva01",
        "followers_url": "https://api.github.com/users/lsilva01/followers",
        "following_url": "https://api.github.com/users/lsilva01/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lsilva01/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lsilva01/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
        "organizations_url": "https://api.github.com/users/lsilva01/orgs",
        "repos_url": "https://api.github.com/users/lsilva01/repos",
        "events_url": "https://api.github.com/users/lsilva01/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lsilva01/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-782156405",
      "submitted_at": "2021-10-18T14:34:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "reviewed",
      "id": 782393980,
      "node_id": "PRR_kwDOABII584uomJ8",
      "url": null,
      "actor": null,
      "commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-782393980",
      "submitted_at": "2021-10-18T17:50:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5480496341,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFGqbzV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5480496341",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T18:41:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5486412172,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFHBAGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5486412172",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T16:04:15Z"
    },
    {
      "event": "commented",
      "id": 946896373,
      "node_id": "IC_kwDOABII5844cH31",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/946896373",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T16:30:39Z",
      "updated_at": "2021-10-19T16:30:39Z",
      "author_association": "MEMBER",
      "body": "Code Review ACK 71ba24a724556af02901d2aa06a71d24e18f6f3c\r\n\r\nThis is great, and is very helpful for testing initialization! Thank you James!\r\n\r\n<details>\r\n <summary>Naive idea</summary>\r\n Since GDB has a Python API, perhaps someone can use that for more granular stress testing (shouldn't be in this PR since it seems like quite a large undertaking)\r\n</details>",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-946896373",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "review_requested",
      "id": 5487923557,
      "node_id": "RRE_lADOABII5849Q6pazwAAAAFHGxFl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5487923557",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T21:02:40Z",
      "requested_reviewer": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 947131763,
      "node_id": "IC_kwDOABII5844dBVz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947131763",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T21:48:40Z",
      "updated_at": "2021-10-19T21:48:40Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, very cool idea.\r\n\r\nI also encountered the intermittent `Error: txindex best block of the index goes beyond pruned data` once while running the new test yesterday - what is the best way to proceed? Should that issue be analysed/fixed before merging this?",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-947131763",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "reviewed",
      "id": 784196148,
      "node_id": "PRR_kwDOABII584uveI0",
      "url": null,
      "actor": null,
      "commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-784196148",
      "submitted_at": "2021-10-20T09:25:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5492131616,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFHW0cg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5492131616",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T13:57:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5492211366,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFHXH6m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5492211366",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T14:08:07Z"
    },
    {
      "event": "reviewed",
      "id": 784566732,
      "node_id": "PRR_kwDOABII584uw4nM",
      "url": null,
      "actor": null,
      "commit_id": "c870ee0d95459e50f01e6eb24b1e0e29df5a260d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-784566732",
      "submitted_at": "2021-10-20T14:24:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "commented",
      "id": 947721502,
      "node_id": "IC_kwDOABII5844fRUe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947721502",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T14:26:30Z",
      "updated_at": "2021-10-20T14:26:30Z",
      "author_association": "MEMBER",
      "body": "> I also encountered the intermittent Error: txindex best block of the index goes beyond pruned data once while running the new test yesterday - what is the best way to proceed? Should that issue be analysed/fixed before merging this?\r\n\r\nOn the one hand, holding off on merging test coverage because there may be a bug in master seems wrong. On the other hand, spurious test failures in CI for a hard-to-track-down bug will be annoying.\r\n\r\nFor context and neither here nor there: this bug seems pretty minor - under very particular circumstances (SIGTERM during just the right init point) it may cause a user to have to reindex. But that said, we should certainly have a better understanding of why it's happening.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-947721502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "commented",
      "id": 947723762,
      "node_id": "IC_kwDOABII5844fR3y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947723762",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T14:28:49Z",
      "updated_at": "2021-10-20T14:28:49Z",
      "author_association": "MEMBER",
      "body": "If txindex is causing issues here, maybe submit it in a follow-up pull request?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-947723762",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5492360081,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFHXsOR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5492360081",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T14:28:50Z"
    },
    {
      "event": "reviewed",
      "id": 784649277,
      "node_id": "PRR_kwDOABII584uxMw9",
      "url": null,
      "actor": null,
      "commit_id": "ff2fedef5d67f8a5e5581b23de61d695135c751d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-784649277",
      "submitted_at": "2021-10-20T15:22:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzZjg1NjE2YThkOWM5YTFiMDU0ZTQ5MmVjYTRkMTk5MDI4ZjM0ZGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23f85616a8d9c9a1b054e492eca4d199028f34dc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/23f85616a8d9c9a1b054e492eca4d199028f34dc",
      "tree": {
        "sha": "920190f802624853e69a1d95be1f371f0929bc74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/920190f802624853e69a1d95be1f371f0929bc74"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 920190f802624853e69a1d95be1f371f0929bc74\nparent 02ccf1086ea02635d59282e5dd2b3eeb35484753\nauthor James O'Beirne <james.obeirne@pm.me> 1634332985 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1634743496 -0400\n\ntest: add node.chain_path and node.debug_log_path\n\nTo allow easier access to the node's datadir and debug logs.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmFwNMkACgkQepNdrbLE\nTwXhhg/+LAdBnwKh1N31rKdtDxSPtZ3ENJ0HkZiHdpozOVA5sQ3Ff/jIUjtlZK6A\nWJPIrs4L1OJ1UpJAMtfOte5n15VXXL/VWhfHlf0L5K4K9qcL8UnD4re1nadxw80b\n9ZxouP7hbrKuoTK3dEBbRsvrBplfnNMc1IdeKDvaLKyvGlrHwlJ8uJP+9q3sdY6t\nyJao7SnW1UHwmJmxE1smyM+csXqnmv3P5Im5PahODfTveXH1s22SLUo6dJQb3QGi\nGFW2mKUG0LS3wmIEc5kNVOwDjj2tdXpbbNMkEZ2FNIBiI7vtLF+c9U66bhuv4ar1\nbGZp22VAgBYX97cobGaBo8EPjpu+CPOkvmUZuuIbVcq4OL3NBSV9LQUAIHa3NKLC\ne/jx9q44+k0J5xSVOsd0LhFnvovNLwl2M1GtykWaKA9WfW2cmrM7d9rXMzSSb6YY\nPGlcnlv3c8JUu3NQ5VOsEtR0R1CCek5DMo1UhZYdEFyNqBo4H/ncIQHNfI0jV12U\nkcLwAaW5OPHTBLzO6oWqQ9Qq803O0yVF+eUo1AixLQ5ux0wOXwPXMxBfQPjM2Zpv\nEcryAMxNWU7xx6YsR/qe4Eec5gtILdWOgAELjdAXizPY45AJ7VP2R0Ii7Y6vN5ow\nlkEsWOKO+/kX5HNWWpfbBdXGrCKTiNyHN9FolhNj9PW3e1V63AM=\n=iKF+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02ccf1086ea02635d59282e5dd2b3eeb35484753",
          "sha": "02ccf1086ea02635d59282e5dd2b3eeb35484753",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/02ccf1086ea02635d59282e5dd2b3eeb35484753"
        }
      ],
      "message": "test: add node.chain_path and node.debug_log_path\n\nTo allow easier access to the node's datadir and debug logs.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-20T15:24:56Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-15T21:23:05Z"
      },
      "sha": "23f85616a8d9c9a1b054e492eca4d199028f34dc"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5492776873,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFHZR-p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5492776873",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T15:26:25Z"
    },
    {
      "event": "reviewed",
      "id": 784671386,
      "node_id": "PRR_kwDOABII584uxSKa",
      "url": null,
      "actor": null,
      "commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK. Nice idea!",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-784671386",
      "submitted_at": "2021-10-20T16:03:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5493282307,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFHbNYD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5493282307",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T16:50:25Z"
    },
    {
      "event": "commented",
      "id": 947890550,
      "node_id": "IC_kwDOABII5844f6l2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/947890550",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T17:37:04Z",
      "updated_at": "2021-10-20T17:37:58Z",
      "author_association": "MEMBER",
      "body": "> For context and neither here nor there: this bug seems pretty minor - under very particular circumstances (SIGTERM during just the right init point) it may cause a user to have to reindex. But that said, we should certainly have a better understanding of why it's happening.\r\n\r\nI see different things locally: For me, the failure happens in roughly 1-2% of the runs in the `will exit after line 'txindex thread start'` run, whereas `check_clean_start` of the previous run for `loadblk` still passes. \r\nAccordingly, if I remove all lines except `txindex thread start` from `lines_to_bail_after`, I'll still get occasional fails (without any SIGTERM involved), so the failure does seem to occur \"unprovoked\".",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-947890550",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5493802591,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFHdMZf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5493802591",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-20T18:29:19Z"
    },
    {
      "event": "commented",
      "id": 948184596,
      "node_id": "IC_kwDOABII5844hCYU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/948184596",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-21T01:53:03Z",
      "updated_at": "2021-10-21T01:53:03Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-948184596",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5495510981,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFHjtfF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5495510981",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-21T02:29:52Z"
    },
    {
      "event": "reviewed",
      "id": 785566556,
      "node_id": "PRR_kwDOABII584u0stc",
      "url": null,
      "actor": null,
      "commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nThis test fails intermittently for me. It failed on the `AssertionError: node failed to start (line: 'txindex thread start')` line on the second run. I think we should remove all failures before merging this to master to avoid spurious CI failures in unrelated PRs.\r\n\r\nI wonder if it makes sense to use BBF programs to hook into USDTs rather than have the python test framework poll for log lines as a trigger for process termination. There's potentially a lot of non-determinism in timing between the bitcoind process writing a log line, having that log flushed to disk, and the python process reading that line and terminating the bitcoind process. With a BPF program being triggered by USDTs, the kernel could terminate the process at the exact point we're interested in. This test is already disabled for windows, so I don't think it'd be a huge problem to require eBPF (although it may make it impossible to run on CI).",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-785566556",
      "submitted_at": "2021-10-21T12:19:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "reviewed",
      "id": 787544697,
      "node_id": "PRR_kwDOABII584u8Pp5",
      "url": null,
      "actor": null,
      "commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-787544697",
      "submitted_at": "2021-10-24T19:25:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "commented",
      "id": 951589284,
      "node_id": "IC_kwDOABII5844uBmk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/951589284",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T06:02:57Z",
      "updated_at": "2021-11-30T23:13:20Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-951589284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "reviewed",
      "id": 789617600,
      "node_id": "PRR_kwDOABII584vEJvA",
      "url": null,
      "actor": null,
      "commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-789617600",
      "submitted_at": "2021-10-26T16:04:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ5ODAzZjdhMGEzMzY4OGY3NDI5Y2YxMDM4NDI0NGY0NzcwODUxY2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d9803f7a0a33688f7429cf10384244f4770851ca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d9803f7a0a33688f7429cf10384244f4770851ca",
      "tree": {
        "sha": "d9e122f2d82a132c2fced62f6b66691520afc970",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9e122f2d82a132c2fced62f6b66691520afc970"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d9e122f2d82a132c2fced62f6b66691520afc970\nparent 23f85616a8d9c9a1b054e492eca4d199028f34dc\nauthor James O'Beirne <james.obeirne@pm.me> 1634333388 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1635266796 -0400\n\ntest: add stress tests for initialization\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmF4MO0ACgkQepNdrbLE\nTwVq1A/9HlOgiduhz54QfcrDirqNE4AfvQNSCAUbJUAjdlMeFMsrhsfBl943MlXD\n5KaWlqAGpX7UnEt5CaeS0P/XDL/OpF1O1u5Z/B7Lbd2Wz34QV7fkRXwQrCg6cerR\nyiaBJWQPkUJ9xoh9vTJeViwSeiCU45rmE8X4mYJY4mvhRaLJoTzA/lk54Tb62lWS\nKybN61eelJMC87bbWsauH6X0sDfkqh5eKaZhtM5MwksqTNy3L+rG+4Siyx12jtwL\nq8U0KbTuFIbc8hnYcWOoGkhdUtad9mVyOOA5nRAi+RGEapoJuwfgyNP+skHsAldL\nNruyg6iUVGCkLIOTAsCf6mijOSlVYT4i+sEuO6PQe8pbHyXuldQxwiWNHwdOu3uh\nTXmZp9j6ZcmX0Ir12Ivpj6178XT7hG7xura8zAPtF0xSivw5CFGuLoZP3arLidQu\n4AtQpcnZZL7FWXuT2DvrlnnMZ+tRwE8U+tnHjorlGxVtMCcpEXeIydv7MVYI2z6/\nFNTp1MLbGe5nx73LAhm1RwKfGFxa2qVDwzGSHSAHNZx2gnRZKE/aMDRzg5WQUWsJ\ni3hTN5A/F+WeiIIdY69hDZw970Afa8Uz45L9mmSgJ6lCfdSg6Zww2xqO8o1rt6TO\nOqttml9lI3T3e8RwAVeZSha6y3fk82HHzPYiNt0POJl+uEoRudw=\n=t6t9\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23f85616a8d9c9a1b054e492eca4d199028f34dc",
          "sha": "23f85616a8d9c9a1b054e492eca4d199028f34dc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/23f85616a8d9c9a1b054e492eca4d199028f34dc"
        }
      ],
      "message": "test: add stress tests for initialization",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-26T16:46:36Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-10-15T21:29:48Z"
      },
      "sha": "d9803f7a0a33688f7429cf10384244f4770851ca"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5522047130,
      "node_id": "HRFPE_lADOABII5849Q6pazwAAAAFJI8Ca",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5522047130",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T16:50:20Z"
    },
    {
      "event": "commented",
      "id": 952228571,
      "node_id": "IC_kwDOABII5844wdrb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952228571",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T19:06:03Z",
      "updated_at": "2021-10-26T19:06:21Z",
      "author_association": "MEMBER",
      "body": "Okay, I've addressed a bunch of feedback and disabled txindex for the time being. I think this is a good first pass on this test provided all the non-deterministic failures have been removed. @mzumsande/@dongcarl if you'd like to PR the indexing change and fix you're welcome to, otherwise I can take care of it shortly.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-952228571",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "mentioned",
      "id": 5522761378,
      "node_id": "MEE_lADOABII5849Q6pazwAAAAFJLqai",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5522761378",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T19:06:03Z"
    },
    {
      "event": "subscribed",
      "id": 5522761383,
      "node_id": "SE_lADOABII5849Q6pazwAAAAFJLqan",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5522761383",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T19:06:04Z"
    },
    {
      "event": "referenced",
      "id": 5523454073,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFJOTh5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5523454073",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "96badd667c554fcca4a5738ba9ed4c18ae108cad",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/96badd667c554fcca4a5738ba9ed4c18ae108cad",
      "created_at": "2021-10-26T21:26:10Z"
    },
    {
      "event": "commented",
      "id": 952364073,
      "node_id": "IC_kwDOABII5844w-wp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/952364073",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T22:07:04Z",
      "updated_at": "2021-10-26T22:07:04Z",
      "author_association": "MEMBER",
      "body": "> Okay, I've addressed a bunch of feedback and disabled txindex for the time being. I think this is a good first pass on this test provided all the non-deterministic failures have been removed. @mzumsande/@dongcarl if you'd like to PR the indexing change and fix you're welcome to, otherwise I can take care of it shortly.\r\n\r\nI opened #23365 to fix the intermittent issue.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-952364073",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "mentioned",
      "id": 5523619928,
      "node_id": "MEE_lADOABII5849Q6pazwAAAAFJO8BY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5523619928",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T22:07:05Z"
    },
    {
      "event": "subscribed",
      "id": 5523619930,
      "node_id": "SE_lADOABII5849Q6pazwAAAAFJO8Ba",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5523619930",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-26T22:07:05Z"
    },
    {
      "event": "commented",
      "id": 965084690,
      "node_id": "IC_kwDOABII5845hgYS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/965084690",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-10T12:28:10Z",
      "updated_at": "2021-11-10T12:28:10Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-965084690",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "commented",
      "id": 970465173,
      "node_id": "IC_kwDOABII58452B-V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/970465173",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-16T16:51:53Z",
      "updated_at": "2021-11-16T16:51:53Z",
      "author_association": "MEMBER",
      "body": "Anything left here? I think as things stand this is a stable test that adds some good coverage. AFAIK there's no outstanding feedback aside from a few nits and marginal suggestions.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-970465173",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "referenced",
      "id": 5678346761,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFSdLIJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5678346761",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "698c524698c33595a4d555eaa9e21bc19b4d3e93",
      "commit_url": "https://api.github.com/repos/mzumsande/bitcoin/commits/698c524698c33595a4d555eaa9e21bc19b4d3e93",
      "created_at": "2021-11-26T15:29:02Z"
    },
    {
      "event": "commented",
      "id": 982965388,
      "node_id": "IC_kwDOABII5846ltyM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/982965388",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-30T19:49:50Z",
      "updated_at": "2021-11-30T19:49:50Z",
      "author_association": "MEMBER",
      "body": "Code review ACK d9803f7a0a33688f7429cf10384244f4770851ca",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-982965388",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "merged",
      "id": 5694385736,
      "node_id": "ME_lADOABII5849Q6pazwAAAAFTaW5I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5694385736",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "aef8c7cf82cff24ddd88fab0a3c5fb93de467886",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aef8c7cf82cff24ddd88fab0a3c5fb93de467886",
      "created_at": "2021-11-30T19:50:23Z"
    },
    {
      "event": "closed",
      "id": 5694385758,
      "node_id": "CE_lADOABII5849Q6pazwAAAAFTaW5e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5694385758",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-30T19:50:23Z"
    },
    {
      "event": "referenced",
      "id": 5696234984,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFThaXo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5696234984",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f5c617dc72bada3ac2be39163c50672b87585f50",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/f5c617dc72bada3ac2be39163c50672b87585f50",
      "created_at": "2021-12-01T04:09:43Z"
    },
    {
      "event": "commented",
      "id": 983491031,
      "node_id": "IC_kwDOABII5846nuHX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/983491031",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-01T10:15:49Z",
      "updated_at": "2021-12-01T10:15:49Z",
      "author_association": "MEMBER",
      "body": "I'm surprised this was merged, given that there were no ACKs on the latest branch, and there were still unresolved approach/implementation issues and comments, eg:\r\n\r\n- https://github.com/bitcoin/bitcoin/pull/23289#discussion_r759958889\r\n- https://github.com/bitcoin/bitcoin/pull/23289#pullrequestreview-785566556",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-983491031",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "commented",
      "id": 984204779,
      "node_id": "IC_kwDOABII5846qcXr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/984204779",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-02T01:18:33Z",
      "updated_at": "2021-12-02T01:18:33Z",
      "author_association": "MEMBER",
      "body": "This is also the cause of the recent sporadic failures in our CI. See #23646. ",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#issuecomment-984204779",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23289"
    },
    {
      "event": "referenced",
      "id": 5756571858,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFXHlDS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5756571858",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bf66e258a84e18935fde3ebb9a4b0392bf883222",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf66e258a84e18935fde3ebb9a4b0392bf883222",
      "created_at": "2021-12-13T12:39:07Z"
    },
    {
      "event": "referenced",
      "id": 5757730121,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFXL_1J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5757730121",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "20ddba85a3e16d81b103a35e5c96c9f44d071ab6",
      "commit_url": "https://api.github.com/repos/0xB10C/bitcoin/commits/20ddba85a3e16d81b103a35e5c96c9f44d071ab6",
      "created_at": "2021-12-13T15:30:30Z"
    },
    {
      "event": "referenced",
      "id": 5758345983,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFXOWL_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5758345983",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1fd54088eae7740753c21b57cc538670af61c38d",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/1fd54088eae7740753c21b57cc538670af61c38d",
      "created_at": "2021-12-13T16:59:19Z"
    },
    {
      "event": "referenced",
      "id": 5807337661,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFaJPC9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5807337661",
      "actor": {
        "login": "RandyMcMillan",
        "id": 152159,
        "node_id": "MDQ6VXNlcjE1MjE1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RandyMcMillan",
        "html_url": "https://github.com/RandyMcMillan",
        "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
        "following_url": "https://api.github.com/users/RandyMcMillan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RandyMcMillan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RandyMcMillan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
        "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
        "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
        "events_url": "https://api.github.com/users/RandyMcMillan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7e002ad06930f372a204fb14a9c5fdc7eff5319a",
      "commit_url": "https://api.github.com/repos/RandyMcMillan/mempool-tab/commits/7e002ad06930f372a204fb14a9c5fdc7eff5319a",
      "created_at": "2021-12-23T00:12:14Z"
    },
    {
      "event": "referenced",
      "id": 5833980716,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFbu3ss",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5833980716",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d69af93223c4008c3255f7e4848ff05d78c514fa",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/d69af93223c4008c3255f7e4848ff05d78c514fa",
      "created_at": "2022-01-03T07:52:38Z"
    },
    {
      "event": "referenced",
      "id": 6004565750,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAFl5mb2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6004565750",
      "actor": {
        "login": "rebroad",
        "id": 1530283,
        "node_id": "MDQ6VXNlcjE1MzAyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rebroad",
        "html_url": "https://github.com/rebroad",
        "followers_url": "https://api.github.com/users/rebroad/followers",
        "following_url": "https://api.github.com/users/rebroad/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rebroad/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rebroad/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
        "organizations_url": "https://api.github.com/users/rebroad/orgs",
        "repos_url": "https://api.github.com/users/rebroad/repos",
        "events_url": "https://api.github.com/users/rebroad/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rebroad/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c54a14e60e5563a44145cd0c6bb52e04eed37937",
      "commit_url": "https://api.github.com/repos/rebroad/bitcoin/commits/c54a14e60e5563a44145cd0c6bb52e04eed37937",
      "created_at": "2022-02-03T17:41:10Z"
    },
    {
      "event": "referenced",
      "id": 7880044210,
      "node_id": "REFE_lADOABII5849Q6pazwAAAAHVr-6y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7880044210",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fdee373b106bf00e4a062f147dbebdf8ce3eaa2b",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/fdee373b106bf00e4a062f147dbebdf8ce3eaa2b",
      "created_at": "2022-11-23T19:10:00Z"
    },
    {
      "event": "locked",
      "id": 8004301834,
      "node_id": "LOE_lADOABII5849Q6pazwAAAAHdF_QK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8004301834",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-10T10:02:16Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730313233",
      "pull_request_review_id": 781389546,
      "id": 730313233,
      "node_id": "PRRC_kwDOABII584rh7IR",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()",
      "path": "test/functional/stress_init.py",
      "position": null,
      "original_position": 84,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`if line and bail_line.lower() in line.lower()` and `(time.time() - start) > MAX_SECS_TO_WAIT` sigterm_node() will be called twice, is this the intention? ",
      "created_at": "2021-10-16T21:00:56Z",
      "updated_at": "2021-10-16T21:00:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730313233",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730313233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730390464",
      "pull_request_review_id": 781432011,
      "id": 730390464,
      "node_id": "PRRC_kwDOABII584riN_A",
      "diff_hunk": "@@ -275,6 +275,7 @@\n     'wallet_taproot.py',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',\n+    'stress_init.py',",
      "path": "test/functional/test_runner.py",
      "position": null,
      "original_position": 4,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this would be called `feature_init`, no?",
      "created_at": "2021-10-17T10:19:26Z",
      "updated_at": "2021-10-17T10:20:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730390464",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730390464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730579472",
      "pull_request_review_id": 781599853,
      "id": 730579472,
      "node_id": "PRRC_kwDOABII584ri8IQ",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()",
      "path": "test/functional/stress_init.py",
      "position": null,
      "original_position": 84,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "in_reply_to_id": 730313233,
      "user": {
        "login": "lsilva01",
        "id": 84432093,
        "node_id": "MDQ6VXNlcjg0NDMyMDkz",
        "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lsilva01",
        "html_url": "https://github.com/lsilva01",
        "followers_url": "https://api.github.com/users/lsilva01/followers",
        "following_url": "https://api.github.com/users/lsilva01/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lsilva01/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lsilva01/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
        "organizations_url": "https://api.github.com/users/lsilva01/orgs",
        "repos_url": "https://api.github.com/users/lsilva01/repos",
        "events_url": "https://api.github.com/users/lsilva01/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lsilva01/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it won't happen, as there is a `break` after these conditions.",
      "created_at": "2021-10-18T05:27:49Z",
      "updated_at": "2021-10-18T05:30:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r730579472",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/730579472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731096739",
      "pull_request_review_id": 782291751,
      "id": 731096739,
      "node_id": "PRRC_kwDOABII584rk6aj",
      "diff_hunk": "@@ -275,6 +275,7 @@\n     'wallet_taproot.py',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',\n+    'stress_init.py',",
      "path": "test/functional/test_runner.py",
      "position": null,
      "original_position": 4,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "in_reply_to_id": 730390464,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep sure, will change.",
      "created_at": "2021-10-18T16:11:30Z",
      "updated_at": "2021-10-18T16:11:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r731096739",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731096739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 278,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731168310",
      "pull_request_review_id": 782388382,
      "id": 731168310,
      "node_id": "PRRC_kwDOABII584rlL42",
      "diff_hunk": "@@ -0,0 +1,161 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()",
      "path": "test/functional/stress_init.py",
      "position": null,
      "original_position": 84,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "1888c8dc40d1dbbffe2f522749151ca8d0efee00",
      "in_reply_to_id": 730313233,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "True! Thanks! missed that break",
      "created_at": "2021-10-18T17:44:09Z",
      "updated_at": "2021-10-18T17:44:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r731168310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/731168310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732561699",
      "pull_request_review_id": 784196148,
      "id": 732561699,
      "node_id": "PRRC_kwDOABII584rqgEj",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 2,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "2017 was 5 years ago",
      "created_at": "2021-10-20T09:01:41Z",
      "updated_at": "2021-10-20T09:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732561699",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732561699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732570270",
      "pull_request_review_id": 784196148,
      "id": 732570270,
      "node_id": "PRRC_kwDOABII584rqiKe",
      "diff_hunk": "@@ -368,21 +368,28 @@ def is_node_stopped(self):\n     def wait_until_stopped(self, timeout=BITCOIND_PROC_WAIT_TIMEOUT):\n         wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\n \n+    @property\n+    def chain_path(self) -> str:\n+        return os.path.join(self.datadir, self.chain)\n+\n+    @property\n+    def debug_log_path(self) -> str:",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 9,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "de0a4e084e92d60acf4f8da383f6e0f5bfd535f4",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not return a Path here when the function is called ..._path?",
      "created_at": "2021-10-20T09:12:09Z",
      "updated_at": "2021-10-20T09:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732570270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732570270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 376,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732572743",
      "pull_request_review_id": 784196148,
      "id": 732572743,
      "node_id": "PRRC_kwDOABII584rqixH",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 55,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "is this needed? `wait_for_rpc_connection` should already do that by waiting for the mempool to be loaded.",
      "created_at": "2021-10-20T09:15:08Z",
      "updated_at": "2021-10-20T09:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732572743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732572743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732575759",
      "pull_request_review_id": 784196148,
      "id": 732575759,
      "node_id": "PRRC_kwDOABII584rqjgP",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 92,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this be an assertion error?",
      "created_at": "2021-10-20T09:18:45Z",
      "updated_at": "2021-10-20T09:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732575759",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732575759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732580386",
      "pull_request_review_id": 784196148,
      "id": 732580386,
      "node_id": "PRRC_kwDOABII584rqkoi",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)\n+            self.log.info(f\"Starting node and will exit after {terminate_after} lines\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 10\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(\"node failed to start\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Test startup errors after removing certain essential files\")\n+\n+        files_to_disturb = {\n+            Path('blocks/index') / '*.ldb': 'Error opening block database.',\n+            Path('chainstate') / '*.ldb': 'Error opening block database.',\n+            Path('blocks') / 'blk*.dat': 'Error loading block database.',\n+        }\n+        chain_path = Path(node.chain_path)\n+\n+        for file_patt, err_fragment in files_to_disturb.items():\n+            target_file = Path(glob.glob(str(chain_path / file_patt))[0])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 141,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Haven't tried this, but what happens when you use:\r\n\r\n```py\r\ntarget_file = node.chain_path.glob(file_patt)[0]",
      "created_at": "2021-10-20T09:24:30Z",
      "updated_at": "2021-10-20T09:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732580386",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732580386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732750839",
      "pull_request_review_id": 784450616,
      "id": 732750839,
      "node_id": "PRRC_kwDOABII584rrOP3",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 92,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": 732575759,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "So I actually made this change last night... but the problem is that this is actually hit pretty routinely (about every third run) on master (but oddly not on @dongcarl's #23280?). Each time I manually checked the debug.log and saw the `loadblk thread started` line, so I'm not sure how the Python code would be missing that as-written. I'll investigate a bit because I agree, an assertion here would be preferable.",
      "created_at": "2021-10-20T13:00:07Z",
      "updated_at": "2021-10-20T13:00:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732750839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732750839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732788935",
      "pull_request_review_id": 784503652,
      "id": 732788935,
      "node_id": "PRRC_kwDOABII584rrXjH",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 55,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": 732572743,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, because I think it's important to explicitly verify that the number of blocks that the setup dictated (200) are present. This is to check for the case where, for example, the block index somehow gets screwed up and fewer blocks are loaded than the original count, despite having loaded the mempool successfully. But am I missing some reason this isn't necessary?",
      "created_at": "2021-10-20T13:40:24Z",
      "updated_at": "2021-10-20T13:40:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732788935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732788935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732791744",
      "pull_request_review_id": 784507576,
      "id": 732791744,
      "node_id": "PRRC_kwDOABII584rrYPA",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 55,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": 732572743,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn't an assert_equal be a better choice then?",
      "created_at": "2021-10-20T13:43:11Z",
      "updated_at": "2021-10-20T13:43:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732791744",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732791744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732794397",
      "pull_request_review_id": 784511389,
      "id": 732794397,
      "node_id": "PRRC_kwDOABII584rrY4d",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)\n+            self.log.info(f\"Starting node and will exit after {terminate_after} lines\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 10\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(\"node failed to start\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Test startup errors after removing certain essential files\")\n+\n+        files_to_disturb = {\n+            Path('blocks/index') / '*.ldb': 'Error opening block database.',\n+            Path('chainstate') / '*.ldb': 'Error opening block database.',\n+            Path('blocks') / 'blk*.dat': 'Error loading block database.',\n+        }\n+        chain_path = Path(node.chain_path)\n+\n+        for file_patt, err_fragment in files_to_disturb.items():\n+            target_file = Path(glob.glob(str(chain_path / file_patt))[0])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 141,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": 732580386,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Works, but had to add a `list(...)` and `str(file_patt)`. Still probably better than what I had.",
      "created_at": "2021-10-20T13:45:42Z",
      "updated_at": "2021-10-20T13:45:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732794397",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732794397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732818942",
      "pull_request_review_id": 784545939,
      "id": 732818942,
      "node_id": "PRRC_kwDOABII584rre3-",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 55,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": 732572743,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, what, to avoid a timeout? I guess that makes sense.",
      "created_at": "2021-10-20T14:09:47Z",
      "updated_at": "2021-10-20T14:09:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732818942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732818942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 53,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732820513",
      "pull_request_review_id": 784548121,
      "id": 732820513,
      "node_id": "PRRC_kwDOABII584rrfQh",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)\n+            self.log.info(f\"Starting node and will exit after {terminate_after} lines\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 10\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(\"node failed to start\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Test startup errors after removing certain essential files\")\n+\n+        files_to_disturb = {\n+            Path('blocks/index') / '*.ldb': 'Error opening block database.',\n+            Path('chainstate') / '*.ldb': 'Error opening block database.',\n+            Path('blocks') / 'blk*.dat': 'Error loading block database.',\n+        }\n+        chain_path = Path(node.chain_path)\n+\n+        for file_patt, err_fragment in files_to_disturb.items():\n+            target_file = Path(glob.glob(str(chain_path / file_patt))[0])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 141,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": 732580386,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the point of `str(Path(str()))`? Just use str?",
      "created_at": "2021-10-20T14:11:07Z",
      "updated_at": "2021-10-20T14:11:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732820513",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732820513"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732832006",
      "pull_request_review_id": 784564247,
      "id": 732832006,
      "node_id": "PRRC_kwDOABII584rriEG",
      "diff_hunk": "@@ -0,0 +1,171 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import glob\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            log_path = Path(node.debug_log_path)\n+            log_path.unlink()\n+            log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.warning(f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)\n+            self.log.info(f\"Starting node and will exit after {terminate_after} lines\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 10\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(\"node failed to start\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Test startup errors after removing certain essential files\")\n+\n+        files_to_disturb = {\n+            Path('blocks/index') / '*.ldb': 'Error opening block database.',\n+            Path('chainstate') / '*.ldb': 'Error opening block database.',\n+            Path('blocks') / 'blk*.dat': 'Error loading block database.',\n+        }\n+        chain_path = Path(node.chain_path)\n+\n+        for file_patt, err_fragment in files_to_disturb.items():\n+            target_file = Path(glob.glob(str(chain_path / file_patt))[0])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 141,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "71ba24a724556af02901d2aa06a71d24e18f6f3c",
      "in_reply_to_id": 732580386,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Okay I don't understand what you're saying anymore so if you want me to change it, suggest a patch.",
      "created_at": "2021-10-20T14:22:23Z",
      "updated_at": "2021-10-20T14:22:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732832006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732832006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732833879",
      "pull_request_review_id": 784566732,
      "id": 732833879,
      "node_id": "PRRC_kwDOABII584rrihX",
      "diff_hunk": "@@ -0,0 +1,174 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                # XXX mysteriously, if we remove this log statement the test\n+                # will occasionally fail by missing the 'loadblk thread start'\n+                # line and hitting the 'missed line' AssertionError. I think\n+                # this may be some kind of overzealous-optimization bug in\n+                # CPython but I really don't know.\n+                self.log.debug(f'saw logline: {line}')\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    raise AssertionError(\n+                        f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)\n+            self.log.info(f\"Starting node and will exit after {terminate_after} lines\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 10\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(\"node failed to start\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Test startup errors after removing certain essential files\")\n+\n+        files_to_disturb = {\n+            Path('blocks/index') / '*.ldb': 'Error opening block database.',\n+            Path('chainstate') / '*.ldb': 'Error opening block database.',\n+            Path('blocks') / 'blk*.dat': 'Error loading block database.',\n+        }\n+\n+        for file_patt, err_fragment in files_to_disturb.items():\n+            target_file = list(node.chain_path.glob(str(file_patt)))[0]",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 144,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "c870ee0d95459e50f01e6eb24b1e0e29df5a260d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n            'blocks/index/*.ldb': 'Error opening block database.',\r\n            'chainstate/*.ldb': 'Error opening block database.',\r\n            'blocks/blk*.dat': 'Error loading block database.',\r\n        }\r\n\r\n        for file_patt, err_fragment in files_to_disturb.items():\r\n            target_file = list(node.chain_path.glob(file_patt))[0]\r\n```",
      "created_at": "2021-10-20T14:24:09Z",
      "updated_at": "2021-10-20T14:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732833879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732833879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": 138,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732839745",
      "pull_request_review_id": 784574837,
      "id": 732839745,
      "node_id": "PRRC_kwDOABII584rrj9B",
      "diff_hunk": "@@ -0,0 +1,174 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            node.waitforblockheight(200)\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                # XXX mysteriously, if we remove this log statement the test\n+                # will occasionally fail by missing the 'loadblk thread start'\n+                # line and hitting the 'missed line' AssertionError. I think\n+                # this may be some kind of overzealous-optimization bug in\n+                # CPython but I really don't know.\n+                self.log.debug(f'saw logline: {line}')\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    raise AssertionError(\n+                        f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)\n+            self.log.info(f\"Starting node and will exit after {terminate_after} lines\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 10\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(\"node failed to start\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Test startup errors after removing certain essential files\")\n+\n+        files_to_disturb = {\n+            Path('blocks/index') / '*.ldb': 'Error opening block database.',\n+            Path('chainstate') / '*.ldb': 'Error opening block database.',\n+            Path('blocks') / 'blk*.dat': 'Error loading block database.',\n+        }\n+\n+        for file_patt, err_fragment in files_to_disturb.items():\n+            target_file = list(node.chain_path.glob(str(file_patt)))[0]",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 144,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "c870ee0d95459e50f01e6eb24b1e0e29df5a260d",
      "in_reply_to_id": 732833879,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, thanks.",
      "created_at": "2021-10-20T14:29:30Z",
      "updated_at": "2021-10-20T14:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732839745",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732839745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": 138,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732893288",
      "pull_request_review_id": 784649277,
      "id": 732893288,
      "node_id": "PRRC_kwDOABII584rrxBo",
      "diff_hunk": "@@ -368,21 +369,28 @@ def is_node_stopped(self):\n     def wait_until_stopped(self, timeout=BITCOIND_PROC_WAIT_TIMEOUT):\n         wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\n \n+    @property\n+    def chain_path(self) -> Path:\n+        return Path(self.datadir) / self.chain\n+\n+    @property\n+    def debug_log_path(self) -> Path:\n+        return self.chain_path / 'debug.log'\n+\n     @contextlib.contextmanager\n     def assert_debug_log(self, expected_msgs, unexpected_msgs=None, timeout=2):\n         if unexpected_msgs is None:\n             unexpected_msgs = []\n         time_end = time.time() + timeout * self.timeout_factor\n-        debug_log = os.path.join(self.datadir, self.chain, 'debug.log')\n-        with open(debug_log, encoding='utf-8') as dl:\n+        with open(str(self.debug_log_path), encoding='utf-8') as dl:\n             dl.seek(0, 2)\n             prev_size = dl.tell()\n \n         yield\n \n         while True:\n             found = True\n-            with open(debug_log, encoding='utf-8') as dl:\n+            with open(str(self.debug_log_path), encoding='utf-8') as dl:",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 36,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "ff2fedef5d67f8a5e5581b23de61d695135c751d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you explain why `str()` is needed here? It should be possible to open a Path in python",
      "created_at": "2021-10-20T15:22:08Z",
      "updated_at": "2021-10-20T15:22:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732893288",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732893288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 393,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732897381",
      "pull_request_review_id": 784655013,
      "id": 732897381,
      "node_id": "PRRC_kwDOABII584rryBl",
      "diff_hunk": "@@ -368,21 +369,28 @@ def is_node_stopped(self):\n     def wait_until_stopped(self, timeout=BITCOIND_PROC_WAIT_TIMEOUT):\n         wait_until_helper(self.is_node_stopped, timeout=timeout, timeout_factor=self.timeout_factor)\n \n+    @property\n+    def chain_path(self) -> Path:\n+        return Path(self.datadir) / self.chain\n+\n+    @property\n+    def debug_log_path(self) -> Path:\n+        return self.chain_path / 'debug.log'\n+\n     @contextlib.contextmanager\n     def assert_debug_log(self, expected_msgs, unexpected_msgs=None, timeout=2):\n         if unexpected_msgs is None:\n             unexpected_msgs = []\n         time_end = time.time() + timeout * self.timeout_factor\n-        debug_log = os.path.join(self.datadir, self.chain, 'debug.log')\n-        with open(debug_log, encoding='utf-8') as dl:\n+        with open(str(self.debug_log_path), encoding='utf-8') as dl:\n             dl.seek(0, 2)\n             prev_size = dl.tell()\n \n         yield\n \n         while True:\n             found = True\n-            with open(debug_log, encoding='utf-8') as dl:\n+            with open(str(self.debug_log_path), encoding='utf-8') as dl:",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 36,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "ff2fedef5d67f8a5e5581b23de61d695135c751d",
      "in_reply_to_id": 732893288,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Weird, thought I'd started off by doing that and then had to add `str`. Fixed.",
      "created_at": "2021-10-20T15:26:29Z",
      "updated_at": "2021-10-20T15:26:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732897381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732897381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 393,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732909184",
      "pull_request_review_id": 784671386,
      "id": 732909184,
      "node_id": "PRRC_kwDOABII584rr06A",
      "diff_hunk": "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 5,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, the file name could go out of date without being noticed\r\n```suggestion\r\n\"\"\"Stress tests related to node initialization.\"\"\"\r\n```",
      "created_at": "2021-10-20T15:39:05Z",
      "updated_at": "2021-10-20T16:03:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732909184",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732909184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732910239",
      "pull_request_review_id": 784671386,
      "id": 732910239,
      "node_id": "PRRC_kwDOABII584rr1Kf",
      "diff_hunk": "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import os\n+from pathlib import Path",
      "path": "test/functional/feature_init.py",
      "position": 9,
      "original_position": 9,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "sort\r\n```diff\r\n-import time\r\n-import random\r\n import os\r\n from pathlib import Path\r\n+import random\r\n+import time\r\n```\r\n",
      "created_at": "2021-10-20T15:40:11Z",
      "updated_at": "2021-10-20T16:03:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732910239",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732910239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732914870",
      "pull_request_review_id": 784671386,
      "id": 732914870,
      "node_id": "PRRC_kwDOABII584rr2S2",
      "diff_hunk": "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockchaininfo()['blocks'])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 54,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This would be simpler, I think.\r\n```suggestion\r\n            assert_equal(200, node.getblockcount())\r\n```",
      "created_at": "2021-10-20T15:45:16Z",
      "updated_at": "2021-10-20T16:03:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732914870",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732914870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732917765",
      "pull_request_review_id": 784671386,
      "id": 732917765,
      "node_id": "PRRC_kwDOABII584rr3AF",
      "diff_hunk": "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockchaininfo()['blocks'])\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30",
      "path": "test/functional/feature_init.py",
      "position": 85,
      "original_position": 76,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "maybe better to snakecase this localvar throughout, as the variable name is reused with a different value in a different scope below\r\n```suggestion\r\n            max_seconds_to_wait = 30\r\n```",
      "created_at": "2021-10-20T15:48:18Z",
      "updated_at": "2021-10-20T16:03:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732917765",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732917765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732925146",
      "pull_request_review_id": 784671386,
      "id": 732925146,
      "node_id": "PRRC_kwDOABII584rr4za",
      "diff_hunk": "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockchaininfo()['blocks'])\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Verifying wallet',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                # XXX mysteriously, if we remove this log statement the test\n+                # will occasionally fail by missing the 'loadblk thread start'\n+                # line and hitting the 'missed line' AssertionError. I think\n+                # this may be some kind of overzealous-optimization bug in\n+                # CPython but I really don't know.\n+                self.log.debug(f'saw logline: {line}')",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 90,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be nice to be able to omit this, as it renders the `debug` log level difficult to follow.\r\n\r\nSome other logging suggestions to clean up the output:\r\n```diff\r\n         for bail_line in lines_to_bail_after:\r\n-            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\r\n+            self.log.debug(f\"Starting node and will exit after line '{bail_line}'\")\r\n             node.start(extra_args=['-txindex=1'])\r\n             logfile = open(node.debug_log_path, 'r', encoding='utf8')\r\n \r\n@@ -90,7 +90,7 @@ class InitStressTest(BitcoinTestFramework):\r\n                 self.log.debug(f'saw logline: {line}')\r\n \r\n                 if line and bail_line.lower() in line.lower():\r\n-                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\r\n+                    self.log.debug(f\"Terminating node after {num_lines} log lines seen\")\r\n                     sigterm_node()\r\n                     break\r\n \r\n@@ -109,7 +109,7 @@ class InitStressTest(BitcoinTestFramework):\r\n         for _ in range(40):\r\n             # Startup usually creates ~70 log lines\r\n             terminate_after = random.randint(1, 80)\r\n-            self.log.info(f\"Starting node and will exit after {terminate_after} lines\")\r\n+            self.log.debug(f\"Starting node and will exit after {terminate_after} lines\")\r\n             node.start(extra_args=['-txindex=1'])\r\n             logfile = open(node.debug_log_path, 'r', encoding='utf8')\r\n \r\n@@ -123,7 +123,7 @@ class InitStressTest(BitcoinTestFramework):\r\n                     num_lines += 1\r\n \r\n                 if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\r\n-                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\r\n+                    self.log.debug(f\"Terminating node after {num_lines} log lines seen\")\r\n                     sigterm_node()\r\n                     break\r\n \r\n@@ -144,7 +144,7 @@ class InitStressTest(BitcoinTestFramework):\r\n         for file_patt, err_fragment in files_to_disturb.items():\r\n             target_file = list(node.chain_path.glob(file_patt))[0]\r\n \r\n-            self.log.info(f\"tweaking file to ensure failure {target_file}\")\r\n+            self.log.info(f\"Tweaking file to ensure failure {target_file}\")\r\n             bak_path = str(target_file) + \".bak\"\r\n             target_file.rename(bak_path)\r\n \r\n@@ -165,7 +165,7 @@ class InitStressTest(BitcoinTestFramework):\r\n                 match=ErrorMatch.PARTIAL_REGEX,\r\n             )\r\n \r\n-            self.log.info(f\"restoring file from {bak_path} and restarting\")\r\n+            self.log.info(f\"Restoring file from {bak_path} and restarting\")\r\n             Path(bak_path).rename(target_file)\r\n             check_clean_start()\r\n             self.stop_node(0)\r\n```\r\n",
      "created_at": "2021-10-20T15:56:31Z",
      "updated_at": "2021-10-20T16:03:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732925146",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732925146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732926715",
      "pull_request_review_id": 784671386,
      "id": 732926715,
      "node_id": "PRRC_kwDOABII584rr5L7",
      "diff_hunk": "@@ -20,6 +20,7 @@\n import collections\n import shlex\n import sys\n+from pathlib import Path",
      "path": "test/functional/test_framework/test_node.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, sort\r\n```diff\r\n@@ -13,6 +13,7 @@ import json\r\n import decimal\r\n from enum import Enum\r\n import errno\r\n import http.client\r\n import json\r\n import logging\r\n import os\r\n+from pathlib import Path\r\n import re\r\n import subprocess\r\n import tempfile\r\n import time\r\n import urllib.parse\r\n import collections\r\n import shlex\r\n import sys\r\n-from pathlib import Path\r\n``\r\n",
      "created_at": "2021-10-20T15:58:23Z",
      "updated_at": "2021-10-20T16:20:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r732926715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/732926715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733580834",
      "pull_request_review_id": 785561577,
      "id": 733580834,
      "node_id": "PRRC_kwDOABII584ruY4i",
      "diff_hunk": "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import os\n+from pathlib import Path",
      "path": "test/functional/feature_init.py",
      "position": 9,
      "original_position": 9,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "in_reply_to_id": 732910239,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This comment was marked resolved, but the imports are still unsorted.",
      "created_at": "2021-10-21T11:28:28Z",
      "updated_at": "2021-10-21T11:28:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733580834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733580834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733584445",
      "pull_request_review_id": 785566556,
      "id": 733584445,
      "node_id": "PRRC_kwDOABII584ruZw9",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 28,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"to bail\" is a bit colloquial and may not be understood by non-native english speakers. It might be better to use a more standard, technical term such as \"to terminate\".",
      "created_at": "2021-10-21T11:33:52Z",
      "updated_at": "2021-10-21T12:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733584445",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733584445"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733597570",
      "pull_request_review_id": 785566556,
      "id": 733597570,
      "node_id": "PRRC_kwDOABII584ruc-C",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()",
      "path": "test/functional/feature_init.py",
      "position": 47,
      "original_position": 47,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Doing this will probably make it more difficult to debug failures, since the bitcoind log is erased. For example, the second time I ran this test, I hit the following failure:\r\n\r\n<details>\r\n<summary>Log</summary>\r\n\r\n```\r\n→ ./test/functional/feature_init.py --nocleanup\r\n2021-10-21T11:43:53.709000Z TestFramework (INFO): Initializing test directory /tmp/bitcoin_func_test_lh9p1xfw\r\n2021-10-21T11:43:54.157000Z TestFramework (INFO): Starting node and will exit after line 'scheduler thread start'\r\n2021-10-21T11:43:54.164000Z TestFramework (INFO): terminating node after 49 log lines seen\r\n2021-10-21T11:43:54.165000Z TestFramework (INFO): Starting node and will exit after line 'Loading P2P addresses'\r\n2021-10-21T11:43:54.308000Z TestFramework (INFO): terminating node after 66 log lines seen\r\n2021-10-21T11:43:54.317000Z TestFramework (INFO): Starting node and will exit after line 'Loading banlist'\r\n2021-10-21T11:43:54.461000Z TestFramework (INFO): terminating node after 69 log lines seen\r\n2021-10-21T11:43:54.469000Z TestFramework (INFO): Starting node and will exit after line 'Loading block index'\r\n2021-10-21T11:43:54.619000Z TestFramework (INFO): terminating node after 81 log lines seen\r\n2021-10-21T11:43:54.626000Z TestFramework (INFO): Starting node and will exit after line 'Switching active chainstate'\r\n2021-10-21T11:43:54.773000Z TestFramework (INFO): terminating node after 82 log lines seen\r\n2021-10-21T11:43:54.781000Z TestFramework (INFO): Starting node and will exit after line 'Loaded best chain:'\r\n2021-10-21T11:43:54.927000Z TestFramework (INFO): terminating node after 92 log lines seen\r\n2021-10-21T11:43:54.935000Z TestFramework (INFO): Starting node and will exit after line 'init message: Verifying blocks'\r\n2021-10-21T11:43:55.082000Z TestFramework (INFO): terminating node after 93 log lines seen\r\n2021-10-21T11:43:55.090000Z TestFramework (INFO): Starting node and will exit after line 'loadblk thread start'\r\n2021-10-21T11:43:55.240000Z TestFramework (INFO): terminating node after 115 log lines seen\r\n2021-10-21T11:43:55.359000Z TestFramework (INFO): Starting node and will exit after line 'txindex thread start'\r\n2021-10-21T11:43:55.517000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/home/vagrant/bitcoin/test/functional/test_framework/test_framework.py\", line 132, in main\r\n    self.run_test()\r\n  File \"./test/functional/feature_init.py\", line 103, in run_test\r\n    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\r\nAssertionError: node failed to start (line: 'txindex thread start')\r\n2021-10-21T11:43:55.569000Z TestFramework (INFO): Stopping nodes\r\nTraceback (most recent call last):\r\n  File \"./test/functional/feature_init.py\", line 176, in <module>\r\n    InitStressTest().main()\r\n  File \"/home/vagrant/bitcoin/test/functional/test_framework/test_framework.py\", line 155, in main\r\n    exit_code = self.shutdown()\r\n  File \"/home/vagrant/bitcoin/test/functional/test_framework/test_framework.py\", line 304, in shutdown\r\n    self.stop_nodes()\r\n  File \"/home/vagrant/bitcoin/test/functional/test_framework/test_framework.py\", line 555, in stop_nodes\r\n    node.stop_node(wait=wait, wait_until_stopped=False)\r\n  File \"/home/vagrant/bitcoin/test/functional/test_framework/test_node.py\", line 336, in stop_node\r\n    self.stop(wait=wait)\r\n  File \"/home/vagrant/bitcoin/test/functional/test_framework/test_node.py\", line 184, in __getattr__\r\n    assert self.rpc_connected and self.rpc is not None, self._node_msg(\"Error: no RPC connection\")\r\nAssertionError: [node 0] Error: no RPC connection\r\n[node 0] Cleaning up leftover process\r\n```\r\n</details>\r\n\r\nThe bitcoind debug log and combined logs would be more helpful if they were complete.",
      "created_at": "2021-10-21T11:52:23Z",
      "updated_at": "2021-10-21T12:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733597570",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733597570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733598115",
      "pull_request_review_id": 785566556,
      "id": 733598115,
      "node_id": "PRRC_kwDOABII584rudGj",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockcount())\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        if self.is_wallet_compiled():\n+            lines_to_bail_after.append('Verifying wallet')\n+\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 74,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This feels a little bit verbose for info logging. I'd suggest moving to debug. Same for the \"terminating node after\" log below.",
      "created_at": "2021-10-21T11:53:10Z",
      "updated_at": "2021-10-21T12:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733598115",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733598115"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733609265",
      "pull_request_review_id": 785566556,
      "id": 733609265,
      "node_id": "PRRC_kwDOABII584ruf0x",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockcount())\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        if self.is_wallet_compiled():\n+            lines_to_bail_after.append('Verifying wallet')\n+\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+                    # XXX mysteriously, if we remove this log statement the test\n+                    # will occasionally fail by missing the 'loadblk thread start'\n+                    # line and hitting the 'missed line' AssertionError. I think\n+                    # this may be some kind of overzealous-optimization bug in\n+                    # CPython but I really don't know.\n+                    self.log.debug(f'saw logline: {line}')",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 91,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This results in very verbose test logs",
      "created_at": "2021-10-21T12:09:06Z",
      "updated_at": "2021-10-21T12:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733609265",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733609265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733610131",
      "pull_request_review_id": 785566556,
      "id": 733610131,
      "node_id": "PRRC_kwDOABII584rugCT",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockcount())\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        if self.is_wallet_compiled():\n+            lines_to_bail_after.append('Verifying wallet')\n+\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+                    # XXX mysteriously, if we remove this log statement the test\n+                    # will occasionally fail by missing the 'loadblk thread start'\n+                    # line and hitting the 'missed line' AssertionError. I think\n+                    # this may be some kind of overzealous-optimization bug in\n+                    # CPython but I really don't know.\n+                    self.log.debug(f'saw logline: {line}')\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    raise AssertionError(\n+                        f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)\n+            self.log.info(f\"Starting node and will exit after {terminate_after} lines\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 10\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+\n+                if num_lines >= terminate_after or (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(\"node failed to start\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Test startup errors after removing certain essential files\")\n+\n+        files_to_disturb = {\n+            'blocks/index/*.ldb': 'Error opening block database.',\n+            'chainstate/*.ldb': 'Error opening block database.',\n+            'blocks/blk*.dat': 'Error loading block database.',\n+        }\n+\n+        for file_patt, err_fragment in files_to_disturb.items():\n+            target_file = list(node.chain_path.glob(file_patt))[0]\n+\n+            self.log.info(f\"tweaking file to ensure failure {target_file}\")\n+            bak_path = str(target_file) + \".bak\"\n+            target_file.rename(bak_path)\n+\n+            # TODO: at some point, we should test perturbing the files instead of removing\n+            # them, e.g.\n+            #\n+            # contents = target_file.read_bytes()\n+            # tweaked_contents = bytearray(contents)\n+            # tweaked_contents[50:250] = b'1' * 200\n+            # target_file.write_bytes(bytes(tweaked_contents))\n+            #\n+            # At the moment I can't get this to work (bitcoind loads successfully?) so\n+            # investigate doing this later.",
      "path": "test/functional/feature_init.py",
      "position": 166,
      "original_position": 161,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's generally better to leave TODOs out of the source and track them as issues, so that they can be discussed/amended/removed.",
      "created_at": "2021-10-21T12:10:14Z",
      "updated_at": "2021-10-21T12:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733610131",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733610131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": 157,
      "original_start_line": 152,
      "start_side": "RIGHT",
      "line": 166,
      "original_line": 166,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733616552",
      "pull_request_review_id": 785566556,
      "id": 733616552,
      "node_id": "PRRC_kwDOABII584ruhmo",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockcount())\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        if self.is_wallet_compiled():\n+            lines_to_bail_after.append('Verifying wallet')\n+\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+                    # XXX mysteriously, if we remove this log statement the test\n+                    # will occasionally fail by missing the 'loadblk thread start'\n+                    # line and hitting the 'missed line' AssertionError. I think\n+                    # this may be some kind of overzealous-optimization bug in\n+                    # CPython but I really don't know.\n+                    self.log.debug(f'saw logline: {line}')\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    raise AssertionError(\n+                        f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 112,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a way to derive this value programatically from the subtests above? I imagine it could change over time as log lines are added/removed in bitcoind, and this value would become outdated.",
      "created_at": "2021-10-21T12:18:56Z",
      "updated_at": "2021-10-21T12:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r733616552",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/733616552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/735159180",
      "pull_request_review_id": 787544697,
      "id": 735159180,
      "node_id": "PRRC_kwDOABII584r0aOM",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 52,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I have found the cause for the intermittent failures, it's related to #15946, see `index/base.cpp`:\r\n\r\nIt happens when the node starts with `-txindex=1` but `ThreadSync` is interrupted after it sets `m_best_block_index` to Genesis, and before it gets do any further work (like indexing the next block).\r\n\r\nThen, with the next restart, `BaseIndex::Init()` tries to check whether we know the last synced block of the partially synced index (which we might not if we were pruning, but do in this case).\r\n\r\nThe problem is now that the loop\r\n `while (block_to_test && block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA))`\r\nin `BaseIndex::Init() ` won't set `prune_violation` to false because `block_to_test` is Genesis, `block->pprev` evaluates to `false`, so the comparison `block_to_test == block` isn't reached.\r\n\r\nSince I knew next to nothing about the indexes before looking into this: Do reviewers think that the correct way to fix this would be to rewrite the while loop in `Init()` to  also check `block_to_test == block` in case of the Genesis block?",
      "created_at": "2021-10-24T19:18:32Z",
      "updated_at": "2021-10-24T19:25:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r735159180",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/735159180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/735979548",
      "pull_request_review_id": 788635690,
      "id": 735979548,
      "node_id": "PRRC_kwDOABII584r3igc",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 52,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": 735159180,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think you have identified the right cause. I obtained a datadir from jamesob that triggers the \"Error: txindex best block of the index goes beyond pruned data...\" error on master when run with the following invocation:\r\n\r\n```bash\r\n./src/bitcoind -txindex=1 -datadir=$PWD/james-datadir/home/james/tmp/bitcoin_func_test_cf43f1hi/node0/\r\n```\r\n\r\nNow, if I apply the following (very naive, should not be merged) patch, the above invocation no longer fails and `bitcoind` operates normally:\r\n\r\n```diff\r\ndiff --git a/src/index/base.cpp b/src/index/base.cpp\r\nindex fc6dd77a72..7549ae5d57 100644\r\n--- a/src/index/base.cpp\r\n+++ b/src/index/base.cpp\r\n@@ -98,6 +98,9 @@ bool BaseIndex::Init()\r\n                 }\r\n                 block = block->pprev;\r\n             }\r\n+            if (prune_violation) {\r\n+                prune_violation = block_to_test != active_chain.Genesis();\r\n+            }\r\n         }\r\n         if (prune_violation) {\r\n             return InitError(strprintf(Untranslated(\"%s best block of the index goes beyond pruned data. Please disable the index or reindex (which will download the whole blockchain again)\"), GetName()));\r\n```",
      "created_at": "2021-10-25T21:25:46Z",
      "updated_at": "2021-10-25T21:25:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r735979548",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/735979548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736701015",
      "pull_request_review_id": 789617600,
      "id": 736701015,
      "node_id": "PRRC_kwDOABII584r6SpX",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 52,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If txindex is causing issues, maybe remove it for now and add it in a later pull?",
      "created_at": "2021-10-26T16:04:44Z",
      "updated_at": "2021-10-26T16:04:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736701015",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736701015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736725588",
      "pull_request_review_id": 789650802,
      "id": 736725588,
      "node_id": "PRRC_kwDOABII584r6YpU",
      "diff_hunk": "@@ -0,0 +1,175 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization (init.cpp).\"\"\"\n+import time\n+import random\n+import os\n+from pathlib import Path",
      "path": "test/functional/feature_init.py",
      "position": 9,
      "original_position": 9,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "b32f5a5f9bf2d04c03dd553bfd53f781238e1e10",
      "in_reply_to_id": 732910239,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sorted imports are not in the Python style guide. I think keeping them sorted is an unnecessary burden to authors and reviewers.",
      "created_at": "2021-10-26T16:33:41Z",
      "updated_at": "2021-10-26T16:33:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736725588",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736725588"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736728442",
      "pull_request_review_id": 789654569,
      "id": 736728442,
      "node_id": "PRRC_kwDOABII584r6ZV6",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 52,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": 736701015,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, will do.",
      "created_at": "2021-10-26T16:37:21Z",
      "updated_at": "2021-10-26T16:37:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736728442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736728442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736739979",
      "pull_request_review_id": 789670809,
      "id": 736739979,
      "node_id": "PRRC_kwDOABII584r6cKL",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 28,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": 733584445,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2021-10-26T16:50:47Z",
      "updated_at": "2021-10-26T16:50:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736739979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736739979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736740209",
      "pull_request_review_id": 789671091,
      "id": 736740209,
      "node_id": "PRRC_kwDOABII584r6cNx",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])\n+            node.wait_for_rpc_connection()\n+            assert_equal(200, node.getblockcount())\n+\n+        lines_to_bail_after = [\n+            'scheduler thread start',\n+            'Loading P2P addresses',\n+            'Loading banlist',\n+            'Loading block index',\n+            'Switching active chainstate',\n+            'Loaded best chain:',\n+            'init message: Verifying blocks',\n+            'loadblk thread start',\n+            'txindex thread start',\n+            'net thread start',\n+            'addcon thread start',\n+            'msghand thread start',\n+        ]\n+        if self.is_wallet_compiled():\n+            lines_to_bail_after.append('Verifying wallet')\n+\n+        for bail_line in lines_to_bail_after:\n+            self.log.info(f\"Starting node and will exit after line '{bail_line}'\")\n+            node.start(extra_args=['-txindex=1'])\n+            logfile = open(node.debug_log_path, 'r', encoding='utf8')\n+\n+            MAX_SECS_TO_WAIT = 30\n+            start = time.time()\n+            num_lines = 0\n+\n+            while True:\n+                line = logfile.readline()\n+                if line:\n+                    num_lines += 1\n+                    # XXX mysteriously, if we remove this log statement the test\n+                    # will occasionally fail by missing the 'loadblk thread start'\n+                    # line and hitting the 'missed line' AssertionError. I think\n+                    # this may be some kind of overzealous-optimization bug in\n+                    # CPython but I really don't know.\n+                    self.log.debug(f'saw logline: {line}')\n+\n+                if line and bail_line.lower() in line.lower():\n+                    self.log.info(f\"terminating node after {num_lines} log lines seen\")\n+                    sigterm_node()\n+                    break\n+\n+                if (time.time() - start) > MAX_SECS_TO_WAIT:\n+                    raise AssertionError(\n+                        f\"missed line {bail_line}; bailing now after {num_lines} lines\")\n+\n+                if node.process.poll() is not None:\n+                    raise AssertionError(f\"node failed to start (line: '{bail_line}')\")\n+\n+        check_clean_start()\n+        self.stop_node(0)\n+\n+        self.log.info(\"Terminate at some random point in the init process\")\n+\n+        for _ in range(40):\n+            # Startup usually creates ~70 log lines\n+            terminate_after = random.randint(1, 80)",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 112,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": 733616552,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, done.",
      "created_at": "2021-10-26T16:51:03Z",
      "updated_at": "2021-10-26T16:51:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736740209",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736740209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736740690",
      "pull_request_review_id": 789671759,
      "id": 736740690,
      "node_id": "PRRC_kwDOABII584r6cVS",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()\n+            node.debug_log_path.touch()\n+\n+        def check_clean_start():\n+            \"\"\"Ensure that node restarts successfully after various interrupts.\"\"\"\n+            node.start(extra_args=['-txindex=1'])",
      "path": "test/functional/feature_init.py",
      "position": null,
      "original_position": 52,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": 735159180,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice detective work, guys! I'm going to follow @MarcoFalke's advice and disable txindex here, but create an issue to follow this up.",
      "created_at": "2021-10-26T16:51:40Z",
      "updated_at": "2021-10-26T16:51:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r736740690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/736740690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759958889",
      "pull_request_review_id": 819945706,
      "id": 759958889,
      "node_id": "PRRC_kwDOABII584tTA1p",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()",
      "path": "test/functional/feature_init.py",
      "position": 47,
      "original_position": 47,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": 733597570,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this was not addressed?",
      "created_at": "2021-12-01T08:35:11Z",
      "updated_at": "2021-12-01T08:35:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r759958889",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/759958889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760173045",
      "pull_request_review_id": 820241696,
      "id": 760173045,
      "node_id": "PRRC_kwDOABII584tT1H1",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()",
      "path": "test/functional/feature_init.py",
      "position": 47,
      "original_position": 47,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": 733597570,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This suggestion is at odds with the nature of the test itself, since the logfile contents determine when to sigterm and so have to be cleared each iteration. \r\n\r\nIf someone would like to improve this test by consuming the node's stdout instead of the logfile, that's one possible improvement suitable for a follow-up.",
      "created_at": "2021-12-01T13:16:12Z",
      "updated_at": "2021-12-01T13:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r760173045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/760173045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/766615073",
      "pull_request_review_id": 828802243,
      "id": 766615073,
      "node_id": "PRRC_kwDOABII584tsZ4h",
      "diff_hunk": "@@ -0,0 +1,176 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Stress tests related to node initialization.\"\"\"\n+import random\n+import time\n+import os\n+from pathlib import Path\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_node import ErrorMatch\n+from test_framework.util import assert_equal\n+\n+\n+class InitStressTest(BitcoinTestFramework):\n+    \"\"\"\n+    Ensure that initialization can be interrupted at a number of points and not impair\n+    subsequent starts.\n+    \"\"\"\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+\n+    def run_test(self):\n+        \"\"\"\n+        - test bailing initialization after seeing a certain log line.\n+        - test bailing init after seeing a random number of log lines.\n+        - test removing certain essential files to test startup error paths.\n+        \"\"\"\n+        # TODO: skip Windows for now since it isn't clear how to SIGTERM.\n+        #\n+        # Windows doesn't support `process.terminate()`.\n+        # and other approaches (like below) don't work:\n+        #\n+        #   os.kill(node.process.pid, signal.CTRL_C_EVENT)\n+        if os.name == 'nt':\n+            raise SkipTest(\"can't SIGTERM on Windows\")\n+\n+        self.stop_node(0)\n+        node = self.nodes[0]\n+\n+        def sigterm_node():\n+            node.process.terminate()\n+            node.process.wait()\n+            node.debug_log_path.unlink()",
      "path": "test/functional/feature_init.py",
      "position": 47,
      "original_position": 47,
      "commit_id": "d9803f7a0a33688f7429cf10384244f4770851ca",
      "original_commit_id": "d5f0dd1efd0d1fea7b57b53c6e01e61af895beb5",
      "in_reply_to_id": 733597570,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems odd to delete a file to allow reading it. Why can´t this use the same approach like assert_debug_log, that is remember the last read position?",
      "created_at": "2021-12-10T11:45:06Z",
      "updated_at": "2021-12-10T11:45:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23289#discussion_r766615073",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/766615073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23289"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    }
  ]
}