{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159",
    "id": 504410475,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTA0NDEwNDc1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20159",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/20159.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/20159.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20159",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20159/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b128b566725a5037fdaea99940d1b9de5553d198",
    "number": 20159,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: mining_getblocktemplate_longpoll.py improvements (use MiniWallet, add logging)",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR enables one more of the non-wallet functional tests (mining_getblocktemplate_longpoll.py) to be run even with the Bitcoin Core wallet disabled by using the new MiniWallet instead, as proposed in #20078. Also adds missing log messages for the subtests.\r\n\r\nThis was the only functional test that used the `random_transaction` helper in `test_framework/util.py`, hence it is removed, together with other helpers (`make_change` and `gather_inputs`) that were again only used by `random_transaction`.\r\n",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-10-15T21:59:10Z",
    "updated_at": "2022-02-15T10:49:04Z",
    "closed_at": "2020-10-17T15:59:14Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-10-17T15:59:13Z",
    "merge_commit_sha": "80c8a02f1b4f6ad2b5c02595d66a74db22373ed4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "theStack:20201015-test-improve-mining_getblocktemplate_longpoll",
      "ref": "20201015-test-improve-mining_getblocktemplate_longpoll",
      "sha": "b128b566725a5037fdaea99940d1b9de5553d198",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 204970720,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMDQ5NzA3MjA=",
        "name": "bitcoin",
        "full_name": "theStack/bitcoin",
        "owner": {
          "login": "theStack",
          "id": 91535,
          "node_id": "MDQ6VXNlcjkxNTM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theStack",
          "html_url": "https://github.com/theStack",
          "followers_url": "https://api.github.com/users/theStack/followers",
          "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
          "organizations_url": "https://api.github.com/users/theStack/orgs",
          "repos_url": "https://api.github.com/users/theStack/repos",
          "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theStack/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/theStack/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/theStack/bitcoin",
        "archive_url": "https://api.github.com/repos/theStack/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theStack/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theStack/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theStack/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theStack/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theStack/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theStack/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theStack/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theStack/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theStack/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/theStack/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/theStack/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/theStack/bitcoin/events",
        "forks_url": "https://api.github.com/repos/theStack/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/theStack/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theStack/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theStack/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theStack/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/theStack/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theStack/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theStack/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theStack/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theStack/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theStack/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/theStack/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/theStack/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theStack/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theStack/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theStack/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:theStack/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/theStack/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/theStack/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theStack/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/theStack/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/theStack/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/theStack/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/theStack/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theStack/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/theStack/bitcoin/hooks",
        "svn_url": "https://github.com/theStack/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 217436,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:15:21Z",
        "created_at": "2019-08-28T15:59:29Z",
        "updated_at": "2022-12-07T18:05:55Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9e8d2bd076d78ba59abceb80106f44fe26246b14",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 19,
    "deletions": 71,
    "changed_files": 2,
    "commits": 3,
    "review_comments": 9,
    "comments": 2
  },
  "events": [
    {
      "event": "labeled",
      "id": 3883748580,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM4ODM3NDg1ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3883748580",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-15T22:03:48Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 510252326,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMjUyMzI2",
      "url": null,
      "actor": null,
      "commit_id": "c63e7c23f5f11371532f67a3126f5b1dd73fb901",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#pullrequestreview-510252326",
      "submitted_at": "2020-10-16T08:23:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZGRjZTdlMTk5MzA4ZDk2ZTM2NmQ3MDBkY2E5ODJlZjA4OGJhOThi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fddce7e199308d96e366d700dca982ef088ba98b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fddce7e199308d96e366d700dca982ef088ba98b",
      "tree": {
        "sha": "771d991e7464ceb2a079ba896375ffa9113124c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/771d991e7464ceb2a079ba896375ffa9113124c0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0d22482353752ebfb11aa29f4b26113b817a448a",
          "sha": "0d22482353752ebfb11aa29f4b26113b817a448a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0d22482353752ebfb11aa29f4b26113b817a448a"
        }
      ],
      "message": "test: use MiniWallet for mining_getblocktemplate_longpoll.py\n\nThis test can now be run even with the Bitcoin Core wallet disabled.",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-10-16T11:05:31Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-10-15T18:27:57Z"
      },
      "sha": "fddce7e199308d96e366d700dca982ef088ba98b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3886368898,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzg4NjM2ODg5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3886368898",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-16T13:23:28Z"
    },
    {
      "event": "commented",
      "id": 710047869,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDA0Nzg2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/710047869",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-16T13:30:21Z",
      "updated_at": "2020-10-16T13:30:21Z",
      "author_association": "MEMBER",
      "body": "Updated PR description and force-pushed with the feedback from MarcoFalke taken into account.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#issuecomment-710047869",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20159"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZWUzNTM2YjJiNzdhZWIzYTQ4ZGY1YjM0ZWZmYmM3MzQ1ZWYzNGQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ee3536b2b77aeb3a48df5b34effbc7345ef34d8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8ee3536b2b77aeb3a48df5b34effbc7345ef34d8",
      "tree": {
        "sha": "dd75793240df3aa4e0ba20e1833156df63710a65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd75793240df3aa4e0ba20e1833156df63710a65"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fddce7e199308d96e366d700dca982ef088ba98b",
          "sha": "fddce7e199308d96e366d700dca982ef088ba98b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fddce7e199308d96e366d700dca982ef088ba98b"
        }
      ],
      "message": "test: remove unused helpers random_transaction(), make_change() and gather_inputs()",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-10-16T13:40:54Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-10-16T11:09:08Z"
      },
      "sha": "8ee3536b2b77aeb3a48df5b34effbc7345ef34d8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTI4YjU2NjcyNWE1MDM3ZmRhZWE5OTk0MGQxYjlkZTU1NTNkMTk4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b128b566725a5037fdaea99940d1b9de5553d198",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b128b566725a5037fdaea99940d1b9de5553d198",
      "tree": {
        "sha": "a2b075f4752350d66a67d8822ae5909e42ca6160",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2b075f4752350d66a67d8822ae5909e42ca6160"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ee3536b2b77aeb3a48df5b34effbc7345ef34d8",
          "sha": "8ee3536b2b77aeb3a48df5b34effbc7345ef34d8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8ee3536b2b77aeb3a48df5b34effbc7345ef34d8"
        }
      ],
      "message": "test: add logging for mining_getblocktemplate_longpoll.py",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-10-16T13:41:00Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-10-15T18:39:50Z"
      },
      "sha": "b128b566725a5037fdaea99940d1b9de5553d198"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3886461068,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzg4NjQ2MTA2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3886461068",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-16T13:41:35Z"
    },
    {
      "event": "reviewed",
      "id": 510555167,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTU1MTY3",
      "url": null,
      "actor": null,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#pullrequestreview-510555167",
      "submitted_at": "2020-10-16T15:02:11Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
    },
    {
      "event": "commented",
      "id": 710101873,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDEwMTg3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/710101873",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-16T15:04:22Z",
      "updated_at": "2020-10-16T15:04:22Z",
      "author_association": "MEMBER",
      "body": "ACK b128b566725a5037fdaea99940d1b9de5553d198",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#issuecomment-710101873",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20159"
    },
    {
      "event": "merged",
      "id": 3889411952,
      "node_id": "MDExOk1lcmdlZEV2ZW50Mzg4OTQxMTk1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3889411952",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "80c8a02f1b4f6ad2b5c02595d66a74db22373ed4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80c8a02f1b4f6ad2b5c02595d66a74db22373ed4",
      "created_at": "2020-10-17T15:59:13Z"
    },
    {
      "event": "closed",
      "id": 3889411955,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mzg4OTQxMTk1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3889411955",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-10-17T15:59:14Z"
    },
    {
      "event": "referenced",
      "id": 3890527295,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4OTA1MjcyOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3890527295",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "643654775822ba8247ef5bdd22f50a9285e49497",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/643654775822ba8247ef5bdd22f50a9285e49497",
      "created_at": "2020-10-18T18:45:01Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4056212107,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0MDU2MjEyMTA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4056212107",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T09:54:50Z"
    },
    {
      "event": "referenced",
      "id": 5673638098,
      "node_id": "REFE_lADOABII584rE5LkzwAAAAFSLNjS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5673638098",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "20fda0b66e189d703a1a83e73e29a06aa3e76dd3",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/20fda0b66e189d703a1a83e73e29a06aa3e76dd3",
      "created_at": "2021-11-25T15:20:06Z"
    },
    {
      "event": "referenced",
      "id": 5673638102,
      "node_id": "REFE_lADOABII584rE5LkzwAAAAFSLNjW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5673638102",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "06e63e8266b4f56f22a6e2ce4280cdda6f04f199",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/06e63e8266b4f56f22a6e2ce4280cdda6f04f199",
      "created_at": "2021-11-25T15:20:06Z"
    },
    {
      "event": "referenced",
      "id": 5673638106,
      "node_id": "REFE_lADOABII584rE5LkzwAAAAFSLNja",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5673638106",
      "actor": {
        "login": "deadalnix",
        "id": 854121,
        "node_id": "MDQ6VXNlcjg1NDEyMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/854121?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deadalnix",
        "html_url": "https://github.com/deadalnix",
        "followers_url": "https://api.github.com/users/deadalnix/followers",
        "following_url": "https://api.github.com/users/deadalnix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deadalnix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deadalnix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deadalnix/subscriptions",
        "organizations_url": "https://api.github.com/users/deadalnix/orgs",
        "repos_url": "https://api.github.com/users/deadalnix/repos",
        "events_url": "https://api.github.com/users/deadalnix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deadalnix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c78e19afd5bd91fa688e686e8b110d906b57ef60",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/c78e19afd5bd91fa688e686e8b110d906b57ef60",
      "created_at": "2021-11-25T15:20:06Z"
    },
    {
      "event": "locked",
      "id": 6073912508,
      "node_id": "LOE_lADOABII584rE5LkzwAAAAFqCIy8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073912508",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:49:04Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506159902",
      "pull_request_review_id": 510252326,
      "id": 506159902,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE1OTkwMg==",
      "diff_hunk": "@@ -29,45 +31,48 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n-        self.log.info(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n-        self.nodes[0].generate(10)\n+        self.log.info(\"Warning: this test will take about 70 seconds in the worst case. Be patient.\")",
      "path": "test/functional/mining_getblocktemplate_longpoll.py",
      "position": null,
      "original_position": 26,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "original_commit_id": "c63e7c23f5f11371532f67a3126f5b1dd73fb901",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why this change?",
      "created_at": "2020-10-16T08:20:19Z",
      "updated_at": "2020-10-16T13:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#discussion_r506159902",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506159902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506163012",
      "pull_request_review_id": 510252326,
      "id": 506163012,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE2MzAxMg==",
      "diff_hunk": "@@ -29,45 +31,48 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n-        self.log.info(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n-        self.nodes[0].generate(10)\n+        self.log.info(\"Warning: this test will take about 70 seconds in the worst case. Be patient.\")\n+        miniwallets = [ MiniWallet(node) for node in self.nodes ]\n+        miniwallets[0].generate(10)\n         template = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         longpollid = template['longpollid']\n         # longpollid should not change between successive invocations if nothing else happens\n         template2 = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         assert template2['longpollid'] == longpollid\n \n-        # Test 1: test that the longpolling wait if we do nothing\n+        self.log.info(\"Test that longpoll waits if we do nothing\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # check that thread still lives\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert thr.is_alive()\n \n-        # Test 2: test that longpoll will terminate if another node generates a block\n-        self.nodes[1].generate(1)  # generate a block on another node\n+        self.log.info(\"Test that longpoll will terminate if another node generates a block\")\n+        miniwallets[1].generate(1)  # generate a block on another node\n         # check that thread will exit now that new transaction entered mempool\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 3: test that longpoll will terminate if we generate a block ourselves\n+        self.log.info(\"Test that longpoll will terminate if we generate a block ourselves\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n-        self.nodes[0].generate(1)  # generate a block on another node\n+        miniwallets[0].generate(1)  # generate a block on own node\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 4: test that introducing a new transaction into the mempool will terminate the longpoll\n+        # Add enough mature utxos to the wallets, so that all txs spend confirmed coins\n+        self.nodes[0].generate(100)\n+        self.nodes[1].generate(100)\n+\n+        self.log.info(\"Test that introducing a new transaction into the mempool will terminate the longpoll\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # generate a random transaction and submit it\n         min_relay_fee = self.nodes[0].getnetworkinfo()[\"relayfee\"]\n-        # min_relay_fee is fee per 1000 bytes, which should be more than enough.\n-        (txid, txhex, fee) = random_transaction(self.nodes, Decimal(\"1.1\"), min_relay_fee, Decimal(\"0.001\"), 20)\n+        fee_rate = min_relay_fee + Decimal('0.00000010') * random.randint(0,20)",
      "path": "test/functional/mining_getblocktemplate_longpoll.py",
      "position": 71,
      "original_position": 72,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "original_commit_id": "c63e7c23f5f11371532f67a3126f5b1dd73fb901",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can remove unused `random_transaction`?",
      "created_at": "2020-10-16T08:23:23Z",
      "updated_at": "2020-10-16T13:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#discussion_r506163012",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506163012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506163150",
      "pull_request_review_id": 510252326,
      "id": 506163150,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE2MzE1MA==",
      "diff_hunk": "@@ -29,45 +31,48 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n-        self.log.info(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n-        self.nodes[0].generate(10)\n+        self.log.info(\"Warning: this test will take about 70 seconds in the worst case. Be patient.\")\n+        miniwallets = [ MiniWallet(node) for node in self.nodes ]\n+        miniwallets[0].generate(10)\n         template = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         longpollid = template['longpollid']\n         # longpollid should not change between successive invocations if nothing else happens\n         template2 = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         assert template2['longpollid'] == longpollid\n \n-        # Test 1: test that the longpolling wait if we do nothing\n+        self.log.info(\"Test that longpoll waits if we do nothing\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # check that thread still lives\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert thr.is_alive()\n \n-        # Test 2: test that longpoll will terminate if another node generates a block\n-        self.nodes[1].generate(1)  # generate a block on another node\n+        self.log.info(\"Test that longpoll will terminate if another node generates a block\")\n+        miniwallets[1].generate(1)  # generate a block on another node\n         # check that thread will exit now that new transaction entered mempool\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 3: test that longpoll will terminate if we generate a block ourselves\n+        self.log.info(\"Test that longpoll will terminate if we generate a block ourselves\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n-        self.nodes[0].generate(1)  # generate a block on another node\n+        miniwallets[0].generate(1)  # generate a block on own node\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 4: test that introducing a new transaction into the mempool will terminate the longpoll\n+        # Add enough mature utxos to the wallets, so that all txs spend confirmed coins\n+        self.nodes[0].generate(100)\n+        self.nodes[1].generate(100)",
      "path": "test/functional/mining_getblocktemplate_longpoll.py",
      "position": null,
      "original_position": 63,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "original_commit_id": "c63e7c23f5f11371532f67a3126f5b1dd73fb901",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are 100 not enough?",
      "created_at": "2020-10-16T08:23:31Z",
      "updated_at": "2020-10-16T13:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#discussion_r506163150",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506163150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506414234",
      "pull_request_review_id": 510465258,
      "id": 506414234,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxNDIzNA==",
      "diff_hunk": "@@ -29,45 +31,48 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n-        self.log.info(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n-        self.nodes[0].generate(10)\n+        self.log.info(\"Warning: this test will take about 70 seconds in the worst case. Be patient.\")",
      "path": "test/functional/mining_getblocktemplate_longpoll.py",
      "position": null,
      "original_position": 26,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "original_commit_id": "c63e7c23f5f11371532f67a3126f5b1dd73fb901",
      "in_reply_to_id": 506159902,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, I had a few test runs that finished in ~6 seconds (i.e. introduction of a new transaction would terminate the longpoll immediately, not only in +1minute), but can't reproduce it anymore. Changed the message back to original.",
      "created_at": "2020-10-16T13:23:44Z",
      "updated_at": "2020-10-16T13:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#discussion_r506414234",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506414234"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506414296",
      "pull_request_review_id": 510465297,
      "id": 506414296,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxNDI5Ng==",
      "diff_hunk": "@@ -29,45 +31,48 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n-        self.log.info(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n-        self.nodes[0].generate(10)\n+        self.log.info(\"Warning: this test will take about 70 seconds in the worst case. Be patient.\")\n+        miniwallets = [ MiniWallet(node) for node in self.nodes ]\n+        miniwallets[0].generate(10)\n         template = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         longpollid = template['longpollid']\n         # longpollid should not change between successive invocations if nothing else happens\n         template2 = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         assert template2['longpollid'] == longpollid\n \n-        # Test 1: test that the longpolling wait if we do nothing\n+        self.log.info(\"Test that longpoll waits if we do nothing\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # check that thread still lives\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert thr.is_alive()\n \n-        # Test 2: test that longpoll will terminate if another node generates a block\n-        self.nodes[1].generate(1)  # generate a block on another node\n+        self.log.info(\"Test that longpoll will terminate if another node generates a block\")\n+        miniwallets[1].generate(1)  # generate a block on another node\n         # check that thread will exit now that new transaction entered mempool\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 3: test that longpoll will terminate if we generate a block ourselves\n+        self.log.info(\"Test that longpoll will terminate if we generate a block ourselves\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n-        self.nodes[0].generate(1)  # generate a block on another node\n+        miniwallets[0].generate(1)  # generate a block on own node\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 4: test that introducing a new transaction into the mempool will terminate the longpoll\n+        # Add enough mature utxos to the wallets, so that all txs spend confirmed coins\n+        self.nodes[0].generate(100)\n+        self.nodes[1].generate(100)\n+\n+        self.log.info(\"Test that introducing a new transaction into the mempool will terminate the longpoll\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # generate a random transaction and submit it\n         min_relay_fee = self.nodes[0].getnetworkinfo()[\"relayfee\"]\n-        # min_relay_fee is fee per 1000 bytes, which should be more than enough.\n-        (txid, txhex, fee) = random_transaction(self.nodes, Decimal(\"1.1\"), min_relay_fee, Decimal(\"0.001\"), 20)\n+        fee_rate = min_relay_fee + Decimal('0.00000010') * random.randint(0,20)",
      "path": "test/functional/mining_getblocktemplate_longpoll.py",
      "position": 71,
      "original_position": 72,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "original_commit_id": "c63e7c23f5f11371532f67a3126f5b1dd73fb901",
      "in_reply_to_id": 506163012,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nice catch, thanks. Added a commit that removes the helpers `random_transaction` as well as `make_change` and `gather_inputs`. The latter two were only used by `random_transaction`.",
      "created_at": "2020-10-16T13:23:47Z",
      "updated_at": "2020-10-16T13:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#discussion_r506414296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506414296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506414458",
      "pull_request_review_id": 510465379,
      "id": 506414458,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxNDQ1OA==",
      "diff_hunk": "@@ -29,45 +31,48 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n-        self.log.info(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n-        self.nodes[0].generate(10)\n+        self.log.info(\"Warning: this test will take about 70 seconds in the worst case. Be patient.\")\n+        miniwallets = [ MiniWallet(node) for node in self.nodes ]\n+        miniwallets[0].generate(10)\n         template = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         longpollid = template['longpollid']\n         # longpollid should not change between successive invocations if nothing else happens\n         template2 = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         assert template2['longpollid'] == longpollid\n \n-        # Test 1: test that the longpolling wait if we do nothing\n+        self.log.info(\"Test that longpoll waits if we do nothing\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # check that thread still lives\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert thr.is_alive()\n \n-        # Test 2: test that longpoll will terminate if another node generates a block\n-        self.nodes[1].generate(1)  # generate a block on another node\n+        self.log.info(\"Test that longpoll will terminate if another node generates a block\")\n+        miniwallets[1].generate(1)  # generate a block on another node\n         # check that thread will exit now that new transaction entered mempool\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 3: test that longpoll will terminate if we generate a block ourselves\n+        self.log.info(\"Test that longpoll will terminate if we generate a block ourselves\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n-        self.nodes[0].generate(1)  # generate a block on another node\n+        miniwallets[0].generate(1)  # generate a block on own node\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 4: test that introducing a new transaction into the mempool will terminate the longpoll\n+        # Add enough mature utxos to the wallets, so that all txs spend confirmed coins\n+        self.nodes[0].generate(100)\n+        self.nodes[1].generate(100)",
      "path": "test/functional/mining_getblocktemplate_longpoll.py",
      "position": null,
      "original_position": 63,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "original_commit_id": "c63e7c23f5f11371532f67a3126f5b1dd73fb901",
      "in_reply_to_id": 506163150,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The intention was to ensure that both nodes have matured utxos, not only the one where we generate the blocks. However, only generating on one node and simply adding a `self.sync_blocks()` is the better solution. Fixed.",
      "created_at": "2020-10-16T13:23:53Z",
      "updated_at": "2020-10-16T13:41:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#discussion_r506414458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506414458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506519720",
      "pull_request_review_id": 510555167,
      "id": 506519720,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUxOTcyMA==",
      "diff_hunk": "@@ -29,45 +31,48 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         self.log.info(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n+        self.log.info(\"Test that longpollid doesn't change between successive getblocktemplate() invocations if nothing else happens\")\n         self.nodes[0].generate(10)\n         template = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         longpollid = template['longpollid']\n-        # longpollid should not change between successive invocations if nothing else happens\n         template2 = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         assert template2['longpollid'] == longpollid\n \n-        # Test 1: test that the longpolling wait if we do nothing\n+        self.log.info(\"Test that longpoll waits if we do nothing\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # check that thread still lives\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert thr.is_alive()\n \n-        # Test 2: test that longpoll will terminate if another node generates a block\n-        self.nodes[1].generate(1)  # generate a block on another node\n+        miniwallets = [ MiniWallet(node) for node in self.nodes ]\n+        self.log.info(\"Test that longpoll will terminate if another node generates a block\")\n+        miniwallets[1].generate(1)  # generate a block on another node\n         # check that thread will exit now that new transaction entered mempool\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 3: test that longpoll will terminate if we generate a block ourselves\n+        self.log.info(\"Test that longpoll will terminate if we generate a block ourselves\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n-        self.nodes[0].generate(1)  # generate a block on another node\n+        miniwallets[0].generate(1)  # generate a block on own node\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 4: test that introducing a new transaction into the mempool will terminate the longpoll\n+        # Add enough mature utxos to the wallets, so that all txs spend confirmed coins\n+        self.nodes[0].generate(100)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Test that introducing a new transaction into the mempool will terminate the longpoll\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # generate a random transaction and submit it\n         min_relay_fee = self.nodes[0].getnetworkinfo()[\"relayfee\"]\n-        # min_relay_fee is fee per 1000 bytes, which should be more than enough.\n-        (txid, txhex, fee) = random_transaction(self.nodes, Decimal(\"1.1\"), min_relay_fee, Decimal(\"0.001\"), 20)\n+        fee_rate = min_relay_fee + Decimal('0.00000010') * random.randint(0,20)",
      "path": "test/functional/mining_getblocktemplate_longpoll.py",
      "position": 71,
      "original_position": 71,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "original_commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "why does the fee need to be random?\r\n\r\nedit: I guess doesn't matter. The `random` import is needed either way",
      "created_at": "2020-10-16T15:01:50Z",
      "updated_at": "2020-10-16T15:03:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#discussion_r506519720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506519720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506831201",
      "pull_request_review_id": 510955514,
      "id": 506831201,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjgzMTIwMQ==",
      "diff_hunk": "@@ -29,45 +31,48 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.supports_cli = False\n \n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n     def run_test(self):\n         self.log.info(\"Warning: this test will take about 70 seconds in the best case. Be patient.\")\n+        self.log.info(\"Test that longpollid doesn't change between successive getblocktemplate() invocations if nothing else happens\")\n         self.nodes[0].generate(10)\n         template = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         longpollid = template['longpollid']\n-        # longpollid should not change between successive invocations if nothing else happens\n         template2 = self.nodes[0].getblocktemplate({'rules': ['segwit']})\n         assert template2['longpollid'] == longpollid\n \n-        # Test 1: test that the longpolling wait if we do nothing\n+        self.log.info(\"Test that longpoll waits if we do nothing\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # check that thread still lives\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert thr.is_alive()\n \n-        # Test 2: test that longpoll will terminate if another node generates a block\n-        self.nodes[1].generate(1)  # generate a block on another node\n+        miniwallets = [ MiniWallet(node) for node in self.nodes ]\n+        self.log.info(\"Test that longpoll will terminate if another node generates a block\")\n+        miniwallets[1].generate(1)  # generate a block on another node\n         # check that thread will exit now that new transaction entered mempool\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 3: test that longpoll will terminate if we generate a block ourselves\n+        self.log.info(\"Test that longpoll will terminate if we generate a block ourselves\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n-        self.nodes[0].generate(1)  # generate a block on another node\n+        miniwallets[0].generate(1)  # generate a block on own node\n         thr.join(5)  # wait 5 seconds or until thread exits\n         assert not thr.is_alive()\n \n-        # Test 4: test that introducing a new transaction into the mempool will terminate the longpoll\n+        # Add enough mature utxos to the wallets, so that all txs spend confirmed coins\n+        self.nodes[0].generate(100)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Test that introducing a new transaction into the mempool will terminate the longpoll\")\n         thr = LongpollThread(self.nodes[0])\n         thr.start()\n         # generate a random transaction and submit it\n         min_relay_fee = self.nodes[0].getnetworkinfo()[\"relayfee\"]\n-        # min_relay_fee is fee per 1000 bytes, which should be more than enough.\n-        (txid, txhex, fee) = random_transaction(self.nodes, Decimal(\"1.1\"), min_relay_fee, Decimal(\"0.001\"), 20)\n+        fee_rate = min_relay_fee + Decimal('0.00000010') * random.randint(0,20)",
      "path": "test/functional/mining_getblocktemplate_longpoll.py",
      "position": 71,
      "original_position": 71,
      "commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "original_commit_id": "b128b566725a5037fdaea99940d1b9de5553d198",
      "in_reply_to_id": 506519720,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My idea was to keep the test as close as possible to the original and only tackle the parts involving the wallet. Agree though that a fixed fee would work as well.",
      "created_at": "2020-10-17T06:34:32Z",
      "updated_at": "2020-10-17T06:34:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20159#discussion_r506831201",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/506831201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    }
  ]
}