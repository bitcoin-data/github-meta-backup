{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711",
    "id": 1168231123,
    "node_id": "PR_kwDOABII585FocrT",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/26711",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/26711.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/26711.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b234f993da3caa16f7716948fbcd16ab1a500180",
    "number": 26711,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "validate package transactions with their in-package ancestor sets",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This contains everything to make mempool/validation logic ready for package relay (see #27463).\r\n\r\nThe hope here is to end up with the incentive-compatible transactions in our mempool. Prior to this commit, if parents within the package relied on each other, we could end up (1) accepting a low-feerate child or (2) rejecting high-feerate parents. See the \"interdependent parents\" test case for a specific example.\r\n\r\nThis also includes some shortcuts to reduce the amount of validation work we are doing:\r\n- Don't validate the last tx twice.\r\n- If the last transaction is by itself, call `AcceptSingleTransaction()` instead of `AcceptMultipleTransactions()`. This skips `PackageMempoolChecks()` on it.\r\n- If a transaction depends on something that failed for a non-policy reason, don't validate it, just return missing inputs.\r\n\r\nThese smaller changes also reduce the diff of the main \"validate sub-packages\" commit: Instead of validating each transaction *individually* in turn, validate each one with their *in-package ancestor set* (excluding the ones that already made it into the mempool). This means parents with inter-dependencies are validated correctly, while we continue using aggregate totals for package feerate.",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      },
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "created_at": "2022-12-16T11:27:00Z",
    "updated_at": "2023-06-06T15:40:00Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "bcb027ffd65e975b4e1b37293d7e8eb8b1480e62",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "glozow:2022-12-subpackages",
      "ref": "2022-12-subpackages",
      "sha": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 225090,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-02T10:00:34Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2022-01-07T17:55:23Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "a13f3746dccd9c4ec16d6bfe9b33ebd26e3238e1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:15:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T06:49:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 774,
    "deletions": 185,
    "changed_files": 11,
    "commits": 15,
    "review_comments": 89,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 1354593703,
      "node_id": "IC_kwDOABII585QvXWn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1354593703",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T11:27:03Z",
      "updated_at": "2023-06-06T01:35:52Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [instagibbs](https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1442724105) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1354593703",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8071527683,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAHhGb0D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8071527683",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-19T17:24:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8077784671,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAHheTZf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8077784671",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-20T12:00:40Z"
    },
    {
      "event": "labeled",
      "id": 8201872285,
      "node_id": "LE_lADOABII585ZaOSVzwAAAAHo3qOd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8201872285",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-11T13:47:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8202040002,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAHo4TLC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8202040002",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-11T14:05:13Z"
    },
    {
      "event": "unlabeled",
      "id": 8203152674,
      "node_id": "UNLE_lADOABII585ZaOSVzwAAAAHo8i0i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8203152674",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-11T16:00:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8203301444,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAHo9HJE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8203301444",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-11T16:15:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8211498813,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAHpcYc9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8211498813",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-12T13:43:43Z"
    },
    {
      "event": "labeled",
      "id": 8211526402,
      "node_id": "LE_lADOABII585ZaOSVzwAAAAHpcfMC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8211526402",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-12T13:46:56Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "labeled",
      "id": 8211526408,
      "node_id": "LE_lADOABII585ZaOSVzwAAAAHpcfMI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8211526408",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-12T13:46:56Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8211594673,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAHpcv2x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8211594673",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-12T13:53:59Z"
    },
    {
      "event": "ready_for_review",
      "id": 8219777679,
      "node_id": "RFRE_lADOABII585ZaOSVzwAAAAHp79qP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8219777679",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-13T11:07:45Z"
    },
    {
      "event": "reviewed",
      "id": 1251451996,
      "node_id": "PRR_kwDOABII585Kl6Rc",
      "url": null,
      "actor": null,
      "commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1251451996",
      "submitted_at": "2023-01-17T12:20:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1251492911,
      "node_id": "PRR_kwDOABII585KmEQv",
      "url": null,
      "actor": null,
      "commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1251492911",
      "submitted_at": "2023-01-17T12:49:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1251548165,
      "node_id": "PRR_kwDOABII585KmRwF",
      "url": null,
      "actor": null,
      "commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1251548165",
      "submitted_at": "2023-01-17T13:25:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "renamed",
      "id": 8246264475,
      "node_id": "RTE_lADOABII585ZaOSVzwAAAAHrhAKb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8246264475",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-17T14:28:10Z",
      "rename": {
        "from": "[WIP] validate package transactions with their in-package ancestor sets",
        "to": "validate package transactions with their in-package ancestor sets"
      }
    },
    {
      "event": "reviewed",
      "id": 1261683617,
      "node_id": "PRR_kwDOABII585LM8Oh",
      "url": null,
      "actor": null,
      "commit_id": "879b55fa9da3688fb6b85e7f40f9778753a9102f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1261683617",
      "submitted_at": "2023-01-19T12:24:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1260782143,
      "node_id": "PRR_kwDOABII585LJgI_",
      "url": null,
      "actor": null,
      "commit_id": "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "dropping some initial comments ",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1260782143",
      "submitted_at": "2023-01-19T17:25:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8314673040,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAHvl9eQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8314673040",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-19T17:52:42Z"
    },
    {
      "event": "reviewed",
      "id": 1263465719,
      "node_id": "PRR_kwDOABII585LTvT3",
      "url": null,
      "actor": null,
      "commit_id": "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1263465719",
      "submitted_at": "2023-01-20T11:57:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1263473012,
      "node_id": "PRR_kwDOABII585LTxF0",
      "url": null,
      "actor": null,
      "commit_id": "4c4cea3856b1fa2a50de25847b19ae90c4263916",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1263473012",
      "submitted_at": "2023-01-20T12:03:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1263514526,
      "node_id": "PRR_kwDOABII585LT7Oe",
      "url": null,
      "actor": null,
      "commit_id": "8764ecc566413b4974e030c596193e75ff39f746",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1263514526",
      "submitted_at": "2023-01-20T12:37:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1263535150,
      "node_id": "PRR_kwDOABII585LUAQu",
      "url": null,
      "actor": null,
      "commit_id": "8764ecc566413b4974e030c596193e75ff39f746",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1263535150",
      "submitted_at": "2023-01-20T12:54:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1266961348,
      "node_id": "PRR_kwDOABII585LhEvE",
      "url": null,
      "actor": null,
      "commit_id": "cea7dcf4388ad65436fcb98c7025b607708e09ab",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1266961348",
      "submitted_at": "2023-01-24T07:43:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1267024821,
      "node_id": "PRR_kwDOABII585LhUO1",
      "url": null,
      "actor": null,
      "commit_id": "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1267024821",
      "submitted_at": "2023-01-24T08:23:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1267126406,
      "node_id": "PRR_kwDOABII585LhtCG",
      "url": null,
      "actor": null,
      "commit_id": "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1267126406",
      "submitted_at": "2023-01-24T09:32:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1267177090,
      "node_id": "PRR_kwDOABII585Lh5aC",
      "url": null,
      "actor": null,
      "commit_id": "936c7f170bc68ec583ae026ddbaf197ca6cd0792",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1267177090",
      "submitted_at": "2023-01-24T10:03:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8389053396,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAH0BsvU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8389053396",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-30T14:51:23Z"
    },
    {
      "event": "reviewed",
      "id": 1276742818,
      "node_id": "PRR_kwDOABII585MGYyi",
      "url": null,
      "actor": null,
      "commit_id": "132159cc6ae36da7697fcbb90bd5914e02a41386",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1276742818",
      "submitted_at": "2023-01-31T08:58:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1276843630,
      "node_id": "PRR_kwDOABII585MGxZu",
      "url": null,
      "actor": null,
      "commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1276843630",
      "submitted_at": "2023-01-31T09:56:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1276863562,
      "node_id": "PRR_kwDOABII585MG2RK",
      "url": null,
      "actor": null,
      "commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1276863562",
      "submitted_at": "2023-01-31T10:08:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1278872989,
      "node_id": "PRR_kwDOABII585MOg2d",
      "url": null,
      "actor": null,
      "commit_id": "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1278872989",
      "submitted_at": "2023-02-01T10:48:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1340287122,
      "node_id": "PRR_kwDOABII585P4yiS",
      "url": null,
      "actor": null,
      "commit_id": "4a4ae2f12837f3abe93a67bd490213f5a9e82d76",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1340287122",
      "submitted_at": "2023-03-14T21:11:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "commented",
      "id": 1497279995,
      "node_id": "IC_kwDOABII585ZPq37",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1497279995",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-05T10:42:35Z",
      "updated_at": "2023-04-05T10:42:35Z",
      "author_association": "MEMBER",
      "body": "Marking as draft for now, will rebase on top of #26933",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1497279995",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711"
    },
    {
      "event": "convert_to_draft",
      "id": 8933664844,
      "node_id": "CTDE_lADOABII585ZaOSVzwAAAAIUfOhM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8933664844",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-05T10:42:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8988361771,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAIXv4Qr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8988361771",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-12T17:48:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9026640098,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAIaB5ji",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9026640098",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-17T16:13:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9139437498,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAIgwL-6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9139437498",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-01T20:31:42Z"
    },
    {
      "event": "ready_for_review",
      "id": 9139548949,
      "node_id": "RFRE_lADOABII585ZaOSVzwAAAAIgwnMV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9139548949",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-01T20:48:49Z"
    },
    {
      "event": "labeled",
      "id": 9139863169,
      "node_id": "LE_lADOABII585ZaOSVzwAAAAIgxz6B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9139863169",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-01T21:35:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1262442548,
      "node_id": "PRR_kwDOABII585LP1g0",
      "url": null,
      "actor": null,
      "commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "test issue causing failure",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1262442548",
      "submitted_at": "2023-05-02T16:46:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1409760020,
      "node_id": "PRR_kwDOABII585UBzsU",
      "url": null,
      "actor": null,
      "commit_id": "08a07c348d70907951a9225853976f9486665246",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1409760020",
      "submitted_at": "2023-05-02T19:30:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1411070467,
      "node_id": "PRR_kwDOABII585UGzoD",
      "url": null,
      "actor": null,
      "commit_id": "7fd7cc3502411a523c860400ac9e9a9b3991a872",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1411070467",
      "submitted_at": "2023-05-03T14:46:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1417261502,
      "node_id": "PRR_kwDOABII585UebG-",
      "url": null,
      "actor": null,
      "commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Last bit of nitting:\r\n\r\n`AcceptPackage` -> `AcceptAncestorPackage`\r\n`AcceptMultipleTransactions` -> `AcceptSubPackage`\r\n\r\nWith BIP331 I think maybe knowing what an ancestor package is and how it fits\r\ninto this code may become clearer?",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1417261502",
      "submitted_at": "2023-05-08T20:32:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9215899468,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAIlT3dM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9215899468",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T22:12:14Z"
    },
    {
      "event": "unlabeled",
      "id": 9216175857,
      "node_id": "UNLE_lADOABII585ZaOSVzwAAAAIlU67x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9216175857",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T23:20:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9225175197,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAIl3QCd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225175197",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T17:43:38Z"
    },
    {
      "event": "labeled",
      "id": 9225997589,
      "node_id": "LE_lADOABII585ZaOSVzwAAAAIl6Y0V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9225997589",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T19:22:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1423335249,
      "node_id": "PRR_kwDOABII585U1l9R",
      "url": null,
      "actor": null,
      "commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1423335249",
      "submitted_at": "2023-05-11T19:56:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1427036930,
      "node_id": "PRR_kwDOABII585VDtsC",
      "url": null,
      "actor": null,
      "commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "looking good",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1427036930",
      "submitted_at": "2023-05-15T18:01:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "commented",
      "id": 1550285007,
      "node_id": "IC_kwDOABII585cZ3jP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550285007",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:02:05Z",
      "updated_at": "2023-05-16T20:04:31Z",
      "author_association": "NONE",
      "body": "What are the current use cases / applications for transaction packages enabled by this PR that are more complicated than child-with-parents-tree-only?",
      "user": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1550285007",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711"
    },
    {
      "event": "commented",
      "id": 1550292949,
      "node_id": "IC_kwDOABII585cZ5fV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550292949",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:08:34Z",
      "updated_at": "2023-05-16T20:08:53Z",
      "author_association": "MEMBER",
      "body": "@joostjager could be as simple as any wallet that does CPFP bumping in their coin selection algorithm(chaining unconfirmed spends). The ideal is to support as many usage patters exist in practice, ancestor packages is just a large-ish subset of that from a CPFP point of view.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1550292949",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711"
    },
    {
      "event": "mentioned",
      "id": 9262107034,
      "node_id": "MEE_lADOABII585ZaOSVzwAAAAIoEIma",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262107034",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:08:34Z"
    },
    {
      "event": "subscribed",
      "id": 9262107051,
      "node_id": "SE_lADOABII585ZaOSVzwAAAAIoEImr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262107051",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:08:34Z"
    },
    {
      "event": "commented",
      "id": 1550315212,
      "node_id": "IC_kwDOABII585cZ-7M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550315212",
      "actor": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:28:00Z",
      "updated_at": "2023-05-16T20:29:58Z",
      "author_association": "NONE",
      "body": "I am trying to get a feel for how big of a problem it is that this PR solves. In Lightning the problem is very real and potentially exposing lots of users to coin loss because of the combination of pre-signed transactions and time sensitivity, but the topology is of the simplest kind. I am not sure if the wallet example that you give is of the same order because RBF is also an option and timing may not be as critical?\r\n\r\nOf course it is great to support as many patterns as possible, but it also makes the system more complex to reason about and maintain. Maybe #27609 takes away 90% of the pain at 10% of the cost?",
      "user": {
        "login": "joostjager",
        "id": 4638168,
        "node_id": "MDQ6VXNlcjQ2MzgxNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4638168?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/joostjager",
        "html_url": "https://github.com/joostjager",
        "followers_url": "https://api.github.com/users/joostjager/followers",
        "following_url": "https://api.github.com/users/joostjager/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/joostjager/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/joostjager/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/joostjager/subscriptions",
        "organizations_url": "https://api.github.com/users/joostjager/orgs",
        "repos_url": "https://api.github.com/users/joostjager/repos",
        "events_url": "https://api.github.com/users/joostjager/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/joostjager/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#issuecomment-1550315212",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26711"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1MDI0N2UwOTYzMDhhZjE1ZTk1ZDc4NWI4YzkyZTczYzE2MGI3M2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/050247e096308af15e95d785b8c92e73c160b73f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/050247e096308af15e95d785b8c92e73c160b73f",
      "tree": {
        "sha": "6f70416c8fa2007d0a860ee7c9b3c09789b3c19c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f70416c8fa2007d0a860ee7c9b3c09789b3c19c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f8c95dccd120ad5fd371f81025137b855796f13",
          "sha": "0f8c95dccd120ad5fd371f81025137b855796f13",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0f8c95dccd120ad5fd371f81025137b855796f13"
        }
      ],
      "message": "[validation] require child feerate > package feerate",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T11:23:01Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-10T16:02:41Z"
      },
      "sha": "050247e096308af15e95d785b8c92e73c160b73f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEyNDhlYjQ2MTdiZTRiNzhjNTdlNjM4MzZkOGIxZTAxOTBmODk2MGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a248eb4617be4b78c57e63836d8b1e0190f8960b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a248eb4617be4b78c57e63836d8b1e0190f8960b",
      "tree": {
        "sha": "a388968b72e2635bb0e7c83848487c2ffa96e766",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a388968b72e2635bb0e7c83848487c2ffa96e766"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/050247e096308af15e95d785b8c92e73c160b73f",
          "sha": "050247e096308af15e95d785b8c92e73c160b73f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/050247e096308af15e95d785b8c92e73c160b73f"
        }
      ],
      "message": "[test util] multi-input multi-output CreateValidMempoolTransaction",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T11:23:01Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-10-03T09:56:00Z"
      },
      "sha": "a248eb4617be4b78c57e63836d8b1e0190f8960b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9326563616,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAIr6BEg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9326563616",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T11:29:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9327180590,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAIr8Xsu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9327180590",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T12:34:39Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdlMjVlMDAyMTAwZjU3ZDY5YTk2N2Y0NzVlYjQ4NGE4NjM3ZDlkY2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e25e002100f57d69a967f475eb484a8637d9dcb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7e25e002100f57d69a967f475eb484a8637d9dcb",
      "tree": {
        "sha": "3914650bb8a70137c43237739176efffe0ea3288",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3914650bb8a70137c43237739176efffe0ea3288"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a248eb4617be4b78c57e63836d8b1e0190f8960b",
          "sha": "a248eb4617be4b78c57e63836d8b1e0190f8960b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a248eb4617be4b78c57e63836d8b1e0190f8960b"
        }
      ],
      "message": "[unit test] parent pay for child is not allowed\n\nCo-authored-by: Andrew Chow <achow101@gmail.com>",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-10T18:46:26Z"
      },
      "sha": "7e25e002100f57d69a967f475eb484a8637d9dcb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM0YTBiZGJiYTZlMjZmMDk2NDYwNWJlNGIzNTNiNWZiNWEwYWQzNTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4a0bdbba6e26f0964605be4b353b5fb5a0ad355",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a0bdbba6e26f0964605be4b353b5fb5a0ad355",
      "tree": {
        "sha": "aa7b8ad6b91d68005d14596329e0eaa4cbd2c57a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa7b8ad6b91d68005d14596329e0eaa4cbd2c57a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e25e002100f57d69a967f475eb484a8637d9dcb",
          "sha": "7e25e002100f57d69a967f475eb484a8637d9dcb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7e25e002100f57d69a967f475eb484a8637d9dcb"
        }
      ],
      "message": "[rpc] allow submitpackage to be called outside of regtest",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-04-11T15:07:34Z"
      },
      "sha": "c4a0bdbba6e26f0964605be4b353b5fb5a0ad355"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY2YjkyOGIxMjQxZGU1YjBjZmRjZmQwY2ViYjNkNTZlZjhmZThjZTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6b928b1241de5b0cfdcfd0cebb3d56ef8fe8ce4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f6b928b1241de5b0cfdcfd0cebb3d56ef8fe8ce4",
      "tree": {
        "sha": "fc0e98fc09f488f01f9bcd603ec863f8aa1447c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc0e98fc09f488f01f9bcd603ec863f8aa1447c6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4a0bdbba6e26f0964605be4b353b5fb5a0ad355",
          "sha": "c4a0bdbba6e26f0964605be4b353b5fb5a0ad355",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a0bdbba6e26f0964605be4b353b5fb5a0ad355"
        }
      ],
      "message": "[doc] add release note for submitpackage",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-10T15:43:05Z"
      },
      "sha": "f6b928b1241de5b0cfdcfd0cebb3d56ef8fe8ce4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFiYWZmNjc3ZTY3MzEzOWRmYjAwZDExYjAxNmVhOWQ4OTE2YmZmMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1baff677e673139dfb00d11b016ea9d8916bff1c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1baff677e673139dfb00d11b016ea9d8916bff1c",
      "tree": {
        "sha": "a8acf891beb5d5a2cbc2303686443e3b7e0cc88c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8acf891beb5d5a2cbc2303686443e3b7e0cc88c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6b928b1241de5b0cfdcfd0cebb3d56ef8fe8ce4",
          "sha": "f6b928b1241de5b0cfdcfd0cebb3d56ef8fe8ce4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f6b928b1241de5b0cfdcfd0cebb3d56ef8fe8ce4"
        }
      ],
      "message": "[validation] call AcceptSingleTransaction when only 1 package tx left\n\nAvoid calling PackageMempoolChecks() when there is only 1 transaction.\nNote to reviewers: there is a slight change in the error type returned,\nas shown in the txpackage_tests change.  When a transaction is the last\none left in the package and its fee is too low, this returns a PCKG_TX\ninstead of PCKG_POLICY. This interface is clearer;\n\"package-fee-too-low\" for 1 transaction would be a bit misleading.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-12-15T18:00:04Z"
      },
      "sha": "1baff677e673139dfb00d11b016ea9d8916bff1c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM5YmYzN2RlMmVlNTc2OWJjNDYyZWQwYzhjNDM3ZTBkM2QwMGE0MzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9bf37de2ee5769bc462ed0c8c437e0d3d00a431",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c9bf37de2ee5769bc462ed0c8c437e0d3d00a431",
      "tree": {
        "sha": "a8949798d6c4813379005f478e307097044942b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8949798d6c4813379005f478e307097044942b4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1baff677e673139dfb00d11b016ea9d8916bff1c",
          "sha": "1baff677e673139dfb00d11b016ea9d8916bff1c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1baff677e673139dfb00d11b016ea9d8916bff1c"
        }
      ],
      "message": "MOVEONLY: move package checks into helper functions",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-09-16T15:49:24Z"
      },
      "sha": "c9bf37de2ee5769bc462ed0c8c437e0d3d00a431"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhiMzc1YWEwMGMxMWQyNDZkYzEzMmFlNzk5OTZkMTVlM2VlZDVlZTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b375aa00c11d246dc132ae79996d15e3eed5ee1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8b375aa00c11d246dc132ae79996d15e3eed5ee1",
      "tree": {
        "sha": "98fd0b2a11b8bac355e35ebea8ce603c0ddf3e13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98fd0b2a11b8bac355e35ebea8ce603c0ddf3e13"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c9bf37de2ee5769bc462ed0c8c437e0d3d00a431",
          "sha": "c9bf37de2ee5769bc462ed0c8c437e0d3d00a431",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c9bf37de2ee5769bc462ed0c8c437e0d3d00a431"
        }
      ],
      "message": "scripted-diff: rename CheckPackage to IsPackageWellFormed\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/CheckPackage(/IsPackageWellFormed(/g' $(git grep -l CheckPackage)\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-01-19T17:31:58Z"
      },
      "sha": "8b375aa00c11d246dc132ae79996d15e3eed5ee1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwNTU4MWI1ZWE2MWVkZDQ0NDQzOTkwMDEwOWM1MjdjNzExMmE2NTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/005581b5ea61edd444439900109c527c7112a650",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/005581b5ea61edd444439900109c527c7112a650",
      "tree": {
        "sha": "02195db6d68d6af2aac608e31f46e0010850e08d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02195db6d68d6af2aac608e31f46e0010850e08d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b375aa00c11d246dc132ae79996d15e3eed5ee1",
          "sha": "8b375aa00c11d246dc132ae79996d15e3eed5ee1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8b375aa00c11d246dc132ae79996d15e3eed5ee1"
        }
      ],
      "message": "[packages] AncestorPackage sorts and builds ancestor subsets\n\nWe cannot require that peers send topologically sorted lists, because we\ncannot check for this property without ensuring we have the same chain\ntip and ensuring we have the full ancestor set. Instead, add the ability\nto handle arbitrarily ordered transaction lists.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-09-16T15:51:36Z"
      },
      "sha": "005581b5ea61edd444439900109c527c7112a650"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3NzIxMDJkODNjNDU5OTEwYWVlMDZmOWZkMWE1MDE3NmU3Njk5Nzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e772102d83c459910aee06f9fd1a50176e769978",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e772102d83c459910aee06f9fd1a50176e769978",
      "tree": {
        "sha": "e0a95d12000745ebfd82f2261fd945fbe86c1bb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e0a95d12000745ebfd82f2261fd945fbe86c1bb6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/005581b5ea61edd444439900109c527c7112a650",
          "sha": "005581b5ea61edd444439900109c527c7112a650",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/005581b5ea61edd444439900109c527c7112a650"
        }
      ],
      "message": "[fuzz] AncestorPackage",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-02-16T15:31:44Z"
      },
      "sha": "e772102d83c459910aee06f9fd1a50176e769978"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMxOWU1ZWQ1MjIwZTkyNzg5OWU5NWI1OTNkODYzYjNlZDUwM2Q2ZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/319e5ed5220e927899e95b593d863b3ed503d6de",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/319e5ed5220e927899e95b593d863b3ed503d6de",
      "tree": {
        "sha": "7220245f152893635bbfa9491336144f2dc4558e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7220245f152893635bbfa9491336144f2dc4558e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e772102d83c459910aee06f9fd1a50176e769978",
          "sha": "e772102d83c459910aee06f9fd1a50176e769978",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e772102d83c459910aee06f9fd1a50176e769978"
        }
      ],
      "message": "[validation] skip and pre-fill txns with irreversibly invalid ancestors\n\nPackageifier calculates the in-package ancestors. We already know\nthis tx will fail because it depends on something invalid (specifically\nfor a non-policy reason). We also know that it is missing at least one\ninput (the tx that did not and will not make it into our mempool).\n\nNote to reviewers: slight behavior change. If this tx has multiple\nerrors, there may be a difference in which one is returned. For\nexample, if the tx has a dust output in addition to relying on\nthe invalid tx, we will return TX_MISSING_INPUTS when we previously\nwould have returned TX_NOT_STANDARD. This is simply because dust is\nchecked earlier within PreChecks().\n\nAdd a test that we don't quit *too* early and reject transactions we\nshould keep.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-12-14T13:38:32Z"
      },
      "sha": "319e5ed5220e927899e95b593d863b3ed503d6de"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg5NDMwNTc0YWM0ZjJlMDIyZWRkOWZkZGYxYmYwNTE1YWJjMzZjYzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89430574ac4f2e022edd9fddf1bf0515abc36cc8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/89430574ac4f2e022edd9fddf1bf0515abc36cc8",
      "tree": {
        "sha": "dba2b6dd5c6258cd59b6f04855aebda1f175f20f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dba2b6dd5c6258cd59b6f04855aebda1f175f20f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/319e5ed5220e927899e95b593d863b3ed503d6de",
          "sha": "319e5ed5220e927899e95b593d863b3ed503d6de",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/319e5ed5220e927899e95b593d863b3ed503d6de"
        }
      ],
      "message": "[validation] skip last tx in AcceptPackage \"submit individually\" loop\n\nPrior to this commit, if the last tx is invalid for a policy, missing\ninputs, or \"mempool full\", we validate it twice (once inside this loop,\nand then again afterwards). This is unnecessary.\nIf we come to the last transaction in the package, break.\n\nThis needs to be after the !subpackage quit early condition so that\nthat the child is present in the results map.\n\nsubfill the child state for missing inputs",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-12-16T10:31:52Z"
      },
      "sha": "89430574ac4f2e022edd9fddf1bf0515abc36cc8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYxN2ZlNzA5MmU0ZmQ3Yzk4N2UwNDgwOGFkZjk3ZTE2OWRjMjRmNDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/617fe7092e4fd7c987e04808adf97e169dc24f47",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/617fe7092e4fd7c987e04808adf97e169dc24f47",
      "tree": {
        "sha": "cbc2fd94da0c39c0e5350aff27f03025331ea7db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cbc2fd94da0c39c0e5350aff27f03025331ea7db"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89430574ac4f2e022edd9fddf1bf0515abc36cc8",
          "sha": "89430574ac4f2e022edd9fddf1bf0515abc36cc8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/89430574ac4f2e022edd9fddf1bf0515abc36cc8"
        }
      ],
      "message": "[validation] validate packages by submitting each tx's ancestor sub-packages\n\nThis results in the incentive-compatible transactions ending up in our\nmempool. Prior to this commit, if parents within the package relied on\neach other, we could end up (1) accepting a low-feerate child or (2)\nrejecting high-feerate parents. Instead of validating each transaction\n*individually* in turn, validate each one with their in-package ancestor\nset. This means parents with inter-dependencies are validated correctly,\nwhile we continue using aggregate totals for package feerate.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-12-15T18:17:47Z"
      },
      "sha": "617fe7092e4fd7c987e04808adf97e169dc24f47"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM0NGRmOWIwYmZhNjZjNzdlNWNiYmZmNjY4OGVhNzNjZjM5ZWMxZDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c44df9b0bfa66c77e5cbbff6688ea73cf39ec1d3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c44df9b0bfa66c77e5cbbff6688ea73cf39ec1d3",
      "tree": {
        "sha": "d56d01ce3d1685141a7dcf713ec0c4abb8b83dc1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d56d01ce3d1685141a7dcf713ec0c4abb8b83dc1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/617fe7092e4fd7c987e04808adf97e169dc24f47",
          "sha": "617fe7092e4fd7c987e04808adf97e169dc24f47",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/617fe7092e4fd7c987e04808adf97e169dc24f47"
        }
      ],
      "message": "[policy] allow any ancestor package, not just child-with-unconfirmed-parents\n\nWe can safely allow any ancestor package since Packageifier can handle\nthings that are out of order. Remove the check that \"all unconfirmed\nparents are present\" because, even if a tx is missing inputs, the other\ntransactions may be worth validating.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-02-17T13:42:52Z"
      },
      "sha": "c44df9b0bfa66c77e5cbbff6688ea73cf39ec1d3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyMzRmOTkzZGEzY2FhMTZmNzcxNjk0OGZiY2QxNmFiMWE1MDAxODA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b234f993da3caa16f7716948fbcd16ab1a500180",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b234f993da3caa16f7716948fbcd16ab1a500180",
      "tree": {
        "sha": "0e4c7278ae9198bf42d24ce8c634ff743d6fcc43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e4c7278ae9198bf42d24ce8c634ff743d6fcc43"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c44df9b0bfa66c77e5cbbff6688ea73cf39ec1d3",
          "sha": "c44df9b0bfa66c77e5cbbff6688ea73cf39ec1d3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c44df9b0bfa66c77e5cbbff6688ea73cf39ec1d3"
        }
      ],
      "message": "MOVEONLY: rename AcceptPackage to AcceptAncestorPackage",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-24T14:17:21Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-05-10T21:50:56Z"
      },
      "sha": "b234f993da3caa16f7716948fbcd16ab1a500180"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9330555486,
      "node_id": "HRFPE_lADOABII585ZaOSVzwAAAAIsJPpe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9330555486",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T17:07:27Z"
    },
    {
      "event": "reviewed",
      "id": 1442702738,
      "node_id": "PRR_kwDOABII585V_eWS",
      "url": null,
      "actor": null,
      "commit_id": "7e25e002100f57d69a967f475eb484a8637d9dcb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1442702738",
      "submitted_at": "2023-05-24T20:30:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "reviewed",
      "id": 1442724105,
      "node_id": "PRR_kwDOABII585V_jkJ",
      "url": null,
      "actor": null,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/26711/commits/b234f993da3caa16f7716948fbcd16ab1a500180\r\n\r\nmodulo magic numbers in tests (sorry). Ran the fuzzer for a while again, no issues this time.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#pullrequestreview-1442724105",
      "submitted_at": "2023-05-24T20:46:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
    },
    {
      "event": "unlabeled",
      "id": 9335706387,
      "node_id": "UNLE_lADOABII585ZaOSVzwAAAAIsc5MT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9335706387",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T06:04:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072139558",
      "pull_request_review_id": 1251451996,
      "id": 1072139558,
      "node_id": "PRRC_kwDOABII584_540m",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\nLet's add an Assume checking `tx == package.end()`?",
      "created_at": "2023-01-17T12:20:04Z",
      "updated_at": "2023-01-17T12:29:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072139558",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072139558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072167416",
      "pull_request_review_id": 1251492911,
      "id": 1072167416,
      "node_id": "PRRC_kwDOABII584_5_n4",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\n\r\nWhat you're saying in the commit message is true only for `TxValidationResult::TX_MEMPOOL_POLICY` or `TxValidationResult::TX_MISSING_INPUTS`? In other failures, we won't validate the child for the second time (because it would trigger quit_early)\r\n\r\nWhat's even worse than a mistake in the commit message, you won't be able to catch other kinds of failures here (because you don't set `quit_early` here), so you might do some extra work which should have been avoided otherwise, no?",
      "created_at": "2023-01-17T12:49:10Z",
      "updated_at": "2023-01-17T12:50:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072167416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072167416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072204405",
      "pull_request_review_id": 1251548165,
      "id": 1072204405,
      "node_id": "PRRC_kwDOABII584_6Ip1",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "cb065422e58be7558e6c2ad9eadfa885bb48c708\r\n\r\nAfter this change it's impossible to hit `quit_early=false` and `txns_package_eval.empty()`, which was possible before.\r\nIt means that even if everything was either (valid, already in the mempool, or invalid due to a subset of failures) — you will force the checks again? (before this change, it could have terminated early)\r\n\r\nMaybe related [to the other comment i left](https://github.com/bitcoin/bitcoin/pull/26711/commits/cb065422e58be7558e6c2ad9eadfa885bb48c708#r1072167416).",
      "created_at": "2023-01-17T13:25:21Z",
      "updated_at": "2023-01-17T13:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1072204405",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072204405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073438932",
      "pull_request_review_id": 1253331561,
      "id": 1073438932,
      "node_id": "PRRC_kwDOABII584_-2DU",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": 1072204405,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> After this change it's impossible to hit quit_early=false and txns_package_eval.empty(), which was possible before.\r\n\r\nRight, `quit_early=false && txns_package_eval.empty()` means everything so far has been valid or txid already in mempool.\r\n\r\n> It means that even if everything was either (valid, already in the mempool, or invalid due to a subset of failures) — you will force the checks again? (before this change, it could have terminated early)\r\n\r\nOk I will try to break down all the possibilities in this scenario. If we get to the child and `quit_early=false && txns_package_eval.empty()`, everything else has been valid, and we should validate the child. It doesn't matter if we do it inside or outside this loop, but it's better to only do it 1 time.\r\nThe child's result can be: valid, policy/missing inputs, or other failure. If txid already in mempool we would have already exited the loop.\r\n\r\nBefore the commit:\r\n- If valid: the tx was validated 1 time, inside the loop.\r\n- If policy/missing inputs: the tx was validated 2 times, both inside the loop and with `AcceptMultipleTransactions(txns_package_eval)` outside the loop.\r\n- If other failure: the tx was validated 1 time, inside the loop.\r\n\r\nRight after the loop, `quit_early || txns_package_eval.empty()` hits, but none of them terminated without validating the child. \r\n\r\nAfter the commit:\r\n- If valid: the tx is validated 1 time, outside the loop.\r\n- If policy/missing inputs: the tx is validated 1 time, outside the loop.\r\n- If other failure: the tx is validated 1 time, outside the loop.\r\n\r\nRight after the loop, `quit_early || txns_package_eval.empty()` does not hit. The tx is validated, and then the results returned. The function returns at a later line of code, but that doesn't mean more work was done.",
      "created_at": "2023-01-18T11:53:24Z",
      "updated_at": "2023-01-18T11:53:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1073438932",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073438932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080563611",
      "pull_request_review_id": 1260782143,
      "id": 1080563611,
      "node_id": "PRRC_kwDOABII585AaBeb",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": 1072139558,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "would help for reading clarity if nothing else, agreed",
      "created_at": "2023-01-18T21:14:52Z",
      "updated_at": "2023-01-19T17:25:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080563611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080563611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080581849",
      "pull_request_review_id": 1260782143,
      "id": 1080581849,
      "node_id": "PRRC_kwDOABII585AaF7Z",
      "diff_hunk": "@@ -15,21 +15,8 @@\n #include <numeric>\n #include <unordered_set>\n \n-bool CheckPackage(const Package& txns, PackageValidationState& state)\n+bool IsSorted(const Package& txns)\n {\n-    const unsigned int package_count = txns.size();\n-\n-    if (package_count > MAX_PACKAGE_COUNT) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n-    }\n-\n-    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n-                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n-    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n-    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n-    }\n-\n     // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n     // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and",
      "path": "src/policy/packages.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rest of this comment seems appropriate elsewhere now that its put in its own subroutine.\r\n",
      "created_at": "2023-01-18T21:37:49Z",
      "updated_at": "2023-01-19T17:25:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080581849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080581849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080595370",
      "pull_request_review_id": 1260782143,
      "id": 1080595370,
      "node_id": "PRRC_kwDOABII585AaJOq",
      "diff_hunk": "@@ -65,6 +56,26 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)",
      "path": "src/policy/packages.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "While we're here: `CheckPackageWellFormed`",
      "created_at": "2023-01-18T21:54:55Z",
      "updated_at": "2023-01-19T17:25:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080595370",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080595370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080599515",
      "pull_request_review_id": 1260782143,
      "id": 1080599515,
      "node_id": "PRRC_kwDOABII585AaKPb",
      "diff_hunk": "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/",
      "path": "src/policy/packages.h",
      "position": null,
      "original_position": 24,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/so/to/",
      "created_at": "2023-01-18T21:58:32Z",
      "updated_at": "2023-01-19T17:25:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080599515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080599515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080602237",
      "pull_request_review_id": 1260782143,
      "id": 1080602237,
      "node_id": "PRRC_kwDOABII585AaK59",
      "diff_hunk": "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:\n+     * - there are no conflicts\n+     * - the number of transactions is reasonable (e.g. within MAX_PACKAGE_COUNT)\n+     */\n+    Packageifier(const Package& txns);\n+    /** Returns the transactions, in ascending order of number of in-package ancestors. */\n+    Package Txns() const { return txns; }\n+    /** Get the ancestor subpackage for a transaction. */\n+    std::vector<CTransactionRef> GetAncestorSet(const CTransactionRef& tx);\n+    /** From now on, exclude these transactions from GetAncestorSet(). */\n+    void Exclude(const CTransactionRef& transaction);\n+    /** Mark a transaction as \"banned.\" From now on, if this transaction is present in the ancestor\n+     * set, return an empty vector instead. */",
      "path": "src/policy/packages.h",
      "position": null,
      "original_position": 46,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "when calling Txns()",
      "created_at": "2023-01-18T22:00:46Z",
      "updated_at": "2023-01-19T17:25:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1080602237",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1080602237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081158729",
      "pull_request_review_id": 1261633680,
      "id": 1081158729,
      "node_id": "PRRC_kwDOABII585AcSxJ",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": 1072204405,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for this elaborate analysis!\r\n\r\nSo in `if valid` and `if other failure` cases, it's not just inside vs outside the loop, right?\r\nBecause \"outside the loop\" also means re-validating other transactions, not just the child (`AcceptMultipleTransactions` call).\r\n(Note that I'm look only at the first commit so far)",
      "created_at": "2023-01-19T11:51:24Z",
      "updated_at": "2023-01-19T11:51:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081158729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081158729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081194260",
      "pull_request_review_id": 1261683617,
      "id": 1081194260,
      "node_id": "PRRC_kwDOABII585AcbcU",
      "diff_hunk": "@@ -1439,15 +1455,16 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID ||\n+               mempoolaccept_res.m_state.GetResult() == TxValidationResult::TX_MISSING_INPUTS);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "879b55fa9da3688fb6b85e7f40f9778753a9102f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "879b55fa9da3688fb6b85e7f40f9778753a9102f\r\n\r\nAccording to this change, it should now be possible to hit `mempoolaccept_res.m_result_type == INVALID`, but only when [...].\r\n\r\nHowever, I don't see how the `AcceptPackageWrappingSingle` code change touches `mempoolaccept_res` at all. So it's unclear why the Assume is changed here.\r\n\r\n",
      "created_at": "2023-01-19T12:24:51Z",
      "updated_at": "2023-01-19T12:25:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081194260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081194260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1463,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081209483",
      "pull_request_review_id": 1261706834,
      "id": 1081209483,
      "node_id": "PRRC_kwDOABII585AcfKL",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": 1072204405,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What I'm talking about seems to be fixed in the next commit 879b55fa9da3688fb6b85e7f40f9778753a9102f.\r\nIf my understanding is correct, I'd suggest mentioning this in the commit message.",
      "created_at": "2023-01-19T12:41:23Z",
      "updated_at": "2023-01-19T12:41:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081209483",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081209483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081549166",
      "pull_request_review_id": 1260782143,
      "id": 1081549166,
      "node_id": "PRRC_kwDOABII585AdyFu",
      "diff_hunk": "@@ -59,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:",
      "path": "src/policy/packages.h",
      "position": null,
      "original_position": 44,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n     * Expects that:\r\n```",
      "created_at": "2023-01-19T16:51:07Z",
      "updated_at": "2023-01-19T17:25:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081549166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081549166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081574207",
      "pull_request_review_id": 1260782143,
      "id": 1081574207,
      "node_id": "PRRC_kwDOABII585Ad4M_",
      "diff_hunk": "@@ -1363,14 +1371,29 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     // the new transactions. This ensures we don't double-count transaction counts and sizes when\n     // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n     ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    const auto AcceptPackageWrappingSingle = [&](const std::vector<CTransactionRef>& subpackage)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        AssertLockHeld(::cs_main);\n+        AssertLockHeld(m_pool.cs);\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapper;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapper.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapper, {{tx->GetWitnessHash(), single_res}});\n+    };\n+    Packageifier packageified(package);\n     // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n     // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n     // reflected in this map). If a transaction fails more than once, we want to return the first\n     // result, when it was considered on its own. So changes will only be from invalid -> valid.\n     std::map<uint256, MempoolAcceptResult> individual_results_nonfinal;\n     bool quit_early{false};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe we can get rid of `quit_early` and have Packagifier contain a `HasBan` function?",
      "created_at": "2023-01-19T17:12:54Z",
      "updated_at": "2023-01-19T17:25:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081574207",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081574207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081588430",
      "pull_request_review_id": 1260782143,
      "id": 1081588430,
      "node_id": "PRRC_kwDOABII585Ad7rO",
      "diff_hunk": "@@ -1393,56 +1417,93 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             assert(iter != std::nullopt);\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n+            packageified.Exclude(tx);\n         } else {\n+            const auto subpackage = packageified.GetAncestorSet(tx);\n+            if (subpackage.empty()) {\n+                Assume(quit_early);\n+                // Quit early; this transaction depends on a \"banned\" tx (failed for a non-policy\n+                // and non-missing-inputs reason), so this transaction will be invalid due to\n+                // missing inputs.\n+                TxValidationState tx_state_quit_early;\n+                tx_state_quit_early.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\");\n+                individual_results_nonfinal.emplace(wtxid, MempoolAcceptResult::Failure(tx_state_quit_early));\n+                continue;\n+            }\n+            if (wtxid == child->GetWitnessHash()) {\n+                // Unless we're quitting early (child would have exited already since this is an\n+                // ancestor package), validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage);\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map.\n+            for (const auto& subpackage_tx : subpackage) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // Note that it's possible for transactions to have been submitted to the mempool even\n+            // if subpackage_result.m_state.IsInvalid(). If IsValid(), fine to move on.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. To minimize the amount of repeated work, unless the transaction fails\n+                    // due to feerate or missing inputs (its parent is a previous transaction in the\n+                    // package that failed due to feerate), don't run package validation. Note that this\n+                    // decision might not make sense if different types of packages are allowed in the\n+                    // future.  Continue individually validating the rest of the transactions, because\n+                    // some of them may still be valid.\n+                    quit_early = true;\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n     // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n+    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n+    // the other transactions in the package are as well. We check for the child by txid because\n+    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n+    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 151,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we change `GetAncestorSet` to an optional and store banned-ness, then we can use it to check if there is nothing left to be submitted directly by calling `txns_package_eval.empty()`.\r\n\r\n```suggestion\r\n    if (packageified.HasBan() || txns_package_eval.empty()) {\r\n```\r\n\r\nOr, if we keep GetAncestorSet as is, just do `txns_package_eval.empty()` only? It will be empty in both the cases where it has a banned input, or where all transactions have been excluded?\r\n\r\nThen we can just get rid of quit_early and don't need to track if we've banned anything?",
      "created_at": "2023-01-19T17:20:49Z",
      "updated_at": "2023-01-19T17:27:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081588430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081588430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1487,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081618834",
      "pull_request_review_id": 1262313397,
      "id": 1081618834,
      "node_id": "PRRC_kwDOABII585AeDGS",
      "diff_hunk": "@@ -65,6 +56,26 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)",
      "path": "src/policy/packages.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "in_reply_to_id": 1080595370,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Going with `IsPackageWellFormed` to follow the `Is*` pattern, if that's ok",
      "created_at": "2023-01-19T17:49:01Z",
      "updated_at": "2023-01-19T17:49:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081618834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081618834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 59,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081624953",
      "pull_request_review_id": 1262320655,
      "id": 1081624953,
      "node_id": "PRRC_kwDOABII585AeEl5",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": 1072167416,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added in the commit message that, specifically if the failure is policy or missing inputs, it was validated twice. Thanks",
      "created_at": "2023-01-19T17:54:18Z",
      "updated_at": "2023-01-19T17:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081624953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081624953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1455,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081625789",
      "pull_request_review_id": 1262320655,
      "id": 1081625789,
      "node_id": "PRRC_kwDOABII585AeEy9",
      "diff_hunk": "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:\n+     * - there are no conflicts\n+     * - the number of transactions is reasonable (e.g. within MAX_PACKAGE_COUNT)\n+     */\n+    Packageifier(const Package& txns);\n+    /** Returns the transactions, in ascending order of number of in-package ancestors. */\n+    Package Txns() const { return txns; }\n+    /** Get the ancestor subpackage for a transaction. */\n+    std::vector<CTransactionRef> GetAncestorSet(const CTransactionRef& tx);\n+    /** From now on, exclude these transactions from GetAncestorSet(). */\n+    void Exclude(const CTransactionRef& transaction);\n+    /** Mark a transaction as \"banned.\" From now on, if this transaction is present in the ancestor\n+     * set, return an empty vector instead. */",
      "path": "src/policy/packages.h",
      "position": null,
      "original_position": 46,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "in_reply_to_id": 1080602237,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Only when calling `GetAncestorSet()`*, added comment that `Txns()` is unchanged.",
      "created_at": "2023-01-19T17:55:01Z",
      "updated_at": "2023-01-19T17:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081625789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081625789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081626065",
      "pull_request_review_id": 1262320655,
      "id": 1081626065,
      "node_id": "PRRC_kwDOABII585AeE3R",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": 1072139558,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added",
      "created_at": "2023-01-19T17:55:16Z",
      "updated_at": "2023-01-19T17:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081626065",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081626065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627149",
      "pull_request_review_id": 1262320655,
      "id": 1081627149,
      "node_id": "PRRC_kwDOABII585AeFIN",
      "diff_hunk": "@@ -1394,6 +1394,11 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cb065422e58be7558e6c2ad9eadfa885bb48c708",
      "in_reply_to_id": 1072204405,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you yes, it makes more sense to switch the commits around. Switched their order and made the commit messages more descriptive",
      "created_at": "2023-01-19T17:56:14Z",
      "updated_at": "2023-01-19T17:59:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627149",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627681",
      "pull_request_review_id": 1262320655,
      "id": 1081627681,
      "node_id": "PRRC_kwDOABII585AeFQh",
      "diff_hunk": "@@ -1439,15 +1455,16 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);\n+        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID ||\n+               mempoolaccept_res.m_state.GetResult() == TxValidationResult::TX_MISSING_INPUTS);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "879b55fa9da3688fb6b85e7f40f9778753a9102f",
      "in_reply_to_id": 1081194260,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops yes, I've removed this",
      "created_at": "2023-01-19T17:56:36Z",
      "updated_at": "2023-01-19T17:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081627681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081627681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1463,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628019",
      "pull_request_review_id": 1262320655,
      "id": 1081628019,
      "node_id": "PRRC_kwDOABII585AeFVz",
      "diff_hunk": "@@ -15,21 +15,8 @@\n #include <numeric>\n #include <unordered_set>\n \n-bool CheckPackage(const Package& txns, PackageValidationState& state)\n+bool IsSorted(const Package& txns)\n {\n-    const unsigned int package_count = txns.size();\n-\n-    if (package_count > MAX_PACKAGE_COUNT) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n-    }\n-\n-    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n-                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n-    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n-    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n-        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n-    }\n-\n     // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n     // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and",
      "path": "src/policy/packages.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "67f7b2c84a4c1c137ff3e6894e35ac87656137e1",
      "in_reply_to_id": 1080581849,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moved back to `IsPackageWellFormed()`",
      "created_at": "2023-01-19T17:56:52Z",
      "updated_at": "2023-01-19T17:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628126",
      "pull_request_review_id": 1262320655,
      "id": 1081628126,
      "node_id": "PRRC_kwDOABII585AeFXe",
      "diff_hunk": "@@ -62,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/",
      "path": "src/policy/packages.h",
      "position": null,
      "original_position": 24,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "ed4272c85e0cb21aec411408c4f2402519e2c5b2",
      "in_reply_to_id": 1080599515,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-01-19T17:56:57Z",
      "updated_at": "2023-01-19T17:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628217",
      "pull_request_review_id": 1262320655,
      "id": 1081628217,
      "node_id": "PRRC_kwDOABII585AeFY5",
      "diff_hunk": "@@ -59,4 +65,37 @@ bool CheckPackage(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions so exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects that basic sanitization checks have passed:",
      "path": "src/policy/packages.h",
      "position": null,
      "original_position": 44,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "in_reply_to_id": 1081549166,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2023-01-19T17:57:02Z",
      "updated_at": "2023-01-19T17:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081628217",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081628217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081629094",
      "pull_request_review_id": 1262320655,
      "id": 1081629094,
      "node_id": "PRRC_kwDOABII585AeFmm",
      "diff_hunk": "@@ -1393,56 +1417,93 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             assert(iter != std::nullopt);\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n+            packageified.Exclude(tx);\n         } else {\n+            const auto subpackage = packageified.GetAncestorSet(tx);\n+            if (subpackage.empty()) {\n+                Assume(quit_early);\n+                // Quit early; this transaction depends on a \"banned\" tx (failed for a non-policy\n+                // and non-missing-inputs reason), so this transaction will be invalid due to\n+                // missing inputs.\n+                TxValidationState tx_state_quit_early;\n+                tx_state_quit_early.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\");\n+                individual_results_nonfinal.emplace(wtxid, MempoolAcceptResult::Failure(tx_state_quit_early));\n+                continue;\n+            }\n+            if (wtxid == child->GetWitnessHash()) {\n+                // Unless we're quitting early (child would have exited already since this is an\n+                // ancestor package), validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage);\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map.\n+            for (const auto& subpackage_tx : subpackage) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // Note that it's possible for transactions to have been submitted to the mempool even\n+            // if subpackage_result.m_state.IsInvalid(). If IsValid(), fine to move on.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. To minimize the amount of repeated work, unless the transaction fails\n+                    // due to feerate or missing inputs (its parent is a previous transaction in the\n+                    // package that failed due to feerate), don't run package validation. Note that this\n+                    // decision might not make sense if different types of packages are allowed in the\n+                    // future.  Continue individually validating the rest of the transactions, because\n+                    // some of them may still be valid.\n+                    quit_early = true;\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n     // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted.\n-    if (quit_early || txns_package_eval.empty()) {\n+    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n+    // the other transactions in the package are as well. We check for the child by txid because\n+    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n+    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 151,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "in_reply_to_id": 1081588430,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, got rid of quit_early and exists(). Using txns_package_eval std::nullopt or empty",
      "created_at": "2023-01-19T17:57:48Z",
      "updated_at": "2023-01-19T17:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081629094",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081629094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1487,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081632204",
      "pull_request_review_id": 1262329505,
      "id": 1081632204,
      "node_id": "PRRC_kwDOABII585AeGXM",
      "diff_hunk": "@@ -1363,14 +1371,29 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     // the new transactions. This ensures we don't double-count transaction counts and sizes when\n     // checking ancestor/descendant limits, or double-count transaction fees for fee-related policy.\n     ATMPArgs single_args = ATMPArgs::SingleInPackageAccept(args);\n+    const auto AcceptPackageWrappingSingle = [&](const std::vector<CTransactionRef>& subpackage)\n+        EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_pool.cs) {\n+        AssertLockHeld(::cs_main);\n+        AssertLockHeld(m_pool.cs);\n+        if (subpackage.size() > 1) {\n+            return AcceptMultipleTransactions(subpackage, args);\n+        }\n+        const auto& tx = subpackage.front();\n+        const auto single_res = AcceptSingleTransaction(tx, single_args);\n+        PackageValidationState package_state_wrapper;\n+        if (single_res.m_result_type != MempoolAcceptResult::ResultType::VALID) {\n+            package_state_wrapper.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+        }\n+        return PackageMempoolAcceptResult(package_state_wrapper, {{tx->GetWitnessHash(), single_res}});\n+    };\n+    Packageifier packageified(package);\n     // Results from individual validation. \"Nonfinal\" because if a transaction fails by itself but\n     // succeeds later (i.e. when evaluated with a fee-bumping child), the result changes (though not\n     // reflected in this map). If a transaction fails more than once, we want to return the first\n     // result, when it was considered on its own. So changes will only be from invalid -> valid.\n     std::map<uint256, MempoolAcceptResult> individual_results_nonfinal;\n     bool quit_early{false};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "45029ee87828aa337a0f7b05a8e3a4b0855e658f",
      "in_reply_to_id": 1081574207,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(was able to get rid of quit_early without `HasBan()`)",
      "created_at": "2023-01-19T18:00:28Z",
      "updated_at": "2023-01-19T18:00:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1081632204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081632204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082414267",
      "pull_request_review_id": 1263465719,
      "id": 1082414267,
      "node_id": "PRRC_kwDOABII585AhFS7",
      "diff_hunk": "@@ -1422,15 +1438,14 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);",
      "path": "src/validation.cpp",
      "position": 292,
      "original_position": 32,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4\r\nThis `Assume` is orthogonal to the rest of the code changes (these changes don't touch `mempoolaccept_res`), so it's unclear why you remove it here.",
      "created_at": "2023-01-20T11:57:39Z",
      "updated_at": "2023-01-20T11:57:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082414267",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082414267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1472,
      "original_line": 1472,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082421842",
      "pull_request_review_id": 1263473012,
      "id": 1082421842,
      "node_id": "PRRC_kwDOABII585AhHJS",
      "diff_hunk": "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n+                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n+    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n+    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n+    }\n+\n+    // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n+    // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and\n+    // fail on something less ambiguous (missing-inputs could also be an orphan or trying to\n+    // spend nonexistent coins).\n+    if (!IsSorted(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-sorted\");\n+    if (!HasNoConflicts(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"conflict-in-package\");",
      "path": "src/policy/packages.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "4c4cea3856b1fa2a50de25847b19ae90c4263916",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4c4cea3856b1fa2a50de25847b19ae90c4263916\r\nnit: maybe it's better to use `HasConflicts`. Double-negation is harder to understand :)",
      "created_at": "2023-01-20T12:03:44Z",
      "updated_at": "2023-01-20T12:03:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082421842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082421842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082468542",
      "pull_request_review_id": 1263514526,
      "id": 1082468542,
      "node_id": "PRRC_kwDOABII585AhSi-",
      "diff_hunk": "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "path": "src/policy/packages.cpp",
      "position": 114,
      "original_position": 32,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "8764ecc566413b4974e030c596193e75ff39f746",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8764ecc566413b4974e030c596193e75ff39f746\r\nCan this result in an endless recursion, if txA spends txB and txB spends txA at the same time? Or possibly through txC. (similar in `IsAncestorPackage`)",
      "created_at": "2023-01-20T12:37:29Z",
      "updated_at": "2023-01-20T13:11:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082468542",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082468542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082492810",
      "pull_request_review_id": 1263535150,
      "id": 1082492810,
      "node_id": "PRRC_kwDOABII585AhYeK",
      "diff_hunk": "@@ -62,4 +65,39 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/",
      "path": "src/policy/packages.h",
      "position": null,
      "original_position": 26,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "8764ecc566413b4974e030c596193e75ff39f746",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8764ecc566413b4974e030c596193e75ff39f746\r\nThe comment is incorrect: nullopt is returned, not empty vector.",
      "created_at": "2023-01-20T12:54:31Z",
      "updated_at": "2023-01-20T12:54:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082492810",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082492810"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082507527",
      "pull_request_review_id": 1263548159,
      "id": 1082507527,
      "node_id": "PRRC_kwDOABII585AhcEH",
      "diff_hunk": "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "path": "src/policy/packages.cpp",
      "position": 114,
      "original_position": 32,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "8764ecc566413b4974e030c596193e75ff39f746",
      "in_reply_to_id": 1082468542,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we have a cycle of transactions, SHA256 is broken, no? 😅",
      "created_at": "2023-01-20T13:04:42Z",
      "updated_at": "2023-01-20T13:04:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082507527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082507527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082586776",
      "pull_request_review_id": 1263655629,
      "id": 1082586776,
      "node_id": "PRRC_kwDOABII585AhvaY",
      "diff_hunk": "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "path": "src/policy/packages.cpp",
      "position": 114,
      "original_position": 32,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "8764ecc566413b4974e030c596193e75ff39f746",
      "in_reply_to_id": 1082468542,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You are right. Not sure if it's worth commenting. It's unlikely someone will violate this assumption (it would require big changes to Bitcoin), but it could save time to someone like me who forget about this property.",
      "created_at": "2023-01-20T14:10:18Z",
      "updated_at": "2023-01-20T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1082586776",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082586776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084899543",
      "pull_request_review_id": 1266961348,
      "id": 1084899543,
      "node_id": "PRRC_kwDOABII585AqkDX",
      "diff_hunk": "@@ -171,7 +188,7 @@ struct TestChain100Setup : public TestingSetup {\n      * @param submit             Whether or not to submit to mempool\n      */\n     CMutableTransaction CreateValidMempoolTransaction(CTransactionRef input_transaction,\n-                                                      int input_vout,\n+                                                      uint32_t input_vout,\n                                                       int input_height,",
      "path": "src/test/util/setup_common.h",
      "position": 30,
      "original_position": 30,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cea7dcf4388ad65436fcb98c7025b607708e09ab",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "cea7dcf4388ad65436fcb98c7025b607708e09ab\r\nnit: worth changing `input_height` to `uint` too, maybe even with `const`?",
      "created_at": "2023-01-24T07:43:06Z",
      "updated_at": "2023-01-24T07:43:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1084899543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084899543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084935931",
      "pull_request_review_id": 1267024821,
      "id": 1084935931,
      "node_id": "PRRC_kwDOABII585Aqs77",
      "diff_hunk": "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b\r\nConsider everything, including the child, to be valid.\r\nPreviously, the execution would terminate at `txns_package_eval.empty()` gate after the loop.\r\nAfter this commit, this won't pass — and everything (other transactions) would be validated once again.",
      "created_at": "2023-01-24T08:23:45Z",
      "updated_at": "2023-01-24T08:33:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1084935931",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1084935931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085014944",
      "pull_request_review_id": 1267126406,
      "id": 1085014944,
      "node_id": "PRRC_kwDOABII585ArAOg",
      "diff_hunk": "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.",
      "path": "src/validation.cpp",
      "position": 188,
      "original_position": 10,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "https://github.com/bitcoin/bitcoin/commit/db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b\r\nShould say \"non-child transaction'",
      "created_at": "2023-01-24T09:32:21Z",
      "updated_at": "2023-01-24T09:32:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085014944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085014944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1444,
      "original_line": 1444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085056132",
      "pull_request_review_id": 1267177090,
      "id": 1085056132,
      "node_id": "PRRC_kwDOABII585ArKSE",
      "diff_hunk": "@@ -1416,44 +1420,54 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 continue;\n             }\n             if (wtxid == child->GetWitnessHash()) {\n-                txns_package_eval.push_back(tx);\n-                Assume(txns_package_eval == subpackage.value());\n                 Assume(tx == package.back());\n                 // Unless we're quitting early, validate the child outside of this loop.\n                 break;\n             }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-                packageified.Exclude(tx);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. Tell the Packageifier that subsequent transactions depending on this one\n-                // should be skipped.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-                packageified.Ban(tx);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage.value());\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map. Note that it's possible for transactions to\n+            // have been submitted to the mempool even if subpackage_result.m_state.IsInvalid().\n+            for (const auto& subpackage_tx : subpackage.value()) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // If m_state is valid, we already processed each tx in the loop above.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. Tell the Packageifier that subsequent transactions depending on this one\n+                    // should be skipped.\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n-    // the other transactions in the package are as well. We check for the child by txid because\n-    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n-    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {\n+    const auto txns_package_eval{packageified.GetAncestorSet(child)};\n+    // If txns_package_eval is std::nullopt, the last tx's result was pre-filled with missing\n+    // inputs. If txns_package_eval is empty, all transactions have already passed.\n+    if (!txns_package_eval || txns_package_eval->empty()) {",
      "path": "src/validation.cpp",
      "position": 279,
      "original_position": 128,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "936c7f170bc68ec583ae026ddbaf197ca6cd0792",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "936c7f170bc68ec583ae026ddbaf197ca6cd0792\r\nCould you help me understand how the latter condition can be possible for this transaction?",
      "created_at": "2023-01-24T10:03:37Z",
      "updated_at": "2023-01-24T10:03:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085056132",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085056132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1508,
      "original_line": 1508,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085568911",
      "pull_request_review_id": 1267825959,
      "id": 1085568911,
      "node_id": "PRRC_kwDOABII585AtHeP",
      "diff_hunk": "@@ -1416,44 +1420,54 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 continue;\n             }\n             if (wtxid == child->GetWitnessHash()) {\n-                txns_package_eval.push_back(tx);\n-                Assume(txns_package_eval == subpackage.value());\n                 Assume(tx == package.back());\n                 // Unless we're quitting early, validate the child outside of this loop.\n                 break;\n             }\n             // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-                packageified.Exclude(tx);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. Tell the Packageifier that subsequent transactions depending on this one\n-                // should be skipped.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-                packageified.Ban(tx);\n-            } else {\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage.value());\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map. Note that it's possible for transactions to\n+            // have been submitted to the mempool even if subpackage_result.m_state.IsInvalid().\n+            for (const auto& subpackage_tx : subpackage.value()) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // If m_state is valid, we already processed each tx in the loop above.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            // Another \"final\" validation result is if the tx failed for a non-policy reason.\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+                    // Package validation policy only differs from individual policy in its evaluation\n+                    // of feerate. For example, if a transaction fails here due to violation of a\n+                    // consensus rule, the result will not change when it is submitted as part of a\n+                    // package. Tell the Packageifier that subsequent transactions depending on this one\n+                    // should be skipped.\n+                    package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n+                    individual_results_nonfinal.emplace(wtxid, single_res);\n+                    packageified.Ban(tx);\n+                }\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n-                txns_package_eval.push_back(tx);\n             }\n         }\n     }\n \n-    // Quit early because package validation won't change the result or the entire package has\n-    // already been submitted. Since this is an ancestor package, if the child is in, that means all\n-    // the other transactions in the package are as well. We check for the child by txid because\n-    // same-txid-different-witness is an acceptable case for deduplication in the loop above.\n-    if (quit_early || m_pool.exists(GenTxid::Txid(child->GetHash()))) {\n+    const auto txns_package_eval{packageified.GetAncestorSet(child)};\n+    // If txns_package_eval is std::nullopt, the last tx's result was pre-filled with missing\n+    // inputs. If txns_package_eval is empty, all transactions have already passed.\n+    if (!txns_package_eval || txns_package_eval->empty()) {",
      "path": "src/validation.cpp",
      "position": 279,
      "original_position": 128,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "936c7f170bc68ec583ae026ddbaf197ca6cd0792",
      "in_reply_to_id": 1085056132,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I assume you're asking \"how can `txns_package_eval` be empty?\" \r\nIf all of the transactions were already in the mempool, they have each been `Exclude`'d. So `GetAncestorSet(child)` returns a vector of all the non-excluded ancestors, which is an empty vector.",
      "created_at": "2023-01-24T16:21:04Z",
      "updated_at": "2023-01-27T12:39:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1085568911",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085568911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1508,
      "original_line": 1508,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090695044",
      "pull_request_review_id": 1275271720,
      "id": 1090695044,
      "node_id": "PRRC_kwDOABII585BAq-E",
      "diff_hunk": "@@ -171,7 +188,7 @@ struct TestChain100Setup : public TestingSetup {\n      * @param submit             Whether or not to submit to mempool\n      */\n     CMutableTransaction CreateValidMempoolTransaction(CTransactionRef input_transaction,\n-                                                      int input_vout,\n+                                                      uint32_t input_vout,\n                                                       int input_height,",
      "path": "src/test/util/setup_common.h",
      "position": 30,
      "original_position": 30,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "cea7dcf4388ad65436fcb98c7025b607708e09ab",
      "in_reply_to_id": 1084899543,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "- It will need to be cast to `int` anyway when we call `AddCoins()`. Maybe one day if we change `AddCoins()` ?\r\n- I don't think `const` is very meaningful since it's passed by value",
      "created_at": "2023-01-30T14:26:31Z",
      "updated_at": "2023-01-30T14:54:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090695044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090695044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090716976",
      "pull_request_review_id": 1275271720,
      "id": 1090716976,
      "node_id": "PRRC_kwDOABII585BAwUw",
      "diff_hunk": "@@ -1422,15 +1438,14 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n     }\n     // Validate the (deduplicated) transactions as a package. Note that submission_result has its\n     // own PackageValidationState; package_state_quit_early is unused past this point.\n-    auto submission_result = AcceptMultipleTransactions(txns_package_eval, args);\n+    auto submission_result = AcceptPackageWrappingSingle(txns_package_eval);\n     // Include already-in-mempool transaction results in the final result.\n     for (const auto& [wtxid, mempoolaccept_res] : results_final) {\n         Assume(submission_result.m_tx_results.emplace(wtxid, mempoolaccept_res).second);\n-        Assume(mempoolaccept_res.m_result_type != MempoolAcceptResult::ResultType::INVALID);",
      "path": "src/validation.cpp",
      "position": 292,
      "original_position": 32,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "036d2b07fb3ce404dd6787d8d0fe4e80c168fdf4",
      "in_reply_to_id": 1082414267,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, removed",
      "created_at": "2023-01-30T14:44:14Z",
      "updated_at": "2023-01-30T14:54:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090716976",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090716976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1472,
      "original_line": 1472,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726607",
      "pull_request_review_id": 1275271720,
      "id": 1090726607,
      "node_id": "PRRC_kwDOABII585BAyrP",
      "diff_hunk": "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);\n+                // Unless we're quitting early, validate the child outside of this loop.\n+                break;\n+            }\n             // Transaction does not already exist in the mempool.",
      "path": "src/validation.cpp",
      "position": 188,
      "original_position": 10,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "in_reply_to_id": 1085014944,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added",
      "created_at": "2023-01-30T14:51:25Z",
      "updated_at": "2023-01-30T14:54:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090726607",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1444,
      "original_line": 1444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726927",
      "pull_request_review_id": 1275271720,
      "id": 1090726927,
      "node_id": "PRRC_kwDOABII585BAywP",
      "diff_hunk": "@@ -62,4 +65,39 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically. */\n+    Package txns;\n+    /** Caches the transactions by txid for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Caches the in-package ancestors for each transaction. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Transactions that are banned. Return empty vector if any ancestor subset contains these transactions.*/",
      "path": "src/policy/packages.h",
      "position": null,
      "original_position": 26,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "8764ecc566413b4974e030c596193e75ff39f746",
      "in_reply_to_id": 1082492810,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed",
      "created_at": "2023-01-30T14:51:40Z",
      "updated_at": "2023-01-30T14:54:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090726927",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090726927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090727252",
      "pull_request_review_id": 1275271720,
      "id": 1090727252,
      "node_id": "PRRC_kwDOABII585BAy1U",
      "diff_hunk": "@@ -92,3 +91,81 @@ bool IsChildWithParents(const Package& package)\n     return std::all_of(package.cbegin(), package.cend() - 1,\n                        [&input_txids](const auto& ptx) { return input_txids.count(ptx->GetHash()) > 0; });\n }\n+\n+// After calling visit() on a package tx, it's guaranteed to be in the ancestor_subsets map.\n+void Packageifier::visit(const CTransactionRef& curr_tx)\n+{\n+    const uint256& curr_txid = curr_tx->GetHash();\n+    if (ancestor_subsets.count(curr_txid) > 0) return;\n+    std::set<uint256> my_ancestors;\n+    my_ancestors.insert(curr_txid);\n+    for (const auto& input : curr_tx->vin) {\n+        auto parent_tx = txid_to_tx.find(input.prevout.hash);\n+        if (parent_tx == txid_to_tx.end()) continue;\n+        if (ancestor_subsets.count(parent_tx->first) == 0) {",
      "path": "src/policy/packages.cpp",
      "position": 114,
      "original_position": 32,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "8764ecc566413b4974e030c596193e75ff39f746",
      "in_reply_to_id": 1082468542,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added a comment to visit()",
      "created_at": "2023-01-30T14:51:52Z",
      "updated_at": "2023-01-30T14:54:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090727252",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090727252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090728980",
      "pull_request_review_id": 1275271720,
      "id": 1090728980,
      "node_id": "PRRC_kwDOABII585BAzQU",
      "diff_hunk": "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,\n+                               [](int64_t sum, const auto& tx) { return sum + GetVirtualTransactionSize(*tx); });\n+    // If the package only contains 1 tx, it's better to report the policy violation on individual tx size.\n+    if (package_count > 1 && total_size > MAX_PACKAGE_SIZE * 1000) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-large\");\n+    }\n+\n+    // Require the package to be sorted in order of dependency, i.e. parents appear before children.\n+    // An unsorted package will fail anyway on missing-inputs, but it's better to quit earlier and\n+    // fail on something less ambiguous (missing-inputs could also be an orphan or trying to\n+    // spend nonexistent coins).\n+    if (!IsSorted(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-sorted\");\n+    if (!HasNoConflicts(txns)) return state.Invalid(PackageValidationResult::PCKG_POLICY, \"conflict-in-package\");",
      "path": "src/policy/packages.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "4c4cea3856b1fa2a50de25847b19ae90c4263916",
      "in_reply_to_id": 1082421842,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've changed it to `IsConsistent()`. I didn't want to change to `HasConflicts()` because that would require changing the function implementation to be opposite, and the `Is*` pattern seems to be good for readability",
      "created_at": "2023-01-30T14:53:10Z",
      "updated_at": "2023-01-30T14:54:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090728980",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090728980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090746878",
      "pull_request_review_id": 1275349367,
      "id": 1090746878,
      "node_id": "PRRC_kwDOABII585BA3n-",
      "diff_hunk": "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "in_reply_to_id": 1084935931,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it's the opposite - we avoid re-validating things now.\r\n\r\n> Consider everything, including the child, to be valid.\r\n\r\nOk, we can break this down. Let's split it into 2 types of scenarios: non-CPFP case and CPFP case. In the CPFP case, the parent needs the child in order to pass.\r\n\r\n(1) Non-CPFP case\r\n(1a) Before this commit\r\nInside this loop, **validate** parent. The parent passes and is submitted to the mempool.\r\nThen, **validate** child. The child passes and is submitted.\r\nAfter the loop, we quit because `txns_package_eval.empty()`.\r\nHow many times we validated something: 2\r\n\r\n(1b) After this commit\r\nInside this loop, **validate** parent. The parent passes and is submitted to the mempool.\r\nInside this loop, at this condition, `txns_package_eval.push_back(child)` and break.\r\nAfter the loop, we **validate** using `AcceptPackageWrappingSingle({child})`.\r\nHow many times we validated something: 2\r\n\r\n(2) CPFP case\r\n(2a) Before this commit\r\nInside loop, **validate** parent. The parent fails due to too low fee. `txns_package_eval.push_back(parent)`.\r\nInside this loop, **validate** child. The child fails due to missing inputs. `txns_package_eval.push_back(child)`.\r\nAfter the loop, we **validate** using `AcceptPackageWrappingSingle({parent, child})`.\r\nHow many times we validated something: 3\r\n\r\n(2b) After this commit\r\nInside loop, **validate** parent. The parent fails due to too low fee. `txns_package_eval.push_back(parent)`.\r\nInside this loop, at this condition, `txns_package_eval.push_back(child)` and break.\r\nAfter the loop, we **validate** using `AcceptPackageWrappingSingle({parent, child})`.\r\nHow many times we validated something: 2",
      "created_at": "2023-01-30T15:06:49Z",
      "updated_at": "2023-01-30T15:06:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1090746878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1090746878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091627600",
      "pull_request_review_id": 1276742818,
      "id": 1091627600,
      "node_id": "PRRC_kwDOABII585BEOpQ",
      "diff_hunk": "@@ -73,4 +76,41 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically (see IsSorted()). */\n+    Package txns;\n+    /** Map from txid to transaction for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Cache of the in-package ancestors for each transaction, indexed by txid. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Txids of transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Txids of transactions that are banned. Return nullopt from GetAncestorSet() if it contains\n+     * any of these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects:\n+     * - No duplicate transactions.\n+     * - No conflicts between transactions.\n+     * - txns is of reasonable size (e.g. below MAX_PACKAGE_COUNT) to limit recursion depth",
      "path": "src/policy/packages.h",
      "position": 83,
      "original_position": 38,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "132159cc6ae36da7697fcbb90bd5914e02a41386",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "132159cc6ae36da7697fcbb90bd5914e02a41386\r\nThis limit is never checked?",
      "created_at": "2023-01-31T08:58:15Z",
      "updated_at": "2023-01-31T08:58:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091627600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091627600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091678009",
      "pull_request_review_id": 1276817245,
      "id": 1091678009,
      "node_id": "PRRC_kwDOABII585BEa85",
      "diff_hunk": "@@ -1398,6 +1398,12 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n         } else {\n+            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+                Assume(tx == package.back());\n+                txns_package_eval.push_back(tx);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "db6eed0cdfb8a90b54fee4955fd9b07d5fc1817b",
      "in_reply_to_id": 1084935931,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thank you for helping me understand this. I understand you are right now. ",
      "created_at": "2023-01-31T09:41:13Z",
      "updated_at": "2023-01-31T09:41:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091678009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091678009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091696901",
      "pull_request_review_id": 1276843630,
      "id": 1091696901,
      "node_id": "PRRC_kwDOABII585BEfkF",
      "diff_hunk": "@@ -1409,20 +1427,18 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 // in package validation, because its fees should only be \"used\" once.\n                 assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n                 results_final.emplace(wtxid, single_res);\n+                packageified.Exclude(tx);\n             } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n                        single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n                 // Package validation policy only differs from individual policy in its evaluation\n                 // of feerate. For example, if a transaction fails here due to violation of a\n                 // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n+                // package. Tell the Packageifier that subsequent transactions depending on this one\n+                // should be skipped.\n                 quit_early = true;\n                 package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n+                packageified.Ban(tx);\n             } else {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "93e976d98726040edf4070175c46fdc504aabff5\r\nwhy not ban here?",
      "created_at": "2023-01-31T09:56:33Z",
      "updated_at": "2023-01-31T10:08:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091696901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091696901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1442,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091710042",
      "pull_request_review_id": 1276863562,
      "id": 1091710042,
      "node_id": "PRRC_kwDOABII585BEixa",
      "diff_hunk": "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "path": "src/validation.cpp",
      "position": 278,
      "original_position": 83,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "93e976d98726040edf4070175c46fdc504aabff5\r\nDoes \"passed\" mean \"valid\" in this context?",
      "created_at": "2023-01-31T10:08:17Z",
      "updated_at": "2023-01-31T10:08:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091710042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091710042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1507,
      "original_line": 1507,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091768545",
      "pull_request_review_id": 1276949724,
      "id": 1091768545,
      "node_id": "PRRC_kwDOABII585BExDh",
      "diff_hunk": "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "path": "src/validation.cpp",
      "position": 278,
      "original_position": 83,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": 1091710042,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes",
      "created_at": "2023-01-31T11:00:29Z",
      "updated_at": "2023-01-31T11:00:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091768545",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091768545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1507,
      "original_line": 1507,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091783287",
      "pull_request_review_id": 1276972386,
      "id": 1091783287,
      "node_id": "PRRC_kwDOABII585BE0p3",
      "diff_hunk": "@@ -73,4 +76,41 @@ bool IsPackageWellFormed(const Package& txns, PackageValidationState& state);\n  */\n bool IsChildWithParents(const Package& package);\n \n+class Packageifier\n+{\n+    /** Transactions sorted topologically (see IsSorted()). */\n+    Package txns;\n+    /** Map from txid to transaction for quick lookup. */\n+    std::map<uint256, CTransactionRef> txid_to_tx;\n+    /** Cache of the in-package ancestors for each transaction, indexed by txid. */\n+    std::map<uint256, std::set<uint256>> ancestor_subsets;\n+    /** Txids of transactions to exclude when returning ancestor subsets.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> excluded_txns;\n+    /** Txids of transactions that are banned. Return nullopt from GetAncestorSet() if it contains\n+     * any of these transactions.*/\n+    std::unordered_set<uint256, SaltedTxidHasher> banned_txns;\n+\n+    /** Helper function for recursively constructing ancestor caches in ctor. */\n+    void visit(const CTransactionRef&);\n+public:\n+    /** Constructs ancestor package, sorting the transactions topologically and constructing the\n+     * txid_to_tx and ancestor_subsets maps. It is ok if the input txns is not sorted.\n+     * Expects:\n+     * - No duplicate transactions.\n+     * - No conflicts between transactions.\n+     * - txns is of reasonable size (e.g. below MAX_PACKAGE_COUNT) to limit recursion depth",
      "path": "src/policy/packages.h",
      "position": 83,
      "original_position": 38,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "132159cc6ae36da7697fcbb90bd5914e02a41386",
      "in_reply_to_id": 1091627600,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "meant to be a precondition, so the caller should check it beforehand",
      "created_at": "2023-01-31T11:15:44Z",
      "updated_at": "2023-01-31T11:19:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091783287",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091783287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091786482",
      "pull_request_review_id": 1276972386,
      "id": 1091786482,
      "node_id": "PRRC_kwDOABII585BE1by",
      "diff_hunk": "@@ -1409,20 +1427,18 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 // in package validation, because its fees should only be \"used\" once.\n                 assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n                 results_final.emplace(wtxid, single_res);\n+                packageified.Exclude(tx);\n             } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n                        single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n                 // Package validation policy only differs from individual policy in its evaluation\n                 // of feerate. For example, if a transaction fails here due to violation of a\n                 // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n+                // package. Tell the Packageifier that subsequent transactions depending on this one\n+                // should be skipped.\n                 quit_early = true;\n                 package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n                 individual_results_nonfinal.emplace(wtxid, single_res);\n+                packageified.Ban(tx);\n             } else {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 76,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": 1091696901,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Here, the tx failed for missing inputs or policy (i.e. possibly too low fee), so there is a chance of it becoming valid if later validated as a package.",
      "created_at": "2023-01-31T11:18:56Z",
      "updated_at": "2023-01-31T11:19:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091786482",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091786482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1442,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091805721",
      "pull_request_review_id": 1277003729,
      "id": 1091805721,
      "node_id": "PRRC_kwDOABII585BE6IZ",
      "diff_hunk": "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "path": "src/validation.cpp",
      "position": 278,
      "original_position": 83,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": 1091710042,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can't it be empty if the child is invalid? (`if (!subpackage) {` etc)",
      "created_at": "2023-01-31T11:37:05Z",
      "updated_at": "2023-01-31T11:37:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091805721",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091805721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1507,
      "original_line": 1507,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091824305",
      "pull_request_review_id": 1277030536,
      "id": 1091824305,
      "node_id": "PRRC_kwDOABII585BE-qx",
      "diff_hunk": "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "path": "src/validation.cpp",
      "position": 278,
      "original_position": 83,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": 1091710042,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`subpackage` has type `std::optional<std::vector<CTransactionRef>>`, so `!subpackage` means it is `std::nullopt`. empty vector means all transactions have been excluded.",
      "created_at": "2023-01-31T11:56:32Z",
      "updated_at": "2023-01-31T11:57:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091824305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091824305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1507,
      "original_line": 1507,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091853962",
      "pull_request_review_id": 1277074727,
      "id": 1091853962,
      "node_id": "PRRC_kwDOABII585BFF6K",
      "diff_hunk": "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "path": "src/validation.cpp",
      "position": 278,
      "original_position": 83,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": 1091710042,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm thinking about the following:\r\n- two transactions\r\n- `Ban(parent)`\r\n- `if (!subpackage) {` on the child iteration\r\n- `txns_package_eval.empty()` but nothing is \"valid\" (if that's what you mean by passed)\r\n\r\nMaybe you meant \"when `quit_early` is false, then [...]\" but I'm not sure.",
      "created_at": "2023-01-31T12:26:45Z",
      "updated_at": "2023-01-31T12:26:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1091853962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1091853962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1507,
      "original_line": 1507,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093055411",
      "pull_request_review_id": 1278870652,
      "id": 1093055411,
      "node_id": "PRRC_kwDOABII585BJrOz",
      "diff_hunk": "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "path": "src/validation.cpp",
      "position": 278,
      "original_position": 83,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": 1091710042,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In that case, `if (!subpackage) {` hits on the child iteration, and its result is prefilled with the \"missing inputs\" failure. And then we have `!txns_package_eval`, not `txns_package_eval.empty()`.",
      "created_at": "2023-02-01T10:47:16Z",
      "updated_at": "2023-02-01T10:47:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093055411",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093055411"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1507,
      "original_line": 1507,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093057032",
      "pull_request_review_id": 1278872989,
      "id": 1093057032,
      "node_id": "PRRC_kwDOABII585BJroI",
      "diff_hunk": "@@ -1379,39 +1402,69 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n             assert(iter != std::nullopt);\n             // Provide the wtxid of the mempool tx so that the caller can look it up in the mempool.\n             results_final.emplace(wtxid, MempoolAcceptResult::MempoolTxDifferentWitness(iter.value()->GetTx().GetWitnessHash()));\n+            packageified.Exclude(tx);\n         } else {\n-            // Transaction does not already exist in the mempool.\n-            // Try submitting the transaction on its own.\n-            const auto single_res = AcceptSingleTransaction(tx, single_args);\n-            if (single_res.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-                // The transaction succeeded on its own and is now in the mempool. Don't include it\n-                // in package validation, because its fees should only be \"used\" once.\n-                assert(m_pool.exists(GenTxid::Wtxid(wtxid)));\n-                results_final.emplace(wtxid, single_res);\n-            } else if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n-                       single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-                // Package validation policy only differs from individual policy in its evaluation\n-                // of feerate. For example, if a transaction fails here due to violation of a\n-                // consensus rule, the result will not change when it is submitted as part of a\n-                // package. To minimize the amount of repeated work, unless the transaction fails\n-                // due to feerate or missing inputs (its parent is a previous transaction in the\n-                // package that failed due to feerate), don't run package validation. Note that this\n-                // decision might not make sense if different types of packages are allowed in the\n-                // future.  Continue individually validating the rest of the transactions, because\n-                // some of them may still be valid.\n-                quit_early = true;\n-                package_state_quit_early.Invalid(PackageValidationResult::PCKG_TX, \"transaction failed\");\n-                individual_results_nonfinal.emplace(wtxid, single_res);\n-            } else {\n+            const auto subpackage = packageified.GetAncestorSet(tx);\n+            if (!subpackage) {\n+                // This transaction depends on a tx we will definitely not accept (failed for a\n+                // non-policy and non-missing-inputs reason). We already know that this transaction\n+                // will be invalid for at least one reason, i.e. a missing input. To minimize the\n+                // amount of repeated work, don't validate this tx. Just return missing inputs.\n+                TxValidationState tx_state_quit_early;\n+                tx_state_quit_early.Invalid(TxValidationResult::TX_MISSING_INPUTS, \"bad-txns-inputs-missingorspent\");\n+                individual_results_nonfinal.emplace(wtxid, MempoolAcceptResult::Failure(tx_state_quit_early));\n+                // Don't quit too early. Other transactions may not necessarily depend on the same\n+                // parent, and should still be considered.\n+                continue;\n+            }\n+            if (wtxid == child->GetWitnessHash()) {\n+                Assume(tx == package.back());\n+                // Unless we're quitting early, validate the child outside of this loop.\n+                break;\n+            }\n+            // This transaction does not already exist in the mempool and is not the child.\n+            // Try submitting the transaction with its in-package ancestor set.\n+            const auto subpackage_result = AcceptPackageWrappingSingle(subpackage.value());\n+            // Look for \"final\" answers: once a tx is successfully submitted, we can add its\n+            // MempoolAcceptResult to the results map. Note that it's possible for transactions to\n+            // have been submitted to the mempool even if subpackage_result.m_state.IsInvalid().\n+            for (const auto& subpackage_tx : subpackage.value()) {\n+                const auto subpackage_wtxid{subpackage_tx->GetWitnessHash()};\n+                if (m_pool.exists(GenTxid::Wtxid(subpackage_wtxid))) {\n+                    const auto subpackage_it{subpackage_result.m_tx_results.find(subpackage_wtxid)};\n+                    results_final.emplace(subpackage_wtxid, subpackage_it->second);\n+                    // Erase any previous invalid results for this transaction. For example, this\n+                    // could be a low-feerate tx that has just been bumped.\n+                    individual_results_nonfinal.erase(subpackage_wtxid);\n+                    packageified.Exclude(subpackage_tx);\n+                }\n+            }\n+            // If m_state is valid, we already processed each tx in the loop above.\n+            if (subpackage_result.m_state.IsValid()) continue;\n+\n+            const auto single_res_it = subpackage_result.m_tx_results.find(wtxid);\n+            if (single_res_it != subpackage_result.m_tx_results.end()) {\n+                const auto single_res = single_res_it->second;\n+                if (single_res.m_state.GetResult() != TxValidationResult::TX_MEMPOOL_POLICY &&\n+                    single_res.m_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {",
      "path": "src/validation.cpp",
      "position": 257,
      "original_position": 144,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "8ff2655342e33f01c06b9358adc29479f6f2e7b1",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Noting that we can remove the missing inputs condition from here, since we are validating subpackages now and nobody should have missing inputs unless there is a transaction missing",
      "created_at": "2023-02-01T10:48:45Z",
      "updated_at": "2023-02-01T10:48:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093057032",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093057032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1489,
      "original_line": 1489,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093096405",
      "pull_request_review_id": 1278930308,
      "id": 1093096405,
      "node_id": "PRRC_kwDOABII585BJ1PV",
      "diff_hunk": "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "path": "src/validation.cpp",
      "position": 278,
      "original_position": 83,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": 1091710042,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">And then we have `!txns_package_eval`,\r\n\r\nSee the commit I'm referring to, `!txns_package_eval` is impossible there. I know that this inaccuracy goes away in the next commit, but w.r.t. 93e976d98726040edf4070175c46fdc504aabff5 this comment seems incorrect.",
      "created_at": "2023-02-01T11:28:08Z",
      "updated_at": "2023-02-01T11:28:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093096405",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093096405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1507,
      "original_line": 1507,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093134465",
      "pull_request_review_id": 1278985853,
      "id": 1093134465,
      "node_id": "PRRC_kwDOABII585BJ-iB",
      "diff_hunk": "@@ -1432,6 +1448,7 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Quit early because package validation won't change the result or the entire package has\n     // already been submitted.\n+    // If txns_package_eval is empty, all transactions have already passed.",
      "path": "src/validation.cpp",
      "position": 278,
      "original_position": 83,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "93e976d98726040edf4070175c46fdc504aabff5",
      "in_reply_to_id": 1091710042,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah I see. I can move this comment to the last commit.",
      "created_at": "2023-02-01T12:08:05Z",
      "updated_at": "2023-02-01T12:08:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1093134465",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1093134465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1507,
      "original_line": 1507,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136210879",
      "pull_request_review_id": 1340287122,
      "id": 1136210879,
      "node_id": "PRRC_kwDOABII585DuTO_",
      "diff_hunk": "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,",
      "path": "src/policy/packages.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "4a4ae2f12837f3abe93a67bd490213f5a9e82d76",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is just being moved here and I don't think this can overflow in practice, but the init value should be `int64_t{0}`, so maybe it would make sense to fix this somewhere within this PR. (searched the rest of the codebase after https://github.com/bitcoin/bitcoin/pull/27021#discussion_r1136136446).",
      "created_at": "2023-03-14T21:11:47Z",
      "updated_at": "2023-03-14T21:11:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1136210879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136210879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142230795",
      "pull_request_review_id": 1348711897,
      "id": 1142230795,
      "node_id": "PRRC_kwDOABII585EFQ8L",
      "diff_hunk": "@@ -65,6 +52,30 @@ bool CheckPackage(const Package& txns, PackageValidationState& state)\n     return true;\n }\n \n+bool CheckPackage(const Package& txns, PackageValidationState& state)\n+{\n+    const unsigned int package_count = txns.size();\n+\n+    if (package_count > MAX_PACKAGE_COUNT) {\n+        return state.Invalid(PackageValidationResult::PCKG_POLICY, \"package-too-many-transactions\");\n+    }\n+\n+    const int64_t total_size = std::accumulate(txns.cbegin(), txns.cend(), 0,",
      "path": "src/policy/packages.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "4a4ae2f12837f3abe93a67bd490213f5a9e82d76",
      "in_reply_to_id": 1136210879,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah thanks!",
      "created_at": "2023-03-20T14:44:17Z",
      "updated_at": "2023-03-20T14:44:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1142230795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142230795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 62,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182761583",
      "pull_request_review_id": 1262442548,
      "id": 1182761583,
      "node_id": "PRRC_kwDOABII585Gf4Jv",
      "diff_hunk": "@@ -39,6 +39,30 @@ inline CTransactionRef create_placeholder_tx(size_t num_inputs, size_t num_outpu\n     return MakeTransactionRef(mtx);\n }\n \n+// Context-free check that a package only contains a tx (the last tx in the package) with its\n+// ancestors. Not all of the tx's ancestors need to be present.\n+bool IsAncestorPackage(const Package& package)",
      "path": "src/test/txpackage_tests.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this should assert that package is non-empty",
      "created_at": "2023-05-02T16:10:58Z",
      "updated_at": "2023-05-02T16:46:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182761583",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182761583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182768590",
      "pull_request_review_id": 1262442548,
      "id": 1182768590,
      "node_id": "PRRC_kwDOABII585Gf53O",
      "diff_hunk": "@@ -63,10 +87,121 @@ BOOST_FIXTURE_TEST_CASE(package_sanitization_tests, TestChain100Setup)\n     }\n     BOOST_CHECK(package_too_large.size() <= MAX_PACKAGE_COUNT);\n     PackageValidationState state_too_large;\n-    BOOST_CHECK(!CheckPackage(package_too_large, state_too_large));\n+    BOOST_CHECK(!IsPackageWellFormed(package_too_large, state_too_large, /*require_sorted=*/true));\n     BOOST_CHECK_EQUAL(state_too_large.GetResult(), PackageValidationResult::PCKG_POLICY);\n     BOOST_CHECK_EQUAL(state_too_large.GetRejectReason(), \"package-too-large\");\n }\n+BOOST_FIXTURE_TEST_CASE(packageifier_tests, TestChain100Setup)\n+{\n+    CKey placeholder_key;\n+    placeholder_key.MakeNewKey(true);\n+    CScript spk = GetScriptForDestination(PKHash(placeholder_key.GetPubKey()));\n+    FastRandomContext det_rand{true};\n+    // Basic chain of 25 transactions\n+    {\n+        Package package;\n+        CTransactionRef last_tx = m_coinbase_txns[0];\n+        CKey signing_key = coinbaseKey;\n+        for (int i{0}; i < 24; ++i) {\n+            auto tx = MakeTransactionRef(CreateValidMempoolTransaction(last_tx, 0, 0, signing_key, spk, CAmount((49-i) * COIN), false));\n+            package.emplace_back(tx);\n+            last_tx = tx;\n+            if (i == 0) signing_key = placeholder_key;\n+        }\n+        BOOST_CHECK(!IsChildWithParents(package));\n+        BOOST_CHECK(IsAncestorPackage(package));\n+\n+        Package package_copy = package;\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        BOOST_CHECK(IsAncestorPackage(packageified.Txns()));\n+        for (auto i{0}; i < 24; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), i + 1);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(package[i])));\n+        }\n+        for (auto i{0}; i < 10; ++i) packageified.Exclude(package[i]);\n+        packageified.Ban(package[20]);\n+        for (auto i{11}; i < 20; ++i) {\n+            const auto& tx = package[i];\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(tx)->size(), i - 9);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(tx)));\n+        }\n+        for (auto i{20}; i < 24; ++i) {\n+            BOOST_CHECK(!packageified.GetAncestorSet(package[i]));\n+        }\n+    }\n+    // 99 Parents and 1 Child\n+    {\n+        Package package;\n+        CMutableTransaction child;\n+        for (int i{0}; i < 99; ++i) {",
      "path": "src/test/txpackage_tests.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        for (int parent_idx{0}; parent_idx < 99; ++parent_idx) {\r\n```",
      "created_at": "2023-05-02T16:17:37Z",
      "updated_at": "2023-05-02T16:46:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182768590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182768590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182797698",
      "pull_request_review_id": 1262442548,
      "id": 1182797698,
      "node_id": "PRRC_kwDOABII585GgA-C",
      "diff_hunk": "@@ -63,10 +87,121 @@ BOOST_FIXTURE_TEST_CASE(package_sanitization_tests, TestChain100Setup)\n     }\n     BOOST_CHECK(package_too_large.size() <= MAX_PACKAGE_COUNT);\n     PackageValidationState state_too_large;\n-    BOOST_CHECK(!CheckPackage(package_too_large, state_too_large));\n+    BOOST_CHECK(!IsPackageWellFormed(package_too_large, state_too_large, /*require_sorted=*/true));\n     BOOST_CHECK_EQUAL(state_too_large.GetResult(), PackageValidationResult::PCKG_POLICY);\n     BOOST_CHECK_EQUAL(state_too_large.GetRejectReason(), \"package-too-large\");\n }\n+BOOST_FIXTURE_TEST_CASE(packageifier_tests, TestChain100Setup)\n+{\n+    CKey placeholder_key;\n+    placeholder_key.MakeNewKey(true);\n+    CScript spk = GetScriptForDestination(PKHash(placeholder_key.GetPubKey()));\n+    FastRandomContext det_rand{true};\n+    // Basic chain of 25 transactions\n+    {\n+        Package package;\n+        CTransactionRef last_tx = m_coinbase_txns[0];\n+        CKey signing_key = coinbaseKey;\n+        for (int i{0}; i < 24; ++i) {\n+            auto tx = MakeTransactionRef(CreateValidMempoolTransaction(last_tx, 0, 0, signing_key, spk, CAmount((49-i) * COIN), false));\n+            package.emplace_back(tx);\n+            last_tx = tx;\n+            if (i == 0) signing_key = placeholder_key;\n+        }\n+        BOOST_CHECK(!IsChildWithParents(package));\n+        BOOST_CHECK(IsAncestorPackage(package));\n+\n+        Package package_copy = package;\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        BOOST_CHECK(IsAncestorPackage(packageified.Txns()));\n+        for (auto i{0}; i < 24; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), i + 1);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(package[i])));\n+        }\n+        for (auto i{0}; i < 10; ++i) packageified.Exclude(package[i]);\n+        packageified.Ban(package[20]);\n+        for (auto i{11}; i < 20; ++i) {\n+            const auto& tx = package[i];\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(tx)->size(), i - 9);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(tx)));\n+        }\n+        for (auto i{20}; i < 24; ++i) {\n+            BOOST_CHECK(!packageified.GetAncestorSet(package[i]));\n+        }\n+    }\n+    // 99 Parents and 1 Child\n+    {\n+        Package package;\n+        CMutableTransaction child;\n+        for (int i{0}; i < 99; ++i) {\n+            auto parent = MakeTransactionRef(CreateValidMempoolTransaction(m_coinbase_txns[i + 1],\n+                                             0, 0, coinbaseKey, spk, CAmount(49 * COIN), false));\n+            package.emplace_back(parent);\n+            child.vin.push_back(CTxIn(COutPoint(parent->GetHash(), 0)));\n+        }\n+        child.vout.push_back(CTxOut(4900 * COIN, spk));\n+        package.push_back(MakeTransactionRef(child));\n+\n+        Package package_copy(package);\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        for (auto i{0}; i < 99; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), 1);",
      "path": "src/test/txpackage_tests.cpp",
      "position": 110,
      "original_position": 105,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ordering between `package[i]` and `packageified.Txns()[i]` doesn't seem to be stable? The above shuffle is only \"undone\" by sorting by number of in-package ancestors when constructing the `AncestorPackage`, but of course all parents have the same value.",
      "created_at": "2023-05-02T16:45:11Z",
      "updated_at": "2023-05-02T16:46:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182797698",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182797698"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 155,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182968218",
      "pull_request_review_id": 1409760020,
      "id": 1182968218,
      "node_id": "PRRC_kwDOABII585Ggqma",
      "diff_hunk": "@@ -558,6 +558,18 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Multiple transaction acceptance for transactions guaranteed to be an ancestor package and a CPFP.\n+     * If only 1 transaction exists in subpackage, calls AcceptSingleTransaction() with adjusted\n+     * ATMPArgs to avoid additional package policy restrictions like PackageMempoolChecks() and\n+     * disabled RBF. Also creates a PackageMempoolAcceptResult wrapping the result.\n+     * If multiple transactions exist in subpackage, calls AcceptMultipleTransactions() with the\n+     * provided ATMPArgs. Additionally, if the \"representative tx\" is not present in the result,\n+     * fills it in with TX_MISSING_INPUTS.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "08a07c348d70907951a9225853976f9486665246",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "under what situations does the \"representative tx\" not get filled, and why is `TX_MISSING_INPUTS` the right value to set?",
      "created_at": "2023-05-02T19:30:26Z",
      "updated_at": "2023-05-02T19:30:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1182968218",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182968218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183794878",
      "pull_request_review_id": 1411070467,
      "id": 1183794878,
      "node_id": "PRRC_kwDOABII585Gj0a-",
      "diff_hunk": "@@ -0,0 +1,52 @@\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+\n+#include <policy/packages.h>\n+\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+FUZZ_TARGET(ancestorpackage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<CTransactionRef> txns_in;\n+    // Avoid repeat coins, as they may cause transactions to conflict\n+    std::set<COutPoint> available_coins;\n+    for (auto i{0}; i < 100; ++i) {\n+        if (auto outpoint{ConsumeDeserializable<COutPoint>(fuzzed_data_provider)}) available_coins.insert(*outpoint);",
      "path": "src/test/fuzz/ancestorpackage.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "7fd7cc3502411a523c860400ac9e9a9b3991a872",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "hmm I think the fuzzer was smart enough to give a coin with the same hash as the txid of a constructed transaction below, built on a different set of ancestors...\r\n\r\nI think hashing these bytes would defeat this since it can't generate a valid tx with that txid?",
      "created_at": "2023-05-03T14:46:47Z",
      "updated_at": "2023-05-03T14:46:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1183794878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183794878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1185280732",
      "pull_request_review_id": 1413526891,
      "id": 1185280732,
      "node_id": "PRRC_kwDOABII585GpfLc",
      "diff_hunk": "@@ -0,0 +1,52 @@\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+\n+#include <policy/packages.h>\n+\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+FUZZ_TARGET(ancestorpackage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<CTransactionRef> txns_in;\n+    // Avoid repeat coins, as they may cause transactions to conflict\n+    std::set<COutPoint> available_coins;\n+    for (auto i{0}; i < 100; ++i) {\n+        if (auto outpoint{ConsumeDeserializable<COutPoint>(fuzzed_data_provider)}) available_coins.insert(*outpoint);",
      "path": "src/test/fuzz/ancestorpackage.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "7fd7cc3502411a523c860400ac9e9a9b3991a872",
      "in_reply_to_id": 1183794878,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "or to be lazier, just set the initial utxos' prevout.n index to some impossibly high numbers to ever be generated",
      "created_at": "2023-05-04T17:00:18Z",
      "updated_at": "2023-05-04T17:00:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1185280732",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1185280732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187734505",
      "pull_request_review_id": 1417261502,
      "id": 1187734505,
      "node_id": "PRRC_kwDOABII585Gy2Pp",
      "diff_hunk": "@@ -1478,42 +1482,55 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 // parent, and should still be considered.\n                 continue;\n             }\n-            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+            if (wtxid == child->GetWitnessHash()) {\n                 Assume(tx == package.back());\n-                txns_package_eval.push_back(tx);\n                 // Unless we're quitting early, validate the child outside of this loop.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "dd9d4f6fe86826ef01932734cb108e174c53476e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this comment becomes a bit disconnected from the logic itself. ",
      "created_at": "2023-05-08T18:04:54Z",
      "updated_at": "2023-05-08T20:32:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187734505",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187734505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1487,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187848024",
      "pull_request_review_id": 1417261502,
      "id": 1187848024,
      "node_id": "PRRC_kwDOABII585GzR9Y",
      "diff_hunk": "@@ -1382,49 +1382,17 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Check that the package is well-formed. If it isn't, we won't try to validate any of the\n     // transactions and thus won't return any MempoolAcceptResults, just a package-wide error.\n-\n     // Context-free package checks.\n-    if (!IsPackageWellFormed(package, package_state_quit_early)) return PackageMempoolAcceptResult(package_state_quit_early, {});\n-\n-    // All transactions in the package must be a parent of the last transaction. This is just an\n-    // opportunity for us to fail fast on a context-free check without taking the mempool lock.\n-    if (!IsChildWithParents(package)) {\n-        package_state_quit_early.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-child-with-parents\");\n+    if (!package.empty() && !IsPackageWellFormed(package, package_state_quit_early, /*require_sorted=*/false)) {\n         return PackageMempoolAcceptResult(package_state_quit_early, {});\n     }\n-\n     AncestorPackage packageified(package);\n-    const auto& child = package.back();\n-    std::unordered_set<uint256, SaltedTxidHasher> unconfirmed_parent_txids;\n-    std::transform(package.cbegin(), package.cend() - 1,\n-                   std::inserter(unconfirmed_parent_txids, unconfirmed_parent_txids.end()),\n-                   [](const auto& tx) { return tx->GetHash(); });\n-\n-    // All child inputs must refer to a preceding package transaction or a confirmed UTXO. The only\n-    // way to verify this is to look up the child's inputs in our current coins view (not including\n-    // mempool), and enforce that all parents not present in the package be available at chain tip.\n-    // Since this check can bring new coins into the coins cache, keep track of these coins and\n-    // uncache them if we don't end up submitting this package to the mempool.\n-    const CCoinsViewCache& coins_tip_cache = m_active_chainstate.CoinsTip();\n-    for (const auto& input : child->vin) {\n-        if (!coins_tip_cache.HaveCoinInCache(input.prevout)) {\n-            args.m_coins_to_uncache.push_back(input.prevout);\n-        }\n-    }\n-    // Using the MemPoolAccept m_view cache allows us to look up these same coins faster later.\n-    // This should be connecting directly to CoinsTip, not to m_viewmempool, because we specifically\n-    // require inputs to be confirmed if they aren't in the package.\n-    m_view.SetBackend(m_active_chainstate.CoinsTip());\n-    const auto package_or_confirmed = [this, &unconfirmed_parent_txids](const auto& input) {\n-         return unconfirmed_parent_txids.count(input.prevout.hash) > 0 || m_view.HaveCoin(input.prevout);\n-    };\n-    if (!std::all_of(child->vin.cbegin(), child->vin.cend(), package_or_confirmed)) {\n-        package_state_quit_early.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-child-with-unconfirmed-parents\");\n+    if (!packageified.IsAncestorPackage()) {",
      "path": "src/validation.cpp",
      "position": 145,
      "original_position": 63,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I know what this means, but kinda... odd that `AncestorPackage` can be `!IsAncestorPackage`",
      "created_at": "2023-05-08T20:09:22Z",
      "updated_at": "2023-05-08T20:32:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187848024",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187848024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1395,
      "original_line": 1395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187856431",
      "pull_request_review_id": 1417261502,
      "id": 1187856431,
      "node_id": "PRRC_kwDOABII585GzUAv",
      "diff_hunk": "@@ -325,18 +324,11 @@ def test_submit_child_with_parents(self, num_parents, partial_submit):\n         self.generate(node, 1)\n \n     def test_submitpackage(self):\n-        node = self.nodes[0]\n-\n         self.log.info(\"Submitpackage valid packages with 1 child and some number of parents\")\n         for num_parents in [1, 2, 24]:\n             self.test_submit_child_with_parents(num_parents, False)\n             self.test_submit_child_with_parents(num_parents, True)\n \n-        self.log.info(\"Submitpackage only allows packages of 1 child with its parents\")",
      "path": "test/functional/rpc_packages.py",
      "position": 19,
      "original_position": 19,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "should just leave this example in in the positive sense of it being accepted?",
      "created_at": "2023-05-08T20:16:35Z",
      "updated_at": "2023-05-08T20:32:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1187856431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1187856431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437947",
      "pull_request_review_id": 1421439448,
      "id": 1190437947,
      "node_id": "PRRC_kwDOABII585G9KQ7",
      "diff_hunk": "@@ -325,18 +324,11 @@ def test_submit_child_with_parents(self, num_parents, partial_submit):\n         self.generate(node, 1)\n \n     def test_submitpackage(self):\n-        node = self.nodes[0]\n-\n         self.log.info(\"Submitpackage valid packages with 1 child and some number of parents\")\n         for num_parents in [1, 2, 24]:\n             self.test_submit_child_with_parents(num_parents, False)\n             self.test_submit_child_with_parents(num_parents, True)\n \n-        self.log.info(\"Submitpackage only allows packages of 1 child with its parents\")",
      "path": "test/functional/rpc_packages.py",
      "position": 19,
      "original_position": 19,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": 1187856431,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Re-added",
      "created_at": "2023-05-10T22:12:26Z",
      "updated_at": "2023-05-10T22:12:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190437947",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437970",
      "pull_request_review_id": 1421439477,
      "id": 1190437970,
      "node_id": "PRRC_kwDOABII585G9KRS",
      "diff_hunk": "@@ -1382,49 +1382,17 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n \n     // Check that the package is well-formed. If it isn't, we won't try to validate any of the\n     // transactions and thus won't return any MempoolAcceptResults, just a package-wide error.\n-\n     // Context-free package checks.\n-    if (!IsPackageWellFormed(package, package_state_quit_early)) return PackageMempoolAcceptResult(package_state_quit_early, {});\n-\n-    // All transactions in the package must be a parent of the last transaction. This is just an\n-    // opportunity for us to fail fast on a context-free check without taking the mempool lock.\n-    if (!IsChildWithParents(package)) {\n-        package_state_quit_early.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-child-with-parents\");\n+    if (!package.empty() && !IsPackageWellFormed(package, package_state_quit_early, /*require_sorted=*/false)) {\n         return PackageMempoolAcceptResult(package_state_quit_early, {});\n     }\n-\n     AncestorPackage packageified(package);\n-    const auto& child = package.back();\n-    std::unordered_set<uint256, SaltedTxidHasher> unconfirmed_parent_txids;\n-    std::transform(package.cbegin(), package.cend() - 1,\n-                   std::inserter(unconfirmed_parent_txids, unconfirmed_parent_txids.end()),\n-                   [](const auto& tx) { return tx->GetHash(); });\n-\n-    // All child inputs must refer to a preceding package transaction or a confirmed UTXO. The only\n-    // way to verify this is to look up the child's inputs in our current coins view (not including\n-    // mempool), and enforce that all parents not present in the package be available at chain tip.\n-    // Since this check can bring new coins into the coins cache, keep track of these coins and\n-    // uncache them if we don't end up submitting this package to the mempool.\n-    const CCoinsViewCache& coins_tip_cache = m_active_chainstate.CoinsTip();\n-    for (const auto& input : child->vin) {\n-        if (!coins_tip_cache.HaveCoinInCache(input.prevout)) {\n-            args.m_coins_to_uncache.push_back(input.prevout);\n-        }\n-    }\n-    // Using the MemPoolAccept m_view cache allows us to look up these same coins faster later.\n-    // This should be connecting directly to CoinsTip, not to m_viewmempool, because we specifically\n-    // require inputs to be confirmed if they aren't in the package.\n-    m_view.SetBackend(m_active_chainstate.CoinsTip());\n-    const auto package_or_confirmed = [this, &unconfirmed_parent_txids](const auto& input) {\n-         return unconfirmed_parent_txids.count(input.prevout.hash) > 0 || m_view.HaveCoin(input.prevout);\n-    };\n-    if (!std::all_of(child->vin.cbegin(), child->vin.cend(), package_or_confirmed)) {\n-        package_state_quit_early.Invalid(PackageValidationResult::PCKG_POLICY, \"package-not-child-with-unconfirmed-parents\");\n+    if (!packageified.IsAncestorPackage()) {",
      "path": "src/validation.cpp",
      "position": 145,
      "original_position": 63,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": 1187848024,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah. Added some docs to the class (also mentioned BIP331) so maybe it's more clear? I used to call it `Packageifier` because it can potentially build a package out of any random list of transactions. But then it's weird because we packageify a `Package`. Open to naming improvements 😅 ",
      "created_at": "2023-05-10T22:12:28Z",
      "updated_at": "2023-05-10T22:12:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190437970",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190437970"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1395,
      "original_line": 1395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438085",
      "pull_request_review_id": 1421439641,
      "id": 1190438085,
      "node_id": "PRRC_kwDOABII585G9KTF",
      "diff_hunk": "@@ -1478,42 +1482,55 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n                 // parent, and should still be considered.\n                 continue;\n             }\n-            if (wtxid == child->GetWitnessHash() && !quit_early) {\n+            if (wtxid == child->GetWitnessHash()) {\n                 Assume(tx == package.back());\n-                txns_package_eval.push_back(tx);\n                 // Unless we're quitting early, validate the child outside of this loop.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "dd9d4f6fe86826ef01932734cb108e174c53476e",
      "in_reply_to_id": 1187734505,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Elaborated on the comment, hopefully it's better now",
      "created_at": "2023-05-10T22:12:42Z",
      "updated_at": "2023-05-10T22:12:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1487,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438226",
      "pull_request_review_id": 1421439847,
      "id": 1190438226,
      "node_id": "PRRC_kwDOABII585G9KVS",
      "diff_hunk": "@@ -0,0 +1,52 @@\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+\n+#include <policy/packages.h>\n+\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+FUZZ_TARGET(ancestorpackage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<CTransactionRef> txns_in;\n+    // Avoid repeat coins, as they may cause transactions to conflict\n+    std::set<COutPoint> available_coins;\n+    for (auto i{0}; i < 100; ++i) {\n+        if (auto outpoint{ConsumeDeserializable<COutPoint>(fuzzed_data_provider)}) available_coins.insert(*outpoint);",
      "path": "src/test/fuzz/ancestorpackage.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "7fd7cc3502411a523c860400ac9e9a9b3991a872",
      "in_reply_to_id": 1183794878,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I think hashing these bytes would defeat this since it can't generate a valid tx with that txid?\r\n\r\nDid this one, thanks 👍 ",
      "created_at": "2023-05-10T22:12:59Z",
      "updated_at": "2023-05-10T22:12:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438295",
      "pull_request_review_id": 1421439940,
      "id": 1190438295,
      "node_id": "PRRC_kwDOABII585G9KWX",
      "diff_hunk": "@@ -558,6 +558,18 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Multiple transaction acceptance for transactions guaranteed to be an ancestor package and a CPFP.\n+     * If only 1 transaction exists in subpackage, calls AcceptSingleTransaction() with adjusted\n+     * ATMPArgs to avoid additional package policy restrictions like PackageMempoolChecks() and\n+     * disabled RBF. Also creates a PackageMempoolAcceptResult wrapping the result.\n+     * If multiple transactions exist in subpackage, calls AcceptMultipleTransactions() with the\n+     * provided ATMPArgs. Additionally, if the \"representative tx\" is not present in the result,\n+     * fills it in with TX_MISSING_INPUTS.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "08a07c348d70907951a9225853976f9486665246",
      "in_reply_to_id": 1182968218,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Elaborated",
      "created_at": "2023-05-10T22:13:07Z",
      "updated_at": "2023-05-10T22:13:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438295",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438618",
      "pull_request_review_id": 1421440401,
      "id": 1190438618,
      "node_id": "PRRC_kwDOABII585G9Kba",
      "diff_hunk": "@@ -63,10 +87,121 @@ BOOST_FIXTURE_TEST_CASE(package_sanitization_tests, TestChain100Setup)\n     }\n     BOOST_CHECK(package_too_large.size() <= MAX_PACKAGE_COUNT);\n     PackageValidationState state_too_large;\n-    BOOST_CHECK(!CheckPackage(package_too_large, state_too_large));\n+    BOOST_CHECK(!IsPackageWellFormed(package_too_large, state_too_large, /*require_sorted=*/true));\n     BOOST_CHECK_EQUAL(state_too_large.GetResult(), PackageValidationResult::PCKG_POLICY);\n     BOOST_CHECK_EQUAL(state_too_large.GetRejectReason(), \"package-too-large\");\n }\n+BOOST_FIXTURE_TEST_CASE(packageifier_tests, TestChain100Setup)\n+{\n+    CKey placeholder_key;\n+    placeholder_key.MakeNewKey(true);\n+    CScript spk = GetScriptForDestination(PKHash(placeholder_key.GetPubKey()));\n+    FastRandomContext det_rand{true};\n+    // Basic chain of 25 transactions\n+    {\n+        Package package;\n+        CTransactionRef last_tx = m_coinbase_txns[0];\n+        CKey signing_key = coinbaseKey;\n+        for (int i{0}; i < 24; ++i) {\n+            auto tx = MakeTransactionRef(CreateValidMempoolTransaction(last_tx, 0, 0, signing_key, spk, CAmount((49-i) * COIN), false));\n+            package.emplace_back(tx);\n+            last_tx = tx;\n+            if (i == 0) signing_key = placeholder_key;\n+        }\n+        BOOST_CHECK(!IsChildWithParents(package));\n+        BOOST_CHECK(IsAncestorPackage(package));\n+\n+        Package package_copy = package;\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        BOOST_CHECK(IsAncestorPackage(packageified.Txns()));\n+        for (auto i{0}; i < 24; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), i + 1);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(package[i])));\n+        }\n+        for (auto i{0}; i < 10; ++i) packageified.Exclude(package[i]);\n+        packageified.Ban(package[20]);\n+        for (auto i{11}; i < 20; ++i) {\n+            const auto& tx = package[i];\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(tx)->size(), i - 9);\n+            BOOST_CHECK(IsAncestorPackage(*packageified.GetAncestorSet(tx)));\n+        }\n+        for (auto i{20}; i < 24; ++i) {\n+            BOOST_CHECK(!packageified.GetAncestorSet(package[i]));\n+        }\n+    }\n+    // 99 Parents and 1 Child\n+    {\n+        Package package;\n+        CMutableTransaction child;\n+        for (int i{0}; i < 99; ++i) {\n+            auto parent = MakeTransactionRef(CreateValidMempoolTransaction(m_coinbase_txns[i + 1],\n+                                             0, 0, coinbaseKey, spk, CAmount(49 * COIN), false));\n+            package.emplace_back(parent);\n+            child.vin.push_back(CTxIn(COutPoint(parent->GetHash(), 0)));\n+        }\n+        child.vout.push_back(CTxOut(4900 * COIN, spk));\n+        package.push_back(MakeTransactionRef(child));\n+\n+        Package package_copy(package);\n+        Shuffle(package_copy.begin(), package_copy.end(), det_rand);\n+        AncestorPackage packageified(package_copy);\n+        for (auto i{0}; i < 99; ++i) {\n+            BOOST_CHECK_EQUAL(packageified.GetAncestorSet(package[i])->size(), 1);",
      "path": "src/test/txpackage_tests.cpp",
      "position": 110,
      "original_position": 105,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": 1182797698,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to always use `package[i]`, and added a comment about this unstable sort",
      "created_at": "2023-05-10T22:13:42Z",
      "updated_at": "2023-05-10T22:13:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438618",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438618"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 155,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438675",
      "pull_request_review_id": 1421440493,
      "id": 1190438675,
      "node_id": "PRRC_kwDOABII585G9KcT",
      "diff_hunk": "@@ -39,6 +39,30 @@ inline CTransactionRef create_placeholder_tx(size_t num_inputs, size_t num_outpu\n     return MakeTransactionRef(mtx);\n }\n \n+// Context-free check that a package only contains a tx (the last tx in the package) with its\n+// ancestors. Not all of the tx's ancestors need to be present.\n+bool IsAncestorPackage(const Package& package)",
      "path": "src/test/txpackage_tests.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "aa16a46345fee6b6bbc4a7e103aed4c616ad1db8",
      "in_reply_to_id": 1182761583,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Aha, thanks!",
      "created_at": "2023-05-10T22:13:49Z",
      "updated_at": "2023-05-10T22:13:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1190438675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1190438675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 44,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191628983",
      "pull_request_review_id": 1423335249,
      "id": 1191628983,
      "node_id": "PRRC_kwDOABII585HBtC3",
      "diff_hunk": "@@ -368,6 +545,100 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5649sat\n+        //        5649vB\n+        //     ^         ^\n+        //  parent1     parent2\n+        // 13223sat     13223sat\n+        //  191vB       191vB\n+        //       ^      ^\n+        //        child\n+        //       2424sat\n+        //        485vB\n+        //\n+        // grandparent is below minfeerate\n+        // {grandparent + parent1} and {grandparent + parent2} are both below minfeerate\n+        // {grandparent + parent1 + parent2} is above minfeerate\n+        // child has a feerate just below minfeerate\n+        // {grandparent + parent1 + parent2 + child} is above minfeerate\n+        // All transactions should be rejected.\n+        const CAmount grandparent_fee{5650};\n+        std::vector<CTransactionRef> grandparent_input_txns;\n+        std::vector<COutPoint> grandparent_inputs;\n+        for (auto i{1}; i < 50; ++i) {\n+            grandparent_input_txns.push_back(m_coinbase_txns[i]);\n+            grandparent_inputs.push_back(COutPoint{m_coinbase_txns[i]->GetHash(), 0});\n+        }\n+        CAmount last_value = grandparent_inputs.size()*50*COIN - 10*COIN - 10*COIN - grandparent_fee;\n+        auto mtx_grandparent{CreateValidMempoolTransaction(/*input_transactions=*/grandparent_input_txns,\n+                                                           /*inputs=*/grandparent_inputs,\n+                                                           /*input_height=*/102,\n+                                                           /*input_signing_keys=*/{coinbaseKey},\n+                                                           /*outputs=*/{CTxOut{10*COIN, parent_locking_script}, CTxOut{10*COIN, parent_locking_script},\n+                                                                        CTxOut{last_value, parent_locking_script}},\n+                                                           /*submit=*/false)};\n+        CTransactionRef tx_grandparent = MakeTransactionRef(mtx_grandparent);\n+        package_ppfc.push_back(tx_grandparent);\n+\n+        const CAmount parent_fee{13223};\n+        const CAmount parent_value{10*COIN - 13223};\n+        auto mtx_parent1{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/0,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent1 = MakeTransactionRef(mtx_parent1);\n+        package_ppfc.push_back(tx_parent1);\n+        auto mtx_parent2{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/1,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent2 = MakeTransactionRef(mtx_parent2);\n+        package_ppfc.push_back(tx_parent2);\n+\n+\n+        const CAmount child_fee{2424};\n+        const CAmount child_value{last_value + 2*parent_value - child_fee};\n+        auto mtx_child{CreateValidMempoolTransaction(/*input_transactions=*/{tx_grandparent, tx_parent1, tx_parent2},\n+                                                     /*inputs=*/{COutPoint{tx_grandparent->GetHash(), 2}, COutPoint{tx_parent1->GetHash(), 0}, COutPoint{tx_parent2->GetHash(), 0}},\n+                                                     /*input_height=*/102,\n+                                                     /*input_signing_keys=*/{parent_key, child_key, grandchild_key},\n+                                                     /*outputs=*/{CTxOut{child_value, grandchild_locking_script}},\n+                                                     /*submit=*/false)};\n+        CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+        package_ppfc.push_back(tx_child);\n+\n+        // Magic Number Sanity Checks\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_grandparent), 5649);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent1), 191);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent2), 191);",
      "path": "src/test/txpackage_tests.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "CI Failure here:\r\n\r\n```\r\nC:/Users/ContainerAdministrator/AppData/Local/Temp/cirrus-ci-build/src/test/txpackage_tests.cpp(622): error: in \"txpackage_tests/package_submission_tests\": check GetVirtualTransactionSize(*tx_parent2) == 191 has failed [190 != 191]\r\n```\r\n\r\nI'm going to guess that this is because real signatures are being created, which can occasionally be smaller than 71 bytes, thus resulting in a tx that is one byte smaller. If the script type doesn't matter, I would suggest using taproot keypath spends since that has fixed size signatures. Otherwise these checks will need to account for possibly varying transaction sizes.",
      "created_at": "2023-05-11T19:56:00Z",
      "updated_at": "2023-05-11T19:56:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1191628983",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191628983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191631520",
      "pull_request_review_id": 1423338386,
      "id": 1191631520,
      "node_id": "PRRC_kwDOABII585HBtqg",
      "diff_hunk": "@@ -368,6 +545,100 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5649sat\n+        //        5649vB\n+        //     ^         ^\n+        //  parent1     parent2\n+        // 13223sat     13223sat\n+        //  191vB       191vB\n+        //       ^      ^\n+        //        child\n+        //       2424sat\n+        //        485vB\n+        //\n+        // grandparent is below minfeerate\n+        // {grandparent + parent1} and {grandparent + parent2} are both below minfeerate\n+        // {grandparent + parent1 + parent2} is above minfeerate\n+        // child has a feerate just below minfeerate\n+        // {grandparent + parent1 + parent2 + child} is above minfeerate\n+        // All transactions should be rejected.\n+        const CAmount grandparent_fee{5650};\n+        std::vector<CTransactionRef> grandparent_input_txns;\n+        std::vector<COutPoint> grandparent_inputs;\n+        for (auto i{1}; i < 50; ++i) {\n+            grandparent_input_txns.push_back(m_coinbase_txns[i]);\n+            grandparent_inputs.push_back(COutPoint{m_coinbase_txns[i]->GetHash(), 0});\n+        }\n+        CAmount last_value = grandparent_inputs.size()*50*COIN - 10*COIN - 10*COIN - grandparent_fee;\n+        auto mtx_grandparent{CreateValidMempoolTransaction(/*input_transactions=*/grandparent_input_txns,\n+                                                           /*inputs=*/grandparent_inputs,\n+                                                           /*input_height=*/102,\n+                                                           /*input_signing_keys=*/{coinbaseKey},\n+                                                           /*outputs=*/{CTxOut{10*COIN, parent_locking_script}, CTxOut{10*COIN, parent_locking_script},\n+                                                                        CTxOut{last_value, parent_locking_script}},\n+                                                           /*submit=*/false)};\n+        CTransactionRef tx_grandparent = MakeTransactionRef(mtx_grandparent);\n+        package_ppfc.push_back(tx_grandparent);\n+\n+        const CAmount parent_fee{13223};\n+        const CAmount parent_value{10*COIN - 13223};\n+        auto mtx_parent1{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/0,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent1 = MakeTransactionRef(mtx_parent1);\n+        package_ppfc.push_back(tx_parent1);\n+        auto mtx_parent2{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/1,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent2 = MakeTransactionRef(mtx_parent2);\n+        package_ppfc.push_back(tx_parent2);\n+\n+\n+        const CAmount child_fee{2424};\n+        const CAmount child_value{last_value + 2*parent_value - child_fee};\n+        auto mtx_child{CreateValidMempoolTransaction(/*input_transactions=*/{tx_grandparent, tx_parent1, tx_parent2},\n+                                                     /*inputs=*/{COutPoint{tx_grandparent->GetHash(), 2}, COutPoint{tx_parent1->GetHash(), 0}, COutPoint{tx_parent2->GetHash(), 0}},\n+                                                     /*input_height=*/102,\n+                                                     /*input_signing_keys=*/{parent_key, child_key, grandchild_key},\n+                                                     /*outputs=*/{CTxOut{child_value, grandchild_locking_script}},\n+                                                     /*submit=*/false)};\n+        CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+        package_ppfc.push_back(tx_child);\n+\n+        // Magic Number Sanity Checks\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_grandparent), 5649);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent1), 191);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent2), 191);",
      "path": "src/test/txpackage_tests.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "in_reply_to_id": 1191628983,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm fine if the magic number checks have a bit of wiggle room tbh, just leave a comment?",
      "created_at": "2023-05-11T19:57:56Z",
      "updated_at": "2023-05-11T19:57:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1191631520",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1191631520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194127839",
      "pull_request_review_id": 1427012337,
      "id": 1194127839,
      "node_id": "PRRC_kwDOABII585HLPHf",
      "diff_hunk": "@@ -558,6 +558,18 @@ class MemPoolAccept\n     */\n     PackageMempoolAcceptResult AcceptMultipleTransactions(const std::vector<CTransactionRef>& txns, ATMPArgs& args) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /**\n+     * Multiple transaction acceptance for transactions guaranteed to be an ancestor package and a CPFP.\n+     * If only 1 transaction exists in subpackage, calls AcceptSingleTransaction() with adjusted\n+     * ATMPArgs to avoid additional package policy restrictions like PackageMempoolChecks() and\n+     * disabled RBF. Also creates a PackageMempoolAcceptResult wrapping the result.\n+     * If multiple transactions exist in subpackage, calls AcceptMultipleTransactions() with the\n+     * provided ATMPArgs. Additionally, if the \"representative tx\" is not present in the result,\n+     * fills it in with TX_MISSING_INPUTS.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "08a07c348d70907951a9225853976f9486665246",
      "in_reply_to_id": 1182968218,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "perfect ",
      "created_at": "2023-05-15T17:14:15Z",
      "updated_at": "2023-05-15T17:14:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1194127839",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194127839"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194144678",
      "pull_request_review_id": 1427036930,
      "id": 1194144678,
      "node_id": "PRRC_kwDOABII585HLTOm",
      "diff_hunk": "@@ -0,0 +1,55 @@\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+\n+#include <policy/packages.h>\n+\n+#include <set>\n+#include <vector>\n+\n+namespace {\n+FUZZ_TARGET(ancestorpackage)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    std::vector<CTransactionRef> txns_in;\n+    // Avoid repeat coins, as they may cause transactions to conflict\n+    std::set<COutPoint> available_coins;\n+    for (auto i{0}; i < 100; ++i) {\n+        if (auto mtx{ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider)}) {",
      "path": "src/test/fuzz/ancestorpackage.cpp",
      "position": 20,
      "original_position": 20,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "35da289d977009b23b74af31d7190793162ef140",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "even more sensible than my suggestion :+1:  no issues running so far",
      "created_at": "2023-05-15T17:30:29Z",
      "updated_at": "2023-05-15T18:01:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1194144678",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194144678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194150250",
      "pull_request_review_id": 1427036930,
      "id": 1194150250,
      "node_id": "PRRC_kwDOABII585HLUlq",
      "diff_hunk": "@@ -368,6 +545,100 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5649sat\n+        //        5649vB\n+        //     ^         ^\n+        //  parent1     parent2\n+        // 13223sat     13223sat",
      "path": "src/test/txpackage_tests.cpp",
      "position": null,
      "original_position": 364,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ASCII :gem: needs connection between grandparent and child",
      "created_at": "2023-05-15T17:35:49Z",
      "updated_at": "2023-05-15T18:01:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1194150250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1194150250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 559,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1203944494",
      "pull_request_review_id": 1441602244,
      "id": 1203944494,
      "node_id": "PRRC_kwDOABII585Hwrwu",
      "diff_hunk": "@@ -368,6 +545,100 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5649sat\n+        //        5649vB\n+        //     ^         ^\n+        //  parent1     parent2\n+        // 13223sat     13223sat\n+        //  191vB       191vB\n+        //       ^      ^\n+        //        child\n+        //       2424sat\n+        //        485vB\n+        //\n+        // grandparent is below minfeerate\n+        // {grandparent + parent1} and {grandparent + parent2} are both below minfeerate\n+        // {grandparent + parent1 + parent2} is above minfeerate\n+        // child has a feerate just below minfeerate\n+        // {grandparent + parent1 + parent2 + child} is above minfeerate\n+        // All transactions should be rejected.\n+        const CAmount grandparent_fee{5650};\n+        std::vector<CTransactionRef> grandparent_input_txns;\n+        std::vector<COutPoint> grandparent_inputs;\n+        for (auto i{1}; i < 50; ++i) {\n+            grandparent_input_txns.push_back(m_coinbase_txns[i]);\n+            grandparent_inputs.push_back(COutPoint{m_coinbase_txns[i]->GetHash(), 0});\n+        }\n+        CAmount last_value = grandparent_inputs.size()*50*COIN - 10*COIN - 10*COIN - grandparent_fee;\n+        auto mtx_grandparent{CreateValidMempoolTransaction(/*input_transactions=*/grandparent_input_txns,\n+                                                           /*inputs=*/grandparent_inputs,\n+                                                           /*input_height=*/102,\n+                                                           /*input_signing_keys=*/{coinbaseKey},\n+                                                           /*outputs=*/{CTxOut{10*COIN, parent_locking_script}, CTxOut{10*COIN, parent_locking_script},\n+                                                                        CTxOut{last_value, parent_locking_script}},\n+                                                           /*submit=*/false)};\n+        CTransactionRef tx_grandparent = MakeTransactionRef(mtx_grandparent);\n+        package_ppfc.push_back(tx_grandparent);\n+\n+        const CAmount parent_fee{13223};\n+        const CAmount parent_value{10*COIN - 13223};\n+        auto mtx_parent1{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/0,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent1 = MakeTransactionRef(mtx_parent1);\n+        package_ppfc.push_back(tx_parent1);\n+        auto mtx_parent2{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/1,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent2 = MakeTransactionRef(mtx_parent2);\n+        package_ppfc.push_back(tx_parent2);\n+\n+\n+        const CAmount child_fee{2424};\n+        const CAmount child_value{last_value + 2*parent_value - child_fee};\n+        auto mtx_child{CreateValidMempoolTransaction(/*input_transactions=*/{tx_grandparent, tx_parent1, tx_parent2},\n+                                                     /*inputs=*/{COutPoint{tx_grandparent->GetHash(), 2}, COutPoint{tx_parent1->GetHash(), 0}, COutPoint{tx_parent2->GetHash(), 0}},\n+                                                     /*input_height=*/102,\n+                                                     /*input_signing_keys=*/{parent_key, child_key, grandchild_key},\n+                                                     /*outputs=*/{CTxOut{child_value, grandchild_locking_script}},\n+                                                     /*submit=*/false)};\n+        CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+        package_ppfc.push_back(tx_child);\n+\n+        // Magic Number Sanity Checks\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_grandparent), 5649);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent1), 191);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent2), 191);",
      "path": "src/test/txpackage_tests.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "in_reply_to_id": 1191628983,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to use T-T-T-Taproot for fixed size (thanks @achow101)",
      "created_at": "2023-05-24T11:30:40Z",
      "updated_at": "2023-05-24T11:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1203944494",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1203944494"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204580821",
      "pull_request_review_id": 1442479694,
      "id": 1204580821,
      "node_id": "PRRC_kwDOABII585HzHHV",
      "diff_hunk": "@@ -368,6 +545,100 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5649sat\n+        //        5649vB\n+        //     ^         ^\n+        //  parent1     parent2\n+        // 13223sat     13223sat\n+        //  191vB       191vB\n+        //       ^      ^\n+        //        child\n+        //       2424sat\n+        //        485vB\n+        //\n+        // grandparent is below minfeerate\n+        // {grandparent + parent1} and {grandparent + parent2} are both below minfeerate\n+        // {grandparent + parent1 + parent2} is above minfeerate\n+        // child has a feerate just below minfeerate\n+        // {grandparent + parent1 + parent2 + child} is above minfeerate\n+        // All transactions should be rejected.\n+        const CAmount grandparent_fee{5650};\n+        std::vector<CTransactionRef> grandparent_input_txns;\n+        std::vector<COutPoint> grandparent_inputs;\n+        for (auto i{1}; i < 50; ++i) {\n+            grandparent_input_txns.push_back(m_coinbase_txns[i]);\n+            grandparent_inputs.push_back(COutPoint{m_coinbase_txns[i]->GetHash(), 0});\n+        }\n+        CAmount last_value = grandparent_inputs.size()*50*COIN - 10*COIN - 10*COIN - grandparent_fee;\n+        auto mtx_grandparent{CreateValidMempoolTransaction(/*input_transactions=*/grandparent_input_txns,\n+                                                           /*inputs=*/grandparent_inputs,\n+                                                           /*input_height=*/102,\n+                                                           /*input_signing_keys=*/{coinbaseKey},\n+                                                           /*outputs=*/{CTxOut{10*COIN, parent_locking_script}, CTxOut{10*COIN, parent_locking_script},\n+                                                                        CTxOut{last_value, parent_locking_script}},\n+                                                           /*submit=*/false)};\n+        CTransactionRef tx_grandparent = MakeTransactionRef(mtx_grandparent);\n+        package_ppfc.push_back(tx_grandparent);\n+\n+        const CAmount parent_fee{13223};\n+        const CAmount parent_value{10*COIN - 13223};\n+        auto mtx_parent1{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/0,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent1 = MakeTransactionRef(mtx_parent1);\n+        package_ppfc.push_back(tx_parent1);\n+        auto mtx_parent2{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/1,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent2 = MakeTransactionRef(mtx_parent2);\n+        package_ppfc.push_back(tx_parent2);\n+\n+\n+        const CAmount child_fee{2424};\n+        const CAmount child_value{last_value + 2*parent_value - child_fee};\n+        auto mtx_child{CreateValidMempoolTransaction(/*input_transactions=*/{tx_grandparent, tx_parent1, tx_parent2},\n+                                                     /*inputs=*/{COutPoint{tx_grandparent->GetHash(), 2}, COutPoint{tx_parent1->GetHash(), 0}, COutPoint{tx_parent2->GetHash(), 0}},\n+                                                     /*input_height=*/102,\n+                                                     /*input_signing_keys=*/{parent_key, child_key, grandchild_key},\n+                                                     /*outputs=*/{CTxOut{child_value, grandchild_locking_script}},\n+                                                     /*submit=*/false)};\n+        CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+        package_ppfc.push_back(tx_child);\n+\n+        // Magic Number Sanity Checks\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_grandparent), 5649);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent1), 191);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent2), 191);",
      "path": "src/test/txpackage_tests.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "in_reply_to_id": 1191628983,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "grandparent still not fixed size :facepalm: edited the assertion to be on the multiple of 10. I think it worked this time.",
      "created_at": "2023-05-24T17:59:27Z",
      "updated_at": "2023-05-24T17:59:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1204580821",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204580821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204581045",
      "pull_request_review_id": 1442479901,
      "id": 1204581045,
      "node_id": "PRRC_kwDOABII585HzHK1",
      "diff_hunk": "@@ -368,6 +545,100 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5649sat\n+        //        5649vB\n+        //     ^         ^\n+        //  parent1     parent2\n+        // 13223sat     13223sat",
      "path": "src/test/txpackage_tests.cpp",
      "position": null,
      "original_position": 364,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "in_reply_to_id": 1194150250,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed",
      "created_at": "2023-05-24T17:59:37Z",
      "updated_at": "2023-05-24T17:59:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1204581045",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204581045"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 559,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204729225",
      "pull_request_review_id": 1442702738,
      "id": 1204729225,
      "node_id": "PRRC_kwDOABII585HzrWJ",
      "diff_hunk": "@@ -368,6 +371,101 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5679sat\n+        //        5676vB\n+        //     ^    ^    ^\n+        //  parent1 |   parent2\n+        // 12000sat |  12000sat\n+        //  112vB   |   112vB\n+        //       ^  |  ^\n+        //        child\n+        //       2424sat\n+        //        959vB\n+        //\n+        // grandparent is below minfeerate\n+        // {grandparent + parent1} and {grandparent + parent2} are both below minfeerate\n+        // {grandparent + parent1 + parent2} is above minfeerate\n+        // child has a feerate just below minfeerate\n+        // {grandparent + parent1 + parent2 + child} is above minfeerate\n+        // All transactions should be rejected.\n+        const CAmount grandparent_fee{5679};\n+        std::vector<CTransactionRef> grandparent_input_txns;\n+        std::vector<COutPoint> grandparent_inputs;\n+        for (auto i{1}; i < 50; ++i) {\n+            grandparent_input_txns.push_back(m_coinbase_txns[i]);\n+            grandparent_inputs.push_back(COutPoint{m_coinbase_txns[i]->GetHash(), 0});\n+        }\n+        CAmount last_value = grandparent_inputs.size()*50*COIN - 10*COIN - 10*COIN - grandparent_fee;\n+        auto mtx_grandparent{CreateValidMempoolTransaction(/*input_transactions=*/grandparent_input_txns,\n+                                                           /*inputs=*/grandparent_inputs,\n+                                                           /*input_height=*/102,\n+                                                           /*input_signing_keys=*/{coinbaseKey},\n+                                                           /*outputs=*/{CTxOut{10*COIN, parent_locking_script}, CTxOut{10*COIN, parent_locking_script},\n+                                                                        CTxOut{last_value, parent_locking_script}},\n+                                                           /*submit=*/false)};\n+        CTransactionRef tx_grandparent = MakeTransactionRef(mtx_grandparent);\n+        package_ppfc.push_back(tx_grandparent);\n+\n+        const CAmount parent_fee{12000};\n+        const CAmount parent_value{10*COIN - parent_fee};\n+        auto mtx_parent1{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/0,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent1 = MakeTransactionRef(mtx_parent1);\n+        package_ppfc.push_back(tx_parent1);\n+        auto mtx_parent2{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/1,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent2 = MakeTransactionRef(mtx_parent2);\n+        package_ppfc.push_back(tx_parent2);\n+\n+\n+        const CAmount child_fee{minfeerate.GetFee(5676 + 121 + 121 + 227) - grandparent_fee - parent_fee - parent_fee};",
      "path": "src/test/txpackage_tests.cpp",
      "position": 437,
      "original_position": 98,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "7e25e002100f57d69a967f475eb484a8637d9dcb",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/121/112/ ?",
      "created_at": "2023-05-24T20:30:29Z",
      "updated_at": "2023-05-24T20:30:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1204729225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204729225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 608,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204739973",
      "pull_request_review_id": 1442719846,
      "id": 1204739973,
      "node_id": "PRRC_kwDOABII585Hzt-F",
      "diff_hunk": "@@ -368,6 +545,100 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5649sat\n+        //        5649vB\n+        //     ^         ^\n+        //  parent1     parent2\n+        // 13223sat     13223sat\n+        //  191vB       191vB\n+        //       ^      ^\n+        //        child\n+        //       2424sat\n+        //        485vB\n+        //\n+        // grandparent is below minfeerate\n+        // {grandparent + parent1} and {grandparent + parent2} are both below minfeerate\n+        // {grandparent + parent1 + parent2} is above minfeerate\n+        // child has a feerate just below minfeerate\n+        // {grandparent + parent1 + parent2 + child} is above minfeerate\n+        // All transactions should be rejected.\n+        const CAmount grandparent_fee{5650};\n+        std::vector<CTransactionRef> grandparent_input_txns;\n+        std::vector<COutPoint> grandparent_inputs;\n+        for (auto i{1}; i < 50; ++i) {\n+            grandparent_input_txns.push_back(m_coinbase_txns[i]);\n+            grandparent_inputs.push_back(COutPoint{m_coinbase_txns[i]->GetHash(), 0});\n+        }\n+        CAmount last_value = grandparent_inputs.size()*50*COIN - 10*COIN - 10*COIN - grandparent_fee;\n+        auto mtx_grandparent{CreateValidMempoolTransaction(/*input_transactions=*/grandparent_input_txns,\n+                                                           /*inputs=*/grandparent_inputs,\n+                                                           /*input_height=*/102,\n+                                                           /*input_signing_keys=*/{coinbaseKey},\n+                                                           /*outputs=*/{CTxOut{10*COIN, parent_locking_script}, CTxOut{10*COIN, parent_locking_script},\n+                                                                        CTxOut{last_value, parent_locking_script}},\n+                                                           /*submit=*/false)};\n+        CTransactionRef tx_grandparent = MakeTransactionRef(mtx_grandparent);\n+        package_ppfc.push_back(tx_grandparent);\n+\n+        const CAmount parent_fee{13223};\n+        const CAmount parent_value{10*COIN - 13223};\n+        auto mtx_parent1{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/0,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent1 = MakeTransactionRef(mtx_parent1);\n+        package_ppfc.push_back(tx_parent1);\n+        auto mtx_parent2{CreateValidMempoolTransaction(/*input_transaction=*/tx_grandparent, /*input_vout=*/1,\n+                                                       /*input_height=*/102,\n+                                                       /*input_signing_key=*/parent_key,\n+                                                       /*output_destination=*/child_locking_script,\n+                                                       /*output_amount=*/parent_value, /*submit=*/false)};\n+        CTransactionRef tx_parent2 = MakeTransactionRef(mtx_parent2);\n+        package_ppfc.push_back(tx_parent2);\n+\n+\n+        const CAmount child_fee{2424};\n+        const CAmount child_value{last_value + 2*parent_value - child_fee};\n+        auto mtx_child{CreateValidMempoolTransaction(/*input_transactions=*/{tx_grandparent, tx_parent1, tx_parent2},\n+                                                     /*inputs=*/{COutPoint{tx_grandparent->GetHash(), 2}, COutPoint{tx_parent1->GetHash(), 0}, COutPoint{tx_parent2->GetHash(), 0}},\n+                                                     /*input_height=*/102,\n+                                                     /*input_signing_keys=*/{parent_key, child_key, grandchild_key},\n+                                                     /*outputs=*/{CTxOut{child_value, grandchild_locking_script}},\n+                                                     /*submit=*/false)};\n+        CTransactionRef tx_child = MakeTransactionRef(mtx_child);\n+        package_ppfc.push_back(tx_child);\n+\n+        // Magic Number Sanity Checks\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_grandparent), 5649);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent1), 191);\n+        BOOST_CHECK_EQUAL(GetVirtualTransactionSize(*tx_parent2), 191);",
      "path": "src/test/txpackage_tests.cpp",
      "position": null,
      "original_position": 427,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "f4e449254e41172b09a41ed9b2cc5c5fe3a5edca",
      "in_reply_to_id": 1191628983,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "taproot coinbase outputs wen\r\n\r\nLGTM",
      "created_at": "2023-05-24T20:42:50Z",
      "updated_at": "2023-05-24T20:42:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1204739973",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204739973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 622,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204742880",
      "pull_request_review_id": 1442724105,
      "id": 1204742880,
      "node_id": "PRRC_kwDOABII585Hzurg",
      "diff_hunk": "@@ -368,6 +545,101 @@ BOOST_FIXTURE_TEST_CASE(package_submission_tests, TestChain100Setup)\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_parent->GetHash())));\n         BOOST_CHECK(m_node.mempool->exists(GenTxid::Txid(tx_child->GetHash())));\n     }\n+\n+    // do not allow parents to pay for children\n+    {\n+        Package package_ppfc;\n+        // Diamond shape:\n+        //\n+        //     grandparent\n+        //       5679sat",
      "path": "src/test/txpackage_tests.cpp",
      "position": 384,
      "original_position": 384,
      "commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "original_commit_id": "b234f993da3caa16f7716948fbcd16ab1a500180",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "diamond keeps going \"out of sync\", maybe just have variable names that people can find? ",
      "created_at": "2023-05-24T20:45:58Z",
      "updated_at": "2023-05-24T20:46:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/26711#discussion_r1204742880",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1204742880"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26711"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 555,
      "original_line": 555,
      "side": "RIGHT"
    }
  ]
}