{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176",
    "id": 376792262,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc2NzkyMjYy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18176",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18176.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18176.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18176",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18176/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e37f53648e3acc6aea75adafec4de2bdbd8cb293",
    "number": 18176,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "tests: Add fuzzing harness for CScript and CScriptNum operations",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add fuzzing harness for `CScript` and `CScriptNum` operations.\r\n\r\nTest this PR using:\r\n\r\n```\r\n$ make distclean\r\n$ ./autogen.sh\r\n$ CC=clang CXX=clang++ ./configure --enable-fuzz \\\r\n      --with-sanitizers=address,fuzzer,undefined\r\n$ make\r\n$ src/test/fuzz/script_ops\r\n…\r\n$ src/test/fuzz/scriptnum_ops\r\n…\r\n```",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-02-18T19:23:25Z",
    "updated_at": "2022-08-18T18:22:31Z",
    "closed_at": "2020-03-10T03:03:09Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-03-10T03:03:09Z",
    "merge_commit_sha": "6fb4bbfb0e5f1885bd8c4fea652facfbe3de5299",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "practicalswift:fuzzers-script_ops",
      "ref": "fuzzers-script_ops",
      "sha": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 78569642,
        "node_id": "MDEwOlJlcG9zaXRvcnk3ODU2OTY0Mg==",
        "name": "bitcoin",
        "full_name": "practicalswift/bitcoin",
        "owner": {
          "login": "practicalswift",
          "id": 7826565,
          "node_id": "MDQ6VXNlcjc4MjY1NjU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/practicalswift",
          "html_url": "https://github.com/practicalswift",
          "followers_url": "https://api.github.com/users/practicalswift/followers",
          "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
          "organizations_url": "https://api.github.com/users/practicalswift/orgs",
          "repos_url": "https://api.github.com/users/practicalswift/repos",
          "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/practicalswift/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/practicalswift/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/practicalswift/bitcoin",
        "archive_url": "https://api.github.com/repos/practicalswift/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/practicalswift/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/practicalswift/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/practicalswift/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/practicalswift/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/practicalswift/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/practicalswift/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/practicalswift/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/practicalswift/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/practicalswift/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/practicalswift/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/practicalswift/bitcoin/events",
        "forks_url": "https://api.github.com/repos/practicalswift/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/practicalswift/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/practicalswift/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/practicalswift/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/practicalswift/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/practicalswift/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/practicalswift/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/practicalswift/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/practicalswift/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/practicalswift/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/practicalswift/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/practicalswift/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/practicalswift/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/practicalswift/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/practicalswift/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:practicalswift/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/practicalswift/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/practicalswift/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/practicalswift/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/practicalswift/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/practicalswift/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/practicalswift/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/practicalswift/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/practicalswift/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/practicalswift/bitcoin/hooks",
        "svn_url": "https://github.com/practicalswift/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 164685,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2021-10-01T13:54:08Z",
        "created_at": "2017-01-10T20:09:24Z",
        "updated_at": "2022-08-28T15:39:12Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "ccb2c9e7891a53bdfcf4bbefd364fff1fb0cc30e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 239,
    "deletions": 3,
    "changed_files": 6,
    "commits": 4,
    "review_comments": 18,
    "comments": 6
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 3048511099,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0ODUxMTA5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3048511099",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T19:26:49Z"
    },
    {
      "event": "labeled",
      "id": 3048520023,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwNDg1MjAwMjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3048520023",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T19:29:24Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 3048520026,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwNDg1MjAwMjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3048520026",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T19:29:24Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "unlabeled",
      "id": 3048594858,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzA0ODU5NDg1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3048594858",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T19:51:42Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 587740372,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4Nzc0MDM3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587740372",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T19:51:48Z",
      "updated_at": "2020-02-18T19:51:48Z",
      "author_association": "MEMBER",
      "body": "ACK 0730ac98c61f895893d40cb0fdff4cd7339a11b0",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-587740372",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18176"
    },
    {
      "event": "commented",
      "id": 587882514,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4Nzg4MjUxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587882514",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-18T21:30:05Z",
      "updated_at": "2020-03-09T22:25:17Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-587882514",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18176"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3052370543,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA1MjM3MDU0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3052370543",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T16:21:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3052499740,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA1MjQ5OTc0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3052499740",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T16:51:03Z"
    },
    {
      "event": "renamed",
      "id": 3052504695,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzA1MjUwNDY5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3052504695",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T16:52:15Z",
      "rename": {
        "from": "tests: Add fuzzing harness for CScript operations",
        "to": "tests: Add fuzzing harness for CScript and CScriptNum operations"
      }
    },
    {
      "event": "commented",
      "id": 588323310,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODMyMzMxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588323310",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T16:52:58Z",
      "updated_at": "2020-02-19T16:52:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke Added `CScriptNum` fuzzer too. Moved common functions to `fuzz.h`. Please re-review :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-588323310",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18176"
    },
    {
      "event": "mentioned",
      "id": 3052507403,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzA1MjUwNzQwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3052507403",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T16:52:59Z"
    },
    {
      "event": "subscribed",
      "id": 3052507408,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMwNTI1MDc0MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3052507408",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T16:52:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3052512269,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA1MjUxMjI2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3052512269",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T16:54:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3075289971,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA3NTI4OTk3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3075289971",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-26T20:22:54Z"
    },
    {
      "event": "reviewed",
      "id": 370792112,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzkyMTEy",
      "url": null,
      "actor": null,
      "commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#pullrequestreview-370792112",
      "submitted_at": "2020-03-07T22:25:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3111535315,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExMTUzNTMxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3111535315",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T16:57:11Z"
    },
    {
      "event": "commented",
      "id": 596651902,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjY1MTkwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596651902",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T16:58:45Z",
      "updated_at": "2020-03-09T16:58:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke Thanks for reviewing. All feedback addressed. Please re-review :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-596651902",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18176"
    },
    {
      "event": "mentioned",
      "id": 3111542253,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzExMTU0MjI1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3111542253",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T16:58:45Z"
    },
    {
      "event": "subscribed",
      "id": 3111542260,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMTE1NDIyNjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3111542260",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T16:58:46Z"
    },
    {
      "event": "labeled",
      "id": 3112054247,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMTIwNTQyNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3112054247",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T19:14:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjdjNTBjYTFmNGVhZmVkNGJiOWEyMGQzMDEyNzc2NTQ1YTZhNDMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb7c50ca1f4eafed4bb9a20d3012776545a6a433",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eb7c50ca1f4eafed4bb9a20d3012776545a6a433",
      "tree": {
        "sha": "7f348c32720b22ca51c5ed0fa0ee809150513adb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f348c32720b22ca51c5ed0fa0ee809150513adb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5518eeec2727d40e1105901a8751bf584ab69402",
          "sha": "5518eeec2727d40e1105901a8751bf584ab69402",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5518eeec2727d40e1105901a8751bf584ab69402"
        }
      ],
      "message": "tests: Add common Consume* fuzzing functions",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-09T19:24:50Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-19T16:42:42Z"
      },
      "sha": "eb7c50ca1f4eafed4bb9a20d3012776545a6a433"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NWE1MmEwMDI0NzUwNTYxODNlYThlZTFhNDJiNzhhZWM3ZDY4NTgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65a52a002475056183ea8ee1a42b78aec7d68583",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/65a52a002475056183ea8ee1a42b78aec7d68583",
      "tree": {
        "sha": "4fca148892ecdc5ee13938794b621870ab344188",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4fca148892ecdc5ee13938794b621870ab344188"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb7c50ca1f4eafed4bb9a20d3012776545a6a433",
          "sha": "eb7c50ca1f4eafed4bb9a20d3012776545a6a433",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eb7c50ca1f4eafed4bb9a20d3012776545a6a433"
        }
      ],
      "message": "tests: Add fuzzing harness for CScript operations",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-09T19:24:50Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-18T16:41:16Z"
      },
      "sha": "65a52a002475056183ea8ee1a42b78aec7d68583"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3112087120,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExMjA4NzEyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3112087120",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T19:25:24Z"
    },
    {
      "event": "commented",
      "id": 596734966,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjczNDk2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596734966",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T19:25:28Z",
      "updated_at": "2020-03-09T19:25:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased again :)",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-596734966",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18176"
    },
    {
      "event": "reviewed",
      "id": 371492157,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDkyMTU3",
      "url": null,
      "actor": null,
      "commit_id": "4532649328ad5056f9ae2bf99f3aba2212bdc785",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK ad040fc2a503a0a5c7097dfe8aa6d341901436d9 👦\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK ad040fc2a503a0a5c7097dfe8aa6d341901436d9 👦\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUgKHwv+OE49ZDbtGMchMWXzOuFyxStj7biNTlNtYQH2AIBvgxPl2zZbczejRMMA\r\nxbUrKDh3SiE+mzPNyzOZ69XejxNGCTX1Kfel22F/XIwbKDw2kFv0v1F39pYyp4ZV\r\nj7/CLVpqZaWdgqcdFvE5tYCBcflm/6bU95TabNkv3yjsZ0XEy7WGaGJTRsgeMoQd\r\nwHIOc6kZerms8G04U/84PtHJBO4x0pU4zk2PRiEv9IcYYkAUFh1NDgIoJ+8MH9bt\r\nuuSjVmOzKmbuc5mrq8VFbvgeHJlIBWtjNP7Ux2OkvUCxGeUDoMOluO4MlME/tZVQ\r\nVJAQ6ZdOHSp032e5aOs9A9rwU+S6SlGxuoBlrjvK5vZm/nTwM8QXTU+hgza8hcdj\r\n7IWPhHIFiEExdYRd31q/aZ7kU4fpp9GaD4jXq+5hiAFso2jkWTxAIH3sdIn0ilKp\r\n+XxdLNNDSevd2KlCZK/DiwtTvU/Hp6WDPG9JW1YG0DS6jV1VeDmoacoN5M1hMYQz\r\n8kqbBKQP\r\n=dRzS\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `009db7b3b5d4284568143d3ed9fcbb2849ef578b5853b7f040cd0dd8c4f64f5f  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108009db7b3b5d4284568143d3ed9fcbb2849ef578b5853b7f040cd0dd8c4f64f5ff010c36e58d52ce3c1afd94fe280bb161dd508fff0103f889cb5929f47fa897cd8220128aa0608f1045e66a37ef0081583e78e12e255320083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff01077450a81f675adda98b8d4bba104017708f0206e35970c55c0c97562ab18da900546149ac7f86dd8a7ce6bb6d3ff5c5c09ebf408f12092c7fb1d5b9231866b391a8abc8e0dfc40cd58a8d35b933b0e673aa28384e73508f1045e66a37ef008feada6aa153c0d790083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010d08ef9479bde781353a5eb0e0fd8e04808f02095f8c63d354e74f0dd5bae0a7d9006b20daf0666a4446502ccf6b803d395835208f1045e66a37df0083931e9bd9b06dd750083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010fc5cfcfd5ebdb230277f2e2b52ab764f08f0204734a9168a13e464b52894b47b277f401d5728d986513c726f661c33a3865b2808f1045e66a37ef008bb40002122ee85d60083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#pullrequestreview-371492157",
      "submitted_at": "2020-03-09T20:14:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplN2RkYmQ5ODkzNzQxMmIyZThiN2EzZGZhY2RjYWNmY2JiMWQ5MTQ4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7ddbd98937412b2e8b7a3dfacdcacfcbb1d9148",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e7ddbd98937412b2e8b7a3dfacdcacfcbb1d9148",
      "tree": {
        "sha": "87deb25ddf0995be14324e56046279aff281144a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87deb25ddf0995be14324e56046279aff281144a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65a52a002475056183ea8ee1a42b78aec7d68583",
          "sha": "65a52a002475056183ea8ee1a42b78aec7d68583",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/65a52a002475056183ea8ee1a42b78aec7d68583"
        }
      ],
      "message": "tests: Add fuzzing harness for CScriptNum operations",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-09T20:39:48Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-19T15:18:13Z"
      },
      "sha": "e7ddbd98937412b2e8b7a3dfacdcacfcbb1d9148"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzdmNTM2NDhlM2FjYzZhZWE3NWFkYWZlYzRkZTJiZGJkOGNiMjkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "tree": {
        "sha": "3936b31a4ab111274c7e25971b956741738260f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3936b31a4ab111274c7e25971b956741738260f9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7ddbd98937412b2e8b7a3dfacdcacfcbb1d9148",
          "sha": "e7ddbd98937412b2e8b7a3dfacdcacfcbb1d9148",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e7ddbd98937412b2e8b7a3dfacdcacfcbb1d9148"
        }
      ],
      "message": "Make lifetime correctness easier to see (avoid reference lifetime extension)",
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-09T20:39:48Z"
      },
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-02-26T20:04:23Z"
      },
      "sha": "e37f53648e3acc6aea75adafec4de2bdbd8cb293"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3112326165,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzExMjMyNjE2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3112326165",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T20:40:02Z"
    },
    {
      "event": "unlabeled",
      "id": 3112445311,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzExMjQ0NTMxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3112445311",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-09T21:19:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 596876979,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5Njg3Njk3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/596876979",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-10T03:01:15Z",
      "updated_at": "2020-03-10T03:01:15Z",
      "author_association": "MEMBER",
      "body": "ACK e37f53648e3acc6aea75adafec4de2bdbd8cb293 🦂\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK e37f53648e3acc6aea75adafec4de2bdbd8cb293 🦂\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUiTxwv/fFqtr5Cy14W/HZr4I58Tpz3S86mobLUDaulSWhFpMz8b38ilBC5ltwIH\r\nrOznRDmgl46dP3YPMU07vCM2LS39DZyQH8uLTbECZw1aP5/x+XHb7me4aN/Ws1hB\r\ntvD5zKvFcFnw+wbmkStYqDMaNKH2vFOSJKhWckcRouaB+fwZLNMzps1CH7tqixVg\r\nYo6i/PfETRSK9FveNFzbhSvhpGozLuFkqr0p5XyVWG42DxyOfe61VJP+e5RtlUFb\r\nQUPiEZnm2UFgy3DFhPGw0y2Gz81kDvW5H3RD+nKxg2FmXeBuQlNpos/naAqq1pQ1\r\nWsNtbwzJw5mrvxWvtALFFzvkBOv1W7kjes987ojGLQscMCtb1N/ZTb81sUSRzkW/\r\nL5AkNgnyP8d6WFvzuztTgLt7ZxM/0hTJtIO3x1qC/VySZKR2Enhh/DrOACKQ8u0s\r\nx3uTHh0e4qcOMz/6gKlMO2Boq48EUmUTNOSNY/95XY+0A5J7c6v6NuFIvhHq8Jfj\r\n1N+3Xt0G\r\n=AMUq\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `de3f5a712c02cb66b6ad6e76c0ec5a38c880d09962e085e811ec889daf153c65  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108de3f5a712c02cb66b6ad6e76c0ec5a38c880d09962e085e811ec889daf153c65f010d9d202833a4a1814d76dd3f03fb99db808fff01045402923a1e9b81cfda7912eac985c2c08f1045e6702f1f0088618730ab64c0d8b0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0107d7f3303c7fa7f39a5488f64f6018d7f08f1045e6702f1f008bca925e1859d2e260083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff010ae6b3fd474696d658726103f6683455908f1045e6702f1f0088fb1663f816c98ba0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010ec523c2ef22bd5d5cdc61a7bb80bdc0908f1045e6702f1f0085515caa24d82d8550083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6d)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#issuecomment-596876979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18176"
    },
    {
      "event": "merged",
      "id": 3113081258,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzExMzA4MTI1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3113081258",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6fb4bbfb0e5f1885bd8c4fea652facfbe3de5299",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fb4bbfb0e5f1885bd8c4fea652facfbe3de5299",
      "created_at": "2020-03-10T03:03:09Z"
    },
    {
      "event": "closed",
      "id": 3113081271,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzExMzA4MTI3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3113081271",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-10T03:03:09Z"
    },
    {
      "event": "referenced",
      "id": 3117165302,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxMTcxNjUzMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3117165302",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "779929e7d8f828641ed0200d2f203e82db50e954",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/779929e7d8f828641ed0200d2f203e82db50e954",
      "created_at": "2020-03-11T03:14:21Z"
    },
    {
      "event": "referenced",
      "id": 3980859066,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5ODA4NTkwNjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980859066",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cdb0fd7821a5560f6e9605a938f5e6fb35383f42",
      "commit_url": "https://api.github.com/repos/syscoin-core/syscoin/commits/cdb0fd7821a5560f6e9605a938f5e6fb35383f42",
      "created_at": "2020-11-10T20:39:53Z"
    },
    {
      "event": "referenced",
      "id": 4223509194,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQyMjM1MDkxOTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4223509194",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "829a5e64a8f3ae277541c8c189215cc79589ddb3",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/829a5e64a8f3ae277541c8c189215cc79589ddb3",
      "created_at": "2021-01-19T16:39:27Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 4577819678,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0NTc3ODE5Njc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4577819678",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-04-10T19:40:04Z"
    },
    {
      "event": "referenced",
      "id": 6567231945,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGHcAHJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6567231945",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "99f7cb853715b2cf2063516f813ff6199723db72",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/99f7cb853715b2cf2063516f813ff6199723db72",
      "created_at": "2022-05-07T08:37:11Z"
    },
    {
      "event": "referenced",
      "id": 6567232474,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGHcAPa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6567232474",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d25b4b381fde8cb892a645d760dbf4a6f159b3aa",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/d25b4b381fde8cb892a645d760dbf4a6f159b3aa",
      "created_at": "2022-05-07T08:37:47Z"
    },
    {
      "event": "referenced",
      "id": 6801389422,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGVZPdu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6801389422",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d096c9e8d25403c4b1fd58da2aa015a450bd535e",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/d096c9e8d25403c4b1fd58da2aa015a450bd535e",
      "created_at": "2022-06-14T06:35:25Z"
    },
    {
      "event": "referenced",
      "id": 6801415986,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGVZV8y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6801415986",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d59f9122633331f90877cce4f9f03863683aa827",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/d59f9122633331f90877cce4f9f03863683aa827",
      "created_at": "2022-06-14T06:40:23Z"
    },
    {
      "event": "referenced",
      "id": 6833558187,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGXT9Kr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6833558187",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a28b3141f6be29467121b9af5cfe2efc264ea398",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a28b3141f6be29467121b9af5cfe2efc264ea398",
      "created_at": "2022-06-18T17:45:02Z"
    },
    {
      "event": "referenced",
      "id": 6924483163,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGcuzpb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6924483163",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ce5b149c6837f02acd9b53c09cc6c263beacf341",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/ce5b149c6837f02acd9b53c09cc6c263beacf341",
      "created_at": "2022-07-04T03:18:33Z"
    },
    {
      "event": "referenced",
      "id": 6925249149,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGcxup9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6925249149",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b6199c79fb5315dce19920a56f65dcdfd2963132",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/b6199c79fb5315dce19920a56f65dcdfd2963132",
      "created_at": "2022-07-04T06:38:29Z"
    },
    {
      "event": "referenced",
      "id": 6944316092,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGd6dq8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6944316092",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a1808aa93f0b30415facc80f1db19c0e2aa9b2fa",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/a1808aa93f0b30415facc80f1db19c0e2aa9b2fa",
      "created_at": "2022-07-06T16:31:10Z"
    },
    {
      "event": "referenced",
      "id": 6944411599,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGd60_P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6944411599",
      "actor": {
        "login": "kittywhiskers",
        "id": 63189531,
        "node_id": "MDQ6VXNlcjYzMTg5NTMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/63189531?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kittywhiskers",
        "html_url": "https://github.com/kittywhiskers",
        "followers_url": "https://api.github.com/users/kittywhiskers/followers",
        "following_url": "https://api.github.com/users/kittywhiskers/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kittywhiskers/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kittywhiskers/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kittywhiskers/subscriptions",
        "organizations_url": "https://api.github.com/users/kittywhiskers/orgs",
        "repos_url": "https://api.github.com/users/kittywhiskers/repos",
        "events_url": "https://api.github.com/users/kittywhiskers/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kittywhiskers/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f319ddbe85fb07269ae3a10348bf752e06c4dc34",
      "commit_url": "https://api.github.com/repos/kittywhiskers/dash/commits/f319ddbe85fb07269ae3a10348bf752e06c4dc34",
      "created_at": "2022-07-06T16:43:55Z"
    },
    {
      "event": "referenced",
      "id": 6979239684,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGf_r8E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6979239684",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "eefdae1a5312f4f54210a74f79de9013acea3d5c",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/eefdae1a5312f4f54210a74f79de9013acea3d5c",
      "created_at": "2022-07-12T16:32:56Z"
    },
    {
      "event": "referenced",
      "id": 7040821830,
      "node_id": "REFE_lADOABII584hzVohzwAAAAGjqmpG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7040821830",
      "actor": {
        "login": "knst",
        "id": 545784,
        "node_id": "MDQ6VXNlcjU0NTc4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/545784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knst",
        "html_url": "https://github.com/knst",
        "followers_url": "https://api.github.com/users/knst/followers",
        "following_url": "https://api.github.com/users/knst/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/knst/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/knst/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/knst/subscriptions",
        "organizations_url": "https://api.github.com/users/knst/orgs",
        "repos_url": "https://api.github.com/users/knst/repos",
        "events_url": "https://api.github.com/users/knst/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/knst/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0a9addaff7336796f664f2b53d2bf0b058dbc112",
      "commit_url": "https://api.github.com/repos/knst/dash/commits/0a9addaff7336796f664f2b53d2bf0b058dbc112",
      "created_at": "2022-07-21T19:10:29Z"
    },
    {
      "event": "locked",
      "id": 7216530166,
      "node_id": "LOE_lADOABII584hzVohzwAAAAGuI4L2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7216530166",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T18:22:31Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316359",
      "pull_request_review_id": 370792112,
      "id": 389316359,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjM1OQ==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can combine case 0 and 1?\r\n\r\n```cpp\r\nconst auto int = fuzzed_data_provider.ConsumeIntegral<int64_t>()\r\n(script_num == int) != (script_num != int)\r\n```",
      "created_at": "2020-03-07T22:19:08Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316389",
      "pull_request_review_id": 370792112,
      "id": 389316389,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjM4OQ==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here:\r\n\r\n```cpp\r\n(s_n < int) != (s_n >= int)",
      "created_at": "2020-03-07T22:19:59Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316389",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316417",
      "pull_request_review_id": 370792112,
      "id": 389316417,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjQxNw==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 5:\n+            (void)(script_num > fuzzed_data_provider.ConsumeIntegral<int64_t>());",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here:\r\n\r\n```cpp\r\n(s_n > int ) != (s_n <= int)",
      "created_at": "2020-03-07T22:20:24Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316417",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316417"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316438",
      "pull_request_review_id": 370792112,
      "id": 389316438,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjQzOA==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 5:\n+            (void)(script_num > fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 6:\n+            (void)(script_num == ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 7:\n+            (void)(script_num != ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 8:\n+            (void)(script_num <= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 9:\n+            (void)(script_num < ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 10:\n+            (void)(script_num >= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 11:\n+            (void)(script_num > ConsumeScriptNum(fuzzed_data_provider));",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same for all of these",
      "created_at": "2020-03-07T22:20:46Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316438",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316534",
      "pull_request_review_id": 370792112,
      "id": 389316534,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjUzNA==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 5:\n+            (void)(script_num > fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 6:\n+            (void)(script_num == ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 7:\n+            (void)(script_num != ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 8:\n+            (void)(script_num <= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 9:\n+            (void)(script_num < ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 10:\n+            (void)(script_num >= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 11:\n+            (void)(script_num > ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 12:\n+            script_num = script_num + fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 13:\n+            script_num = script_num - fuzzed_data_provider.ConsumeIntegral<int64_t>();",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could combine these?\r\n\r\n```cpp\r\n(script_num - int ) + int == script_num\r\n(script_num + int ) - int == script_num",
      "created_at": "2020-03-07T22:22:43Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316534",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316534"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316558",
      "pull_request_review_id": 370792112,
      "id": 389316558,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMxNjU1OA==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 5:\n+            (void)(script_num > fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 6:\n+            (void)(script_num == ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 7:\n+            (void)(script_num != ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 8:\n+            (void)(script_num <= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 9:\n+            (void)(script_num < ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 10:\n+            (void)(script_num >= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 11:\n+            (void)(script_num > ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 12:\n+            script_num = script_num + fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 13:\n+            script_num = script_num - fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 14:\n+            script_num = script_num + ConsumeScriptNum(fuzzed_data_provider);\n+            break;\n+        case 15:\n+            script_num = script_num - ConsumeScriptNum(fuzzed_data_provider);",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here and below?",
      "created_at": "2020-03-07T22:23:03Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389316558",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389316558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389825552",
      "pull_request_review_id": 371359017,
      "id": 389825552,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNTU1Mg==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": 389316359,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2020-03-09T16:57:17Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389825552",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389825552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389825611",
      "pull_request_review_id": 371359087,
      "id": 389825611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNTYxMQ==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 5:\n+            (void)(script_num > fuzzed_data_provider.ConsumeIntegral<int64_t>());",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": 389316417,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2020-03-09T16:57:23Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389825611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389825611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389825711",
      "pull_request_review_id": 371359181,
      "id": 389825711,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNTcxMQ==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 5:\n+            (void)(script_num > fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 6:\n+            (void)(script_num == ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 7:\n+            (void)(script_num != ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 8:\n+            (void)(script_num <= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 9:\n+            (void)(script_num < ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 10:\n+            (void)(script_num >= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 11:\n+            (void)(script_num > ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 12:\n+            script_num = script_num + fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 13:\n+            script_num = script_num - fuzzed_data_provider.ConsumeIntegral<int64_t>();",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": 389316534,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2020-03-09T16:57:30Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389825711",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389825711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389825897",
      "pull_request_review_id": 371359433,
      "id": 389825897,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNTg5Nw==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 5:\n+            (void)(script_num > fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 6:\n+            (void)(script_num == ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 7:\n+            (void)(script_num != ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 8:\n+            (void)(script_num <= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 9:\n+            (void)(script_num < ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 10:\n+            (void)(script_num >= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 11:\n+            (void)(script_num > ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 12:\n+            script_num = script_num + fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 13:\n+            script_num = script_num - fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 14:\n+            script_num = script_num + ConsumeScriptNum(fuzzed_data_provider);\n+            break;\n+        case 15:\n+            script_num = script_num - ConsumeScriptNum(fuzzed_data_provider);",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": 389316558,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2020-03-09T16:57:49Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389825897",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389825897"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389826034",
      "pull_request_review_id": 371359601,
      "id": 389826034,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNjAzNA==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": 389316389,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2020-03-09T16:58:01Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389826034",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389826034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389826191",
      "pull_request_review_id": 371359809,
      "id": 389826191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNjE5MQ==",
      "diff_hunk": "@@ -0,0 +1,149 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 26)) {\n+        case 0:\n+            (void)(script_num == fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 1:\n+            (void)(script_num != fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 2:\n+            (void)(script_num <= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 3:\n+            (void)(script_num < fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 4:\n+            (void)(script_num >= fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 5:\n+            (void)(script_num > fuzzed_data_provider.ConsumeIntegral<int64_t>());\n+            break;\n+        case 6:\n+            (void)(script_num == ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 7:\n+            (void)(script_num != ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 8:\n+            (void)(script_num <= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 9:\n+            (void)(script_num < ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 10:\n+            (void)(script_num >= ConsumeScriptNum(fuzzed_data_provider));\n+            break;\n+        case 11:\n+            (void)(script_num > ConsumeScriptNum(fuzzed_data_provider));",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "f137f64cde1c74237b9b2c5fcb0d9c88e50db60f",
      "in_reply_to_id": 389316438,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed!",
      "created_at": "2020-03-09T16:58:16Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389826191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389826191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389932248",
      "pull_request_review_id": 371492157,
      "id": 389932248,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzMjI0OA==",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 18)) {\n+        case 0: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num == i) != (script_num != i));\n+            break;\n+        }\n+        case 1: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num <= i) != script_num > i);\n+            break;\n+        }\n+        case 2: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num >= i) != (script_num < i));",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": 37,
      "original_position": 45,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "4532649328ad5056f9ae2bf99f3aba2212bdc785",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in commit 4532649328ad5056f9ae2bf99f3aba2212bdc785:\r\n\r\nAny reason those are separate cases for the fuzzer to find? They can all be executed in the same case:\r\n\r\n```cpp\r\n             assert((script_num == i) != (script_num != i));\r\n             assert((script_num <= i) != script_num > i);\r\n             assert((script_num >= i) != (script_num < i));",
      "created_at": "2020-03-09T20:08:12Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389932248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389932248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389932341",
      "pull_request_review_id": 371492157,
      "id": 389932341,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzMjM0MQ==",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 18)) {\n+        case 0: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num == i) != (script_num != i));\n+            break;\n+        }\n+        case 1: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num <= i) != script_num > i);\n+            break;\n+        }\n+        case 2: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num >= i) != (script_num < i));\n+            break;\n+        }\n+        case 3: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num == sn) != (script_num != sn));\n+            break;\n+        }\n+        case 4: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num <= sn) != (script_num > sn));\n+            break;\n+        }\n+        case 5: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num >= sn) != (script_num < sn));",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "4532649328ad5056f9ae2bf99f3aba2212bdc785",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here",
      "created_at": "2020-03-09T20:08:22Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389932341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389932341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389933947",
      "pull_request_review_id": 371492157,
      "id": 389933947,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzMzk0Nw==",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 18)) {\n+        case 0: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num == i) != (script_num != i));\n+            break;\n+        }\n+        case 1: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num <= i) != script_num > i);\n+            break;\n+        }\n+        case 2: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num >= i) != (script_num < i));\n+            break;\n+        }\n+        case 3: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num == sn) != (script_num != sn));\n+            break;\n+        }\n+        case 4: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num <= sn) != (script_num > sn));\n+            break;\n+        }\n+        case 5: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num >= sn) != (script_num < sn));\n+            break;\n+        }\n+        case 6: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            // Avoid signed integer overflow:\n+            // script/script.h:264:93: runtime error: signed integer overflow: -2261405121394637306 + -9223372036854775802 cannot be represented in type 'long'\n+            if (IsValidAddition(script_num, CScriptNum{i})) {\n+                assert((script_num + i) - i == script_num);\n+            }\n+            // Avoid signed integer overflow:\n+            // script/script.h:265:93: runtime error: signed integer overflow: 9223371895120855039 - -9223372036854710486 cannot be represented in type 'long'\n+            if (IsValidSubtraction(script_num, CScriptNum{i})) {\n+                assert((script_num - i) + i == script_num);\n+            }\n+            break;\n+        }\n+        case 7: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            // Avoid signed integer overflow:\n+            // script/script.h:264:93: runtime error: signed integer overflow: -9223126527765971126 + -9223372036854756825 cannot be represented in type 'long'\n+            if (IsValidAddition(script_num, sn)) {\n+                assert((script_num + sn) - sn == script_num);",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "4532649328ad5056f9ae2bf99f3aba2212bdc785",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same here",
      "created_at": "2020-03-09T20:11:26Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389933947",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389933947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389934739",
      "pull_request_review_id": 371492157,
      "id": 389934739,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzNDczOQ==",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 18)) {\n+        case 0: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num == i) != (script_num != i));\n+            break;\n+        }\n+        case 1: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num <= i) != script_num > i);\n+            break;\n+        }\n+        case 2: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num >= i) != (script_num < i));\n+            break;\n+        }\n+        case 3: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num == sn) != (script_num != sn));\n+            break;\n+        }\n+        case 4: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num <= sn) != (script_num > sn));\n+            break;\n+        }\n+        case 5: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num >= sn) != (script_num < sn));\n+            break;\n+        }\n+        case 6: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            // Avoid signed integer overflow:\n+            // script/script.h:264:93: runtime error: signed integer overflow: -2261405121394637306 + -9223372036854775802 cannot be represented in type 'long'\n+            if (IsValidAddition(script_num, CScriptNum{i})) {\n+                assert((script_num + i) - i == script_num);\n+            }\n+            // Avoid signed integer overflow:\n+            // script/script.h:265:93: runtime error: signed integer overflow: 9223371895120855039 - -9223372036854710486 cannot be represented in type 'long'\n+            if (IsValidSubtraction(script_num, CScriptNum{i})) {\n+                assert((script_num - i) + i == script_num);\n+            }\n+            break;\n+        }\n+        case 7: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            // Avoid signed integer overflow:\n+            // script/script.h:264:93: runtime error: signed integer overflow: -9223126527765971126 + -9223372036854756825 cannot be represented in type 'long'\n+            if (IsValidAddition(script_num, sn)) {\n+                assert((script_num + sn) - sn == script_num);\n+            }\n+            // Avoid signed integer overflow:\n+            // script/script.h:265:93: runtime error: signed integer overflow: 6052837899185946624 - -9223372036854775808 cannot be represented in type 'long'\n+            if (IsValidSubtraction(script_num, sn)) {\n+                assert((script_num - sn) + sn == script_num);\n+            }\n+            break;\n+        }\n+        case 8: {\n+            const CScriptNum random_script_num = ConsumeScriptNum(fuzzed_data_provider);\n+            if (!IsValidAddition(script_num, random_script_num)) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:292: CScriptNum &CScriptNum::operator+=(const int64_t &): Assertion `rhs == 0 || (rhs > 0 && m_value <= std::numeric_limits<int64_t>::max() - rhs) || (rhs < 0 && m_value >= std::numeric_limits<int64_t>::min() - rhs)' failed.\n+                break;\n+            }\n+            script_num += random_script_num;\n+            break;\n+        }\n+        case 9: {\n+            const CScriptNum random_script_num = ConsumeScriptNum(fuzzed_data_provider);\n+            if (!IsValidSubtraction(script_num, random_script_num)) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:300: CScriptNum &CScriptNum::operator-=(const int64_t &): Assertion `rhs == 0 || (rhs > 0 && m_value >= std::numeric_limits<int64_t>::min() + rhs) || (rhs < 0 && m_value <= std::numeric_limits<int64_t>::max() + rhs)' failed.\n+                break;\n+            }\n+            script_num -= random_script_num;\n+            break;\n+        }\n+        case 10:\n+            script_num = script_num & fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 11:\n+            script_num = script_num & ConsumeScriptNum(fuzzed_data_provider);\n+            break;\n+        case 12:\n+            script_num &= ConsumeScriptNum(fuzzed_data_provider);\n+            break;\n+        case 13:\n+            if (script_num == CScriptNum{std::numeric_limits<int64_t>::min()}) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:279: CScriptNum CScriptNum::operator-() const: Assertion `m_value != std::numeric_limits<int64_t>::min()' failed.\n+                break;\n+            }\n+            script_num = -script_num;\n+            break;\n+        case 14:\n+            script_num = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 15: {\n+            const int64_t random_integer = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            if (!IsValidAddition(script_num, CScriptNum{random_integer})) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:292: CScriptNum &CScriptNum::operator+=(const int64_t &): Assertion `rhs == 0 || (rhs > 0 && m_value <= std::numeric_limits<int64_t>::max() - rhs) || (rhs < 0 && m_value >= std::numeric_limits<int64_t>::min() - rhs)' failed.\n+                break;\n+            }\n+            script_num += random_integer;\n+            break;\n+        }\n+        case 16: {\n+            const int64_t random_integer = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            if (!IsValidSubtraction(script_num, CScriptNum{random_integer})) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:300: CScriptNum &CScriptNum::operator-=(const int64_t &): Assertion `rhs == 0 || (rhs > 0 && m_value >= std::numeric_limits<int64_t>::min() + rhs) || (rhs < 0 && m_value <= std::numeric_limits<int64_t>::max() + rhs)' failed.\n+                break;\n+            }\n+            script_num -= random_integer;\n+            break;\n+        }\n+        case 17:\n+            script_num &= fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 18: {\n+            // Avoid negation failure:\n+            // script/script.h:332:35: runtime error: negation of -9223372036854775808 cannot be represented in type 'int64_t' (aka 'long'); cast to an unsigned type to negate this value to itself\n+            if (script_num == CScriptNum{std::numeric_limits<int64_t>::min()}) {\n+                break;\n+            }\n+            (void)script_num.getvch();",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 160,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "4532649328ad5056f9ae2bf99f3aba2212bdc785",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also in commit 4532649:\r\n\r\nNo input is consumed from the fuzzer, so this doesn't need to be special cased and can be executed unconditionally?",
      "created_at": "2020-03-09T20:13:02Z",
      "updated_at": "2020-03-09T20:40:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389934739",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389934739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389948687",
      "pull_request_review_id": 371513106,
      "id": 389948687,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk0ODY4Nw==",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 18)) {\n+        case 0: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num == i) != (script_num != i));\n+            break;\n+        }\n+        case 1: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num <= i) != script_num > i);\n+            break;\n+        }\n+        case 2: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num >= i) != (script_num < i));",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": 37,
      "original_position": 45,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "4532649328ad5056f9ae2bf99f3aba2212bdc785",
      "in_reply_to_id": 389932248,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, of course. Now fixed. Thanks!",
      "created_at": "2020-03-09T20:40:36Z",
      "updated_at": "2020-03-09T20:40:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389948687",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389948687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 37,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389948796",
      "pull_request_review_id": 371513232,
      "id": 389948796,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk0ODc5Ng==",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cassert>\n+#include <cstdint>\n+#include <limits>\n+#include <vector>\n+\n+namespace {\n+bool IsValidAddition(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} - rhs) || (rhs < 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} - rhs);\n+}\n+\n+bool IsValidSubtraction(const CScriptNum& lhs, const CScriptNum& rhs)\n+{\n+    return rhs == 0 || (rhs > 0 && lhs >= CScriptNum{std::numeric_limits<int64_t>::min()} + rhs) || (rhs < 0 && lhs <= CScriptNum{std::numeric_limits<int64_t>::max()} + rhs);\n+}\n+} // namespace\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    CScriptNum script_num = ConsumeScriptNum(fuzzed_data_provider);\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\n+        switch (fuzzed_data_provider.ConsumeIntegralInRange(0, 18)) {\n+        case 0: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num == i) != (script_num != i));\n+            break;\n+        }\n+        case 1: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num <= i) != script_num > i);\n+            break;\n+        }\n+        case 2: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            assert((script_num >= i) != (script_num < i));\n+            break;\n+        }\n+        case 3: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num == sn) != (script_num != sn));\n+            break;\n+        }\n+        case 4: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num <= sn) != (script_num > sn));\n+            break;\n+        }\n+        case 5: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            assert((script_num >= sn) != (script_num < sn));\n+            break;\n+        }\n+        case 6: {\n+            const int64_t i = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            // Avoid signed integer overflow:\n+            // script/script.h:264:93: runtime error: signed integer overflow: -2261405121394637306 + -9223372036854775802 cannot be represented in type 'long'\n+            if (IsValidAddition(script_num, CScriptNum{i})) {\n+                assert((script_num + i) - i == script_num);\n+            }\n+            // Avoid signed integer overflow:\n+            // script/script.h:265:93: runtime error: signed integer overflow: 9223371895120855039 - -9223372036854710486 cannot be represented in type 'long'\n+            if (IsValidSubtraction(script_num, CScriptNum{i})) {\n+                assert((script_num - i) + i == script_num);\n+            }\n+            break;\n+        }\n+        case 7: {\n+            const CScriptNum sn = ConsumeScriptNum(fuzzed_data_provider);\n+            // Avoid signed integer overflow:\n+            // script/script.h:264:93: runtime error: signed integer overflow: -9223126527765971126 + -9223372036854756825 cannot be represented in type 'long'\n+            if (IsValidAddition(script_num, sn)) {\n+                assert((script_num + sn) - sn == script_num);\n+            }\n+            // Avoid signed integer overflow:\n+            // script/script.h:265:93: runtime error: signed integer overflow: 6052837899185946624 - -9223372036854775808 cannot be represented in type 'long'\n+            if (IsValidSubtraction(script_num, sn)) {\n+                assert((script_num - sn) + sn == script_num);\n+            }\n+            break;\n+        }\n+        case 8: {\n+            const CScriptNum random_script_num = ConsumeScriptNum(fuzzed_data_provider);\n+            if (!IsValidAddition(script_num, random_script_num)) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:292: CScriptNum &CScriptNum::operator+=(const int64_t &): Assertion `rhs == 0 || (rhs > 0 && m_value <= std::numeric_limits<int64_t>::max() - rhs) || (rhs < 0 && m_value >= std::numeric_limits<int64_t>::min() - rhs)' failed.\n+                break;\n+            }\n+            script_num += random_script_num;\n+            break;\n+        }\n+        case 9: {\n+            const CScriptNum random_script_num = ConsumeScriptNum(fuzzed_data_provider);\n+            if (!IsValidSubtraction(script_num, random_script_num)) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:300: CScriptNum &CScriptNum::operator-=(const int64_t &): Assertion `rhs == 0 || (rhs > 0 && m_value >= std::numeric_limits<int64_t>::min() + rhs) || (rhs < 0 && m_value <= std::numeric_limits<int64_t>::max() + rhs)' failed.\n+                break;\n+            }\n+            script_num -= random_script_num;\n+            break;\n+        }\n+        case 10:\n+            script_num = script_num & fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 11:\n+            script_num = script_num & ConsumeScriptNum(fuzzed_data_provider);\n+            break;\n+        case 12:\n+            script_num &= ConsumeScriptNum(fuzzed_data_provider);\n+            break;\n+        case 13:\n+            if (script_num == CScriptNum{std::numeric_limits<int64_t>::min()}) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:279: CScriptNum CScriptNum::operator-() const: Assertion `m_value != std::numeric_limits<int64_t>::min()' failed.\n+                break;\n+            }\n+            script_num = -script_num;\n+            break;\n+        case 14:\n+            script_num = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 15: {\n+            const int64_t random_integer = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            if (!IsValidAddition(script_num, CScriptNum{random_integer})) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:292: CScriptNum &CScriptNum::operator+=(const int64_t &): Assertion `rhs == 0 || (rhs > 0 && m_value <= std::numeric_limits<int64_t>::max() - rhs) || (rhs < 0 && m_value >= std::numeric_limits<int64_t>::min() - rhs)' failed.\n+                break;\n+            }\n+            script_num += random_integer;\n+            break;\n+        }\n+        case 16: {\n+            const int64_t random_integer = fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            if (!IsValidSubtraction(script_num, CScriptNum{random_integer})) {\n+                // Avoid assertion failure:\n+                // ./script/script.h:300: CScriptNum &CScriptNum::operator-=(const int64_t &): Assertion `rhs == 0 || (rhs > 0 && m_value >= std::numeric_limits<int64_t>::min() + rhs) || (rhs < 0 && m_value <= std::numeric_limits<int64_t>::max() + rhs)' failed.\n+                break;\n+            }\n+            script_num -= random_integer;\n+            break;\n+        }\n+        case 17:\n+            script_num &= fuzzed_data_provider.ConsumeIntegral<int64_t>();\n+            break;\n+        case 18: {\n+            // Avoid negation failure:\n+            // script/script.h:332:35: runtime error: negation of -9223372036854775808 cannot be represented in type 'int64_t' (aka 'long'); cast to an unsigned type to negate this value to itself\n+            if (script_num == CScriptNum{std::numeric_limits<int64_t>::min()}) {\n+                break;\n+            }\n+            (void)script_num.getvch();",
      "path": "src/test/fuzz/scriptnum_ops.cpp",
      "position": null,
      "original_position": 160,
      "commit_id": "e37f53648e3acc6aea75adafec4de2bdbd8cb293",
      "original_commit_id": "4532649328ad5056f9ae2bf99f3aba2212bdc785",
      "in_reply_to_id": 389934739,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "True! Fixed.",
      "created_at": "2020-03-09T20:40:47Z",
      "updated_at": "2020-03-09T20:40:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18176#discussion_r389948796",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389948796"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18176"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 160,
      "side": "RIGHT"
    }
  ]
}