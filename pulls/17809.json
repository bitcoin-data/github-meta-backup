{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809",
    "id": 357335959,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzU3MzM1OTU5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17809",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/17809.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/17809.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa6b061fc118995eec41766519a11bc0dd1a901d",
    "number": 17809,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "rpc: Auto-format RPCResult",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This enforces most syntax rules of the RPCResult at compile time (or some at run time during unit and functional tests)\r\n\r\nApart from normalizing the syntax, by separating stylistic formatting from the structure, we could in theory directly generate the html for e.g. https://bitcoincore.org/en/doc/0.19.0/rpc/wallet/importmulti/",
    "labels": [
      {
        "id": 148216,
        "node_id": "MDU6TGFiZWwxNDgyMTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
        "name": "Docs",
        "color": "02d7e1",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-12-27T21:43:38Z",
    "updated_at": "2022-02-15T10:58:15Z",
    "closed_at": "2020-03-04T13:18:30Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-03-04T13:18:30Z",
    "merge_commit_sha": "a71c34742c24245a0d642e68f9e61f46cc7573fb",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:1906-rpcResult",
      "ref": "1906-rpcResult",
      "sha": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 205775,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:17Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "31c0006a6cd5ecbabd119eaf9dae6978aa54f150",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 1515,
    "deletions": 1248,
    "changed_files": 11,
    "commits": 2,
    "review_comments": 35,
    "comments": 12
  },
  "events": [
    {
      "event": "labeled",
      "id": 2911385449,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5MTEzODU0NDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2911385449",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-27T21:44:14Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 2911385626,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5MTEzODU2MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2911385626",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-27T21:44:24Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "commented",
      "id": 569351073,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTM1MTA3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569351073",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-27T21:44:27Z",
      "updated_at": "2019-12-27T21:44:27Z",
      "author_association": "MEMBER",
      "body": "Currently based on #17804, will squash after that was merged",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-569351073",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "commented",
      "id": 569356973,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTM1Njk3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569356973",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-27T22:28:16Z",
      "updated_at": "2020-03-04T10:07:34Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18164 (rpc: generalize address in decoderawtransaction RPCResult by theStack)\n* #17812 (config, net, test: asmap feature refinements and functional tests by jonatack)\n* #17034 (Bip174 extensions by achow101)\n* #16807 (Let validateaddress locate error in Bech32 address by meshcollider)\n* #16795 (rpc: have raw transaction decoding infer output descriptors by instagibbs)\n* #16490 (rpc: Report reason for replaceable txpool transactions by MarcoFalke)\n* #16463 ([BIP 174] Implement serialization support for GLOBAL_XPUB field. by achow101)\n* #16440 (BIP-322: Generic signed message format by kallewoof)\n* #12911 (wallet: Show fee in results for signrawtransaction* for segwit inputs by kallewoof)\n* #12677 (RPC: Add ancestor{count,size,fees} to listunspent output by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-569356973",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "commented",
      "id": 569357466,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU2OTM1NzQ2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/569357466",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-12-27T22:32:51Z",
      "updated_at": "2019-12-27T22:32:51Z",
      "author_association": "MEMBER",
      "body": "Concept ACK 👏 ",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-569357466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "reviewed",
      "id": 336910381,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM2OTEwMzgx",
      "url": null,
      "actor": null,
      "commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "This is a heroic PR. I left some comments but I didn't finish going through all the code. I'll take a look again after the comments are responded to - I don't want to provide bad comments and I'll calibrate based on how these are received.\r\n\r\nHowever, concept ACK. This is awesome.",
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#pullrequestreview-336910381",
      "submitted_at": "2019-12-28T10:50:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2918097369,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkxODA5NzM2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2918097369",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-02T16:05:00Z"
    },
    {
      "event": "commented",
      "id": 570947786,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDk0Nzc4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/570947786",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-05T21:07:32Z",
      "updated_at": "2020-01-05T21:07:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK. Great to see progress on the RPC output as well..",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-570947786",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "labeled",
      "id": 2929419904,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5Mjk0MTk5MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2929419904",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-07T23:42:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2935692279,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjkzNTY5MjI3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2935692279",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-09T16:51:03Z"
    },
    {
      "event": "unlabeled",
      "id": 2935760648,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjkzNTc2MDY0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2935760648",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-09T17:11:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 578264760,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI2NDc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578264760",
      "actor": {
        "login": "emilengler",
        "id": 12272949,
        "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emilengler",
        "html_url": "https://github.com/emilengler",
        "followers_url": "https://api.github.com/users/emilengler/followers",
        "following_url": "https://api.github.com/users/emilengler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/emilengler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/emilengler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
        "organizations_url": "https://api.github.com/users/emilengler/orgs",
        "repos_url": "https://api.github.com/users/emilengler/repos",
        "events_url": "https://api.github.com/users/emilengler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/emilengler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-24T19:20:52Z",
      "updated_at": "2020-01-24T19:20:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "emilengler",
        "id": 12272949,
        "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emilengler",
        "html_url": "https://github.com/emilengler",
        "followers_url": "https://api.github.com/users/emilengler/followers",
        "following_url": "https://api.github.com/users/emilengler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/emilengler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/emilengler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
        "organizations_url": "https://api.github.com/users/emilengler/orgs",
        "repos_url": "https://api.github.com/users/emilengler/repos",
        "events_url": "https://api.github.com/users/emilengler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/emilengler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-578264760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "commented",
      "id": 578266251,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODI2NjI1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578266251",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-24T19:24:49Z",
      "updated_at": "2020-02-09T14:16:26Z",
      "author_association": "MEMBER",
      "body": "Please review #18098 first",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-578266251",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "reviewed",
      "id": 348172718,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MTcyNzE4",
      "url": null,
      "actor": null,
      "commit_id": "37fc4d6d3025c3cc0bd32fc655eb0a36d929ac75",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "emilengler",
        "id": 12272949,
        "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emilengler",
        "html_url": "https://github.com/emilengler",
        "followers_url": "https://api.github.com/users/emilengler/followers",
        "following_url": "https://api.github.com/users/emilengler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/emilengler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/emilengler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
        "organizations_url": "https://api.github.com/users/emilengler/orgs",
        "repos_url": "https://api.github.com/users/emilengler/repos",
        "events_url": "https://api.github.com/users/emilengler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/emilengler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#pullrequestreview-348172718",
      "submitted_at": "2020-01-24T19:24:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
    },
    {
      "event": "commented",
      "id": 578396639,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU3ODM5NjYzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/578396639",
      "actor": {
        "login": "emilengler",
        "id": 12272949,
        "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emilengler",
        "html_url": "https://github.com/emilengler",
        "followers_url": "https://api.github.com/users/emilengler/followers",
        "following_url": "https://api.github.com/users/emilengler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/emilengler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/emilengler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
        "organizations_url": "https://api.github.com/users/emilengler/orgs",
        "repos_url": "https://api.github.com/users/emilengler/repos",
        "events_url": "https://api.github.com/users/emilengler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/emilengler/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-25T10:57:01Z",
      "updated_at": "2020-01-25T10:57:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "I just ran #17804 and this PR on:\r\n```\r\nclang version 7.0.1-8 (tags/RELEASE_701/final)\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\n```\r\nThe base PR worked fine, however this PR gave me more than 20 errors.\r\nI post the error log here:\r\nhttps://pastebin.com/G5G6fNMJ",
      "user": {
        "login": "emilengler",
        "id": 12272949,
        "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emilengler",
        "html_url": "https://github.com/emilengler",
        "followers_url": "https://api.github.com/users/emilengler/followers",
        "following_url": "https://api.github.com/users/emilengler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/emilengler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/emilengler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
        "organizations_url": "https://api.github.com/users/emilengler/orgs",
        "repos_url": "https://api.github.com/users/emilengler/repos",
        "events_url": "https://api.github.com/users/emilengler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/emilengler/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-578396639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "labeled",
      "id": 2989489011,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI5ODk0ODkwMTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2989489011",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-29T13:27:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 580770734,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDc3MDczNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580770734",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-01-31T15:06:57Z",
      "updated_at": "2020-01-31T15:06:57Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-580770734",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "commented",
      "id": 583298498,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzI5ODQ5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583298498",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-07T09:07:17Z",
      "updated_at": "2020-02-07T09:07:17Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-583298498",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3020589494,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAyMDU4OTQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3020589494",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-09T13:22:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3020601487,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAyMDYwMTQ4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3020601487",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-09T13:41:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3020642419,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzAyMDY0MjQxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3020642419",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-09T14:49:11Z"
    },
    {
      "event": "unlabeled",
      "id": 3020660414,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzAyMDY2MDQxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3020660414",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-09T15:17:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 586259909,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjI1OTkwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/586259909",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-14T12:02:38Z",
      "updated_at": "2020-02-14T12:02:38Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, will review #18098 first.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-586259909",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "reviewed",
      "id": 358903036,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4OTAzMDM2",
      "url": null,
      "actor": null,
      "commit_id": "848fbb77c5bdfcd78ea1dccc8fade6284192321a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK a6db5efce95262671edba832eb2f8f2c95761b3c\r\n\r\nA handy incantation that prints all RPC docs in a row (except the hidden ones):\r\n\r\n```\r\nsrc/bitcoin-cli help | grep -Eo '^[^ ]+' | grep -v \"=\" |  while read -r line ; do `echo src/bitcoin-cli help $line`; echo \"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"; done\r\n```\r\n\r\nPut that output in `before.txt` and `after.txt` and compare using `vimdiff before.txt after.txt -c 'set diffopt+=iwhite'` (install via Homebrew on macOS Catalina), and enjoy pretty diff:\r\n\r\n<img width=\"994\" alt=\"Schermafbeelding 2020-02-14 om 14 02 48\" src=\"https://user-images.githubusercontent.com/10217/74533868-e0669600-4f32-11ea-9799-98c3d57bc73c.png\">\r\n\r\nI did not use a toothcomb while looking through that diff; smaller mistakes can be fixed in followups, or appended commits, imo.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#pullrequestreview-358903036",
      "submitted_at": "2020-02-14T13:18:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3042068863,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA0MjA2ODg2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3042068863",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-17T01:59:30Z"
    },
    {
      "event": "labeled",
      "id": 3069028086,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMwNjkwMjgwODY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3069028086",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T11:18:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTdkMDUwM2QzMjA5MDBlMTRjNGQ5YmMwMTZkNjVjNzQzMTA3MGJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7d0503d320900e14c4d9bc016d65c7431070bb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7d0503d320900e14c4d9bc016d65c7431070bb",
      "tree": {
        "sha": "08f4ed35f020ec4c75085e8b8bd0aa064957d21d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08f4ed35f020ec4c75085e8b8bd0aa064957d21d"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 08f4ed35f020ec4c75085e8b8bd0aa064957d21d\nparent 31c0006a6cd5ecbabd119eaf9dae6978aa54f150\nauthor MarcoFalke <falke.marco@gmail.com> 1577305619 +0700\ncommitter MarcoFalke <falke.marco@gmail.com> 1582644781 +0700\n\nrpc: Move OuterType enum to header\n\nThis is needed so that it can be used by RPCResult\n\nAlso,\n* rename NAMED_ARG to NONE for generalization.\n* change RPCArg constructors to initialize the members by moving values\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjAuAv+MipCrjkRlCTRv4RMvr0BuzJYmhX8AzIZYSylG3Iu7mx26BG7y8vjxg5D\ndPBCiHRkfKlmTKTz80dJYfg1lbpPBlkJnQbpi3FQ2paVUePHryyvy4h1JeePaCvR\nyMfbfcOTn3P2EJIR+V4QKoOA3Jw94FvDYlpOy1P1fOjCmjRNray/spVKaPkxaaxT\nR9fdOTX7UZcr5M/PYW9c3/EkEuDvRtePMiCzc2vJglTI8tNVLT8qVAgbZ5ezskxm\nk0ctN/1kV2WoTrGfvoFp8mb1T97mTJLcTAkN6BsQ4vQLU5hA2ma6Qslmz9E562qM\n+5HEADULlIVfl1geIPaPDv/3RJq5JG6TsG2fShKyXmPB0QhOffR3zZXa6lnhSyeX\nX7ewhPP+KGksr/74NVtFBFEjGr0oUkKNXv04YLb//kz6T69UIYWFkb+1jLlhaoIY\nRkyAMdr1nx0YrsEJwgSpsBhpjLRssq2/dA/cHiHKqwgC1D3XVXVff1gkv3Ext8gR\nXWa20rYG\n=+8/L\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31c0006a6cd5ecbabd119eaf9dae6978aa54f150",
          "sha": "31c0006a6cd5ecbabd119eaf9dae6978aa54f150",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/31c0006a6cd5ecbabd119eaf9dae6978aa54f150"
        }
      ],
      "message": "rpc: Move OuterType enum to header\n\nThis is needed so that it can be used by RPCResult\n\nAlso,\n* rename NAMED_ARG to NONE for generalization.\n* change RPCArg constructors to initialize the members by moving values",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-25T15:33:01Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-25T20:26:59Z"
      },
      "sha": "fa7d0503d320900e14c4d9bc016d65c7431070bb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTZiMDYxZmMxMTg5OTVlZWM0MTc2NjUxOWExMWJjMGRkMWE5MDFk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6b061fc118995eec41766519a11bc0dd1a901d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6b061fc118995eec41766519a11bc0dd1a901d",
      "tree": {
        "sha": "751a1f2e3d33f20775b6deb1da15657346b19047",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/751a1f2e3d33f20775b6deb1da15657346b19047"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 751a1f2e3d33f20775b6deb1da15657346b19047\nparent fa7d0503d320900e14c4d9bc016d65c7431070bb\nauthor MarcoFalke <falke.marco@gmail.com> 1578589257 +0700\ncommitter MarcoFalke <falke.marco@gmail.com> 1582644958 +0700\n\nrpc: Auto-format RPCResult\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj4iQwAm7ow54D9h/Hu7AtVT+N2DHsI0L5KKTxhuXFZ2AT/cCJghi3qbytI1rom\n62EDw6/Ev2cpahZ374kaUnlxk72bqUMJFae35SKOO2mYiVWoo3urolGSiO/qxLS1\nyQ+0D9fTzNuhPEnd4Hvr8CnD6+p98giW5CA7CxkoVG0Tvz9BOu5Ocvhzvq1zSJoq\nXcvmTEGr/kG0susysAXkEtJQb2U0GBox6LOrUiMZKXKhYdS2Nl8zstaJIht7QFIx\n01B2uLtFXlZ+Byw3P6F1dg9dDJMQL+sGYH52P/TQLdTPTZTZkrycnf6pKMuruEFo\n10n9ujRNmI435Nv2IvKuCEMSECIbgIUkaAvyd+Xt0YvvIM6jvghfDz10lFBPSAQi\nrc1Ln9uyM/K5TANCy6qqi7H5LGLDypKK8+Wj4TH0s8h/p23nZbddwX/IFk0XnRo1\nnR+ewP0pneFoKS/rFx8SUkaup52gjritMod17ASEYICY++qs6G+jJ2AfLDaCXRRE\npbhYxQpV\n=fhQK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7d0503d320900e14c4d9bc016d65c7431070bb",
          "sha": "fa7d0503d320900e14c4d9bc016d65c7431070bb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7d0503d320900e14c4d9bc016d65c7431070bb"
        }
      ],
      "message": "rpc: Auto-format RPCResult",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-02-25T15:35:58Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-09T17:00:57Z"
      },
      "sha": "fa6b061fc118995eec41766519a11bc0dd1a901d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3069961269,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzA2OTk2MTI2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3069961269",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T15:37:46Z"
    },
    {
      "event": "commented",
      "id": 590933519,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDkzMzUxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/590933519",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T15:46:25Z",
      "updated_at": "2020-02-25T15:46:25Z",
      "author_association": "MEMBER",
      "body": "Rebased due to trivial conflict in the includes. Should be easy to re-ACK",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-590933519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "unlabeled",
      "id": 3070352084,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MzA3MDM1MjA4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3070352084",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T17:32:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 591026878,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5MTAyNjg3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/591026878",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-25T19:29:29Z",
      "updated_at": "2020-02-25T19:29:29Z",
      "author_association": "MEMBER",
      "body": "Indeed, re-ACK fa6b061fc118995eec41766519a11bc0dd1a901d",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#issuecomment-591026878",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17809"
    },
    {
      "event": "added_to_project",
      "id": 3079124104,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQzMDc5MTI0MTA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3079124104",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-27T19:12:07Z",
      "project_card": {
        "id": 33779180,
        "url": "https://api.github.com/projects/columns/cards/33779180",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 367073199,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDczMTk5",
      "url": null,
      "actor": null,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#pullrequestreview-367073199",
      "submitted_at": "2020-03-02T09:59:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
    },
    {
      "event": "reviewed",
      "id": 367078939,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDc4OTM5",
      "url": null,
      "actor": null,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#pullrequestreview-367078939",
      "submitted_at": "2020-03-02T10:08:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
    },
    {
      "event": "reviewed",
      "id": 367082346,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDgyMzQ2",
      "url": null,
      "actor": null,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fa6b061fc118995eec41766519a11bc0dd1a901d -- skimmed code changes and differences to rpc help output",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#pullrequestreview-367082346",
      "submitted_at": "2020-03-02T10:13:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
    },
    {
      "event": "merged",
      "id": 3096453115,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzA5NjQ1MzExNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3096453115",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a71c34742c24245a0d642e68f9e61f46cc7573fb",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a71c34742c24245a0d642e68f9e61f46cc7573fb",
      "created_at": "2020-03-04T13:18:30Z"
    },
    {
      "event": "closed",
      "id": 3096453140,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzA5NjQ1MzE0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3096453140",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T13:18:30Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 3096455445,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQzMDk2NDU1NDQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3096455445",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T13:19:04Z"
    },
    {
      "event": "removed_from_project",
      "id": 3096457060,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MzA5NjQ1NzA2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3096457060",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-04T13:19:30Z",
      "project_card": {
        "id": 33779180,
        "url": "https://api.github.com/projects/columns/cards/33779180",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "referenced",
      "id": 3102573948,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxMDI1NzM5NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3102573948",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "bb71c12bbdaecb3d038e98c8c39f907707bbfcaf",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/bb71c12bbdaecb3d038e98c8c39f907707bbfcaf",
      "created_at": "2020-03-05T19:23:55Z"
    },
    {
      "event": "referenced",
      "id": 3126419095,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxMjY0MTkwOTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3126419095",
      "actor": {
        "login": "domob1812",
        "id": 4943644,
        "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domob1812",
        "html_url": "https://github.com/domob1812",
        "followers_url": "https://api.github.com/users/domob1812/followers",
        "following_url": "https://api.github.com/users/domob1812/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domob1812/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domob1812/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
        "organizations_url": "https://api.github.com/users/domob1812/orgs",
        "repos_url": "https://api.github.com/users/domob1812/repos",
        "events_url": "https://api.github.com/users/domob1812/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domob1812/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fea9d3cd5239261dd5ae69df8d5ed91fbf96ad70",
      "commit_url": "https://api.github.com/repos/domob1812/namecoin-core/commits/fea9d3cd5239261dd5ae69df8d5ed91fbf96ad70",
      "created_at": "2020-03-13T11:43:34Z"
    },
    {
      "event": "referenced",
      "id": 3126419184,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxMjY0MTkxODQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3126419184",
      "actor": {
        "login": "domob1812",
        "id": 4943644,
        "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domob1812",
        "html_url": "https://github.com/domob1812",
        "followers_url": "https://api.github.com/users/domob1812/followers",
        "following_url": "https://api.github.com/users/domob1812/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domob1812/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domob1812/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
        "organizations_url": "https://api.github.com/users/domob1812/orgs",
        "repos_url": "https://api.github.com/users/domob1812/repos",
        "events_url": "https://api.github.com/users/domob1812/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domob1812/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c667dc1b052da1fcaeababaafe9846cca1118973",
      "commit_url": "https://api.github.com/repos/domob1812/namecoin-core/commits/c667dc1b052da1fcaeababaafe9846cca1118973",
      "created_at": "2020-03-13T11:43:35Z"
    },
    {
      "event": "referenced",
      "id": 3127002640,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxMjcwMDI2NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3127002640",
      "actor": {
        "login": "domob1812",
        "id": 4943644,
        "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domob1812",
        "html_url": "https://github.com/domob1812",
        "followers_url": "https://api.github.com/users/domob1812/followers",
        "following_url": "https://api.github.com/users/domob1812/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domob1812/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domob1812/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
        "organizations_url": "https://api.github.com/users/domob1812/orgs",
        "repos_url": "https://api.github.com/users/domob1812/repos",
        "events_url": "https://api.github.com/users/domob1812/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domob1812/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "080a36336dbc568458c7497b0e35b962475cf289",
      "commit_url": "https://api.github.com/repos/xaya/xaya/commits/080a36336dbc568458c7497b0e35b962475cf289",
      "created_at": "2020-03-13T14:42:56Z"
    },
    {
      "event": "referenced",
      "id": 3921416082,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MjE0MTYwODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3921416082",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "36af7ba9105ce690c6e062399ede8cef6df16328",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/36af7ba9105ce690c6e062399ede8cef6df16328",
      "created_at": "2020-10-26T15:40:45Z"
    },
    {
      "event": "referenced",
      "id": 3925764773,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5MjU3NjQ3NzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3925764773",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "119798507329607e2d41c5367047961a21406279",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/119798507329607e2d41c5367047961a21406279",
      "created_at": "2020-10-27T12:56:40Z"
    },
    {
      "event": "referenced",
      "id": 3980858969,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM5ODA4NTg5Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980858969",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "91bda62ece69d010cde97840bc32844b8dbf9110",
      "commit_url": "https://api.github.com/repos/syscoin-core/syscoin/commits/91bda62ece69d010cde97840bc32844b8dbf9110",
      "created_at": "2020-11-10T20:39:52Z"
    },
    {
      "event": "referenced",
      "id": 4596011264,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ1OTYwMTEyNjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4596011264",
      "actor": {
        "login": "ftrader",
        "id": 16613123,
        "node_id": "MDQ6VXNlcjE2NjEzMTIz",
        "avatar_url": "https://avatars.githubusercontent.com/u/16613123?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ftrader",
        "html_url": "https://github.com/ftrader",
        "followers_url": "https://api.github.com/users/ftrader/followers",
        "following_url": "https://api.github.com/users/ftrader/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ftrader/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ftrader/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ftrader/subscriptions",
        "organizations_url": "https://api.github.com/users/ftrader/orgs",
        "repos_url": "https://api.github.com/users/ftrader/repos",
        "events_url": "https://api.github.com/users/ftrader/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ftrader/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3c10dd6534d91d72a8a76c327414aa7399aa50c6",
      "commit_url": "https://api.github.com/repos/bitcoin-cash-node/bitcoin-cash-node/commits/3c10dd6534d91d72a8a76c327414aa7399aa50c6",
      "created_at": "2021-04-14T21:50:44Z"
    },
    {
      "event": "locked",
      "id": 6073973849,
      "node_id": "LOE_lADOABII584gXYK3zwAAAAFqCXxZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073973849",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:58:15Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788162",
      "pull_request_review_id": 336910381,
      "id": 361788162,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4ODE2Mg==",
      "diff_hunk": "@@ -843,8 +845,8 @@ static UniValue sendmany(const JSONRPCRequest& request)\n             \"       \\\"CONSERVATIVE\\\"\"},\n                 },\n                  RPCResult{\n-            \"\\\"txid\\\"                   (string) The transaction id for the send. Only 1 transaction is created regardless of \\n\"\n-            \"                                    the number of addresses.\\n\"\n+                     RPCResult::Type::STR, \"txid\", \"The transaction id for the send. Only 1 transaction is created regardless of\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can this be of type HEX_STR? \r\n\r\nI'm still new to Bitcoin, my current understanding is that transactions are represented in hex. ",
      "created_at": "2019-12-28T10:21:36Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361788162",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 848,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788211",
      "pull_request_review_id": 336910381,
      "id": 361788211,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4ODIxMQ==",
      "diff_hunk": "@@ -967,10 +969,11 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n                     {\"address_type\", RPCArg::Type::STR, /* default */ \"set by -addresstype\", \"The address type to use. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\".\"},\n                 },\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"address\\\":\\\"multisigaddress\\\",    (string) The value of the new multisig address.\\n\"\n-            \"  \\\"redeemScript\\\":\\\"script\\\"         (string) The string value of the hex-encoded redemption script.\\n\"\n-            \"}\\n\"\n+                    RPCResult::Type::OBJ, \"\", \"\",",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 121,
      "original_position": 120,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It might be worthwhile to add a constructor where these two empty strings aren't needed. It's quite confusing as a reader to see these everywhere.",
      "created_at": "2019-12-28T10:23:13Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361788211",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788211"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 974,
      "original_line": 974,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788248",
      "pull_request_review_id": 336910381,
      "id": 361788248,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4ODI0OA==",
      "diff_hunk": "@@ -967,10 +969,11 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n                     {\"address_type\", RPCArg::Type::STR, /* default */ \"set by -addresstype\", \"The address type to use. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\".\"},\n                 },\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"address\\\":\\\"multisigaddress\\\",    (string) The value of the new multisig address.\\n\"\n-            \"  \\\"redeemScript\\\":\\\"script\\\"         (string) The string value of the hex-encoded redemption script.\\n\"\n-            \"}\\n\"\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR, \"address\", \"The value of the new multisig address\"},\n+                        {RPCResult::Type::STR, \"redeemScript\", \"The string value of the hex-encoded redemption script\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can this be of type HEX_STR? The comment/description mentions `hex-econded`",
      "created_at": "2019-12-28T10:23:46Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361788248",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 975,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788361",
      "pull_request_review_id": 336910381,
      "id": 361788361,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4ODM2MQ==",
      "diff_hunk": "@@ -1195,20 +1198,21 @@ static UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n                     {\"address_filter\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If present, only return information on this address.\"},\n                 },\n                 RPCResult{\n-            \"[\\n\"\n-            \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\" : true,        (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n-            \"    \\\"address\\\" : \\\"receivingaddress\\\",  (string) The receiving address\\n\"\n-            \"    \\\"amount\\\" : x.xxx,                  (numeric) The total amount in \" + CURRENCY_UNIT + \" received by the address\\n\"\n-            \"    \\\"confirmations\\\" : n,               (numeric) The number of confirmations of the most recent transaction included\\n\"\n-            \"    \\\"label\\\" : \\\"label\\\",               (string) The label of the receiving address. The default label is \\\"\\\".\\n\"\n-            \"    \\\"txids\\\": [\\n\"\n-            \"       \\\"txid\\\",                         (string) The ids of transactions received with the address \\n\"\n-            \"       ...\\n\"\n-            \"    ]\\n\"\n-            \"  }\\n\"\n-            \"  ,...\\n\"\n-            \"]\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::BOOL, \"involvesWatchonly\", \"Only returns true if imported addresses were involved in transaction\"},\n+                            {RPCResult::Type::STR, \"address\", \"The receiving address\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"amount\", \"The total amount in \" + CURRENCY_UNIT + \" received by the address\"},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations of the most recent transaction included\"},\n+                            {RPCResult::Type::STR, \"label\", \"The label of the receiving address. The default label is \\\"\\\"\"},\n+                            {RPCResult::Type::ARR, \"txids\", \"\",\n+                            {\n+                                {RPCResult::Type::STR, \"txid\", \"The ids of transactions received with the address\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 157,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note that you use STR_HEX at https://github.com/bitcoin/bitcoin/pull/17809/files#diff-df7d84ff2f53fcb2a0dc15a3a51e55ceR1383. Should STR_HEX be used here too?",
      "created_at": "2019-12-28T10:26:56Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361788361",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788403",
      "pull_request_review_id": 336910381,
      "id": 361788403,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4ODQwMw==",
      "diff_hunk": "@@ -1407,27 +1412,31 @@ UniValue listtransactions(const JSONRPCRequest& request)\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Include transactions to watch-only addresses (see 'importaddress')\"},\n                 },\n                 RPCResult{\n-            \"[\\n\"\n-            \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\": xxx, (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n-            \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction.\\n\"\n-            \"    \\\"category\\\":               (string) The transaction category.\\n\"\n-            \"                \\\"send\\\"                  Transactions sent.\\n\"\n-            \"                \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n-            \"                \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n-            \"                \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n-            \"                \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n-            \"    \\\"amount\\\": x.xxx,          (numeric) The amount in \" + CURRENCY_UNIT + \". This is negative for the 'send' category, and is positive\\n\"\n-            \"                                        for all other categories\\n\"\n-            \"    \\\"label\\\": \\\"label\\\",       (string) A comment for the address/transaction, if any\\n\"\n-            \"    \\\"vout\\\": n,                (numeric) the vout value\\n\"\n-            \"    \\\"fee\\\": x.xxx,             (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n-            \"                                         'send' category of transactions.\\n\"\n-            + TransactionDescriptionString()\n-            + \"    \\\"abandoned\\\": xxx          (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n-            \"                                         'send' category of transactions.\\n\"\n-            \"  }\\n\"\n-            \"]\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", Cat(Cat<std::vector<RPCResult>>(\n+                        {\n+                            {RPCResult::Type::BOOL, \"involvesWatchonly\", \"Only returns true if imported addresses were involved in transaction.\"},\n+                            {RPCResult::Type::STR, \"address\", \"The bitcoin address of the transaction.\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 268,
      "original_position": 266,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "should addresses be `STR_HEX`?",
      "created_at": "2019-12-28T10:28:06Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361788403",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1427,
      "original_line": 1427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788449",
      "pull_request_review_id": 336910381,
      "id": 361788449,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4ODQ0OQ==",
      "diff_hunk": "@@ -1407,27 +1412,31 @@ UniValue listtransactions(const JSONRPCRequest& request)\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Include transactions to watch-only addresses (see 'importaddress')\"},\n                 },\n                 RPCResult{\n-            \"[\\n\"\n-            \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\": xxx, (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n-            \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction.\\n\"\n-            \"    \\\"category\\\":               (string) The transaction category.\\n\"\n-            \"                \\\"send\\\"                  Transactions sent.\\n\"\n-            \"                \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n-            \"                \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n-            \"                \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n-            \"                \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n-            \"    \\\"amount\\\": x.xxx,          (numeric) The amount in \" + CURRENCY_UNIT + \". This is negative for the 'send' category, and is positive\\n\"\n-            \"                                        for all other categories\\n\"\n-            \"    \\\"label\\\": \\\"label\\\",       (string) A comment for the address/transaction, if any\\n\"\n-            \"    \\\"vout\\\": n,                (numeric) the vout value\\n\"\n-            \"    \\\"fee\\\": x.xxx,             (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n-            \"                                         'send' category of transactions.\\n\"\n-            + TransactionDescriptionString()\n-            + \"    \\\"abandoned\\\": xxx          (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n-            \"                                         'send' category of transactions.\\n\"\n-            \"  }\\n\"\n-            \"]\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", Cat(Cat<std::vector<RPCResult>>(\n+                        {\n+                            {RPCResult::Type::BOOL, \"involvesWatchonly\", \"Only returns true if imported addresses were involved in transaction.\"},\n+                            {RPCResult::Type::STR, \"address\", \"The bitcoin address of the transaction.\"},\n+                            {RPCResult::Type::STR, \"category\", \"The transaction category.\\n\"\n+                                \"\\\"send\\\"                  Transactions sent.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 270,
      "original_position": 268,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not in scope for this MR but should these categories by an enum?",
      "created_at": "2019-12-28T10:28:51Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361788449",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1429,
      "original_line": 1429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788627",
      "pull_request_review_id": 336910381,
      "id": 361788627,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4ODYyNw==",
      "diff_hunk": "@@ -3254,20 +3290,22 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n             \"       \\\"SINGLE|ANYONECANPAY\\\"\"},\n                 },\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"hex\\\" : \\\"value\\\",                  (string) The hex-encoded raw transaction with signature(s)\\n\"\n-            \"  \\\"complete\\\" : true|false,          (boolean) If the transaction has a complete set of signatures\\n\"\n-            \"  \\\"errors\\\" : [                      (json array of objects) Script verification errors (if there are any)\\n\"\n-            \"    {\\n\"\n-            \"      \\\"txid\\\" : \\\"hash\\\",              (string) The hash of the referenced, previous transaction\\n\"\n-            \"      \\\"vout\\\" : n,                   (numeric) The index of the output to spent and used as input\\n\"\n-            \"      \\\"scriptSig\\\" : \\\"hex\\\",          (string) The hex-encoded signature script\\n\"\n-            \"      \\\"sequence\\\" : n,               (numeric) Script sequence number\\n\"\n-            \"      \\\"error\\\" : \\\"text\\\"              (string) Verification or signing error related to the input\\n\"\n-            \"    }\\n\"\n-            \"    ,...\\n\"\n-            \"  ]\\n\"\n-            \"}\\n\"\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"hex\", \"The hex-encoded raw transaction with signature(s)\"},\n+                        {RPCResult::Type::BOOL, \"complete\", \"If the transaction has a complete set of signatures\"},\n+                        {RPCResult::Type::ARR, \"errors\", \"Script verification errors (if there are any)\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"\",\n+                            {\n+                                {RPCResult::Type::STR_HEX, \"txid\", \"The hash of the referenced, previous transaction\"},\n+                                {RPCResult::Type::NUM, \"vout\", \"The index of the output to spent and used as input\"},\n+                                {RPCResult::Type::STR, \"scriptSig\", \"The hex-encoded signature script\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 739,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`STR_HEX`?",
      "created_at": "2019-12-28T10:34:13Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361788627",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788627"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788896",
      "pull_request_review_id": 336910381,
      "id": 361788896,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4ODg5Ng==",
      "diff_hunk": "@@ -377,37 +374,35 @@ static UniValue getdifficulty(const JSONRPCRequest& request)\n     return GetDifficulty(::ChainActive().Tip());\n }\n \n-static std::string EntryDescriptionString()\n-{\n-    return \"    \\\"vsize\\\" : n,            (numeric) virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\\n\"\n-           \"    \\\"size\\\" : n,             (numeric) (DEPRECATED) same as vsize. Only returned if bitcoind is started with -deprecatedrpc=size\\n\"\n-           \"                              size will be completely removed in v0.20.\\n\"\n-           \"    \\\"weight\\\" : n,           (numeric) transaction weight as defined in BIP 141.\\n\"\n-           \"    \\\"fee\\\" : n,              (numeric) transaction fee in \" + CURRENCY_UNIT + \" (DEPRECATED)\\n\"\n-           \"    \\\"modifiedfee\\\" : n,      (numeric) transaction fee with fee deltas used for mining priority (DEPRECATED)\\n\"\n-           \"    \\\"time\\\" : n,             (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\\n\"\n-           \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n-           \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n-           \"    \\\"descendantsize\\\" : n,   (numeric) virtual transaction size of in-mempool descendants (including this one)\\n\"\n-           \"    \\\"descendantfees\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one) (DEPRECATED)\\n\"\n-           \"    \\\"ancestorcount\\\" : n,    (numeric) number of in-mempool ancestor transactions (including this one)\\n\"\n-           \"    \\\"ancestorsize\\\" : n,     (numeric) virtual transaction size of in-mempool ancestors (including this one)\\n\"\n-           \"    \\\"ancestorfees\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one) (DEPRECATED)\\n\"\n-           \"    \\\"wtxid\\\" : hash,         (string) hash of serialized transaction, including witness data\\n\"\n-           \"    \\\"fees\\\" : {\\n\"\n-           \"        \\\"base\\\" : n,         (numeric) transaction fee in \" + CURRENCY_UNIT + \"\\n\"\n-           \"        \\\"modified\\\" : n,     (numeric) transaction fee with fee deltas used for mining priority in \" + CURRENCY_UNIT + \"\\n\"\n-           \"        \\\"ancestor\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one) in \" + CURRENCY_UNIT + \"\\n\"\n-           \"        \\\"descendant\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one) in \" + CURRENCY_UNIT + \"\\n\"\n-           \"    }\\n\"\n-           \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n-           \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n-           \"       ... ]\\n\"\n-           \"    \\\"spentby\\\" : [           (array) unconfirmed transactions spending outputs from this transaction\\n\"\n-           \"        \\\"transactionid\\\",    (string) child transaction id\\n\"\n-           \"       ... ]\\n\"\n-           \"    \\\"bip125-replaceable\\\" : true|false,  (boolean) Whether this transaction could be replaced due to BIP125 (replace-by-fee)\\n\";\n-}\n+static std::vector<RPCResult> MempoolEntryDescription() { return {\n+    RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n+    RPCResult{RPCResult::Type::NUM, \"size\", \"(DEPRECATED) same as vsize. Only returned if bitcoind is started with -deprecatedrpc=size\\n\"\n+                                            \"size will be completely removed in v0.20.\"},\n+    RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n+    RPCResult{RPCResult::Type::STR_AMOUNT, \"fee\", \"transaction fee in \" + CURRENCY_UNIT + \" (DEPRECATED)\"},\n+    RPCResult{RPCResult::Type::STR_AMOUNT, \"modifiedfee\", \"transaction fee with fee deltas used for mining priority (DEPRECATED)\"},\n+    RPCResult{RPCResult::Type::NUM, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`NUM_TIME`?",
      "created_at": "2019-12-28T10:42:11Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361788896",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361788896"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 384,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361789011",
      "pull_request_review_id": 336910381,
      "id": 361789011,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4OTAxMQ==",
      "diff_hunk": "@@ -983,17 +960,17 @@ static UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n                 \"Note this call may take some time.\\n\",\n                 {},\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"height\\\":n,     (numeric) The current block height (index)\\n\"\n-            \"  \\\"bestblock\\\": \\\"hex\\\",   (string) The hash of the block at the tip of the chain\\n\"\n-            \"  \\\"transactions\\\": n,      (numeric) The number of transactions with unspent outputs\\n\"\n-            \"  \\\"txouts\\\": n,            (numeric) The number of unspent transaction outputs\\n\"\n-            \"  \\\"bogosize\\\": n,          (numeric) A meaningless metric for UTXO set size\\n\"\n-            \"  \\\"hash_serialized_2\\\": \\\"hash\\\", (string) The serialized hash\\n\"\n-            \"  \\\"disk_size\\\": n,         (numeric) The estimated size of the chainstate on disk\\n\"\n-            \"  \\\"total_amount\\\": x.xxx          (numeric) The total amount\\n\"\n-            \"}\\n\"\n-                },\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::NUM, \"height\", \"The current block height (index)\"},\n+                        {RPCResult::Type::STR_HEX, \"bestblock\", \"The hash of the block at the tip of the chain\"},\n+                        {RPCResult::Type::NUM, \"transactions\", \"The number of transactions with unspent outputs\"},\n+                        {RPCResult::Type::NUM, \"txouts\", \"The number of unspent transaction outputs\"},\n+                        {RPCResult::Type::NUM, \"bogosize\", \"A meaningless metric for UTXO set size\"},\n+                        {RPCResult::Type::STR_HEX, \"hash_serialized_2\", \"The serialized hash\"},\n+                        {RPCResult::Type::NUM, \"disk_size\", \"The estimated size of the chainstate on disk\"},\n+                        {RPCResult::Type::NUM, \"total_amount\", \"The total amount\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 409,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`NUM_AMOUNT`?",
      "created_at": "2019-12-28T10:45:35Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361789011",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361789011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 972,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361789053",
      "pull_request_review_id": 336910381,
      "id": 361789053,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4OTA1Mw==",
      "diff_hunk": "@@ -1031,23 +1008,22 @@ UniValue gettxout(const JSONRPCRequest& request)\n                     {\"include_mempool\", RPCArg::Type::BOOL, /* default */ \"true\", \"Whether to include the mempool. Note that an unspent output that is spent in the mempool won't appear.\"},\n                 },\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"bestblock\\\":  \\\"hash\\\",    (string) The hash of the block at the tip of the chain\\n\"\n-            \"  \\\"confirmations\\\" : n,       (numeric) The number of confirmations\\n\"\n-            \"  \\\"value\\\" : x.xxx,           (numeric) The transaction value in \" + CURRENCY_UNIT + \"\\n\"\n-            \"  \\\"scriptPubKey\\\" : {         (json object)\\n\"\n-            \"     \\\"asm\\\" : \\\"code\\\",       (string) \\n\"\n-            \"     \\\"hex\\\" : \\\"hex\\\",        (string) \\n\"\n-            \"     \\\"reqSigs\\\" : n,          (numeric) Number of required signatures\\n\"\n-            \"     \\\"type\\\" : \\\"pubkeyhash\\\", (string) The type, eg pubkeyhash\\n\"\n-            \"     \\\"addresses\\\" : [          (array of string) array of bitcoin addresses\\n\"\n-            \"        \\\"address\\\"     (string) bitcoin address\\n\"\n-            \"        ,...\\n\"\n-            \"     ]\\n\"\n-            \"  },\\n\"\n-            \"  \\\"coinbase\\\" : true|false   (boolean) Coinbase or not\\n\"\n-            \"}\\n\"\n-                },\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"bestblock\", \"The hash of the block at the tip of the chain\"},\n+                        {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                        {RPCResult::Type::STR_AMOUNT, \"value\", \"The transaction value in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::OBJ, \"scriptPubKey\", \"\",\n+                            {\n+                                {RPCResult::Type::STR_HEX, \"asm\", \"\"},\n+                                {RPCResult::Type::STR_HEX, \"hex\", \"\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": 443,
      "original_position": 443,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Still learning how this community operates, should this MR also aim to update/fix descriptions?",
      "created_at": "2019-12-28T10:46:30Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361789053",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361789053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1019,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361789084",
      "pull_request_review_id": 336910381,
      "id": 361789084,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4OTA4NA==",
      "diff_hunk": "@@ -1203,45 +1178,49 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n                 \"Returns an object containing various state info regarding blockchain processing.\\n\",\n                 {},\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"chain\\\": \\\"xxxx\\\",              (string) current network name (main, test, regtest)\\n\"\n-            \"  \\\"blocks\\\": xxxxxx,             (numeric) the height of the most-work fully-validated chain. The genesis block has height 0\\n\"\n-            \"  \\\"headers\\\": xxxxxx,            (numeric) the current number of headers we have validated\\n\"\n-            \"  \\\"bestblockhash\\\": \\\"...\\\",       (string) the hash of the currently best block\\n\"\n-            \"  \\\"difficulty\\\": xxxxxx,         (numeric) the current difficulty\\n\"\n-            \"  \\\"mediantime\\\": xxxxxx,         (numeric) median time for the current best block\\n\"\n-            \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n-            \"  \\\"initialblockdownload\\\": xxxx, (bool) (debug information) estimate of whether this node is in Initial Block Download mode.\\n\"\n-            \"  \\\"chainwork\\\": \\\"xxxx\\\"           (string) total amount of work in active chain, in hexadecimal\\n\"\n-            \"  \\\"size_on_disk\\\": xxxxxx,       (numeric) the estimated size of the block and undo files on disk\\n\"\n-            \"  \\\"pruned\\\": xx,                 (boolean) if the blocks are subject to pruning\\n\"\n-            \"  \\\"pruneheight\\\": xxxxxx,        (numeric) lowest-height complete block stored (only present if pruning is enabled)\\n\"\n-            \"  \\\"automatic_pruning\\\": xx,      (boolean) whether automatic pruning is enabled (only present if pruning is enabled)\\n\"\n-            \"  \\\"prune_target_size\\\": xxxxxx,  (numeric) the target size used by pruning (only present if automatic pruning is enabled)\\n\"\n-            \"  \\\"softforks\\\": {                (object) status of softforks\\n\"\n-            \"     \\\"xxxx\\\" : {                 (string) name of the softfork\\n\"\n-            \"        \\\"type\\\": \\\"xxxx\\\",         (string) one of \\\"buried\\\", \\\"bip9\\\"\\n\"\n-            \"        \\\"bip9\\\": {               (object) status of bip9 softforks (only for \\\"bip9\\\" type)\\n\"\n-            \"           \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n-            \"           \\\"bit\\\": xx,           (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n-            \"           \\\"start_time\\\": xx,     (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n-            \"           \\\"timeout\\\": xx,       (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n-            \"           \\\"since\\\": xx,         (numeric) height of the first block to which the status applies\\n\"\n-            \"           \\\"statistics\\\": {      (object) numeric statistics about BIP9 signalling for a softfork\\n\"\n-            \"              \\\"period\\\": xx,     (numeric) the length in blocks of the BIP9 signalling period \\n\"\n-            \"              \\\"threshold\\\": xx,  (numeric) the number of blocks with the version bit set required to activate the feature \\n\"\n-            \"              \\\"elapsed\\\": xx,    (numeric) the number of blocks elapsed since the beginning of the current period \\n\"\n-            \"              \\\"count\\\": xx,      (numeric) the number of blocks with the version bit set in the current period \\n\"\n-            \"              \\\"possible\\\": xx    (boolean) returns false if there are not enough blocks left in this period to pass activation threshold \\n\"\n-            \"           }\\n\"\n-            \"        },\\n\"\n-            \"        \\\"height\\\": \\\"xxxxxx\\\",     (numeric) height of the first block which the rules are or will be enforced (only for \\\"buried\\\" type, or \\\"bip9\\\" type with \\\"active\\\" status)\\n\"\n-            \"        \\\"active\\\": xx,           (boolean) true if the rules are enforced for the mempool and the next block\\n\"\n-            \"     }\\n\"\n-            \"  }\\n\"\n-            \"  \\\"warnings\\\" : \\\"...\\\",           (string) any network and blockchain warnings.\\n\"\n-            \"}\\n\"\n-                },\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR, \"chain\", \"current network name (main, test, regtest)\"},\n+                        {RPCResult::Type::NUM, \"blocks\", \"the height of the most-work fully-validated chain. The genesis block has height 0\"},\n+                        {RPCResult::Type::NUM, \"headers\", \"the current number of headers we have validated\"},\n+                        {RPCResult::Type::STR, \"bestblockhash\", \"the hash of the currently best block\"},\n+                        {RPCResult::Type::NUM, \"difficulty\", \"the current difficulty\"},\n+                        {RPCResult::Type::NUM, \"mediantime\", \"median time for the current best block\"},\n+                        {RPCResult::Type::NUM, \"verificationprogress\", \"estimate of verification progress [0..1]\"},\n+                        {RPCResult::Type::BOOL, \"initialblockdownload\", \"(debug information) estimate of whether this node is in Initial Block Download mode\"},\n+                        {RPCResult::Type::STR_HEX, \"chainwork\", \"total amount of work in active chain, in hexadecimal\"},\n+                        {RPCResult::Type::NUM, \"size_on_disk\", \"the estimated size of the block and undo files on disk\"},\n+                        {RPCResult::Type::BOOL, \"pruned\", \"if the blocks are subject to pruning\"},\n+                        {RPCResult::Type::NUM, \"pruneheight\", \"lowest-height complete block stored (only present if pruning is enabled)\"},\n+                        {RPCResult::Type::BOOL, \"automatic_pruning\", \"whether automatic pruning is enabled (only present if pruning is enabled)\"},\n+                        {RPCResult::Type::NUM, \"prune_target_size\", \"the target size used by pruning (only present if automatic pruning is enabled)\"},\n+                        {RPCResult::Type::OBJ_DYN, \"softforks\", \"status of softforks\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"xxxx\", \"name of the softfork\",\n+                            {\n+                                {RPCResult::Type::STR, \"type\", \"one of \\\"buried\\\", \\\"bip9\\\"\"},\n+                                {RPCResult::Type::OBJ, \"bip9\", \"status of bip9 softforks (only for \\\"bip9\\\" type)\",\n+                                {\n+                                    {RPCResult::Type::STR, \"status\", \"one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\"},\n+                                    {RPCResult::Type::NUM, \"bit\", \"the bit (0-28) in the block version field used to signal this softfork\"},\n+                                    {RPCResult::Type::NUM, \"start_time\", \"the minimum median time past of a block at which the bit gains its meaning\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 532,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "NUM_TIME?",
      "created_at": "2019-12-28T10:47:38Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361789084",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361789084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361789148",
      "pull_request_review_id": 336910381,
      "id": 361789148,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTc4OTE0OA==",
      "diff_hunk": "@@ -1715,44 +1687,45 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n                         \"stats\"},\n                 },\n                 RPCResult{\n-            \"{                           (json object)\\n\"\n-            \"  \\\"avgfee\\\": xxxxx,          (numeric) Average fee in the block\\n\"\n-            \"  \\\"avgfeerate\\\": xxxxx,      (numeric) Average feerate (in satoshis per virtual byte)\\n\"\n-            \"  \\\"avgtxsize\\\": xxxxx,       (numeric) Average transaction size\\n\"\n-            \"  \\\"blockhash\\\": xxxxx,       (string) The block hash (to check for potential reorgs)\\n\"\n-            \"  \\\"feerate_percentiles\\\": [  (array of numeric) Feerates at the 10th, 25th, 50th, 75th, and 90th percentile weight unit (in satoshis per virtual byte)\\n\"\n-            \"      \\\"10th_percentile_feerate\\\",      (numeric) The 10th percentile feerate\\n\"\n-            \"      \\\"25th_percentile_feerate\\\",      (numeric) The 25th percentile feerate\\n\"\n-            \"      \\\"50th_percentile_feerate\\\",      (numeric) The 50th percentile feerate\\n\"\n-            \"      \\\"75th_percentile_feerate\\\",      (numeric) The 75th percentile feerate\\n\"\n-            \"      \\\"90th_percentile_feerate\\\",      (numeric) The 90th percentile feerate\\n\"\n-            \"  ],\\n\"\n-            \"  \\\"height\\\": xxxxx,          (numeric) The height of the block\\n\"\n-            \"  \\\"ins\\\": xxxxx,             (numeric) The number of inputs (excluding coinbase)\\n\"\n-            \"  \\\"maxfee\\\": xxxxx,          (numeric) Maximum fee in the block\\n\"\n-            \"  \\\"maxfeerate\\\": xxxxx,      (numeric) Maximum feerate (in satoshis per virtual byte)\\n\"\n-            \"  \\\"maxtxsize\\\": xxxxx,       (numeric) Maximum transaction size\\n\"\n-            \"  \\\"medianfee\\\": xxxxx,       (numeric) Truncated median fee in the block\\n\"\n-            \"  \\\"mediantime\\\": xxxxx,      (numeric) The block median time past\\n\"\n-            \"  \\\"mediantxsize\\\": xxxxx,    (numeric) Truncated median transaction size\\n\"\n-            \"  \\\"minfee\\\": xxxxx,          (numeric) Minimum fee in the block\\n\"\n-            \"  \\\"minfeerate\\\": xxxxx,      (numeric) Minimum feerate (in satoshis per virtual byte)\\n\"\n-            \"  \\\"mintxsize\\\": xxxxx,       (numeric) Minimum transaction size\\n\"\n-            \"  \\\"outs\\\": xxxxx,            (numeric) The number of outputs\\n\"\n-            \"  \\\"subsidy\\\": xxxxx,         (numeric) The block subsidy\\n\"\n-            \"  \\\"swtotal_size\\\": xxxxx,    (numeric) Total size of all segwit transactions\\n\"\n-            \"  \\\"swtotal_weight\\\": xxxxx,  (numeric) Total weight of all segwit transactions divided by segwit scale factor (4)\\n\"\n-            \"  \\\"swtxs\\\": xxxxx,           (numeric) The number of segwit transactions\\n\"\n-            \"  \\\"time\\\": xxxxx,            (numeric) The block time\\n\"\n-            \"  \\\"total_out\\\": xxxxx,       (numeric) Total amount in all outputs (excluding coinbase and thus reward [ie subsidy + totalfee])\\n\"\n-            \"  \\\"total_size\\\": xxxxx,      (numeric) Total size of all non-coinbase transactions\\n\"\n-            \"  \\\"total_weight\\\": xxxxx,    (numeric) Total weight of all non-coinbase transactions divided by segwit scale factor (4)\\n\"\n-            \"  \\\"totalfee\\\": xxxxx,        (numeric) The fee total\\n\"\n-            \"  \\\"txs\\\": xxxxx,             (numeric) The number of transactions (excluding coinbase)\\n\"\n-            \"  \\\"utxo_increase\\\": xxxxx,   (numeric) The increase/decrease in the number of unspent outputs\\n\"\n-            \"  \\\"utxo_size_inc\\\": xxxxx,   (numeric) The increase/decrease in size for the utxo index (not discounting op_return and similar)\\n\"\n-            \"}\\n\"\n-                },\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::NUM, \"avgfee\", \"Average fee in the block\"},\n+                {RPCResult::Type::NUM, \"avgfeerate\", \"Average feerate (in satoshis per virtual byte)\"},\n+                {RPCResult::Type::NUM, \"avgtxsize\", \"Average transaction size\"},\n+                {RPCResult::Type::STR_HEX, \"blockhash\", \"The block hash (to check for potential reorgs)\"},\n+                {RPCResult::Type::ARR, \"feerate_percentiles\", \"Feerates at the 10th, 25th, 50th, 75th, and 90th percentile weight unit (in satoshis per virtual byte)\",\n+                    {\n+                        {RPCResult::Type::NUM, \"10th_percentile_feerate\", \"The 10th percentile feerate\"},\n+                        {RPCResult::Type::NUM, \"25th_percentile_feerate\", \"The 25th percentile feerate\"},\n+                        {RPCResult::Type::NUM, \"50th_percentile_feerate\", \"The 50th percentile feerate\"},\n+                        {RPCResult::Type::NUM, \"75th_percentile_feerate\", \"The 75th percentile feerate\"},\n+                        {RPCResult::Type::NUM, \"90th_percentile_feerate\", \"The 90th percentile feerate\"},\n+                    }},\n+                {RPCResult::Type::NUM, \"height\", \"The height of the block\"},\n+                {RPCResult::Type::NUM, \"ins\", \"The number of inputs (excluding coinbase)\"},\n+                {RPCResult::Type::NUM, \"maxfee\", \"Maximum fee in the block\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": 704,
      "original_position": 704,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": null,
      "user": {
        "login": "paymog",
        "id": 1986950,
        "node_id": "MDQ6VXNlcjE5ODY5NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1986950?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paymog",
        "html_url": "https://github.com/paymog",
        "followers_url": "https://api.github.com/users/paymog/followers",
        "following_url": "https://api.github.com/users/paymog/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/paymog/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/paymog/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/paymog/subscriptions",
        "organizations_url": "https://api.github.com/users/paymog/orgs",
        "repos_url": "https://api.github.com/users/paymog/repos",
        "events_url": "https://api.github.com/users/paymog/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/paymog/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "NUM_AMOUNT?",
      "created_at": "2019-12-28T10:48:48Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361789148",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361789148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1706,
      "original_line": 1706,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361854842",
      "pull_request_review_id": 336961285,
      "id": 361854842,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1NDg0Mg==",
      "diff_hunk": "@@ -843,8 +845,8 @@ static UniValue sendmany(const JSONRPCRequest& request)\n             \"       \\\"CONSERVATIVE\\\"\"},\n                 },\n                  RPCResult{\n-            \"\\\"txid\\\"                   (string) The transaction id for the send. Only 1 transaction is created regardless of \\n\"\n-            \"                                    the number of addresses.\\n\"\n+                     RPCResult::Type::STR, \"txid\", \"The transaction id for the send. Only 1 transaction is created regardless of\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361788162,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks. Fixed in 6817c3af8ca13153bf5f85be26eb1db3845b8cac",
      "created_at": "2019-12-29T14:53:49Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361854842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361854842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 848,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855066",
      "pull_request_review_id": 336961453,
      "id": 361855066,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1NTA2Ng==",
      "diff_hunk": "@@ -967,10 +969,11 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n                     {\"address_type\", RPCArg::Type::STR, /* default */ \"set by -addresstype\", \"The address type to use. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\".\"},\n                 },\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"address\\\":\\\"multisigaddress\\\",    (string) The value of the new multisig address.\\n\"\n-            \"  \\\"redeemScript\\\":\\\"script\\\"         (string) The string value of the hex-encoded redemption script.\\n\"\n-            \"}\\n\"\n+                    RPCResult::Type::OBJ, \"\", \"\",",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 121,
      "original_position": 120,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361788211,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The first one is the name and it is only used when it is needed to name it (i.e. as a key in a dictionary). Not sure if it makes sense to omit it from the constructor when it is not needed. I'll wait for others to chime in.\r\n\r\nThe second string is the description, which should never be empty. Or at least it shouldn't be made easy to leave empty. I prefer if new code is explicit about not providing a description.",
      "created_at": "2019-12-29T14:57:49Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361855066",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855066"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 974,
      "original_line": 974,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855200",
      "pull_request_review_id": 336961573,
      "id": 361855200,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1NTIwMA==",
      "diff_hunk": "@@ -967,10 +969,11 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n                     {\"address_type\", RPCArg::Type::STR, /* default */ \"set by -addresstype\", \"The address type to use. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\".\"},\n                 },\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"address\\\":\\\"multisigaddress\\\",    (string) The value of the new multisig address.\\n\"\n-            \"  \\\"redeemScript\\\":\\\"script\\\"         (string) The string value of the hex-encoded redemption script.\\n\"\n-            \"}\\n\"\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR, \"address\", \"The value of the new multisig address\"},\n+                        {RPCResult::Type::STR, \"redeemScript\", \"The string value of the hex-encoded redemption script\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361788248,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in 2fe4fda6ec",
      "created_at": "2019-12-29T15:00:41Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361855200",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 975,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855225",
      "pull_request_review_id": 336961595,
      "id": 361855225,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1NTIyNQ==",
      "diff_hunk": "@@ -1195,20 +1198,21 @@ static UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n                     {\"address_filter\", RPCArg::Type::STR, RPCArg::Optional::OMITTED_NAMED_ARG, \"If present, only return information on this address.\"},\n                 },\n                 RPCResult{\n-            \"[\\n\"\n-            \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\" : true,        (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n-            \"    \\\"address\\\" : \\\"receivingaddress\\\",  (string) The receiving address\\n\"\n-            \"    \\\"amount\\\" : x.xxx,                  (numeric) The total amount in \" + CURRENCY_UNIT + \" received by the address\\n\"\n-            \"    \\\"confirmations\\\" : n,               (numeric) The number of confirmations of the most recent transaction included\\n\"\n-            \"    \\\"label\\\" : \\\"label\\\",               (string) The label of the receiving address. The default label is \\\"\\\".\\n\"\n-            \"    \\\"txids\\\": [\\n\"\n-            \"       \\\"txid\\\",                         (string) The ids of transactions received with the address \\n\"\n-            \"       ...\\n\"\n-            \"    ]\\n\"\n-            \"  }\\n\"\n-            \"  ,...\\n\"\n-            \"]\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::BOOL, \"involvesWatchonly\", \"Only returns true if imported addresses were involved in transaction\"},\n+                            {RPCResult::Type::STR, \"address\", \"The receiving address\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"amount\", \"The total amount in \" + CURRENCY_UNIT + \" received by the address\"},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations of the most recent transaction included\"},\n+                            {RPCResult::Type::STR, \"label\", \"The label of the receiving address. The default label is \\\"\\\"\"},\n+                            {RPCResult::Type::ARR, \"txids\", \"\",\n+                            {\n+                                {RPCResult::Type::STR, \"txid\", \"The ids of transactions received with the address\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 157,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361788361,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n\r\nThanks. Fixed in 6817c3a\r\n",
      "created_at": "2019-12-29T15:01:12Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361855225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1212,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855336",
      "pull_request_review_id": 336961685,
      "id": 361855336,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1NTMzNg==",
      "diff_hunk": "@@ -1407,27 +1412,31 @@ UniValue listtransactions(const JSONRPCRequest& request)\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Include transactions to watch-only addresses (see 'importaddress')\"},\n                 },\n                 RPCResult{\n-            \"[\\n\"\n-            \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\": xxx, (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n-            \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction.\\n\"\n-            \"    \\\"category\\\":               (string) The transaction category.\\n\"\n-            \"                \\\"send\\\"                  Transactions sent.\\n\"\n-            \"                \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n-            \"                \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n-            \"                \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n-            \"                \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n-            \"    \\\"amount\\\": x.xxx,          (numeric) The amount in \" + CURRENCY_UNIT + \". This is negative for the 'send' category, and is positive\\n\"\n-            \"                                        for all other categories\\n\"\n-            \"    \\\"label\\\": \\\"label\\\",       (string) A comment for the address/transaction, if any\\n\"\n-            \"    \\\"vout\\\": n,                (numeric) the vout value\\n\"\n-            \"    \\\"fee\\\": x.xxx,             (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n-            \"                                         'send' category of transactions.\\n\"\n-            + TransactionDescriptionString()\n-            + \"    \\\"abandoned\\\": xxx          (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n-            \"                                         'send' category of transactions.\\n\"\n-            \"  }\\n\"\n-            \"]\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", Cat(Cat<std::vector<RPCResult>>(\n+                        {\n+                            {RPCResult::Type::BOOL, \"involvesWatchonly\", \"Only returns true if imported addresses were involved in transaction.\"},\n+                            {RPCResult::Type::STR, \"address\", \"The bitcoin address of the transaction.\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 268,
      "original_position": 266,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361788403,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Addresses are not hex strings, they are base58-check encoded or bech32 formatted strings",
      "created_at": "2019-12-29T15:02:58Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361855336",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1427,
      "original_line": 1427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855354",
      "pull_request_review_id": 336961698,
      "id": 361855354,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1NTM1NA==",
      "diff_hunk": "@@ -1407,27 +1412,31 @@ UniValue listtransactions(const JSONRPCRequest& request)\n                     {\"include_watchonly\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Include transactions to watch-only addresses (see 'importaddress')\"},\n                 },\n                 RPCResult{\n-            \"[\\n\"\n-            \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\": xxx, (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n-            \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction.\\n\"\n-            \"    \\\"category\\\":               (string) The transaction category.\\n\"\n-            \"                \\\"send\\\"                  Transactions sent.\\n\"\n-            \"                \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n-            \"                \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n-            \"                \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n-            \"                \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n-            \"    \\\"amount\\\": x.xxx,          (numeric) The amount in \" + CURRENCY_UNIT + \". This is negative for the 'send' category, and is positive\\n\"\n-            \"                                        for all other categories\\n\"\n-            \"    \\\"label\\\": \\\"label\\\",       (string) A comment for the address/transaction, if any\\n\"\n-            \"    \\\"vout\\\": n,                (numeric) the vout value\\n\"\n-            \"    \\\"fee\\\": x.xxx,             (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n-            \"                                         'send' category of transactions.\\n\"\n-            + TransactionDescriptionString()\n-            + \"    \\\"abandoned\\\": xxx          (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n-            \"                                         'send' category of transactions.\\n\"\n-            \"  }\\n\"\n-            \"]\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\", Cat(Cat<std::vector<RPCResult>>(\n+                        {\n+                            {RPCResult::Type::BOOL, \"involvesWatchonly\", \"Only returns true if imported addresses were involved in transaction.\"},\n+                            {RPCResult::Type::STR, \"address\", \"The bitcoin address of the transaction.\"},\n+                            {RPCResult::Type::STR, \"category\", \"The transaction category.\\n\"\n+                                \"\\\"send\\\"                  Transactions sent.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 270,
      "original_position": 268,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361788449,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea for a follow up",
      "created_at": "2019-12-29T15:03:22Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361855354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1429,
      "original_line": 1429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855827",
      "pull_request_review_id": 336962069,
      "id": 361855827,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1NTgyNw==",
      "diff_hunk": "@@ -1031,23 +1008,22 @@ UniValue gettxout(const JSONRPCRequest& request)\n                     {\"include_mempool\", RPCArg::Type::BOOL, /* default */ \"true\", \"Whether to include the mempool. Note that an unspent output that is spent in the mempool won't appear.\"},\n                 },\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"bestblock\\\":  \\\"hash\\\",    (string) The hash of the block at the tip of the chain\\n\"\n-            \"  \\\"confirmations\\\" : n,       (numeric) The number of confirmations\\n\"\n-            \"  \\\"value\\\" : x.xxx,           (numeric) The transaction value in \" + CURRENCY_UNIT + \"\\n\"\n-            \"  \\\"scriptPubKey\\\" : {         (json object)\\n\"\n-            \"     \\\"asm\\\" : \\\"code\\\",       (string) \\n\"\n-            \"     \\\"hex\\\" : \\\"hex\\\",        (string) \\n\"\n-            \"     \\\"reqSigs\\\" : n,          (numeric) Number of required signatures\\n\"\n-            \"     \\\"type\\\" : \\\"pubkeyhash\\\", (string) The type, eg pubkeyhash\\n\"\n-            \"     \\\"addresses\\\" : [          (array of string) array of bitcoin addresses\\n\"\n-            \"        \\\"address\\\"     (string) bitcoin address\\n\"\n-            \"        ,...\\n\"\n-            \"     ]\\n\"\n-            \"  },\\n\"\n-            \"  \\\"coinbase\\\" : true|false   (boolean) Coinbase or not\\n\"\n-            \"}\\n\"\n-                },\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"bestblock\", \"The hash of the block at the tip of the chain\"},\n+                        {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                        {RPCResult::Type::STR_AMOUNT, \"value\", \"The transaction value in \" + CURRENCY_UNIT},\n+                        {RPCResult::Type::OBJ, \"scriptPubKey\", \"\",\n+                            {\n+                                {RPCResult::Type::STR_HEX, \"asm\", \"\"},\n+                                {RPCResult::Type::STR_HEX, \"hex\", \"\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": 443,
      "original_position": 443,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361789053,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I want to make this change as easy to review as possible. So I am for a minimal rendered diff, assuming `--ignore-all-space`.\r\n\r\nSo for example, the diff for this RPC is:\r\n\r\n```\r\n$ git diff --ignore-all-space  --word-diff ./gettxout\r\ndiff --git a/gettxout b/gettxout\r\nindex 1d186cd..90fa947 100644\r\n--- a/gettxout\r\n+++ b/gettxout\r\n@@ -8,21 +8,21 @@ Arguments:\r\n3. include_mempool    (boolean, optional, default=true) Whether to include the mempool. Note that an unspent output that is spent in the mempool won't appear.\r\n\r\nResult:\r\n{                         {+(json object)+}\r\n  \"bestblock\" : [-\"hash\",-]{+\"hex\",+}    (string) The hash of the block at the tip of the chain\r\n  \"confirmations\" : n,    (numeric) The number of confirmations\r\n  \"value\" : [-x.xxx,-]{+n,+}            (numeric) The transaction value in BTC\r\n  \"scriptPubKey\" : {      (json object)\r\n    \"asm\" : [-\"code\",-]{+\"hex\",+}        (string)\r\n    \"hex\" : \"hex\",        (string)\r\n    \"reqSigs\" : [-n,          (numeric)-]{+\"hex\",    (string)+} Number of required signatures\r\n    \"type\" : [-\"pubkeyhash\",-]{+\"hex\",+}       (string) The type, eg pubkeyhash\r\n    \"addresses\" : [       [-(array of string)-]{+(json array)+} array of bitcoin addresses\r\n      [-\"address\"-]{+\"str\",+}              (string) bitcoin address\r\n      [-,...-]\r\n[-     ]-]{+...+}\r\n{+    ],+}\r\n  },\r\n  \"coinbase\" : [-true|false   (boolean)-]{+\"hex\",     (string)+} Coinbase or not\r\n}\r\n\r\nExamples:",
      "created_at": "2019-12-29T15:11:17Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361855827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361855827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1019,
      "original_line": 1019,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858584",
      "pull_request_review_id": 336964351,
      "id": 361858584,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1ODU4NA==",
      "diff_hunk": "@@ -1715,44 +1687,45 @@ static UniValue getblockstats(const JSONRPCRequest& request)\n                         \"stats\"},\n                 },\n                 RPCResult{\n-            \"{                           (json object)\\n\"\n-            \"  \\\"avgfee\\\": xxxxx,          (numeric) Average fee in the block\\n\"\n-            \"  \\\"avgfeerate\\\": xxxxx,      (numeric) Average feerate (in satoshis per virtual byte)\\n\"\n-            \"  \\\"avgtxsize\\\": xxxxx,       (numeric) Average transaction size\\n\"\n-            \"  \\\"blockhash\\\": xxxxx,       (string) The block hash (to check for potential reorgs)\\n\"\n-            \"  \\\"feerate_percentiles\\\": [  (array of numeric) Feerates at the 10th, 25th, 50th, 75th, and 90th percentile weight unit (in satoshis per virtual byte)\\n\"\n-            \"      \\\"10th_percentile_feerate\\\",      (numeric) The 10th percentile feerate\\n\"\n-            \"      \\\"25th_percentile_feerate\\\",      (numeric) The 25th percentile feerate\\n\"\n-            \"      \\\"50th_percentile_feerate\\\",      (numeric) The 50th percentile feerate\\n\"\n-            \"      \\\"75th_percentile_feerate\\\",      (numeric) The 75th percentile feerate\\n\"\n-            \"      \\\"90th_percentile_feerate\\\",      (numeric) The 90th percentile feerate\\n\"\n-            \"  ],\\n\"\n-            \"  \\\"height\\\": xxxxx,          (numeric) The height of the block\\n\"\n-            \"  \\\"ins\\\": xxxxx,             (numeric) The number of inputs (excluding coinbase)\\n\"\n-            \"  \\\"maxfee\\\": xxxxx,          (numeric) Maximum fee in the block\\n\"\n-            \"  \\\"maxfeerate\\\": xxxxx,      (numeric) Maximum feerate (in satoshis per virtual byte)\\n\"\n-            \"  \\\"maxtxsize\\\": xxxxx,       (numeric) Maximum transaction size\\n\"\n-            \"  \\\"medianfee\\\": xxxxx,       (numeric) Truncated median fee in the block\\n\"\n-            \"  \\\"mediantime\\\": xxxxx,      (numeric) The block median time past\\n\"\n-            \"  \\\"mediantxsize\\\": xxxxx,    (numeric) Truncated median transaction size\\n\"\n-            \"  \\\"minfee\\\": xxxxx,          (numeric) Minimum fee in the block\\n\"\n-            \"  \\\"minfeerate\\\": xxxxx,      (numeric) Minimum feerate (in satoshis per virtual byte)\\n\"\n-            \"  \\\"mintxsize\\\": xxxxx,       (numeric) Minimum transaction size\\n\"\n-            \"  \\\"outs\\\": xxxxx,            (numeric) The number of outputs\\n\"\n-            \"  \\\"subsidy\\\": xxxxx,         (numeric) The block subsidy\\n\"\n-            \"  \\\"swtotal_size\\\": xxxxx,    (numeric) Total size of all segwit transactions\\n\"\n-            \"  \\\"swtotal_weight\\\": xxxxx,  (numeric) Total weight of all segwit transactions divided by segwit scale factor (4)\\n\"\n-            \"  \\\"swtxs\\\": xxxxx,           (numeric) The number of segwit transactions\\n\"\n-            \"  \\\"time\\\": xxxxx,            (numeric) The block time\\n\"\n-            \"  \\\"total_out\\\": xxxxx,       (numeric) Total amount in all outputs (excluding coinbase and thus reward [ie subsidy + totalfee])\\n\"\n-            \"  \\\"total_size\\\": xxxxx,      (numeric) Total size of all non-coinbase transactions\\n\"\n-            \"  \\\"total_weight\\\": xxxxx,    (numeric) Total weight of all non-coinbase transactions divided by segwit scale factor (4)\\n\"\n-            \"  \\\"totalfee\\\": xxxxx,        (numeric) The fee total\\n\"\n-            \"  \\\"txs\\\": xxxxx,             (numeric) The number of transactions (excluding coinbase)\\n\"\n-            \"  \\\"utxo_increase\\\": xxxxx,   (numeric) The increase/decrease in the number of unspent outputs\\n\"\n-            \"  \\\"utxo_size_inc\\\": xxxxx,   (numeric) The increase/decrease in size for the utxo index (not discounting op_return and similar)\\n\"\n-            \"}\\n\"\n-                },\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::NUM, \"avgfee\", \"Average fee in the block\"},\n+                {RPCResult::Type::NUM, \"avgfeerate\", \"Average feerate (in satoshis per virtual byte)\"},\n+                {RPCResult::Type::NUM, \"avgtxsize\", \"Average transaction size\"},\n+                {RPCResult::Type::STR_HEX, \"blockhash\", \"The block hash (to check for potential reorgs)\"},\n+                {RPCResult::Type::ARR, \"feerate_percentiles\", \"Feerates at the 10th, 25th, 50th, 75th, and 90th percentile weight unit (in satoshis per virtual byte)\",\n+                    {\n+                        {RPCResult::Type::NUM, \"10th_percentile_feerate\", \"The 10th percentile feerate\"},\n+                        {RPCResult::Type::NUM, \"25th_percentile_feerate\", \"The 25th percentile feerate\"},\n+                        {RPCResult::Type::NUM, \"50th_percentile_feerate\", \"The 50th percentile feerate\"},\n+                        {RPCResult::Type::NUM, \"75th_percentile_feerate\", \"The 75th percentile feerate\"},\n+                        {RPCResult::Type::NUM, \"90th_percentile_feerate\", \"The 90th percentile feerate\"},\n+                    }},\n+                {RPCResult::Type::NUM, \"height\", \"The height of the block\"},\n+                {RPCResult::Type::NUM, \"ins\", \"The number of inputs (excluding coinbase)\"},\n+                {RPCResult::Type::NUM, \"maxfee\", \"Maximum fee in the block\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": 704,
      "original_position": 704,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361789148,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unfortunately not. This should be fixed in a follow-up pull request",
      "created_at": "2019-12-29T16:02:06Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361858584",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1706,
      "original_line": 1706,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858647",
      "pull_request_review_id": 336964412,
      "id": 361858647,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1ODY0Nw==",
      "diff_hunk": "@@ -1203,45 +1178,49 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n                 \"Returns an object containing various state info regarding blockchain processing.\\n\",\n                 {},\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"chain\\\": \\\"xxxx\\\",              (string) current network name (main, test, regtest)\\n\"\n-            \"  \\\"blocks\\\": xxxxxx,             (numeric) the height of the most-work fully-validated chain. The genesis block has height 0\\n\"\n-            \"  \\\"headers\\\": xxxxxx,            (numeric) the current number of headers we have validated\\n\"\n-            \"  \\\"bestblockhash\\\": \\\"...\\\",       (string) the hash of the currently best block\\n\"\n-            \"  \\\"difficulty\\\": xxxxxx,         (numeric) the current difficulty\\n\"\n-            \"  \\\"mediantime\\\": xxxxxx,         (numeric) median time for the current best block\\n\"\n-            \"  \\\"verificationprogress\\\": xxxx, (numeric) estimate of verification progress [0..1]\\n\"\n-            \"  \\\"initialblockdownload\\\": xxxx, (bool) (debug information) estimate of whether this node is in Initial Block Download mode.\\n\"\n-            \"  \\\"chainwork\\\": \\\"xxxx\\\"           (string) total amount of work in active chain, in hexadecimal\\n\"\n-            \"  \\\"size_on_disk\\\": xxxxxx,       (numeric) the estimated size of the block and undo files on disk\\n\"\n-            \"  \\\"pruned\\\": xx,                 (boolean) if the blocks are subject to pruning\\n\"\n-            \"  \\\"pruneheight\\\": xxxxxx,        (numeric) lowest-height complete block stored (only present if pruning is enabled)\\n\"\n-            \"  \\\"automatic_pruning\\\": xx,      (boolean) whether automatic pruning is enabled (only present if pruning is enabled)\\n\"\n-            \"  \\\"prune_target_size\\\": xxxxxx,  (numeric) the target size used by pruning (only present if automatic pruning is enabled)\\n\"\n-            \"  \\\"softforks\\\": {                (object) status of softforks\\n\"\n-            \"     \\\"xxxx\\\" : {                 (string) name of the softfork\\n\"\n-            \"        \\\"type\\\": \\\"xxxx\\\",         (string) one of \\\"buried\\\", \\\"bip9\\\"\\n\"\n-            \"        \\\"bip9\\\": {               (object) status of bip9 softforks (only for \\\"bip9\\\" type)\\n\"\n-            \"           \\\"status\\\": \\\"xxxx\\\",    (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n-            \"           \\\"bit\\\": xx,           (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n-            \"           \\\"start_time\\\": xx,     (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n-            \"           \\\"timeout\\\": xx,       (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n-            \"           \\\"since\\\": xx,         (numeric) height of the first block to which the status applies\\n\"\n-            \"           \\\"statistics\\\": {      (object) numeric statistics about BIP9 signalling for a softfork\\n\"\n-            \"              \\\"period\\\": xx,     (numeric) the length in blocks of the BIP9 signalling period \\n\"\n-            \"              \\\"threshold\\\": xx,  (numeric) the number of blocks with the version bit set required to activate the feature \\n\"\n-            \"              \\\"elapsed\\\": xx,    (numeric) the number of blocks elapsed since the beginning of the current period \\n\"\n-            \"              \\\"count\\\": xx,      (numeric) the number of blocks with the version bit set in the current period \\n\"\n-            \"              \\\"possible\\\": xx    (boolean) returns false if there are not enough blocks left in this period to pass activation threshold \\n\"\n-            \"           }\\n\"\n-            \"        },\\n\"\n-            \"        \\\"height\\\": \\\"xxxxxx\\\",     (numeric) height of the first block which the rules are or will be enforced (only for \\\"buried\\\" type, or \\\"bip9\\\" type with \\\"active\\\" status)\\n\"\n-            \"        \\\"active\\\": xx,           (boolean) true if the rules are enforced for the mempool and the next block\\n\"\n-            \"     }\\n\"\n-            \"  }\\n\"\n-            \"  \\\"warnings\\\" : \\\"...\\\",           (string) any network and blockchain warnings.\\n\"\n-            \"}\\n\"\n-                },\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR, \"chain\", \"current network name (main, test, regtest)\"},\n+                        {RPCResult::Type::NUM, \"blocks\", \"the height of the most-work fully-validated chain. The genesis block has height 0\"},\n+                        {RPCResult::Type::NUM, \"headers\", \"the current number of headers we have validated\"},\n+                        {RPCResult::Type::STR, \"bestblockhash\", \"the hash of the currently best block\"},\n+                        {RPCResult::Type::NUM, \"difficulty\", \"the current difficulty\"},\n+                        {RPCResult::Type::NUM, \"mediantime\", \"median time for the current best block\"},\n+                        {RPCResult::Type::NUM, \"verificationprogress\", \"estimate of verification progress [0..1]\"},\n+                        {RPCResult::Type::BOOL, \"initialblockdownload\", \"(debug information) estimate of whether this node is in Initial Block Download mode\"},\n+                        {RPCResult::Type::STR_HEX, \"chainwork\", \"total amount of work in active chain, in hexadecimal\"},\n+                        {RPCResult::Type::NUM, \"size_on_disk\", \"the estimated size of the block and undo files on disk\"},\n+                        {RPCResult::Type::BOOL, \"pruned\", \"if the blocks are subject to pruning\"},\n+                        {RPCResult::Type::NUM, \"pruneheight\", \"lowest-height complete block stored (only present if pruning is enabled)\"},\n+                        {RPCResult::Type::BOOL, \"automatic_pruning\", \"whether automatic pruning is enabled (only present if pruning is enabled)\"},\n+                        {RPCResult::Type::NUM, \"prune_target_size\", \"the target size used by pruning (only present if automatic pruning is enabled)\"},\n+                        {RPCResult::Type::OBJ_DYN, \"softforks\", \"status of softforks\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"xxxx\", \"name of the softfork\",\n+                            {\n+                                {RPCResult::Type::STR, \"type\", \"one of \\\"buried\\\", \\\"bip9\\\"\"},\n+                                {RPCResult::Type::OBJ, \"bip9\", \"status of bip9 softforks (only for \\\"bip9\\\" type)\",\n+                                {\n+                                    {RPCResult::Type::STR, \"status\", \"one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\"},\n+                                    {RPCResult::Type::NUM, \"bit\", \"the bit (0-28) in the block version field used to signal this softfork\"},\n+                                    {RPCResult::Type::NUM, \"start_time\", \"the minimum median time past of a block at which the bit gains its meaning\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 532,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361789084,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed in fe3e2f1575",
      "created_at": "2019-12-29T16:03:27Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361858647",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1206,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858666",
      "pull_request_review_id": 336964420,
      "id": 361858666,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1ODY2Ng==",
      "diff_hunk": "@@ -983,17 +960,17 @@ static UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n                 \"Note this call may take some time.\\n\",\n                 {},\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"height\\\":n,     (numeric) The current block height (index)\\n\"\n-            \"  \\\"bestblock\\\": \\\"hex\\\",   (string) The hash of the block at the tip of the chain\\n\"\n-            \"  \\\"transactions\\\": n,      (numeric) The number of transactions with unspent outputs\\n\"\n-            \"  \\\"txouts\\\": n,            (numeric) The number of unspent transaction outputs\\n\"\n-            \"  \\\"bogosize\\\": n,          (numeric) A meaningless metric for UTXO set size\\n\"\n-            \"  \\\"hash_serialized_2\\\": \\\"hash\\\", (string) The serialized hash\\n\"\n-            \"  \\\"disk_size\\\": n,         (numeric) The estimated size of the chainstate on disk\\n\"\n-            \"  \\\"total_amount\\\": x.xxx          (numeric) The total amount\\n\"\n-            \"}\\n\"\n-                },\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::NUM, \"height\", \"The current block height (index)\"},\n+                        {RPCResult::Type::STR_HEX, \"bestblock\", \"The hash of the block at the tip of the chain\"},\n+                        {RPCResult::Type::NUM, \"transactions\", \"The number of transactions with unspent outputs\"},\n+                        {RPCResult::Type::NUM, \"txouts\", \"The number of unspent transaction outputs\"},\n+                        {RPCResult::Type::NUM, \"bogosize\", \"A meaningless metric for UTXO set size\"},\n+                        {RPCResult::Type::STR_HEX, \"hash_serialized_2\", \"The serialized hash\"},\n+                        {RPCResult::Type::NUM, \"disk_size\", \"The estimated size of the chainstate on disk\"},\n+                        {RPCResult::Type::NUM, \"total_amount\", \"The total amount\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 409,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361789011,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed in fe3e2f1575",
      "created_at": "2019-12-29T16:03:36Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361858666",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858666"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 972,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858674",
      "pull_request_review_id": 336964426,
      "id": 361858674,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1ODY3NA==",
      "diff_hunk": "@@ -377,37 +374,35 @@ static UniValue getdifficulty(const JSONRPCRequest& request)\n     return GetDifficulty(::ChainActive().Tip());\n }\n \n-static std::string EntryDescriptionString()\n-{\n-    return \"    \\\"vsize\\\" : n,            (numeric) virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\\n\"\n-           \"    \\\"size\\\" : n,             (numeric) (DEPRECATED) same as vsize. Only returned if bitcoind is started with -deprecatedrpc=size\\n\"\n-           \"                              size will be completely removed in v0.20.\\n\"\n-           \"    \\\"weight\\\" : n,           (numeric) transaction weight as defined in BIP 141.\\n\"\n-           \"    \\\"fee\\\" : n,              (numeric) transaction fee in \" + CURRENCY_UNIT + \" (DEPRECATED)\\n\"\n-           \"    \\\"modifiedfee\\\" : n,      (numeric) transaction fee with fee deltas used for mining priority (DEPRECATED)\\n\"\n-           \"    \\\"time\\\" : n,             (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\\n\"\n-           \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n-           \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n-           \"    \\\"descendantsize\\\" : n,   (numeric) virtual transaction size of in-mempool descendants (including this one)\\n\"\n-           \"    \\\"descendantfees\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one) (DEPRECATED)\\n\"\n-           \"    \\\"ancestorcount\\\" : n,    (numeric) number of in-mempool ancestor transactions (including this one)\\n\"\n-           \"    \\\"ancestorsize\\\" : n,     (numeric) virtual transaction size of in-mempool ancestors (including this one)\\n\"\n-           \"    \\\"ancestorfees\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one) (DEPRECATED)\\n\"\n-           \"    \\\"wtxid\\\" : hash,         (string) hash of serialized transaction, including witness data\\n\"\n-           \"    \\\"fees\\\" : {\\n\"\n-           \"        \\\"base\\\" : n,         (numeric) transaction fee in \" + CURRENCY_UNIT + \"\\n\"\n-           \"        \\\"modified\\\" : n,     (numeric) transaction fee with fee deltas used for mining priority in \" + CURRENCY_UNIT + \"\\n\"\n-           \"        \\\"ancestor\\\" : n,     (numeric) modified fees (see above) of in-mempool ancestors (including this one) in \" + CURRENCY_UNIT + \"\\n\"\n-           \"        \\\"descendant\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one) in \" + CURRENCY_UNIT + \"\\n\"\n-           \"    }\\n\"\n-           \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n-           \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n-           \"       ... ]\\n\"\n-           \"    \\\"spentby\\\" : [           (array) unconfirmed transactions spending outputs from this transaction\\n\"\n-           \"        \\\"transactionid\\\",    (string) child transaction id\\n\"\n-           \"       ... ]\\n\"\n-           \"    \\\"bip125-replaceable\\\" : true|false,  (boolean) Whether this transaction could be replaced due to BIP125 (replace-by-fee)\\n\";\n-}\n+static std::vector<RPCResult> MempoolEntryDescription() { return {\n+    RPCResult{RPCResult::Type::NUM, \"vsize\", \"virtual transaction size as defined in BIP 141. This is different from actual serialized size for witness transactions as witness data is discounted.\"},\n+    RPCResult{RPCResult::Type::NUM, \"size\", \"(DEPRECATED) same as vsize. Only returned if bitcoind is started with -deprecatedrpc=size\\n\"\n+                                            \"size will be completely removed in v0.20.\"},\n+    RPCResult{RPCResult::Type::NUM, \"weight\", \"transaction weight as defined in BIP 141.\"},\n+    RPCResult{RPCResult::Type::STR_AMOUNT, \"fee\", \"transaction fee in \" + CURRENCY_UNIT + \" (DEPRECATED)\"},\n+    RPCResult{RPCResult::Type::STR_AMOUNT, \"modifiedfee\", \"transaction fee with fee deltas used for mining priority (DEPRECATED)\"},\n+    RPCResult{RPCResult::Type::NUM, \"time\", \"local time transaction entered pool in seconds since 1 Jan 1970 GMT\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361788896,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed in fe3e2f1575",
      "created_at": "2019-12-29T16:03:45Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361858674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 384,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858691",
      "pull_request_review_id": 336964441,
      "id": 361858691,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MTg1ODY5MQ==",
      "diff_hunk": "@@ -3254,20 +3290,22 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n             \"       \\\"SINGLE|ANYONECANPAY\\\"\"},\n                 },\n                 RPCResult{\n-            \"{\\n\"\n-            \"  \\\"hex\\\" : \\\"value\\\",                  (string) The hex-encoded raw transaction with signature(s)\\n\"\n-            \"  \\\"complete\\\" : true|false,          (boolean) If the transaction has a complete set of signatures\\n\"\n-            \"  \\\"errors\\\" : [                      (json array of objects) Script verification errors (if there are any)\\n\"\n-            \"    {\\n\"\n-            \"      \\\"txid\\\" : \\\"hash\\\",              (string) The hash of the referenced, previous transaction\\n\"\n-            \"      \\\"vout\\\" : n,                   (numeric) The index of the output to spent and used as input\\n\"\n-            \"      \\\"scriptSig\\\" : \\\"hex\\\",          (string) The hex-encoded signature script\\n\"\n-            \"      \\\"sequence\\\" : n,               (numeric) Script sequence number\\n\"\n-            \"      \\\"error\\\" : \\\"text\\\"              (string) Verification or signing error related to the input\\n\"\n-            \"    }\\n\"\n-            \"    ,...\\n\"\n-            \"  ]\\n\"\n-            \"}\\n\"\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR_HEX, \"hex\", \"The hex-encoded raw transaction with signature(s)\"},\n+                        {RPCResult::Type::BOOL, \"complete\", \"If the transaction has a complete set of signatures\"},\n+                        {RPCResult::Type::ARR, \"errors\", \"Script verification errors (if there are any)\",\n+                        {\n+                            {RPCResult::Type::OBJ, \"\", \"\",\n+                            {\n+                                {RPCResult::Type::STR_HEX, \"txid\", \"The hash of the referenced, previous transaction\"},\n+                                {RPCResult::Type::NUM, \"vout\", \"The index of the output to spent and used as input\"},\n+                                {RPCResult::Type::STR, \"scriptSig\", \"The hex-encoded signature script\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 739,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "9ebdc9848dd95b75de22a3a8fdebc885e0d8f38d",
      "in_reply_to_id": 361788627,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed in fe3e2f1575",
      "created_at": "2019-12-29T16:03:55Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r361858691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/361858691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3303,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370802422",
      "pull_request_review_id": 348172718,
      "id": 370802422,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwMjQyMg==",
      "diff_hunk": "@@ -95,6 +96,16 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n /** Returns, given services flags, a list of humanly readable (known) network services */\n UniValue GetServicesNames(ServiceFlags services);\n \n+/**\n+ * Serializing JSON objects depends on the outer type. Only arrays and\n+ * dictionaries can be nested in json. The top-level outer type is \"NONE\".\n+ */\n+enum class OuterType {\n+    ARR,\n+    OBJ,\n+    NONE, // Only set on first recursion",
      "path": "src/rpc/util.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "37fc4d6d3025c3cc0bd32fc655eb0a36d929ac75",
      "in_reply_to_id": null,
      "user": {
        "login": "emilengler",
        "id": 12272949,
        "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
        "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/emilengler",
        "html_url": "https://github.com/emilengler",
        "followers_url": "https://api.github.com/users/emilengler/followers",
        "following_url": "https://api.github.com/users/emilengler/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/emilengler/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/emilengler/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
        "organizations_url": "https://api.github.com/users/emilengler/orgs",
        "repos_url": "https://api.github.com/users/emilengler/repos",
        "events_url": "https://api.github.com/users/emilengler/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/emilengler/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: You can drop this comma",
      "created_at": "2020-01-24T19:24:51Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r370802422",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370802422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370804195",
      "pull_request_review_id": 348174994,
      "id": 370804195,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDgwNDE5NQ==",
      "diff_hunk": "@@ -95,6 +96,16 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n /** Returns, given services flags, a list of humanly readable (known) network services */\n UniValue GetServicesNames(ServiceFlags services);\n \n+/**\n+ * Serializing JSON objects depends on the outer type. Only arrays and\n+ * dictionaries can be nested in json. The top-level outer type is \"NONE\".\n+ */\n+enum class OuterType {\n+    ARR,\n+    OBJ,\n+    NONE, // Only set on first recursion",
      "path": "src/rpc/util.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "37fc4d6d3025c3cc0bd32fc655eb0a36d929ac75",
      "in_reply_to_id": 370802422,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I want to keep it",
      "created_at": "2020-01-24T19:28:47Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r370804195",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/370804195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379401625",
      "pull_request_review_id": 358903036,
      "id": 379401625,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQwMTYyNQ==",
      "diff_hunk": "@@ -95,6 +96,16 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n /** Returns, given services flags, a list of humanly readable (known) network services */\n UniValue GetServicesNames(ServiceFlags services);\n \n+/**\n+ * Serializing JSON objects depends on the outer type. Only arrays and\n+ * dictionaries can be nested in json. The top-level outer type is \"NONE\".\n+ */\n+enum class OuterType {\n+    ARR,\n+    OBJ,\n+    NONE, // Only set on first recursion",
      "path": "src/rpc/util.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "37fc4d6d3025c3cc0bd32fc655eb0a36d929ac75",
      "in_reply_to_id": 370802422,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Trailing comma's prevent diff headaches later on, so we usually keep them.",
      "created_at": "2020-02-14T12:18:26Z",
      "updated_at": "2020-02-25T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r379401625",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379401625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386295217",
      "pull_request_review_id": 367073199,
      "id": 386295217,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5NTIxNw==",
      "diff_hunk": "@@ -3868,11 +3911,13 @@ static UniValue getaddressesbylabel(const JSONRPCRequest& request)\n                     {\"label\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The label.\"},\n                 },\n                 RPCResult{\n-            \"{ (json object with addresses as keys)\\n\"\n-            \"  \\\"address\\\" : { (json object with information about address)\\n\"\n-            \"    \\\"purpose\\\" : \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n-            \"  },...\\n\"\n-            \"}\\n\"\n+                    RPCResult::Type::OBJ_DYN, \"\", \"json object with addresses as keys\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"address\", \"json object with information about address\",\n+                        {\n+                            {RPCResult::Type::STR, \"purpose\", \"Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 899,
      "original_position": 899,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"(json object) json object with ....\" seems a bit redundant. Maybe \"(json object) keyed by address\" and \"(json object) information about the address\" would be better?",
      "created_at": "2020-03-02T09:59:49Z",
      "updated_at": "2020-03-02T09:59:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r386295217",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386295217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3918,
      "original_line": 3918,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386299875",
      "pull_request_review_id": 367078939,
      "id": 386299875,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI5OTg3NQ==",
      "diff_hunk": "@@ -2813,27 +2845,28 @@ static UniValue listunspent(const JSONRPCRequest& request)\n                         \"query_options\"},\n                 },\n                 RPCResult{\n-            \"[                   (array of json object)\\n\"\n-            \"  {\\n\"\n-            \"    \\\"txid\\\" : \\\"txid\\\",          (string) the transaction id \\n\"\n-            \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n-            \"    \\\"address\\\" : \\\"address\\\",    (string) the bitcoin address\\n\"\n-            \"    \\\"label\\\" : \\\"label\\\",        (string) The associated label, or \\\"\\\" for the default label\\n\"\n-            \"    \\\"scriptPubKey\\\" : \\\"key\\\",   (string) the script key\\n\"\n-            \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction output amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"    \\\"confirmations\\\" : n,      (numeric) The number of confirmations\\n\"\n-            \"    \\\"redeemScript\\\" : \\\"script\\\" (string) The redeemScript if scriptPubKey is P2SH\\n\"\n-            \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n-            \"    \\\"spendable\\\" : xxx,        (boolean) Whether we have the private keys to spend this output\\n\"\n-            \"    \\\"solvable\\\" : xxx,         (boolean) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n-            \"    \\\"reused\\\" : xxx,           (boolean) (only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\\n\"\n-            \"    \\\"desc\\\" : xxx,             (string, only when solvable) A descriptor for spending this output\\n\"\n-            \"    \\\"safe\\\" : xxx              (boolean) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value\"},\n+                            {RPCResult::Type::STR, \"address\", \"the bitcoin address\"},\n+                            {RPCResult::Type::STR, \"label\", \"The associated label, or \\\"\\\" for the default label\"},\n+                            {RPCResult::Type::STR, \"scriptPubKey\", \"the script key\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"amount\", \"the transaction output amount in \" + CURRENCY_UNIT},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                            {RPCResult::Type::STR_HEX, \"redeemScript\", \"The redeemScript if scriptPubKey is P2SH\"},\n+                            {RPCResult::Type::STR, \"witnessScript\", \"witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\"},\n+                            {RPCResult::Type::BOOL, \"spendable\", \"Whether we have the private keys to spend this output\"},\n+                            {RPCResult::Type::BOOL, \"solvable\", \"Whether we know how to spend this output, ignoring the lack of keys\"},\n+                            {RPCResult::Type::BOOL, \"reused\", \"(only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\"},\n+                            {RPCResult::Type::STR, \"desc\", \"(only when solvable) A descriptor for spending this output\"},\n+                            {RPCResult::Type::BOOL, \"safe\", \"Whether this output is considered safe to spend. Unconfirmed transactions\"\n             \"                              from outside keys and unconfirmed replacement transactions are considered unsafe\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 686,
      "original_position": 686,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not following why the leading spaces here are being kept?",
      "created_at": "2020-03-02T10:08:33Z",
      "updated_at": "2020-03-02T10:08:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r386299875",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386299875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2866,
      "original_line": 2866,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386404819",
      "pull_request_review_id": 367213654,
      "id": 386404819,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQwNDgxOQ==",
      "diff_hunk": "@@ -2813,27 +2845,28 @@ static UniValue listunspent(const JSONRPCRequest& request)\n                         \"query_options\"},\n                 },\n                 RPCResult{\n-            \"[                   (array of json object)\\n\"\n-            \"  {\\n\"\n-            \"    \\\"txid\\\" : \\\"txid\\\",          (string) the transaction id \\n\"\n-            \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n-            \"    \\\"address\\\" : \\\"address\\\",    (string) the bitcoin address\\n\"\n-            \"    \\\"label\\\" : \\\"label\\\",        (string) The associated label, or \\\"\\\" for the default label\\n\"\n-            \"    \\\"scriptPubKey\\\" : \\\"key\\\",   (string) the script key\\n\"\n-            \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction output amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"    \\\"confirmations\\\" : n,      (numeric) The number of confirmations\\n\"\n-            \"    \\\"redeemScript\\\" : \\\"script\\\" (string) The redeemScript if scriptPubKey is P2SH\\n\"\n-            \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n-            \"    \\\"spendable\\\" : xxx,        (boolean) Whether we have the private keys to spend this output\\n\"\n-            \"    \\\"solvable\\\" : xxx,         (boolean) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n-            \"    \\\"reused\\\" : xxx,           (boolean) (only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\\n\"\n-            \"    \\\"desc\\\" : xxx,             (string, only when solvable) A descriptor for spending this output\\n\"\n-            \"    \\\"safe\\\" : xxx              (boolean) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value\"},\n+                            {RPCResult::Type::STR, \"address\", \"the bitcoin address\"},\n+                            {RPCResult::Type::STR, \"label\", \"The associated label, or \\\"\\\" for the default label\"},\n+                            {RPCResult::Type::STR, \"scriptPubKey\", \"the script key\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"amount\", \"the transaction output amount in \" + CURRENCY_UNIT},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                            {RPCResult::Type::STR_HEX, \"redeemScript\", \"The redeemScript if scriptPubKey is P2SH\"},\n+                            {RPCResult::Type::STR, \"witnessScript\", \"witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\"},\n+                            {RPCResult::Type::BOOL, \"spendable\", \"Whether we have the private keys to spend this output\"},\n+                            {RPCResult::Type::BOOL, \"solvable\", \"Whether we know how to spend this output, ignoring the lack of keys\"},\n+                            {RPCResult::Type::BOOL, \"reused\", \"(only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\"},\n+                            {RPCResult::Type::STR, \"desc\", \"(only when solvable) A descriptor for spending this output\"},\n+                            {RPCResult::Type::BOOL, \"safe\", \"Whether this output is considered safe to spend. Unconfirmed transactions\"\n             \"                              from outside keys and unconfirmed replacement transactions are considered unsafe\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 686,
      "original_position": 686,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "in_reply_to_id": 386299875,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To preserve the output of `git blame`. Our style-guideline is to keep the current style unless the line is changed for other reasons.",
      "created_at": "2020-03-02T13:54:32Z",
      "updated_at": "2020-03-02T13:54:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r386404819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/386404819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2866,
      "original_line": 2866,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387704927",
      "pull_request_review_id": 368827668,
      "id": 387704927,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcwNDkyNw==",
      "diff_hunk": "@@ -3868,11 +3911,13 @@ static UniValue getaddressesbylabel(const JSONRPCRequest& request)\n                     {\"label\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The label.\"},\n                 },\n                 RPCResult{\n-            \"{ (json object with addresses as keys)\\n\"\n-            \"  \\\"address\\\" : { (json object with information about address)\\n\"\n-            \"    \\\"purpose\\\" : \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n-            \"  },...\\n\"\n-            \"}\\n\"\n+                    RPCResult::Type::OBJ_DYN, \"\", \"json object with addresses as keys\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"address\", \"json object with information about address\",\n+                        {\n+                            {RPCResult::Type::STR, \"purpose\", \"Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 899,
      "original_position": 899,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "in_reply_to_id": 386295217,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Seems like a good follow-up issue: #18258 ",
      "created_at": "2020-03-04T14:34:34Z",
      "updated_at": "2020-03-04T14:34:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r387704927",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/387704927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3918,
      "original_line": 3918,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388704661",
      "pull_request_review_id": 370072143,
      "id": 388704661,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODcwNDY2MQ==",
      "diff_hunk": "@@ -2813,27 +2845,28 @@ static UniValue listunspent(const JSONRPCRequest& request)\n                         \"query_options\"},\n                 },\n                 RPCResult{\n-            \"[                   (array of json object)\\n\"\n-            \"  {\\n\"\n-            \"    \\\"txid\\\" : \\\"txid\\\",          (string) the transaction id \\n\"\n-            \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n-            \"    \\\"address\\\" : \\\"address\\\",    (string) the bitcoin address\\n\"\n-            \"    \\\"label\\\" : \\\"label\\\",        (string) The associated label, or \\\"\\\" for the default label\\n\"\n-            \"    \\\"scriptPubKey\\\" : \\\"key\\\",   (string) the script key\\n\"\n-            \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction output amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"    \\\"confirmations\\\" : n,      (numeric) The number of confirmations\\n\"\n-            \"    \\\"redeemScript\\\" : \\\"script\\\" (string) The redeemScript if scriptPubKey is P2SH\\n\"\n-            \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n-            \"    \\\"spendable\\\" : xxx,        (boolean) Whether we have the private keys to spend this output\\n\"\n-            \"    \\\"solvable\\\" : xxx,         (boolean) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n-            \"    \\\"reused\\\" : xxx,           (boolean) (only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\\n\"\n-            \"    \\\"desc\\\" : xxx,             (string, only when solvable) A descriptor for spending this output\\n\"\n-            \"    \\\"safe\\\" : xxx              (boolean) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value\"},\n+                            {RPCResult::Type::STR, \"address\", \"the bitcoin address\"},\n+                            {RPCResult::Type::STR, \"label\", \"The associated label, or \\\"\\\" for the default label\"},\n+                            {RPCResult::Type::STR, \"scriptPubKey\", \"the script key\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"amount\", \"the transaction output amount in \" + CURRENCY_UNIT},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                            {RPCResult::Type::STR_HEX, \"redeemScript\", \"The redeemScript if scriptPubKey is P2SH\"},\n+                            {RPCResult::Type::STR, \"witnessScript\", \"witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\"},\n+                            {RPCResult::Type::BOOL, \"spendable\", \"Whether we have the private keys to spend this output\"},\n+                            {RPCResult::Type::BOOL, \"solvable\", \"Whether we know how to spend this output, ignoring the lack of keys\"},\n+                            {RPCResult::Type::BOOL, \"reused\", \"(only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\"},\n+                            {RPCResult::Type::STR, \"desc\", \"(only when solvable) A descriptor for spending this output\"},\n+                            {RPCResult::Type::BOOL, \"safe\", \"Whether this output is considered safe to spend. Unconfirmed transactions\"\n             \"                              from outside keys and unconfirmed replacement transactions are considered unsafe\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 686,
      "original_position": 686,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "in_reply_to_id": 386299875,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm, perhaps I was unclear: I meant the leading spaces inside the quoted string",
      "created_at": "2020-03-06T04:09:55Z",
      "updated_at": "2020-03-06T04:09:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r388704661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/388704661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2866,
      "original_line": 2866,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389106688",
      "pull_request_review_id": 370581102,
      "id": 389106688,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEwNjY4OA==",
      "diff_hunk": "@@ -2813,27 +2845,28 @@ static UniValue listunspent(const JSONRPCRequest& request)\n                         \"query_options\"},\n                 },\n                 RPCResult{\n-            \"[                   (array of json object)\\n\"\n-            \"  {\\n\"\n-            \"    \\\"txid\\\" : \\\"txid\\\",          (string) the transaction id \\n\"\n-            \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n-            \"    \\\"address\\\" : \\\"address\\\",    (string) the bitcoin address\\n\"\n-            \"    \\\"label\\\" : \\\"label\\\",        (string) The associated label, or \\\"\\\" for the default label\\n\"\n-            \"    \\\"scriptPubKey\\\" : \\\"key\\\",   (string) the script key\\n\"\n-            \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction output amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"    \\\"confirmations\\\" : n,      (numeric) The number of confirmations\\n\"\n-            \"    \\\"redeemScript\\\" : \\\"script\\\" (string) The redeemScript if scriptPubKey is P2SH\\n\"\n-            \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n-            \"    \\\"spendable\\\" : xxx,        (boolean) Whether we have the private keys to spend this output\\n\"\n-            \"    \\\"solvable\\\" : xxx,         (boolean) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n-            \"    \\\"reused\\\" : xxx,           (boolean) (only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\\n\"\n-            \"    \\\"desc\\\" : xxx,             (string, only when solvable) A descriptor for spending this output\\n\"\n-            \"    \\\"safe\\\" : xxx              (boolean) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value\"},\n+                            {RPCResult::Type::STR, \"address\", \"the bitcoin address\"},\n+                            {RPCResult::Type::STR, \"label\", \"The associated label, or \\\"\\\" for the default label\"},\n+                            {RPCResult::Type::STR, \"scriptPubKey\", \"the script key\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"amount\", \"the transaction output amount in \" + CURRENCY_UNIT},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                            {RPCResult::Type::STR_HEX, \"redeemScript\", \"The redeemScript if scriptPubKey is P2SH\"},\n+                            {RPCResult::Type::STR, \"witnessScript\", \"witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\"},\n+                            {RPCResult::Type::BOOL, \"spendable\", \"Whether we have the private keys to spend this output\"},\n+                            {RPCResult::Type::BOOL, \"solvable\", \"Whether we know how to spend this output, ignoring the lack of keys\"},\n+                            {RPCResult::Type::BOOL, \"reused\", \"(only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\"},\n+                            {RPCResult::Type::STR, \"desc\", \"(only when solvable) A descriptor for spending this output\"},\n+                            {RPCResult::Type::BOOL, \"safe\", \"Whether this output is considered safe to spend. Unconfirmed transactions\"\n             \"                              from outside keys and unconfirmed replacement transactions are considered unsafe\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 686,
      "original_position": 686,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "in_reply_to_id": 386299875,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Even those are stylistic and should be trimmed at the beginning of a newline",
      "created_at": "2020-03-06T19:43:00Z",
      "updated_at": "2020-03-06T19:43:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r389106688",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389106688"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2866,
      "original_line": 2866,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389108997",
      "pull_request_review_id": 370582661,
      "id": 389108997,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEwODk5Nw==",
      "diff_hunk": "@@ -2813,27 +2845,28 @@ static UniValue listunspent(const JSONRPCRequest& request)\n                         \"query_options\"},\n                 },\n                 RPCResult{\n-            \"[                   (array of json object)\\n\"\n-            \"  {\\n\"\n-            \"    \\\"txid\\\" : \\\"txid\\\",          (string) the transaction id \\n\"\n-            \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n-            \"    \\\"address\\\" : \\\"address\\\",    (string) the bitcoin address\\n\"\n-            \"    \\\"label\\\" : \\\"label\\\",        (string) The associated label, or \\\"\\\" for the default label\\n\"\n-            \"    \\\"scriptPubKey\\\" : \\\"key\\\",   (string) the script key\\n\"\n-            \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction output amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"    \\\"confirmations\\\" : n,      (numeric) The number of confirmations\\n\"\n-            \"    \\\"redeemScript\\\" : \\\"script\\\" (string) The redeemScript if scriptPubKey is P2SH\\n\"\n-            \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n-            \"    \\\"spendable\\\" : xxx,        (boolean) Whether we have the private keys to spend this output\\n\"\n-            \"    \\\"solvable\\\" : xxx,         (boolean) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n-            \"    \\\"reused\\\" : xxx,           (boolean) (only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\\n\"\n-            \"    \\\"desc\\\" : xxx,             (string, only when solvable) A descriptor for spending this output\\n\"\n-            \"    \\\"safe\\\" : xxx              (boolean) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value\"},\n+                            {RPCResult::Type::STR, \"address\", \"the bitcoin address\"},\n+                            {RPCResult::Type::STR, \"label\", \"The associated label, or \\\"\\\" for the default label\"},\n+                            {RPCResult::Type::STR, \"scriptPubKey\", \"the script key\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"amount\", \"the transaction output amount in \" + CURRENCY_UNIT},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                            {RPCResult::Type::STR_HEX, \"redeemScript\", \"The redeemScript if scriptPubKey is P2SH\"},\n+                            {RPCResult::Type::STR, \"witnessScript\", \"witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\"},\n+                            {RPCResult::Type::BOOL, \"spendable\", \"Whether we have the private keys to spend this output\"},\n+                            {RPCResult::Type::BOOL, \"solvable\", \"Whether we know how to spend this output, ignoring the lack of keys\"},\n+                            {RPCResult::Type::BOOL, \"reused\", \"(only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\"},\n+                            {RPCResult::Type::STR, \"desc\", \"(only when solvable) A descriptor for spending this output\"},\n+                            {RPCResult::Type::BOOL, \"safe\", \"Whether this output is considered safe to spend. Unconfirmed transactions\"\n             \"                              from outside keys and unconfirmed replacement transactions are considered unsafe\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 686,
      "original_position": 686,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "in_reply_to_id": 386299875,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh wait you are saying in the line *above* this line I missed a `\\n` character? I think I did. Someone should fix that.",
      "created_at": "2020-03-06T19:45:42Z",
      "updated_at": "2020-03-06T19:45:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r389108997",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/389108997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2866,
      "original_line": 2866,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392431837",
      "pull_request_review_id": 374563487,
      "id": 392431837,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzMTgzNw==",
      "diff_hunk": "@@ -2813,27 +2845,28 @@ static UniValue listunspent(const JSONRPCRequest& request)\n                         \"query_options\"},\n                 },\n                 RPCResult{\n-            \"[                   (array of json object)\\n\"\n-            \"  {\\n\"\n-            \"    \\\"txid\\\" : \\\"txid\\\",          (string) the transaction id \\n\"\n-            \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n-            \"    \\\"address\\\" : \\\"address\\\",    (string) the bitcoin address\\n\"\n-            \"    \\\"label\\\" : \\\"label\\\",        (string) The associated label, or \\\"\\\" for the default label\\n\"\n-            \"    \\\"scriptPubKey\\\" : \\\"key\\\",   (string) the script key\\n\"\n-            \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction output amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"    \\\"confirmations\\\" : n,      (numeric) The number of confirmations\\n\"\n-            \"    \\\"redeemScript\\\" : \\\"script\\\" (string) The redeemScript if scriptPubKey is P2SH\\n\"\n-            \"    \\\"witnessScript\\\" : \\\"script\\\" (string) witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\\n\"\n-            \"    \\\"spendable\\\" : xxx,        (boolean) Whether we have the private keys to spend this output\\n\"\n-            \"    \\\"solvable\\\" : xxx,         (boolean) Whether we know how to spend this output, ignoring the lack of keys\\n\"\n-            \"    \\\"reused\\\" : xxx,           (boolean) (only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\\n\"\n-            \"    \\\"desc\\\" : xxx,             (string, only when solvable) A descriptor for spending this output\\n\"\n-            \"    \\\"safe\\\" : xxx              (boolean) Whether this output is considered safe to spend. Unconfirmed transactions\\n\"\n+                    RPCResult::Type::ARR, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"the transaction id\"},\n+                            {RPCResult::Type::NUM, \"vout\", \"the vout value\"},\n+                            {RPCResult::Type::STR, \"address\", \"the bitcoin address\"},\n+                            {RPCResult::Type::STR, \"label\", \"The associated label, or \\\"\\\" for the default label\"},\n+                            {RPCResult::Type::STR, \"scriptPubKey\", \"the script key\"},\n+                            {RPCResult::Type::STR_AMOUNT, \"amount\", \"the transaction output amount in \" + CURRENCY_UNIT},\n+                            {RPCResult::Type::NUM, \"confirmations\", \"The number of confirmations\"},\n+                            {RPCResult::Type::STR_HEX, \"redeemScript\", \"The redeemScript if scriptPubKey is P2SH\"},\n+                            {RPCResult::Type::STR, \"witnessScript\", \"witnessScript if the scriptPubKey is P2WSH or P2SH-P2WSH\"},\n+                            {RPCResult::Type::BOOL, \"spendable\", \"Whether we have the private keys to spend this output\"},\n+                            {RPCResult::Type::BOOL, \"solvable\", \"Whether we know how to spend this output, ignoring the lack of keys\"},\n+                            {RPCResult::Type::BOOL, \"reused\", \"(only present if avoid_reuse is set) Whether this output is reused/dirty (sent to an address that was previously spent from)\"},\n+                            {RPCResult::Type::STR, \"desc\", \"(only when solvable) A descriptor for spending this output\"},\n+                            {RPCResult::Type::BOOL, \"safe\", \"Whether this output is considered safe to spend. Unconfirmed transactions\"\n             \"                              from outside keys and unconfirmed replacement transactions are considered unsafe\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 686,
      "original_position": 686,
      "commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "original_commit_id": "fa6b061fc118995eec41766519a11bc0dd1a901d",
      "in_reply_to_id": 386299875,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in #18346 ",
      "created_at": "2020-03-13T19:38:26Z",
      "updated_at": "2020-03-13T19:38:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17809#discussion_r392431837",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392431837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17809"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2866,
      "original_line": 2866,
      "side": "RIGHT"
    }
  ]
}