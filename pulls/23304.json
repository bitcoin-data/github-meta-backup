{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304",
    "id": 760843875,
    "node_id": "PR_kwDOABII584tWY5j",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23304",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/23304.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/23304.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/c4d76c6faa3adf06f192649e169ca860ce420d30",
    "number": 23304,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "wallet: Derive inactive HD chains in additional places",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Currently inactive HD chains are only derived from at the time a key in that chain is found to have been used. However, at that time, the wallet may not be able to derive keys (e.g. it is locked). Currently we would just move on and not derive any new keys, however this could result in missing funds.\r\n\r\nThis PR resolves this problem by adding memory only variables to `CHDChain` which track the highest known index. `TopUp` is modified to always try to top up the inactive HD chains, and this process will use the new variables to determine how much to top up. In this way, after an encrypted wallet is unlocked, the inactive HD chains will be topped up and hopefully funds will not be missed.\r\n\r\nNote that because these variables are not persisted to disk (because `CHDChain`s for inactive HD chains are not written to disk), if an encrypted wallet is not unlocked in the same session as a key from an inactive chain is found to be used, then it will not be topped up later unless more keys are found.\r\n\r\nAdditionally, wallets which do not have upgraded key metadata will not derive any keys from inactive HD chains. This is resolved by using the derivation path string in `CKeyMetadata.hdKeypath` to determine what indexes to derive.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/52",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/52",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/52/labels",
      "id": 6179837,
      "node_id": "MDk6TWlsZXN0b25lNjE3OTgzNw==",
      "number": 52,
      "state": "closed",
      "title": "23.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 123,
      "created_at": "2020-12-04T08:54:20Z",
      "updated_at": "2022-04-25T20:51:00Z",
      "closed_at": "2022-04-22T18:08:30Z"
    },
    "created_at": "2021-10-18T20:43:13Z",
    "updated_at": "2023-03-02T10:15:23Z",
    "closed_at": "2022-03-02T08:35:23Z",
    "mergeable_state": "unknown",
    "merged_at": "2022-03-02T08:35:23Z",
    "merge_commit_sha": "267917f5632a99bb51fc3fe516d8308e79d31ed1",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "achow101:inactivehd-derive-keypath-string",
      "ref": "inactivehd-derive-keypath-string",
      "sha": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 45006379,
        "node_id": "MDEwOlJlcG9zaXRvcnk0NTAwNjM3OQ==",
        "name": "bitcoin",
        "full_name": "achow101/bitcoin",
        "owner": {
          "login": "achow101",
          "id": 3782274,
          "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/achow101",
          "html_url": "https://github.com/achow101",
          "followers_url": "https://api.github.com/users/achow101/followers",
          "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
          "organizations_url": "https://api.github.com/users/achow101/orgs",
          "repos_url": "https://api.github.com/users/achow101/repos",
          "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/achow101/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/achow101/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/achow101/bitcoin",
        "archive_url": "https://api.github.com/repos/achow101/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/achow101/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/achow101/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/achow101/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/achow101/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/achow101/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/achow101/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/achow101/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/achow101/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/achow101/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/achow101/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/achow101/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/achow101/bitcoin/events",
        "forks_url": "https://api.github.com/repos/achow101/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/achow101/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/achow101/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/achow101/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/achow101/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/achow101/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/achow101/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/achow101/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/achow101/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/achow101/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/achow101/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/achow101/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/achow101/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/achow101/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/achow101/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/achow101/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:achow101/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/achow101/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/achow101/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/achow101/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/achow101/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/achow101/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/achow101/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/achow101/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/achow101/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/achow101/bitcoin/hooks",
        "svn_url": "https://github.com/achow101/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 10,
        "stargazers_count": 34,
        "watchers_count": 34,
        "size": 238743,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-02T17:43:24Z",
        "created_at": "2015-10-27T00:20:28Z",
        "updated_at": "2023-05-16T00:18:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c44e734dca64a15fae92255a5d848c04adaad2fa",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T05:35:10Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 234,
    "deletions": 55,
    "changed_files": 7,
    "commits": 5,
    "review_comments": 18,
    "comments": 9
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 5481560633,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFGufo5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5481560633",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T22:25:03Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5481613453,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFGusiN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5481613453",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T22:40:40Z"
    },
    {
      "event": "labeled",
      "id": 5481739747,
      "node_id": "LE_lADOABII5849XhrRzwAAAAFGvLXj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5481739747",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-18T23:20:05Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 946483206,
      "node_id": "IC_kwDOABII5844ajAG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/946483206",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-10-19T08:30:14Z",
      "updated_at": "2022-02-02T13:50:39Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23829](https://github.com/bitcoin/bitcoin/pull/23829) (refactor: use braced init for integer literals instead of c style casts by PastaPastaPasta)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-946483206",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5561811302,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFLgoFm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5561811302",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T13:13:57Z"
    },
    {
      "event": "ready_for_review",
      "id": 5561815433,
      "node_id": "RFRE_lADOABII5849XhrRzwAAAAFLgpGJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5561815433",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T13:14:35Z"
    },
    {
      "event": "commented",
      "id": 959047507,
      "node_id": "IC_kwDOABII5845KedT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/959047507",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-03T13:15:42Z",
      "updated_at": "2021-11-03T13:15:42Z",
      "author_association": "MEMBER",
      "body": "Ready for review, supersedes #23277 ",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-959047507",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "commented",
      "id": 981538843,
      "node_id": "IC_kwDOABII5846gRgb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/981538843",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-11-29T11:17:03Z",
      "updated_at": "2021-11-29T11:17:49Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, thanks for adding a test!",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-981538843",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA2NTJlZTczZWM4ODBhNjZlYzg4YmRlMDA3ZWUwM2MwYjlkMWIwNzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0652ee73ec880a66ec88bde007ee03c0b9d1b074",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0652ee73ec880a66ec88bde007ee03c0b9d1b074",
      "tree": {
        "sha": "176cf2ac077ddf3b393bd8eb4b4c248077a93304",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/176cf2ac077ddf3b393bd8eb4b4c248077a93304"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/577bd51a4b8de066466a445192c1c653872657e2",
          "sha": "577bd51a4b8de066466a445192c1c653872657e2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/577bd51a4b8de066466a445192c1c653872657e2"
        }
      ],
      "message": "Add size check on meta.key_origin.path\n\nResolves segfault on legacy wallet\n\nLog warning when meta.key_origin.path is below expected size",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-12-08T16:22:29Z"
      },
      "author": {
        "name": "Rob Fielding",
        "email": "rob@g17.co.nz",
        "date": "2021-10-14T04:32:05Z"
      },
      "sha": "0652ee73ec880a66ec88bde007ee03c0b9d1b074"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2MWI5ZTRlNDAwMTlhODdlYWExMWM4YTljMzMwNTg3MGY3YTZkNzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/961b9e4e40019a87eaa11c8a9c3305870f7a6d75",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/961b9e4e40019a87eaa11c8a9c3305870f7a6d75",
      "tree": {
        "sha": "0192becba6f8810f368a7a458e9fd97e15fb284d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0192becba6f8810f368a7a458e9fd97e15fb284d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0652ee73ec880a66ec88bde007ee03c0b9d1b074",
          "sha": "0652ee73ec880a66ec88bde007ee03c0b9d1b074",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0652ee73ec880a66ec88bde007ee03c0b9d1b074"
        }
      ],
      "message": "wallet: Parse hdKeypath if key_origin is not available\n\nWhen topping up an inactive HD chain, either key_origin will be\navailable and we can use the path given there, or we need to figure out\nthe path from the string hdKeypath.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-12-08T16:22:29Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-10-18T18:43:26Z"
      },
      "sha": "961b9e4e40019a87eaa11c8a9c3305870f7a6d75"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwMTM0ZWIzNGY1OGYwYzU3MmU3YzM3NzVlMjkyZDQwOGYwM2I1YWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70134eb34f58f0c572e7c3775e292d408f03b5ab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/70134eb34f58f0c572e7c3775e292d408f03b5ab",
      "tree": {
        "sha": "9ac8675752c67d4214a53f57be68f93c641781b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ac8675752c67d4214a53f57be68f93c641781b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/961b9e4e40019a87eaa11c8a9c3305870f7a6d75",
          "sha": "961b9e4e40019a87eaa11c8a9c3305870f7a6d75",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/961b9e4e40019a87eaa11c8a9c3305870f7a6d75"
        }
      ],
      "message": "wallet: Properly set hd chain counters when loading\n\nWhen build CHDChains out of CKeyMetadata, the chain counters are\nactually 1 based, not 0 based, so 1 must be added to each index.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-12-08T16:22:29Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-10-18T22:22:59Z"
      },
      "sha": "70134eb34f58f0c572e7c3775e292d408f03b5ab"
    },
    {
      "event": "commented",
      "id": 988968690,
      "node_id": "IC_kwDOABII58468nby",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/988968690",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-08T16:27:16Z",
      "updated_at": "2021-12-08T16:27:16Z",
      "author_association": "MEMBER",
      "body": "Rebased for hidden merge conflict.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-988968690",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5734992452,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFV1QpE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5734992452",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-08T16:27:20Z"
    },
    {
      "event": "reviewed",
      "id": 852397699,
      "node_id": "PRR_kwDOABII584yzo6D",
      "url": null,
      "actor": null,
      "commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "some formatting suggestions (can also just run clang-diff-format.py)",
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#pullrequestreview-852397699",
      "submitted_at": "2022-01-14T01:14:18Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5897049093,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFffdQF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5897049093",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-14T20:02:57Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwNzc4NjJjNWU4YTNlZDUwMWYwYmFhYmMzMzUzNmViMTY5MjJjZWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8077862c5e8a3ed501f0baabc33536eb16922ceb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8077862c5e8a3ed501f0baabc33536eb16922ceb",
      "tree": {
        "sha": "5affda338dde813a50971d6ad31b67d5766c6c24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5affda338dde813a50971d6ad31b67d5766c6c24"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70134eb34f58f0c572e7c3775e292d408f03b5ab",
          "sha": "70134eb34f58f0c572e7c3775e292d408f03b5ab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/70134eb34f58f0c572e7c3775e292d408f03b5ab"
        }
      ],
      "message": "wallet: Refactor TopUp to be able to top up inactive chains too\n\nRefactors TopUp so that it also tops up inactive chains. The bulk of\nTopUp is moved to TopUpChain.\n\nCHDChain also has 2 new in memory variables to track its highest used\nindexes. This is used only for inactive hd chains so that they can be\ntopped up later in the same session (e.g. if the wallet is encrypted and\nnot unlocked at the time of MarkUnusedAddresses).",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2022-01-14T20:03:15Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-10-18T19:27:27Z"
      },
      "sha": "8077862c5e8a3ed501f0baabc33536eb16922ceb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 5897050854,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFffdrm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5897050854",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-01-14T20:03:22Z"
    },
    {
      "event": "reviewed",
      "id": 865691332,
      "node_id": "PRR_kwDOABII584zmWbE",
      "url": null,
      "actor": null,
      "commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#pullrequestreview-865691332",
      "submitted_at": "2022-01-28T04:51:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
    },
    {
      "event": "commented",
      "id": 1043219811,
      "node_id": "IC_kwDOABII584-LkVj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1043219811",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T17:30:03Z",
      "updated_at": "2022-02-17T17:30:03Z",
      "author_association": "MEMBER",
      "body": "Do we want this for 23.0? It fixes a segfault that a number of people have run into.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1043219811",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "renamed",
      "id": 6092171936,
      "node_id": "RTE_lADOABII5849XhrRzwAAAAFrHyqg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6092171936",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T17:39:26Z",
      "rename": {
        "from": "wallet: Derive inactive HD chains in addtional places",
        "to": "wallet: Derive inactive HD chains in additional places"
      }
    },
    {
      "event": "milestoned",
      "id": 6092232264,
      "node_id": "MIE_lADOABII5849XhrRzwAAAAFrIBZI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6092232264",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-17T17:48:59Z",
      "milestone": {
        "title": "23.0"
      }
    },
    {
      "event": "review_requested",
      "id": 6110196816,
      "node_id": "RRE_lADOABII5849XhrRzwAAAAFsMjRQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6110196816",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T09:48:54Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 6110198331,
      "node_id": "RRE_lADOABII5849XhrRzwAAAAFsMjo7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6110198331",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-21T09:49:07Z",
      "requested_reviewer": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 889219977,
      "node_id": "PRR_kwDOABII5841AGuJ",
      "url": null,
      "actor": null,
      "commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#pullrequestreview-889219977",
      "submitted_at": "2022-02-22T02:25:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6120500789,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFsz241",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6120500789",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T19:36:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6120513404,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFsz598",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6120513404",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T19:38:43Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM0ZDc2YzZmYWEzYWRmMDZmMTkyNjQ5ZTE2OWNhODYwY2U0MjBkMzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4d76c6faa3adf06f192649e169ca860ce420d30",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c4d76c6faa3adf06f192649e169ca860ce420d30",
      "tree": {
        "sha": "70043d589a084e9676fedc156d5aed1b6f5094b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/70043d589a084e9676fedc156d5aed1b6f5094b9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8077862c5e8a3ed501f0baabc33536eb16922ceb",
          "sha": "8077862c5e8a3ed501f0baabc33536eb16922ceb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8077862c5e8a3ed501f0baabc33536eb16922ceb"
        }
      ],
      "message": "tests: Tests for inactive HD chains\n\ntest cases are added for inactive HD chains: a basic case, a case\nwhere the wallet is encrypted, and a case for the 21605 segfault.",
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2022-02-22T19:41:52Z"
      },
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2021-10-18T20:24:24Z"
      },
      "sha": "c4d76c6faa3adf06f192649e169ca860ce420d30"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6120529900,
      "node_id": "HRFPE_lADOABII5849XhrRzwAAAAFsz9_s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6120529900",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-22T19:41:58Z"
    },
    {
      "event": "review_request_removed",
      "id": 6124162245,
      "node_id": "RRRE_lADOABII5849XhrRzwAAAAFtB0zF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6124162245",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-23T11:05:33Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 6124162255,
      "node_id": "RRE_lADOABII5849XhrRzwAAAAFtB0zP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6124162255",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-23T11:05:33Z",
      "requested_reviewer": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "connected",
      "id": 6134618659,
      "node_id": "COE_lADOABII5849XhrRzwAAAAFtptoj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6134618659",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-24T19:49:40Z"
    },
    {
      "event": "commented",
      "id": 1054201530,
      "node_id": "IC_kwDOABII584-1da6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054201530",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-28T12:21:06Z",
      "updated_at": "2022-02-28T16:04:50Z",
      "author_association": "MEMBER",
      "body": "> Do we want this for 23.0? \r\n\r\nYes, definitely.\r\n\r\nIt would be really good to have a tested ACK from someone experiencing the segfault problem.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1054201530",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "commented",
      "id": 1054381764,
      "node_id": "IC_kwDOABII584-2JbE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1054381764",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-28T15:37:18Z",
      "updated_at": "2022-02-28T15:37:18Z",
      "author_association": "MEMBER",
      "body": "Code review ACK c4d76c6faa3adf06f192649e169ca860ce420d30",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1054381764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "commented",
      "id": 1055457852,
      "node_id": "IC_kwDOABII584-6QI8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1055457852",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T13:45:40Z",
      "updated_at": "2022-03-01T13:45:40Z",
      "author_association": "MEMBER",
      "body": "@GITErnesO @IvRRimum are you able to test this change?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1055457852",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "mentioned",
      "id": 6162158993,
      "node_id": "MEE_lADOABII5849XhrRzwAAAAFvSxWR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6162158993",
      "actor": {
        "login": "IvRRimum",
        "id": 5957079,
        "node_id": "MDQ6VXNlcjU5NTcwNzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5957079?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvRRimum",
        "html_url": "https://github.com/IvRRimum",
        "followers_url": "https://api.github.com/users/IvRRimum/followers",
        "following_url": "https://api.github.com/users/IvRRimum/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/IvRRimum/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/IvRRimum/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/IvRRimum/subscriptions",
        "organizations_url": "https://api.github.com/users/IvRRimum/orgs",
        "repos_url": "https://api.github.com/users/IvRRimum/repos",
        "events_url": "https://api.github.com/users/IvRRimum/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/IvRRimum/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T13:45:40Z"
    },
    {
      "event": "subscribed",
      "id": 6162158998,
      "node_id": "SE_lADOABII5849XhrRzwAAAAFvSxWW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6162158998",
      "actor": {
        "login": "IvRRimum",
        "id": 5957079,
        "node_id": "MDQ6VXNlcjU5NTcwNzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5957079?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvRRimum",
        "html_url": "https://github.com/IvRRimum",
        "followers_url": "https://api.github.com/users/IvRRimum/followers",
        "following_url": "https://api.github.com/users/IvRRimum/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/IvRRimum/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/IvRRimum/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/IvRRimum/subscriptions",
        "organizations_url": "https://api.github.com/users/IvRRimum/orgs",
        "repos_url": "https://api.github.com/users/IvRRimum/repos",
        "events_url": "https://api.github.com/users/IvRRimum/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/IvRRimum/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T13:45:40Z"
    },
    {
      "event": "mentioned",
      "id": 6162159006,
      "node_id": "MEE_lADOABII5849XhrRzwAAAAFvSxWe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6162159006",
      "actor": {
        "login": "GITErnesO",
        "id": 99622432,
        "node_id": "U_kgDOBfAeIA",
        "avatar_url": "https://avatars.githubusercontent.com/u/99622432?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GITErnesO",
        "html_url": "https://github.com/GITErnesO",
        "followers_url": "https://api.github.com/users/GITErnesO/followers",
        "following_url": "https://api.github.com/users/GITErnesO/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GITErnesO/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GITErnesO/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GITErnesO/subscriptions",
        "organizations_url": "https://api.github.com/users/GITErnesO/orgs",
        "repos_url": "https://api.github.com/users/GITErnesO/repos",
        "events_url": "https://api.github.com/users/GITErnesO/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GITErnesO/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T13:45:40Z"
    },
    {
      "event": "subscribed",
      "id": 6162159014,
      "node_id": "SE_lADOABII5849XhrRzwAAAAFvSxWm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6162159014",
      "actor": {
        "login": "GITErnesO",
        "id": 99622432,
        "node_id": "U_kgDOBfAeIA",
        "avatar_url": "https://avatars.githubusercontent.com/u/99622432?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GITErnesO",
        "html_url": "https://github.com/GITErnesO",
        "followers_url": "https://api.github.com/users/GITErnesO/followers",
        "following_url": "https://api.github.com/users/GITErnesO/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GITErnesO/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GITErnesO/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GITErnesO/subscriptions",
        "organizations_url": "https://api.github.com/users/GITErnesO/orgs",
        "repos_url": "https://api.github.com/users/GITErnesO/repos",
        "events_url": "https://api.github.com/users/GITErnesO/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GITErnesO/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T13:45:40Z"
    },
    {
      "event": "commented",
      "id": 1055624248,
      "node_id": "IC_kwDOABII584-64w4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1055624248",
      "actor": {
        "login": "GITErnesO",
        "id": 99622432,
        "node_id": "U_kgDOBfAeIA",
        "avatar_url": "https://avatars.githubusercontent.com/u/99622432?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GITErnesO",
        "html_url": "https://github.com/GITErnesO",
        "followers_url": "https://api.github.com/users/GITErnesO/followers",
        "following_url": "https://api.github.com/users/GITErnesO/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GITErnesO/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GITErnesO/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GITErnesO/subscriptions",
        "organizations_url": "https://api.github.com/users/GITErnesO/orgs",
        "repos_url": "https://api.github.com/users/GITErnesO/repos",
        "events_url": "https://api.github.com/users/GITErnesO/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GITErnesO/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T16:28:03Z",
      "updated_at": "2022-03-01T16:28:03Z",
      "author_association": "NONE",
      "body": "> @GITErnesO @IvRRimum are you able to test this change?\r\n\r\nI have 7 empty wallets that throw this error.\r\nI'm still trying to build from sources.\r\n\r\nI gave one of the wallets that throw this error to achow101 so my guess is that he checked that now it works OK.\r\nAnd my guess is that it is the same issue for the other wallets.\r\n\r\nIf I can get and RC or an internal version I will check all the 7 wallets.\r\nI'll also continue to build from sources, so I can compile a version with this pull and test the wallets.\r\n",
      "user": {
        "login": "GITErnesO",
        "id": 99622432,
        "node_id": "U_kgDOBfAeIA",
        "avatar_url": "https://avatars.githubusercontent.com/u/99622432?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GITErnesO",
        "html_url": "https://github.com/GITErnesO",
        "followers_url": "https://api.github.com/users/GITErnesO/followers",
        "following_url": "https://api.github.com/users/GITErnesO/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GITErnesO/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GITErnesO/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GITErnesO/subscriptions",
        "organizations_url": "https://api.github.com/users/GITErnesO/orgs",
        "repos_url": "https://api.github.com/users/GITErnesO/repos",
        "events_url": "https://api.github.com/users/GITErnesO/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GITErnesO/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#issuecomment-1055624248",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23304"
    },
    {
      "event": "mentioned",
      "id": 6163308649,
      "node_id": "MEE_lADOABII5849XhrRzwAAAAFvXKBp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6163308649",
      "actor": {
        "login": "IvRRimum",
        "id": 5957079,
        "node_id": "MDQ6VXNlcjU5NTcwNzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5957079?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvRRimum",
        "html_url": "https://github.com/IvRRimum",
        "followers_url": "https://api.github.com/users/IvRRimum/followers",
        "following_url": "https://api.github.com/users/IvRRimum/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/IvRRimum/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/IvRRimum/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/IvRRimum/subscriptions",
        "organizations_url": "https://api.github.com/users/IvRRimum/orgs",
        "repos_url": "https://api.github.com/users/IvRRimum/repos",
        "events_url": "https://api.github.com/users/IvRRimum/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/IvRRimum/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T16:28:03Z"
    },
    {
      "event": "subscribed",
      "id": 6163308656,
      "node_id": "SE_lADOABII5849XhrRzwAAAAFvXKBw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6163308656",
      "actor": {
        "login": "IvRRimum",
        "id": 5957079,
        "node_id": "MDQ6VXNlcjU5NTcwNzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5957079?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/IvRRimum",
        "html_url": "https://github.com/IvRRimum",
        "followers_url": "https://api.github.com/users/IvRRimum/followers",
        "following_url": "https://api.github.com/users/IvRRimum/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/IvRRimum/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/IvRRimum/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/IvRRimum/subscriptions",
        "organizations_url": "https://api.github.com/users/IvRRimum/orgs",
        "repos_url": "https://api.github.com/users/IvRRimum/repos",
        "events_url": "https://api.github.com/users/IvRRimum/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/IvRRimum/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T16:28:03Z"
    },
    {
      "event": "mentioned",
      "id": 6163308662,
      "node_id": "MEE_lADOABII5849XhrRzwAAAAFvXKB2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6163308662",
      "actor": {
        "login": "GITErnesO",
        "id": 99622432,
        "node_id": "U_kgDOBfAeIA",
        "avatar_url": "https://avatars.githubusercontent.com/u/99622432?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GITErnesO",
        "html_url": "https://github.com/GITErnesO",
        "followers_url": "https://api.github.com/users/GITErnesO/followers",
        "following_url": "https://api.github.com/users/GITErnesO/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GITErnesO/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GITErnesO/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GITErnesO/subscriptions",
        "organizations_url": "https://api.github.com/users/GITErnesO/orgs",
        "repos_url": "https://api.github.com/users/GITErnesO/repos",
        "events_url": "https://api.github.com/users/GITErnesO/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GITErnesO/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T16:28:03Z"
    },
    {
      "event": "subscribed",
      "id": 6163308667,
      "node_id": "SE_lADOABII5849XhrRzwAAAAFvXKB7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6163308667",
      "actor": {
        "login": "GITErnesO",
        "id": 99622432,
        "node_id": "U_kgDOBfAeIA",
        "avatar_url": "https://avatars.githubusercontent.com/u/99622432?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GITErnesO",
        "html_url": "https://github.com/GITErnesO",
        "followers_url": "https://api.github.com/users/GITErnesO/followers",
        "following_url": "https://api.github.com/users/GITErnesO/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GITErnesO/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GITErnesO/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GITErnesO/subscriptions",
        "organizations_url": "https://api.github.com/users/GITErnesO/orgs",
        "repos_url": "https://api.github.com/users/GITErnesO/repos",
        "events_url": "https://api.github.com/users/GITErnesO/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GITErnesO/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-01T16:28:03Z"
    },
    {
      "event": "merged",
      "id": 6168718445,
      "node_id": "ME_lADOABII5849XhrRzwAAAAFvryxt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6168718445",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "267917f5632a99bb51fc3fe516d8308e79d31ed1",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/267917f5632a99bb51fc3fe516d8308e79d31ed1",
      "created_at": "2022-03-02T08:35:23Z"
    },
    {
      "event": "closed",
      "id": 6168718503,
      "node_id": "CE_lADOABII5849XhrRzwAAAAFvryyn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6168718503",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-03-02T08:35:24Z"
    },
    {
      "event": "referenced",
      "id": 6174491557,
      "node_id": "REFE_lADOABII5849XhrRzwAAAAFwB0Ol",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6174491557",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4604cb4862f948adb2fcdbbd94d5bce8a26c8066",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/4604cb4862f948adb2fcdbbd94d5bce8a26c8066",
      "created_at": "2022-03-02T23:25:09Z"
    },
    {
      "event": "locked",
      "id": 8647627549,
      "node_id": "LOE_lADOABII5849XhrRzwAAAAIDcFMd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8647627549",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-02T10:15:23Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784438902",
      "pull_request_review_id": 852397699,
      "id": 784438902,
      "node_id": "PRRC_kwDOABII584uwZZ2",
      "diff_hunk": "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 116,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": null,
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since you're touching this, please make it braces or same line to be inline with the style guide",
      "created_at": "2022-01-14T01:10:13Z",
      "updated_at": "2022-01-14T01:14:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784438902",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784438902"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": 1282,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439016",
      "pull_request_review_id": 852397699,
      "id": 784439016,
      "node_id": "PRRC_kwDOABII584uwZbo",
      "diff_hunk": "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": null,
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "please make this not use c-style cast\r\n\r\n```\r\nint64_t{1}",
      "created_at": "2022-01-14T01:10:34Z",
      "updated_at": "2022-01-14T01:14:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439016",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439275",
      "pull_request_review_id": 852397699,
      "id": 784439275,
      "node_id": "PRRC_kwDOABII584uwZfr",
      "diff_hunk": "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    } else {\n+        missingExternal = std::max(target - (chain.nExternalChainCounter - chain.m_next_external_index), (int64_t) 0);\n+        missingInternal = std::max(target - (chain.nInternalChainCounter - chain.m_next_internal_index), (int64_t) 0);\n+    }\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n+    {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": null,
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same line\r\n```suggestion\r\n    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT)) {\r\n```",
      "created_at": "2022-01-14T01:11:20Z",
      "updated_at": "2022-01-14T01:14:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439275",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": 1300,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439378",
      "pull_request_review_id": 852397699,
      "id": 784439378,
      "node_id": "PRRC_kwDOABII584uwZhS",
      "diff_hunk": "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    } else {\n+        missingExternal = std::max(target - (chain.nExternalChainCounter - chain.m_next_external_index), (int64_t) 0);\n+        missingInternal = std::max(target - (chain.nInternalChainCounter - chain.m_next_internal_index), (int64_t) 0);\n+    }\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n+    {\n+        // don't create extra internal keys\n+        missingInternal = 0;\n+    }\n+    bool internal = false;\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missingInternal + missingExternal; i--;)\n+    {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 143,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": null,
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    for (int64_t i = missingInternal + missingExternal; i--;) {\r\n```",
      "created_at": "2022-01-14T01:11:42Z",
      "updated_at": "2022-01-14T01:14:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439378",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439378"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": 1307,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439520",
      "pull_request_review_id": 852397699,
      "id": 784439520,
      "node_id": "PRRC_kwDOABII584uwZjg",
      "diff_hunk": "@@ -354,6 +354,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal);\n \n+    bool TopUpChain(CHDChain& chain ,unsigned int size);",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": null,
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    bool TopUpChain(CHDChain& chain, unsigned int size);\r\n```",
      "created_at": "2022-01-14T01:12:05Z",
      "updated_at": "2022-01-14T01:14:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r784439520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/784439520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138789",
      "pull_request_review_id": 853337044,
      "id": 785138789,
      "node_id": "PRRC_kwDOABII584uzERl",
      "diff_hunk": "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 116,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": 784438902,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-01-14T20:03:24Z",
      "updated_at": "2022-01-14T20:03:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": 1282,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138840",
      "pull_request_review_id": 853337101,
      "id": 785138840,
      "node_id": "PRRC_kwDOABII584uzESY",
      "diff_hunk": "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": 784439016,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-01-14T20:03:29Z",
      "updated_at": "2022-01-14T20:03:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1286,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138886",
      "pull_request_review_id": 853337176,
      "id": 785138886,
      "node_id": "PRRC_kwDOABII584uzETG",
      "diff_hunk": "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    } else {\n+        missingExternal = std::max(target - (chain.nExternalChainCounter - chain.m_next_external_index), (int64_t) 0);\n+        missingInternal = std::max(target - (chain.nInternalChainCounter - chain.m_next_internal_index), (int64_t) 0);\n+    }\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n+    {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": 784439275,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-01-14T20:03:36Z",
      "updated_at": "2022-01-14T20:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138886",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": 1300,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1301,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138914",
      "pull_request_review_id": 853337224,
      "id": 785138914,
      "node_id": "PRRC_kwDOABII584uzETi",
      "diff_hunk": "@@ -1258,44 +1258,70 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n+\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0)\n+        nTargetSize = kpSize;\n+    else\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+    int64_t target = std::max((int64_t) nTargetSize, (int64_t) 1);\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    } else {\n+        missingExternal = std::max(target - (chain.nExternalChainCounter - chain.m_next_external_index), (int64_t) 0);\n+        missingInternal = std::max(target - (chain.nInternalChainCounter - chain.m_next_internal_index), (int64_t) 0);\n+    }\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n+    {\n+        // don't create extra internal keys\n+        missingInternal = 0;\n+    }\n+    bool internal = false;\n+    WalletBatch batch(m_storage.GetDatabase());\n+    for (int64_t i = missingInternal + missingExternal; i--;)\n+    {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 143,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": 784439378,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-01-14T20:03:39Z",
      "updated_at": "2022-01-14T20:03:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": 1307,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138940",
      "pull_request_review_id": 853337267,
      "id": 785138940,
      "node_id": "PRRC_kwDOABII584uzET8",
      "diff_hunk": "@@ -354,6 +354,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool TopUpInactiveHDChain(const CKeyID seed_id, int64_t index, bool internal);\n \n+    bool TopUpChain(CHDChain& chain ,unsigned int size);",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "38c949ae1b0abe6fd3eae82c59dcb75b98006f42",
      "in_reply_to_id": 784439520,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2022-01-14T20:03:43Z",
      "updated_at": "2022-01-14T20:03:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r785138940",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/785138940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200640",
      "pull_request_review_id": 865691332,
      "id": 794200640,
      "node_id": "PRRC_kwDOABII584vVopA",
      "diff_hunk": "@@ -1258,44 +1258,69 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0) {\n+        nTargetSize = kpSize;\n+    } else {\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), int64_t{0});\n+    }\n+    int64_t target = std::max((int64_t) nTargetSize, int64_t{1});",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 122,
      "original_position": 122,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "in_reply_to_id": null,
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "avoid c-style casts\r\n```suggestion\r\n    int64_t target = std::max(int64_t(nTargetSize), int64_t{1});\r\n```",
      "created_at": "2022-01-28T04:50:01Z",
      "updated_at": "2022-01-28T04:51:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r794200640",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1287,
      "original_line": 1287,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200792",
      "pull_request_review_id": 865691332,
      "id": 794200792,
      "node_id": "PRRC_kwDOABII584vVorY",
      "diff_hunk": "@@ -1258,44 +1258,69 @@ bool LegacyScriptPubKeyMan::TopUp(unsigned int kpSize)\n     if (!CanGenerateKeys()) {\n         return false;\n     }\n-    {\n-        LOCK(cs_KeyStore);\n \n-        if (m_storage.IsLocked()) return false;\n+    if (!TopUpChain(m_hd_chain, kpSize)) {\n+        return false;\n+    }\n+    for (auto& [chain_id, chain] : m_inactive_hd_chains) {\n+        if (!TopUpChain(chain, kpSize)) {\n+            return false;\n+        }\n+    }\n+    NotifyCanGetAddressesChanged();\n+    return true;\n+}\n \n-        // Top up key pool\n-        unsigned int nTargetSize;\n-        if (kpSize > 0)\n-            nTargetSize = kpSize;\n-        else\n-            nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), (int64_t) 0);\n+bool LegacyScriptPubKeyMan::TopUpChain(CHDChain& chain, unsigned int kpSize)\n+{\n+    LOCK(cs_KeyStore);\n \n-        // count amount of available keys (internal, external)\n-        // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n-        int64_t missingExternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setExternalKeyPool.size(), (int64_t) 0);\n-        int64_t missingInternal = std::max(std::max((int64_t) nTargetSize, (int64_t) 1) - (int64_t)setInternalKeyPool.size(), (int64_t) 0);\n+    if (m_storage.IsLocked()) return false;\n \n-        if (!IsHDEnabled() || !m_storage.CanSupportFeature(FEATURE_HD_SPLIT))\n-        {\n-            // don't create extra internal keys\n-            missingInternal = 0;\n+    // Top up key pool\n+    unsigned int nTargetSize;\n+    if (kpSize > 0) {\n+        nTargetSize = kpSize;\n+    } else {\n+        nTargetSize = std::max(gArgs.GetIntArg(\"-keypool\", DEFAULT_KEYPOOL_SIZE), int64_t{0});\n+    }\n+    int64_t target = std::max((int64_t) nTargetSize, int64_t{1});\n+\n+    // count amount of available keys (internal, external)\n+    // make sure the keypool of external and internal keys fits the user selected target (-keypool)\n+    int64_t missingExternal;\n+    int64_t missingInternal;\n+    if (chain == m_hd_chain) {\n+        missingExternal = std::max(target - (int64_t)setExternalKeyPool.size(), int64_t{0});\n+        missingInternal = std::max(target - (int64_t)setInternalKeyPool.size(), int64_t{0});",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 130,
      "original_position": 130,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "in_reply_to_id": null,
      "user": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        missingExternal = std::max(target - int64_t(setExternalKeyPool.size()), int64_t{0});\r\n        missingInternal = std::max(target - int64_t(setInternalKeyPool.size()), int64_t{0});\r\n```",
      "created_at": "2022-01-28T04:50:32Z",
      "updated_at": "2022-01-28T04:51:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r794200792",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/794200792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": 1294,
      "original_start_line": 1294,
      "start_side": "RIGHT",
      "line": 1295,
      "original_line": 1295,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811523943",
      "pull_request_review_id": 889219977,
      "id": 811523943,
      "node_id": "PRRC_kwDOABII584wXt9n",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6",
      "path": "test/functional/wallet_inactive_hdchains.py",
      "position": null,
      "original_position": 54,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "where are these magic numbers coming from?",
      "created_at": "2022-02-22T02:10:06Z",
      "updated_at": "2022-02-22T02:25:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811523943",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811523943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811527262",
      "pull_request_review_id": 889219977,
      "id": 811527262,
      "node_id": "PRRC_kwDOABII584wXuxe",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_encrypted_wallet(self):\n+        self.log.info(\"Test inactive HD chains when wallet is encrypted\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"enc_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"enc_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"enc_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"enc_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Encrypting will generate a new HD seed and flush the keypool\n+        test_wallet.encryptwallet(\"pass\")\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet will not be able to generate the topped up keypool\n+        # until it is unlocked. So it still should not know about the second address\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+        test_wallet.walletpassphrase(\"pass\", 1)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]",
      "path": "test/functional/wallet_inactive_hdchains.py",
      "position": 91,
      "original_position": 119,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "seems kind of racey, do a while not true loop?",
      "created_at": "2022-02-22T02:20:07Z",
      "updated_at": "2022-02-22T02:25:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811527262",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811527262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811528046",
      "pull_request_review_id": 889219977,
      "id": 811528046,
      "node_id": "PRRC_kwDOABII584wXu9u",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_encrypted_wallet(self):\n+        self.log.info(\"Test inactive HD chains when wallet is encrypted\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"enc_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"enc_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"enc_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"enc_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Encrypting will generate a new HD seed and flush the keypool\n+        test_wallet.encryptwallet(\"pass\")\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet will not be able to generate the topped up keypool\n+        # until it is unlocked. So it still should not know about the second address\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+        test_wallet.walletpassphrase(\"pass\", 1)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_without_upgraded_keymeta(self):\n+        # Test that it is possible to top up inactive hd chains even if there is no key origin\n+        # in CKeyMetadata. This tests for the segfault reported in\n+        # https://github.com/bitcoin/bitcoin/issues/21605\n+        self.log.info(\"Test that topping up inactive HD chains does not need upgraded key origin\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"keymeta_base\", descriptors=False, blank=True)\n+        self.nodes[1].createwallet_passthrough(wallet_name=\"keymeta_test\")",
      "path": "test/functional/wallet_inactive_hdchains.py",
      "position": 116,
      "original_position": 134,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I assume this is important, probably needs a comment on what this is doing because I don't understand it",
      "created_at": "2022-02-22T02:22:31Z",
      "updated_at": "2022-02-22T02:25:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r811528046",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/811528046"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295121",
      "pull_request_review_id": 890276670,
      "id": 812295121,
      "node_id": "PRRC_kwDOABII584waqPR",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6",
      "path": "test/functional/wallet_inactive_hdchains.py",
      "position": null,
      "original_position": 54,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "in_reply_to_id": 811523943,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not entirely sure, but probably something to do with the keypool defaults. However these don't make sense with the keypool options we are using in the test, so I've changed this to match those.",
      "created_at": "2022-02-22T19:39:15Z",
      "updated_at": "2022-02-22T19:39:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295311",
      "pull_request_review_id": 890276914,
      "id": 812295311,
      "node_id": "PRRC_kwDOABII584waqSP",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_encrypted_wallet(self):\n+        self.log.info(\"Test inactive HD chains when wallet is encrypted\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"enc_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"enc_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"enc_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"enc_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Encrypting will generate a new HD seed and flush the keypool\n+        test_wallet.encryptwallet(\"pass\")\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet will not be able to generate the topped up keypool\n+        # until it is unlocked. So it still should not know about the second address\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+        test_wallet.walletpassphrase(\"pass\", 1)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]",
      "path": "test/functional/wallet_inactive_hdchains.py",
      "position": 91,
      "original_position": 119,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "in_reply_to_id": 811527262,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, but with `gettransaction`.",
      "created_at": "2022-02-22T19:39:29Z",
      "updated_at": "2022-02-22T19:39:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295953",
      "pull_request_review_id": 890277757,
      "id": 812295953,
      "node_id": "PRRC_kwDOABII584waqcR",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test Inactive HD Chains.\n+\"\"\"\n+import os\n+import shutil\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.wallet_util import (\n+    get_generate_key,\n+)\n+\n+\n+class InactiveHDChainsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 2\n+        self.extra_args = [[\"-keypool=10\"], [\"-nowallet\", \"-keypool=10\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_bdb()\n+        self.skip_if_no_previous_releases()\n+\n+    def setup_nodes(self):\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            170200, # 0.17.2 Does not have the key metadata upgrade\n+        ])\n+\n+        self.start_nodes()\n+        self.init_wallet(node=0)\n+\n+    def test_basic(self):\n+        self.log.info(\"Test basic case for inactive HD chains\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"basic_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"basic_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"basic_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"basic_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Generate a new HD seed on the test wallet\n+        test_wallet.sethdseed()\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_encrypted_wallet(self):\n+        self.log.info(\"Test inactive HD chains when wallet is encrypted\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"enc_base\", descriptors=False, blank=True)\n+        self.nodes[0].createwallet(wallet_name=\"enc_test\", descriptors=False, blank=True)\n+        base_wallet = self.nodes[0].get_wallet_rpc(\"enc_base\")\n+        test_wallet = self.nodes[0].get_wallet_rpc(\"enc_test\")\n+\n+        # Setup both wallets with the same HD seed\n+        seed = get_generate_key()\n+        base_wallet.sethdseed(True, seed.privkey)\n+        test_wallet.sethdseed(True, seed.privkey)\n+\n+        # Encrypting will generate a new HD seed and flush the keypool\n+        test_wallet.encryptwallet(\"pass\")\n+\n+        # Get the address at index 6\n+        for _ in range(0, 5):\n+            base_wallet.getnewaddress()\n+        addr1 = base_wallet.getnewaddress()\n+        assert test_wallet.getaddressinfo(addr1)[\"ismine\"]\n+        # Get the address at index 13\n+        for _ in range(0, 6):\n+            base_wallet.getnewaddress()\n+        addr2 = base_wallet.getnewaddress()\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to first address on the old seed\n+        txid = default.sendtoaddress(addr1, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+        # The test wallet will not be able to generate the topped up keypool\n+        # until it is unlocked. So it still should not know about the second address\n+        assert not test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+        test_wallet.walletpassphrase(\"pass\", 1)\n+\n+        # The test wallet should now know about the second address as it\n+        # should have generated it in the inactive chain's keypool\n+        assert test_wallet.getaddressinfo(addr2)[\"ismine\"]\n+\n+        # Send to second address on the old seed\n+        txid = default.sendtoaddress(addr2, 10)\n+        self.generate(self.nodes[0], 1)\n+        test_wallet.gettransaction(txid)\n+\n+    def test_without_upgraded_keymeta(self):\n+        # Test that it is possible to top up inactive hd chains even if there is no key origin\n+        # in CKeyMetadata. This tests for the segfault reported in\n+        # https://github.com/bitcoin/bitcoin/issues/21605\n+        self.log.info(\"Test that topping up inactive HD chains does not need upgraded key origin\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+\n+        self.nodes[0].createwallet(wallet_name=\"keymeta_base\", descriptors=False, blank=True)\n+        self.nodes[1].createwallet_passthrough(wallet_name=\"keymeta_test\")",
      "path": "test/functional/wallet_inactive_hdchains.py",
      "position": 116,
      "original_position": 134,
      "commit_id": "c4d76c6faa3adf06f192649e169ca860ce420d30",
      "original_commit_id": "f3b02bd316ce6e01afd1229fa5cce9dc2dc220bc",
      "in_reply_to_id": 811528046,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a comment.\r\n\r\nIt's because we override createwallet in the test framework so that passing `--descriptors` will autofill the descriptor parameter. But that doesn't work for old nodes, so we need a passthrough function.",
      "created_at": "2022-02-22T19:40:21Z",
      "updated_at": "2022-02-22T19:40:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/23304#discussion_r812295953",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/812295953"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23304"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    }
  ]
}