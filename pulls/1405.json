{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405",
    "id": 1469490,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2OTQ5MA==",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1405",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/1405.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/1405.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1405",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1405/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/24f4c50f2997bfc9e374c26b25e234dea549774f",
    "number": 1405,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Support pruning from txindex.dat.",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I did this to see how much it would actually prune, but, as it pruned just over half of the CTxIndexs in blkindex.dat, I thought I'd pull request it.\nIt only prunes up to the latest checkpoint as there is no undoing pruning, so chain reorgs cant undo transactions that have CTxIns that were pruned.\n\nNote that the pruning process with -prune takes a _lot_ of time with -prune (an order of magnitude greater than loading chain on my tmpfs-backed system) and eats around 400MB of memory to load the needed information into memory.  -autoprune is much less resource-intensive, but the checkpoint has to exist before the given block is downloaded, so users upgrading will not be effected unless they use -prune once.\n\nYou can also run IBD with -autoprune to prune at each checkpoint.\n",
    "labels": [],
    "active_lock_reason": "resolved",
    "created_at": "2012-05-31T22:26:01Z",
    "updated_at": "2021-09-08T10:12:05Z",
    "closed_at": "2012-07-05T20:17:05Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "cdd03b5c74fdcfffbbfc428a6c4b70086ca1a20b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "TheBlueMatt:prune",
      "ref": "prune",
      "sha": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1443291,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDQzMjkx",
        "name": "bitcoin",
        "full_name": "TheBlueMatt/bitcoin",
        "owner": {
          "login": "TheBlueMatt",
          "id": 649246,
          "node_id": "MDQ6VXNlcjY0OTI0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheBlueMatt",
          "html_url": "https://github.com/TheBlueMatt",
          "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
          "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
          "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
          "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
          "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheBlueMatt/bitcoin",
        "description": "Bitcoin (dont fork from here, fork from bitcoin/bitcoin)",
        "fork": true,
        "url": "https://api.github.com/repos/TheBlueMatt/bitcoin",
        "archive_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/events",
        "forks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheBlueMatt/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheBlueMatt/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheBlueMatt/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/hooks",
        "svn_url": "https://github.com/TheBlueMatt/bitcoin",
        "homepage": "http://www.bitcoin.org/",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 19,
        "watchers_count": 19,
        "size": 171686,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:40:23Z",
        "created_at": "2011-03-05T14:14:49Z",
        "updated_at": "2022-12-15T18:21:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "afdd59416ed614c63591946aa95c9334db41fc8c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34323,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T19:05:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T18:57:56Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 183,
    "deletions": 0,
    "changed_files": 6,
    "commits": 2,
    "review_comments": 6,
    "comments": 5
  },
  "events": [
    {
      "event": "subscribed",
      "id": 16703905,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2NzAzOTA1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16703905",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-05-31T22:26:01Z"
    },
    {
      "event": "subscribed",
      "id": 16979294,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2OTc5Mjk0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16979294",
      "actor": {
        "login": "mndrix",
        "id": 43997,
        "node_id": "MDQ6VXNlcjQzOTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/43997?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mndrix",
        "html_url": "https://github.com/mndrix",
        "followers_url": "https://api.github.com/users/mndrix/followers",
        "following_url": "https://api.github.com/users/mndrix/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mndrix/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mndrix/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mndrix/subscriptions",
        "organizations_url": "https://api.github.com/users/mndrix/orgs",
        "repos_url": "https://api.github.com/users/mndrix/repos",
        "events_url": "https://api.github.com/users/mndrix/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mndrix/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-05T14:09:46Z"
    },
    {
      "event": "commented",
      "id": 6183408,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxODM0MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6183408",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-07T18:15:43Z",
      "updated_at": "2012-06-07T18:15:43Z",
      "author_association": "NONE",
      "body": "The \"Add UI InitMessage for -loadblock.\" commit should get in asap, but be seperate from this one.\n",
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6183408",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1405"
    },
    {
      "event": "subscribed",
      "id": 17194193,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MTk0MTkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17194193",
      "actor": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-07T18:15:43Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTNhM2M2NmY1YzcxZmQ3ODBiNWZjZWRkOWZmYzIzNDJlYjU4MDM3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a3a3c66f5c71fd780b5fcedd9ffc2342eb58037",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1a3a3c66f5c71fd780b5fcedd9ffc2342eb58037",
      "tree": {
        "sha": "690215643ebb4382e3861363e783d1e2980cce73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/690215643ebb4382e3861363e783d1e2980cce73"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/afdd59416ed614c63591946aa95c9334db41fc8c",
          "sha": "afdd59416ed614c63591946aa95c9334db41fc8c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/afdd59416ed614c63591946aa95c9334db41fc8c"
        }
      ],
      "message": "Support pruning from txindex.dat.\n\nBy launching with -prune to prune from genisis block to latest\ncheckpoint.\nOr running initial block download with -autoprune to prune each\ntime you get a new checkpoint.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-07T22:17:23Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-05-30T23:55:15Z"
      },
      "sha": "1a3a3c66f5c71fd780b5fcedd9ffc2342eb58037"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGY0YzUwZjI5OTdiZmM5ZTM3NGMyNmIyNWUyMzRkZWE1NDk3NzRm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24f4c50f2997bfc9e374c26b25e234dea549774f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/24f4c50f2997bfc9e374c26b25e234dea549774f",
      "tree": {
        "sha": "aaccaf5622a13710dbeda928a7e510794de6277d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aaccaf5622a13710dbeda928a7e510794de6277d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a3a3c66f5c71fd780b5fcedd9ffc2342eb58037",
          "sha": "1a3a3c66f5c71fd780b5fcedd9ffc2342eb58037",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1a3a3c66f5c71fd780b5fcedd9ffc2342eb58037"
        }
      ],
      "message": "Add UI InitMessage for -loadblock.",
      "committer": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-06-07T22:17:23Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "matt@bluematt.me",
        "date": "2012-05-31T01:55:35Z"
      },
      "sha": "24f4c50f2997bfc9e374c26b25e234dea549774f"
    },
    {
      "event": "commented",
      "id": 6189658,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYxODk2NTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6189658",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-07T22:17:33Z",
      "updated_at": "2012-06-07T22:17:33Z",
      "author_association": "MEMBER",
      "body": "Finally got around to benchmarking IBD using -autoprune, it was a tiny sliver faster than master (just under 5%) -loadblock'ing to the current block, but its blkindex.dat was only 351MB instead of 554MB.  \nThus, I made -autoprune default and rebased.\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6189658",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1405"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzE3MjczMjp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 6206992,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDY5OTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6206992",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-08T16:23:43Z",
      "updated_at": "2012-06-08T16:23:43Z",
      "author_association": "MEMBER",
      "body": "No noticeable speedup here, but ACK on the idea. I'll have a look at the code later.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6206992",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1405"
    },
    {
      "event": "subscribed",
      "id": 17278638,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3Mjc4NjM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17278638",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-08T16:23:43Z"
    },
    {
      "event": "commented",
      "id": 6209711,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDk3MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6209711",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-08T18:22:33Z",
      "updated_at": "2012-06-08T18:22:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "idea ACK.  I like this!\n",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6209711",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1405"
    },
    {
      "event": "subscribed",
      "id": 17288741,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3Mjg4NzQx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17288741",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-08T18:22:33Z"
    },
    {
      "event": "subscribed",
      "id": 17583612,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3NTgzNjEy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17583612",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-06-13T08:36:14Z"
    },
    {
      "event": "line-commented",
      "id": null,
      "node_id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNzE3MjczMzp2Mg==",
      "url": null,
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null
    },
    {
      "event": "commented",
      "id": 6789452,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY3ODk0NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/6789452",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-07-05T20:17:05Z",
      "updated_at": "2012-07-05T20:17:05Z",
      "author_association": "MEMBER",
      "body": "Closing in favor of an (eventual) ultraprune.  No point in merging a stop-gap that conflicts with an actual solution.\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#issuecomment-6789452",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1405"
    },
    {
      "event": "closed",
      "id": 19425721,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTk0MjU3MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19425721",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2012-07-05T20:17:05Z"
    },
    {
      "event": "referenced",
      "id": 1372009702,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNzIwMDk3MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1372009702",
      "actor": {
        "login": "suprnurd",
        "id": 21205640,
        "node_id": "MDQ6VXNlcjIxMjA1NjQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/21205640?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/suprnurd",
        "html_url": "https://github.com/suprnurd",
        "followers_url": "https://api.github.com/users/suprnurd/followers",
        "following_url": "https://api.github.com/users/suprnurd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/suprnurd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/suprnurd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/suprnurd/subscriptions",
        "organizations_url": "https://api.github.com/users/suprnurd/orgs",
        "repos_url": "https://api.github.com/users/suprnurd/repos",
        "events_url": "https://api.github.com/users/suprnurd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/suprnurd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "27f3218de916d7e1bd40320323eb242d5e205f47",
      "commit_url": "https://api.github.com/repos/chaincoin-legacy/chaincoin/commits/27f3218de916d7e1bd40320323eb242d5e205f47",
      "created_at": "2017-12-05T06:49:53Z"
    },
    {
      "event": "referenced",
      "id": 1372009712,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNzIwMDk3MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1372009712",
      "actor": {
        "login": "suprnurd",
        "id": 21205640,
        "node_id": "MDQ6VXNlcjIxMjA1NjQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/21205640?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/suprnurd",
        "html_url": "https://github.com/suprnurd",
        "followers_url": "https://api.github.com/users/suprnurd/followers",
        "following_url": "https://api.github.com/users/suprnurd/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/suprnurd/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/suprnurd/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/suprnurd/subscriptions",
        "organizations_url": "https://api.github.com/users/suprnurd/orgs",
        "repos_url": "https://api.github.com/users/suprnurd/repos",
        "events_url": "https://api.github.com/users/suprnurd/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/suprnurd/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b6804678f2d1bb02045e3ef8253ddad8a678dd85",
      "commit_url": "https://api.github.com/repos/chaincoin-legacy/chaincoin/commits/b6804678f2d1bb02045e3ef8253ddad8a678dd85",
      "created_at": "2017-12-05T06:49:53Z"
    },
    {
      "event": "referenced",
      "id": 2089789771,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIwODk3ODk3NzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2089789771",
      "actor": {
        "login": "lateminer",
        "id": 9951982,
        "node_id": "MDQ6VXNlcjk5NTE5ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9951982?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lateminer",
        "html_url": "https://github.com/lateminer",
        "followers_url": "https://api.github.com/users/lateminer/followers",
        "following_url": "https://api.github.com/users/lateminer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lateminer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lateminer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lateminer/subscriptions",
        "organizations_url": "https://api.github.com/users/lateminer/orgs",
        "repos_url": "https://api.github.com/users/lateminer/repos",
        "events_url": "https://api.github.com/users/lateminer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lateminer/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9e7eaf205fb51c7b6d60c13865eae00020709522",
      "commit_url": "https://api.github.com/repos/lateminer/bitcoin/commits/9e7eaf205fb51c7b6d60c13865eae00020709522",
      "created_at": "2019-01-22T19:46:48Z"
    },
    {
      "event": "referenced",
      "id": 3308367909,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzMDgzNjc5MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3308367909",
      "actor": {
        "login": "lateminer",
        "id": 9951982,
        "node_id": "MDQ6VXNlcjk5NTE5ODI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9951982?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lateminer",
        "html_url": "https://github.com/lateminer",
        "followers_url": "https://api.github.com/users/lateminer/followers",
        "following_url": "https://api.github.com/users/lateminer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lateminer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lateminer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lateminer/subscriptions",
        "organizations_url": "https://api.github.com/users/lateminer/orgs",
        "repos_url": "https://api.github.com/users/lateminer/repos",
        "events_url": "https://api.github.com/users/lateminer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lateminer/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d8663a841003df601566d5aed0c8fa6c8b1f6976",
      "commit_url": "https://api.github.com/repos/lateminer/bitcoin/commits/d8663a841003df601566d5aed0c8fa6c8b1f6976",
      "created_at": "2020-05-06T12:57:41Z"
    },
    {
      "event": "locked",
      "id": 5271277226,
      "node_id": "LOE_lADOABII584ASfb1zwAAAAE6MU6q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271277226",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T10:12:05Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948155",
      "pull_request_review_id": null,
      "id": 948155,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0ODE1NQ==",
      "diff_hunk": "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h\n+//    if (hashPruneFrom != 0)\n+//        assert(hashPruneTo == hashBestBlock);\n+\n+    CBlockIndex* pindexScan = pindexGenesisBlock;\n+    uint256 hashOldBestCheckpoint;\n+    if (ReadHashBestCheckpoint(hashOldBestCheckpoint) && hashOldBestCheckpoint == hashPruneTo)\n+        return true;\n+\n+    if (!mapBlockIndex.count(hashPruneTo))\n+        return true;\n+\n+    if (hashPruneFrom != 0)\n+        pindexScan = mapBlockIndex[hashPruneFrom];\n+    assert(pindexScan);\n+\n+    printf(\"Pruning Block Index from %s to %s.\\n\", hashPruneFrom.ToString().substr(0,20).c_str(), hashPruneTo.ToString().substr(0,20).c_str());\n+\n+    // Cache of Txes by hash -> txouts spent before hashPruneTo flags + cant be deleted flag\n+    map<uint256, pair<vector<bool>, bool> > mapTxIndexCache;\n+\n+    while (pindexScan != NULL && *(pindexScan->phashBlock) != hashPruneTo)\n+    {\n+        if(fRequestShutdown)\n+            return true;\n+\n+        CBlock block;\n+        block.ReadFromDisk(pindexScan);\n+\n+        BOOST_FOREACH(CTransaction& tx, block.vtx)\n+        {\n+            if (tx.IsCoinBase())\n+                continue;\n+\n+            BOOST_FOREACH(CTxIn& txin, tx.vin)\n+            {\n+                COutPoint& txout = txin.prevout;\n+                uint256& hash = txout.hash;\n+                pair<vector<bool>, bool>& pairTx = mapTxIndexCache[hash];\n+\n+                if (pairTx.first.size() == 0)\n+                {\n+                    CTxIndex txindex;\n+                    if (!ReadTxIndex(hash, txindex))\n+                    {\n+                        // This should only ever happen if we get interrupted pruning and dont WriteHashBestCheckpoint\n+                        pairTx.second = false;\n+                        break;\n+                    }\n+\n+                    vector<CDiskTxPos>& vSpent = txindex.vSpent;\n+                    unsigned int vouts = vSpent.size();\n+\n+                    pairTx.first.resize(vouts);\n+\n+                    pairTx.second = true;\n+                    for (unsigned int i = 0; i < vouts; i++)\n+                    {\n+                        if (vSpent[i].IsNull())\n+                        {\n+                            pairTx.second = false;\n+                            break;\n+                        }\n+                        pairTx.first[i] = false;\n+                    }\n+                }\n+\n+                if (pairTx.second == false)\n+                    continue;\n+\n+                pairTx.first[txout.n] = true;\n+            }\n+        }\n+\n+        pindexScan = pindexScan->pnext;\n+    }\n+\n+    // TODO: It may be prudent to use DB Transactions here, but if we do we overrun our maximum lock objects\n+    //if (!TxnBegin())\n+    //    return false;\n+\n+    unsigned int nTxsPruned = 0;\n+    typedef pair<const uint256, pair<vector<bool>, bool> > TxIndexCachePairType;\n+    BOOST_FOREACH(TxIndexCachePairType& pair, mapTxIndexCache)\n+    {\n+        bool fPrunable = true;\n+        BOOST_FOREACH(bool fSpent, pair.second.first)\n+            if (!fSpent)\n+            {\n+                fPrunable = false;\n+                break;\n+            }\n+\n+        if (!fPrunable)\n+            continue;\n+\n+        EraseTxIndex(pair.first);\n+        nTxsPruned++;\n+    }\n+\n+    WriteHashBestCheckpoint(hashPruneTo);\n+\n+    //if (!TxnCommit())",
      "path": "src/db.cpp",
      "position": 138,
      "original_position": 138,
      "commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "in_reply_to_id": null,
      "user": {
        "login": "Diapolo",
        "id": 1419649,
        "node_id": "MDQ6VXNlcjE0MTk2NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1419649?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Diapolo",
        "html_url": "https://github.com/Diapolo",
        "followers_url": "https://api.github.com/users/Diapolo/followers",
        "following_url": "https://api.github.com/users/Diapolo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Diapolo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Diapolo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Diapolo/subscriptions",
        "organizations_url": "https://api.github.com/users/Diapolo/orgs",
        "repos_url": "https://api.github.com/users/Diapolo/repos",
        "events_url": "https://api.github.com/users/Diapolo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Diapolo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That Commented out code should be removed, if not used :).\n",
      "created_at": "2012-06-07T23:21:24Z",
      "updated_at": "2012-06-07T23:21:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r948155",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 658,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948312",
      "pull_request_review_id": null,
      "id": 948312,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk0ODMxMg==",
      "diff_hunk": "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h\n+//    if (hashPruneFrom != 0)\n+//        assert(hashPruneTo == hashBestBlock);\n+\n+    CBlockIndex* pindexScan = pindexGenesisBlock;\n+    uint256 hashOldBestCheckpoint;\n+    if (ReadHashBestCheckpoint(hashOldBestCheckpoint) && hashOldBestCheckpoint == hashPruneTo)\n+        return true;\n+\n+    if (!mapBlockIndex.count(hashPruneTo))\n+        return true;\n+\n+    if (hashPruneFrom != 0)\n+        pindexScan = mapBlockIndex[hashPruneFrom];\n+    assert(pindexScan);\n+\n+    printf(\"Pruning Block Index from %s to %s.\\n\", hashPruneFrom.ToString().substr(0,20).c_str(), hashPruneTo.ToString().substr(0,20).c_str());\n+\n+    // Cache of Txes by hash -> txouts spent before hashPruneTo flags + cant be deleted flag\n+    map<uint256, pair<vector<bool>, bool> > mapTxIndexCache;\n+\n+    while (pindexScan != NULL && *(pindexScan->phashBlock) != hashPruneTo)\n+    {\n+        if(fRequestShutdown)\n+            return true;\n+\n+        CBlock block;\n+        block.ReadFromDisk(pindexScan);\n+\n+        BOOST_FOREACH(CTransaction& tx, block.vtx)\n+        {\n+            if (tx.IsCoinBase())\n+                continue;\n+\n+            BOOST_FOREACH(CTxIn& txin, tx.vin)\n+            {\n+                COutPoint& txout = txin.prevout;\n+                uint256& hash = txout.hash;\n+                pair<vector<bool>, bool>& pairTx = mapTxIndexCache[hash];\n+\n+                if (pairTx.first.size() == 0)\n+                {\n+                    CTxIndex txindex;\n+                    if (!ReadTxIndex(hash, txindex))\n+                    {\n+                        // This should only ever happen if we get interrupted pruning and dont WriteHashBestCheckpoint\n+                        pairTx.second = false;\n+                        break;\n+                    }\n+\n+                    vector<CDiskTxPos>& vSpent = txindex.vSpent;\n+                    unsigned int vouts = vSpent.size();\n+\n+                    pairTx.first.resize(vouts);\n+\n+                    pairTx.second = true;\n+                    for (unsigned int i = 0; i < vouts; i++)\n+                    {\n+                        if (vSpent[i].IsNull())\n+                        {\n+                            pairTx.second = false;\n+                            break;\n+                        }\n+                        pairTx.first[i] = false;\n+                    }\n+                }\n+\n+                if (pairTx.second == false)\n+                    continue;\n+\n+                pairTx.first[txout.n] = true;\n+            }\n+        }\n+\n+        pindexScan = pindexScan->pnext;\n+    }\n+\n+    // TODO: It may be prudent to use DB Transactions here, but if we do we overrun our maximum lock objects\n+    //if (!TxnBegin())\n+    //    return false;\n+\n+    unsigned int nTxsPruned = 0;\n+    typedef pair<const uint256, pair<vector<bool>, bool> > TxIndexCachePairType;\n+    BOOST_FOREACH(TxIndexCachePairType& pair, mapTxIndexCache)\n+    {\n+        bool fPrunable = true;\n+        BOOST_FOREACH(bool fSpent, pair.second.first)\n+            if (!fSpent)\n+            {\n+                fPrunable = false;\n+                break;\n+            }\n+\n+        if (!fPrunable)\n+            continue;\n+\n+        EraseTxIndex(pair.first);\n+        nTxsPruned++;\n+    }\n+\n+    WriteHashBestCheckpoint(hashPruneTo);\n+\n+    //if (!TxnCommit())",
      "path": "src/db.cpp",
      "position": 138,
      "original_position": 138,
      "commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Meh, it would be nice to have that, so it serves as a TODO.\n",
      "created_at": "2012-06-07T23:55:26Z",
      "updated_at": "2012-06-07T23:55:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r948312",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/948312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 658,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974400",
      "pull_request_review_id": null,
      "id": 974400,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3NDQwMA==",
      "diff_hunk": "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h\n+//    if (hashPruneFrom != 0)\n+//        assert(hashPruneTo == hashBestBlock);\n+\n+    CBlockIndex* pindexScan = pindexGenesisBlock;\n+    uint256 hashOldBestCheckpoint;\n+    if (ReadHashBestCheckpoint(hashOldBestCheckpoint) && hashOldBestCheckpoint == hashPruneTo)\n+        return true;\n+\n+    if (!mapBlockIndex.count(hashPruneTo))\n+        return true;\n+\n+    if (hashPruneFrom != 0)\n+        pindexScan = mapBlockIndex[hashPruneFrom];\n+    assert(pindexScan);\n+\n+    printf(\"Pruning Block Index from %s to %s.\\n\", hashPruneFrom.ToString().substr(0,20).c_str(), hashPruneTo.ToString().substr(0,20).c_str());\n+\n+    // Cache of Txes by hash -> txouts spent before hashPruneTo flags + cant be deleted flag\n+    map<uint256, pair<vector<bool>, bool> > mapTxIndexCache;\n+\n+    while (pindexScan != NULL && *(pindexScan->phashBlock) != hashPruneTo)\n+    {\n+        if(fRequestShutdown)\n+            return true;\n+\n+        CBlock block;\n+        block.ReadFromDisk(pindexScan);\n+\n+        BOOST_FOREACH(CTransaction& tx, block.vtx)\n+        {\n+            if (tx.IsCoinBase())\n+                continue;\n+\n+            BOOST_FOREACH(CTxIn& txin, tx.vin)\n+            {\n+                COutPoint& txout = txin.prevout;\n+                uint256& hash = txout.hash;\n+                pair<vector<bool>, bool>& pairTx = mapTxIndexCache[hash];\n+\n+                if (pairTx.first.size() == 0)\n+                {\n+                    CTxIndex txindex;\n+                    if (!ReadTxIndex(hash, txindex))\n+                    {\n+                        // This should only ever happen if we get interrupted pruning and dont WriteHashBestCheckpoint\n+                        pairTx.second = false;\n+                        break;\n+                    }\n+\n+                    vector<CDiskTxPos>& vSpent = txindex.vSpent;\n+                    unsigned int vouts = vSpent.size();\n+\n+                    pairTx.first.resize(vouts);\n+\n+                    pairTx.second = true;\n+                    for (unsigned int i = 0; i < vouts; i++)\n+                    {\n+                        if (vSpent[i].IsNull())\n+                        {\n+                            pairTx.second = false;\n+                            break;\n+                        }\n+                        pairTx.first[i] = false;\n+                    }\n+                }\n+\n+                if (pairTx.second == false)\n+                    continue;\n+\n+                pairTx.first[txout.n] = true;\n+            }\n+        }\n+\n+        pindexScan = pindexScan->pnext;\n+    }\n+\n+    // TODO: It may be prudent to use DB Transactions here, but if we do we overrun our maximum lock objects\n+    //if (!TxnBegin())\n+    //    return false;\n+\n+    unsigned int nTxsPruned = 0;\n+    typedef pair<const uint256, pair<vector<bool>, bool> > TxIndexCachePairType;\n+    BOOST_FOREACH(TxIndexCachePairType& pair, mapTxIndexCache)\n+    {\n+        bool fPrunable = true;\n+        BOOST_FOREACH(bool fSpent, pair.second.first)\n+            if (!fSpent)\n+            {\n+                fPrunable = false;\n+                break;\n+            }\n+\n+        if (!fPrunable)\n+            continue;\n+\n+        EraseTxIndex(pair.first);\n+        nTxsPruned++;\n+    }\n+\n+    WriteHashBestCheckpoint(hashPruneTo);\n+\n+    //if (!TxnCommit())",
      "path": "src/db.cpp",
      "position": 138,
      "original_position": 138,
      "commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you add `TODO:` in the comment, many code editors will show it in an overview. Might be useful, and more clear to readers that it isn't just commented out code (otherwise, someone that doesn't know might remove it).\n",
      "created_at": "2012-06-13T08:36:14Z",
      "updated_at": "2012-06-13T08:36:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974400",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 658,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974401",
      "pull_request_review_id": null,
      "id": 974401,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3NDQwMQ==",
      "diff_hunk": "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h\n+//    if (hashPruneFrom != 0)\n+//        assert(hashPruneTo == hashBestBlock);\n+\n+    CBlockIndex* pindexScan = pindexGenesisBlock;\n+    uint256 hashOldBestCheckpoint;\n+    if (ReadHashBestCheckpoint(hashOldBestCheckpoint) && hashOldBestCheckpoint == hashPruneTo)\n+        return true;\n+\n+    if (!mapBlockIndex.count(hashPruneTo))\n+        return true;\n+\n+    if (hashPruneFrom != 0)\n+        pindexScan = mapBlockIndex[hashPruneFrom];\n+    assert(pindexScan);\n+\n+    printf(\"Pruning Block Index from %s to %s.\\n\", hashPruneFrom.ToString().substr(0,20).c_str(), hashPruneTo.ToString().substr(0,20).c_str());\n+\n+    // Cache of Txes by hash -> txouts spent before hashPruneTo flags + cant be deleted flag\n+    map<uint256, pair<vector<bool>, bool> > mapTxIndexCache;\n+\n+    while (pindexScan != NULL && *(pindexScan->phashBlock) != hashPruneTo)\n+    {\n+        if(fRequestShutdown)\n+            return true;\n+\n+        CBlock block;\n+        block.ReadFromDisk(pindexScan);\n+\n+        BOOST_FOREACH(CTransaction& tx, block.vtx)\n+        {\n+            if (tx.IsCoinBase())\n+                continue;\n+\n+            BOOST_FOREACH(CTxIn& txin, tx.vin)\n+            {\n+                COutPoint& txout = txin.prevout;\n+                uint256& hash = txout.hash;\n+                pair<vector<bool>, bool>& pairTx = mapTxIndexCache[hash];\n+\n+                if (pairTx.first.size() == 0)\n+                {\n+                    CTxIndex txindex;\n+                    if (!ReadTxIndex(hash, txindex))\n+                    {\n+                        // This should only ever happen if we get interrupted pruning and dont WriteHashBestCheckpoint\n+                        pairTx.second = false;\n+                        break;\n+                    }\n+\n+                    vector<CDiskTxPos>& vSpent = txindex.vSpent;\n+                    unsigned int vouts = vSpent.size();\n+\n+                    pairTx.first.resize(vouts);\n+\n+                    pairTx.second = true;\n+                    for (unsigned int i = 0; i < vouts; i++)\n+                    {\n+                        if (vSpent[i].IsNull())\n+                        {\n+                            pairTx.second = false;\n+                            break;\n+                        }\n+                        pairTx.first[i] = false;\n+                    }\n+                }\n+\n+                if (pairTx.second == false)\n+                    continue;\n+\n+                pairTx.first[txout.n] = true;\n+            }\n+        }\n+\n+        pindexScan = pindexScan->pnext;\n+    }\n+\n+    // TODO: It may be prudent to use DB Transactions here, but if we do we overrun our maximum lock objects\n+    //if (!TxnBegin())\n+    //    return false;\n+\n+    unsigned int nTxsPruned = 0;\n+    typedef pair<const uint256, pair<vector<bool>, bool> > TxIndexCachePairType;\n+    BOOST_FOREACH(TxIndexCachePairType& pair, mapTxIndexCache)\n+    {\n+        bool fPrunable = true;\n+        BOOST_FOREACH(bool fSpent, pair.second.first)\n+            if (!fSpent)\n+            {\n+                fPrunable = false;\n+                break;\n+            }\n+\n+        if (!fPrunable)\n+            continue;\n+\n+        EraseTxIndex(pair.first);\n+        nTxsPruned++;\n+    }\n+\n+    WriteHashBestCheckpoint(hashPruneTo);\n+\n+    //if (!TxnCommit())",
      "path": "src/db.cpp",
      "position": 138,
      "original_position": 138,
      "commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, right, you did this above. Never mind.\n",
      "created_at": "2012-06-13T08:36:39Z",
      "updated_at": "2012-06-13T08:36:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974401",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 658,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974409",
      "pull_request_review_id": null,
      "id": 974409,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3NDQwOQ==",
      "diff_hunk": "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h",
      "path": "src/db.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why main.h? For assert you need the header &lt;cassert> (which seems to be included in serialize.h)\n",
      "created_at": "2012-06-13T08:38:48Z",
      "updated_at": "2012-06-13T08:38:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r974409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 556,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976359",
      "pull_request_review_id": null,
      "id": 976359,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDk3NjM1OQ==",
      "diff_hunk": "@@ -535,6 +551,118 @@ CBlockIndex static * InsertBlockIndex(uint256 hash)\n     return pindexNew;\n }\n \n+bool CTxDB::PruneBlockIndex(uint256 hashPruneFrom, uint256 hashPruneTo)\n+{\n+//    TODO: assert here, but cant #include main.h",
      "path": "src/db.cpp",
      "position": 36,
      "original_position": 36,
      "commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "original_commit_id": "24f4c50f2997bfc9e374c26b25e234dea549774f",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "main.h has hashBestBlock.\n",
      "created_at": "2012-06-13T14:23:05Z",
      "updated_at": "2012-06-13T14:23:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/1405#discussion_r976359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/1405"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 556,
      "original_line": null,
      "side": "RIGHT"
    }
  ]
}