{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175",
    "id": 286465861,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mjg2NDY1ODYx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/16175",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/16175.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/16175.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
    "number": 16175,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Call ProcessNewBlock() asynchronously",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is essentially a rebase of #12934, though its actually greenfield to reduce diff a bit. Based on #16174 as without it the parallelism would be almost entirely useless. Note that this is draft as I haven't (yet) bothered doing the backgrounding of the block validation, its currently just a return value change and the net_processing changes to handle it.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 118378960,
        "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
        "name": "Mining",
        "color": "c7def8",
        "default": false
      },
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-06-09T11:51:45Z",
    "updated_at": "2021-12-16T13:58:52Z",
    "closed_at": "2019-06-18T20:17:33Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "7bd764ee3223f839148070855f89b214e2fe5be2",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "TheBlueMatt:2019-06-add-second-thread",
      "ref": "2019-06-add-second-thread",
      "sha": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1443291,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDQzMjkx",
        "name": "bitcoin",
        "full_name": "TheBlueMatt/bitcoin",
        "owner": {
          "login": "TheBlueMatt",
          "id": 649246,
          "node_id": "MDQ6VXNlcjY0OTI0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheBlueMatt",
          "html_url": "https://github.com/TheBlueMatt",
          "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
          "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
          "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
          "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
          "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheBlueMatt/bitcoin",
        "description": "Bitcoin (dont fork from here, fork from bitcoin/bitcoin)",
        "fork": true,
        "url": "https://api.github.com/repos/TheBlueMatt/bitcoin",
        "archive_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/events",
        "forks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheBlueMatt/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheBlueMatt/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheBlueMatt/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/hooks",
        "svn_url": "https://github.com/TheBlueMatt/bitcoin",
        "homepage": "http://www.bitcoin.org/",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 19,
        "watchers_count": 19,
        "size": 171686,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T09:40:23Z",
        "created_at": "2011-03-05T14:14:49Z",
        "updated_at": "2022-12-15T18:21:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f792395d13aa99ce51887db14e4f77a746d910e3",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 347,
    "deletions": 165,
    "changed_files": 14,
    "commits": 10,
    "review_comments": 22,
    "comments": 7
  },
  "events": [
    {
      "event": "labeled",
      "id": 2399394899,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIzOTkzOTQ4OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399394899",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T12:03:13Z",
      "label": {
        "name": "Mining",
        "color": "c7def8"
      }
    },
    {
      "event": "labeled",
      "id": 2399394900,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIzOTkzOTQ5MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399394900",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T12:03:13Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 2399394901,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIzOTkzOTQ5MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399394901",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T12:03:13Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 2399394902,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIzOTkzOTQ5MDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399394902",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T12:03:13Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 2399394903,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIzOTkzOTQ5MDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399394903",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T12:03:13Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "commented",
      "id": 500219265,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDIxOTI2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/500219265",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T15:05:22Z",
      "updated_at": "2019-06-17T00:39:31Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16202](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16202.html) (Refactor network message deserialization by jonasschnelli)\n* [#16194](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16194.html) (refactor: share blockmetadata with BlockManager by jamesob)\n* [#15921](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15921.html) (Tidy up ValidationState interface by jnewbery)\n* [#15606](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15606.html) ([experimental] UTXO snapshots by jamesob)\n* [#15545](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15545.html) ([doc] explain why CheckBlock() is called before AcceptBlock by Sjors)\n* [#15505](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15505.html) ([p2p] Request NOTFOUND transactions immediately from other outbound peers, when possible by sdaftuar)\n* [#15206](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15206.html) (Immediately disconnect on invalid net message checksum by jonasschnelli)\n* [#14046](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14046.html) (net: Refactor message parsing (CNetMessage), adds flexibility by jonasschnelli)\n* [#14032](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14032.html) (Add p2p layer encryption with ECDH/ChaCha20Poly1305 by jonasschnelli)\n* [#9849](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/9849.html) (Qt: Network Watch tool by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#issuecomment-500219265",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2399572100,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM5OTU3MjEwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399572100",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T19:19:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2399575107,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM5OTU3NTEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399575107",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T19:26:23Z"
    },
    {
      "event": "commented",
      "id": 500238824,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDIzODgyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/500238824",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T19:32:14Z",
      "updated_at": "2019-06-09T19:32:14Z",
      "author_association": "MEMBER",
      "body": "Oops, it turns out its actually not possible to do #16174 first separately (and without it, this PR is entirely useless). By itself, #16174 ends up hitting the deadly cross-validationinterface-queue deadlock - it takes cs_peerstate first, then (eventually) calls PNB, which may call LimitValidationInterfaceQueue(). Meanwhile, in the validation queue, we may end up waiting on cs_peerstate to update some peer's state. Of course, once we actually move block validation into its own thread, this is no longer (materially) a concern - we trivially guarantee there are no locks held going into LimitValidationInterfaceQueue().",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#issuecomment-500238824",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2399579065,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM5OTU3OTA2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399579065",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T19:35:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2399579330,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM5OTU3OTMzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399579330",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T19:36:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2399583391,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM5OTU4MzM5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399583391",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T19:46:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2399585701,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM5OTU4NTcwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399585701",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T19:52:22Z"
    },
    {
      "event": "ready_for_review",
      "id": 2399600446,
      "node_id": "MDE5OlJlYWR5Rm9yUmV2aWV3RXZlbnQyMzk5NjAwNDQ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399600446",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T20:26:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2399614425,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjM5OTYxNDQyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2399614425",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T20:59:35Z"
    },
    {
      "event": "commented",
      "id": 500249226,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDI0OTIyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/500249226",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-09T22:04:08Z",
      "updated_at": "2019-06-09T22:04:08Z",
      "author_association": "MEMBER",
      "body": "Note that there is still a regression causing some functional tests to time out as we may end up waiting 100ms to discover that a block has been processed and we can process the next message from that peer (this shouldn't be an issue in the case of downloading from multiple peers since we'll always wake on a new tip block, and seems to not be an issue for one peer, even though its possible it would be due to a wake race). Not 100% sure what the best solution to that is.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#issuecomment-500249226",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175"
    },
    {
      "event": "commented",
      "id": 500664222,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDY2NDIyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/500664222",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-11T02:38:05Z",
      "updated_at": "2019-06-11T02:38:05Z",
      "author_association": "MEMBER",
      "body": "> Oops, it turns out its actually not possible to do #16174 first separately [...] Meanwhile, in the validation queue, we may end up waiting on cs_peerstate to update some peer's state.\r\n\r\nFor other reviewers: the particular validationinterface callback at fault here looks to be `PeerLogicValidation::BlockChecked`.\r\n\r\nBig Concept ACK on the lock-splitting at the very least, though I do wish it could be done separately somehow. I'm a Concept-Concept ACK on this (in concept), but want to make sure I fully understand the implications.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#issuecomment-500664222",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YmM4Y2E2MWY1YzljYTU3ZWE3MWIzYWNkZDEwMjFhNWNmNjY1MTJm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f",
      "tree": {
        "sha": "4fe761b1c6108705a14e918a1272f07b63472b46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4fe761b1c6108705a14e918a1272f07b63472b46"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f792395d13aa99ce51887db14e4f77a746d910e3",
          "sha": "f792395d13aa99ce51887db14e4f77a746d910e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f792395d13aa99ce51887db14e4f77a746d910e3"
        }
      ],
      "message": "Remove unnecessary cs_mains in denialofservice_tests\n\n9fdf05d70cac4a62d1aeeb4299e2c3a9a866f8af resolved some lock\ninversion warnings in denialofservice_tests, but left in a number\nof cs_main locks that are unnecessary (introducing lock inversion\nwarnings in future changes).",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T16:52:58Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T00:10:25Z"
      },
      "sha": "9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWU2ZTQ0NmRkMGM4YTNmNTM3NTlhOTc5MjM4OGYyOGUxMDUzYmZi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79e6e446dd0c8a3f53759a9792388f28e1053bfb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/79e6e446dd0c8a3f53759a9792388f28e1053bfb",
      "tree": {
        "sha": "d25f46b6db2f3289e9da78a2023024e96c072b52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d25f46b6db2f3289e9da78a2023024e96c072b52"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f",
          "sha": "9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f"
        }
      ],
      "message": "Make ProcessNewBlock return a future instead of an immediate bool\n\nThis prepares for making ProcessNewBlock processing actually happen\nin a separate thread from the caller, even though all callsites\ncurrently block on the return value immediately.\n\nNote that this makes some of the unit tests less restrictive.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T16:52:58Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-08T14:52:53Z"
      },
      "sha": "79e6e446dd0c8a3f53759a9792388f28e1053bfb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODk4MjI5NjRlOWVmOGRhZGY4OGQ0N2JjOTRmNTM5NmE4YzYxYTU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e89822964e9ef8dadf88d47bc94f5396a8c61a54",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e89822964e9ef8dadf88d47bc94f5396a8c61a54",
      "tree": {
        "sha": "b250340e591fb5bf9a2adaedbd4f18e7fe9526a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b250340e591fb5bf9a2adaedbd4f18e7fe9526a0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79e6e446dd0c8a3f53759a9792388f28e1053bfb",
          "sha": "79e6e446dd0c8a3f53759a9792388f28e1053bfb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/79e6e446dd0c8a3f53759a9792388f28e1053bfb"
        }
      ],
      "message": "Add a new peer state tracking class to reduce cs_main contention.\n\nCNodeState was added for validation-state-tracking, and thus,\nlogically, was protected by cs_main. However, as it has grown to\ninclude non-validation state (taking state from CNode), and as\nwe've reduced cs_main usage for other unrelated things, CNodeState\nis left with lots of cs_main locking in net_processing.\n\nIn order to ease transition to something new, this adds only a\ndummy CPeerState which is held as a reference for the duration of\nmessage processing.\n\nNote that moving things is somewhat tricky pre validation-thread as\na consistent lockorder must be kept - we can't take a lock on the\nnew cs_peerstate in anything that's called directly from\nvalidation.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T16:52:58Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-08T12:47:58Z"
      },
      "sha": "e89822964e9ef8dadf88d47bc94f5396a8c61a54"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZGRiYjEyNjc4MGE4YWI2ZmY1NDc0MTFlMmI4ZDNiNDZlNDJjODg3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ddbb126780a8ab6ff547411e2b8d3b46e42c887",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8ddbb126780a8ab6ff547411e2b8d3b46e42c887",
      "tree": {
        "sha": "367dcceaaf7af31b03903622bc822018f3bca230",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/367dcceaaf7af31b03903622bc822018f3bca230"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e89822964e9ef8dadf88d47bc94f5396a8c61a54",
          "sha": "e89822964e9ef8dadf88d47bc94f5396a8c61a54",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e89822964e9ef8dadf88d47bc94f5396a8c61a54"
        }
      ],
      "message": "Move net_processing's ProcessNewBlock calls to resolve async.\n\nEssentially, our goal is to not process anything for the given peer\nuntil the block finishes processing (emulating the previous behavior)\nwithout actually blocking the ProcessMessages loops. Obviously, in\nmost cases, we'll just go on to the next peer and immediately hit a\ncs_main lock, blocking us anyway, but this we can slowly improve\nthat state over time by moving things from CNodeState to CPeerState.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T20:32:18Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-11T19:54:36Z"
      },
      "sha": "8ddbb126780a8ab6ff547411e2b8d3b46e42c887"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NGU3NGNlOGE5MTdlMDcxYjhhMjUwYTRiYTljZDExMDQ0ODc5NmQ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64e74ce8a917e071b8a250a4ba9cd110448796d6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/64e74ce8a917e071b8a250a4ba9cd110448796d6",
      "tree": {
        "sha": "b1d990467a53cb9d401530c73200ad5c08c16eab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1d990467a53cb9d401530c73200ad5c08c16eab"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8ddbb126780a8ab6ff547411e2b8d3b46e42c887",
          "sha": "8ddbb126780a8ab6ff547411e2b8d3b46e42c887",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8ddbb126780a8ab6ff547411e2b8d3b46e42c887"
        }
      ],
      "message": "Run ProcessNewBlock in a background thread (XXX: p2p_sendheaders broken)\n\nSpawn a background thread at startup which validates each block as\nit comes in from ProcessNewBlock, taking advantage of the new\nstd::future return value to keep tests simple (and the new\nnet_processing handling of such values async already).\n\nThis makes introducing subtle validationinterface deadlocks much\nharder as any locks held going into ProcessNewBlock do not interact\nwith (in the form of lockorder restrictions) locks taken in\nvalidationinterface callbacks.\n\nNote that after this commit, feature_block and feature_assumevalid\ntests time out due to increased latency between block processing\nwhen those blocks do not represent a new best block. This will be\nresolved in the next commit.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T22:04:59Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-09T15:26:16Z"
      },
      "sha": "64e74ce8a917e071b8a250a4ba9cd110448796d6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTgxMGI5ZTg4YmVlNTU4YzM0YWMyNGRjNjg1YzY4ZTVkNWM4M2Ni",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba810b9e88bee558c34ac24dc685c68e5d5c83cb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ba810b9e88bee558c34ac24dc685c68e5d5c83cb",
      "tree": {
        "sha": "865d8d56215ad86e3bd8d75ce1ca7b058a6d9e0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/865d8d56215ad86e3bd8d75ce1ca7b058a6d9e0b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64e74ce8a917e071b8a250a4ba9cd110448796d6",
          "sha": "64e74ce8a917e071b8a250a4ba9cd110448796d6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/64e74ce8a917e071b8a250a4ba9cd110448796d6"
        }
      ],
      "message": "Add a callback to indicate a block has been processed\n\nThis resolves the performance regression introduced in the previous\ncommit by always waking the message processing thread after each\nblock future resolves.\n\nSadly, this is somewhat awkward - all other validationinterface\ncallbacks represent an actual change to the global validation state,\nwhereas this callback indicates only that a call which one\nvalidation \"client\" made has completed. After going back and forth\nfor some time I didn't see a materially better way to resolve this\nissue, and luckily its a rather simple change, but its far from\nideal. Note that because we absolutely do not want to ever block on\na ProcessNewBlock-returned-future, the callback approach is\ncritical.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T22:11:51Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-11T17:29:08Z"
      },
      "sha": "ba810b9e88bee558c34ac24dc685c68e5d5c83cb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDk5ZDk4OGE5Y2VmMTYyOTg3ZDk4ZGRhM2NmOTE0YmUyNGEzZmEx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3499d988a9cef162987d98dda3cf914be24a3fa1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3499d988a9cef162987d98dda3cf914be24a3fa1",
      "tree": {
        "sha": "4350f064d07909b79a96e1ad55c6ace83bfdd153",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4350f064d07909b79a96e1ad55c6ace83bfdd153"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba810b9e88bee558c34ac24dc685c68e5d5c83cb",
          "sha": "ba810b9e88bee558c34ac24dc685c68e5d5c83cb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ba810b9e88bee558c34ac24dc685c68e5d5c83cb"
        }
      ],
      "message": "Move BlockChecked to a background thread",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T22:17:02Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-09T15:27:07Z"
      },
      "sha": "3499d988a9cef162987d98dda3cf914be24a3fa1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NDViYjg0YmQzYzM4YjJlOThjY2MyNDdhYTFhMzQ2Y2EzYzVkNjZj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/445bb84bd3c38b2e98ccc247aa1a346ca3c5d66c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/445bb84bd3c38b2e98ccc247aa1a346ca3c5d66c",
      "tree": {
        "sha": "c5d4eefb85eebef17768b84d041c275da2a25da9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5d4eefb85eebef17768b84d041c275da2a25da9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3499d988a9cef162987d98dda3cf914be24a3fa1",
          "sha": "3499d988a9cef162987d98dda3cf914be24a3fa1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3499d988a9cef162987d98dda3cf914be24a3fa1"
        }
      ],
      "message": "Move nDoS counters to CPeerState (and, thus, out of cs_main)",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T22:27:51Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-09T11:18:35Z"
      },
      "sha": "445bb84bd3c38b2e98ccc247aa1a346ca3c5d66c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmEwNTUyNGY5YjY2YWYxMTQ3Yzk3NzZlM2I0OTliZGI5NDY1NWY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6a05524f9b66af1147c9776e3b499bdb94655f8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b6a05524f9b66af1147c9776e3b499bdb94655f8",
      "tree": {
        "sha": "b264071769248ae2320e27bf407fe0a373a26caf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b264071769248ae2320e27bf407fe0a373a26caf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/445bb84bd3c38b2e98ccc247aa1a346ca3c5d66c",
          "sha": "445bb84bd3c38b2e98ccc247aa1a346ca3c5d66c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/445bb84bd3c38b2e98ccc247aa1a346ca3c5d66c"
        }
      ],
      "message": "Move rejects into cs_peerstate.\n\nThis removes the cs_main lock which is taken on every\nProcessMessages call.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T22:27:52Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-09T11:32:18Z"
      },
      "sha": "b6a05524f9b66af1147c9776e3b499bdb94655f8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDFlOGY2NGNkNTI3YjljNDRiYTE3MWJlYjBiYjgzN2M2NGNjMGE1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "tree": {
        "sha": "fbe9b4fa915443653f6b72f76a419bf7435fcdb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbe9b4fa915443653f6b72f76a419bf7435fcdb5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6a05524f9b66af1147c9776e3b499bdb94655f8",
          "sha": "b6a05524f9b66af1147c9776e3b499bdb94655f8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b6a05524f9b66af1147c9776e3b499bdb94655f8"
        }
      ],
      "message": "Actually parallelize validation somewhat",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-12T22:27:53Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-06-08T17:07:01Z"
      },
      "sha": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2408885872,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjQwODg4NTg3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2408885872",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-12T22:28:11Z"
    },
    {
      "event": "reviewed",
      "id": 249179626,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ5MTc5NjI2",
      "url": null,
      "actor": null,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#pullrequestreview-249179626",
      "submitted_at": "2019-06-13T07:52:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
    },
    {
      "event": "reviewed",
      "id": 248296873,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjQ4Mjk2ODcz",
      "url": null,
      "actor": null,
      "commit_id": "54b3431c404c0879ea35091089c33288a3084403",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Started review (will update list below with progress).\r\n- [X] 9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f Remove unnecessary cs_mains in denialofservice_tests (1/10)\r\n- [X] 79e6e446dd0c8a3f53759a9792388f28e1053bfb Make ProcessNewBlock return a future instead of an immediate bool (2/10)\r\n- [X] e89822964e9ef8dadf88d47bc94f5396a8c61a54 Add a new peer state tracking class to reduce cs_main contention. (3/10)\r\n- [ ] 8ddbb126780a8ab6ff547411e2b8d3b46e42c887 Move net_processing's ProcessNewBlock calls to resolve async. (4/10)\r\n- [ ] 64e74ce8a917e071b8a250a4ba9cd110448796d6 Run ProcessNewBlock in a background thread (XXX: p2p_sendheaders broken) (5/10)\r\n- [ ] ba810b9e88bee558c34ac24dc685c68e5d5c83cb Add a callback to indicate a block has been processed (6/10)\r\n- [ ] 3499d988a9cef162987d98dda3cf914be24a3fa1 Move BlockChecked to a background thread (7/10)\r\n- [ ] 445bb84bd3c38b2e98ccc247aa1a346ca3c5d66c Move nDoS counters to CPeerState (and, thus, out of cs_main) (8/10)\r\n- [ ] b6a05524f9b66af1147c9776e3b499bdb94655f8 Move rejects into cs_peerstate. (9/10)\r\n- [ ] 2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5 Actually parallelize validation somewhat (10/10)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#pullrequestreview-248296873",
      "submitted_at": "2019-06-13T20:39:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
    },
    {
      "event": "commented",
      "id": 501876327,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTg3NjMyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/501876327",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-13T20:58:14Z",
      "updated_at": "2019-06-13T20:58:14Z",
      "author_association": "MEMBER",
      "body": "When IBDing from a single peer, this branch appears to be no slower (or negligibly slower) than master. I'm going to modify the benchmark framework to test against multiple peers, which is where I'm assuming we'd expect to see some speedup.\r\n\r\n![ibd local range 500000 505000](https://user-images.githubusercontent.com/73197/59466913-65c20580-8dfc-11e9-9c29-514f943a3a29.png)\r\n\r\n\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#issuecomment-501876327",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175"
    },
    {
      "event": "commented",
      "id": 502140053,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE0MDA1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/502140053",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-14T14:53:02Z",
      "updated_at": "2019-06-14T14:53:02Z",
      "author_association": "MEMBER",
      "body": "Just want to note that all my comments above are just suggested cleanups. Feel free to ignore them if they don't make sense or aren't worth effort to implement. The only thing I'd really like to see are more comments about locking. When a lock is held in a small scope for specific purpose, I don't think there's a need to have a comment, but when a lock is held over wide scope for no obvious reason it's good to have a comment that suggests why it needs to be acquired there and when it is safe to release.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#issuecomment-502140053",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175"
    },
    {
      "event": "commented",
      "id": 503294948,
      "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzI5NDk0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/503294948",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-18T20:17:33Z",
      "updated_at": "2019-06-18T20:17:33Z",
      "author_association": "MEMBER",
      "body": "Working on rewriting this to make it simpler but it looks like it may end up growing so dunno about it.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#issuecomment-503294948",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16175"
    },
    {
      "event": "closed",
      "id": 2422123370,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjQyMjEyMzM3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2422123370",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-06-18T20:17:33Z"
    },
    {
      "event": "locked",
      "id": 5778537877,
      "node_id": "LOE_lADOABII584bDdCNzwAAAAFYbX2V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778537877",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T13:58:52Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292549581",
      "pull_request_review_id": 248296873,
      "id": 292549581,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjU0OTU4MQ==",
      "diff_hunk": "@@ -388,7 +399,20 @@ struct CNodeState {\n // Keeps track of the time (in microseconds) when transactions were requested last time\n limitedmap<uint256, int64_t> g_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);\n \n+/** Note that this must be locked BEFORE cs_main! */\n+CCriticalSection cs_peerstate;",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "54b3431c404c0879ea35091089c33288a3084403",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add a new peer state tracking class to reduce cs_main contention.\" (e89822964e9ef8dadf88d47bc94f5396a8c61a54)\r\n\r\nDo you want this to be a recursive mutex for some reason? If so, it'd helpful to say in an comment why recursive locking is helpful here. Otherwise I'd suggest changing this line to `Mutex g_peerstate_mutex` (also not using the old \"critical section\" terminology).",
      "created_at": "2019-06-11T16:30:45Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r292549581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292549581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292550851",
      "pull_request_review_id": 248296873,
      "id": 292550851,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjU1MDg1MQ==",
      "diff_hunk": "@@ -756,12 +780,22 @@ void PeerLogicValidation::InitializeNode(CNode *pnode) {\n         LOCK(cs_main);\n         mapNodeState.emplace_hint(mapNodeState.end(), std::piecewise_construct, std::forward_as_tuple(nodeid), std::forward_as_tuple(addr, std::move(addrName), pnode->fInbound, pnode->m_manual_connection));\n     }\n+    {\n+        LOCK(cs_peerstate);\n+        mapPeerState.emplace_hint(mapPeerState.end(), nodeid, CPeerState{});",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "54b3431c404c0879ea35091089c33288a3084403",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add a new peer state tracking class to reduce cs_main contention.\" (e89822964e9ef8dadf88d47bc94f5396a8c61a54)\r\n\r\nNot necessarily suggesting you should change this here, but is the only reason for adding a new `mapPeerState` map to make the diff smaller? If entries are always added to both `mapNodeState` and `mapPeerState` maps and removed from the maps at the same times with both locks held, it would seem more ideal to have just single map where each entry contains separate node state and peer state structs (to support separate lock annotations).",
      "created_at": "2019-06-11T16:33:45Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r292550851",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292550851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 785,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292573676",
      "pull_request_review_id": 248296873,
      "id": 292573676,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjU3MzY3Ng==",
      "diff_hunk": "@@ -197,6 +197,17 @@ struct CBlockReject {\n     uint256 hashBlock;\n };\n \n+/**\n+ * Maintain state about nodes, protected by our own lock. Historically we put all\n+ * peer tracking state in CNodeState, however this results in significant cs_main\n+ * contention. Thus, new state tracking should go here, and we should eventually\n+ * move most (non-validation-specific) state here.\n+ */\n+struct CPeerState {",
      "path": "src/net_processing.cpp",
      "position": 22,
      "original_position": 10,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "54b3431c404c0879ea35091089c33288a3084403",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add a new peer state tracking class to reduce cs_main contention.\" (e89822964e9ef8dadf88d47bc94f5396a8c61a54)\r\n\r\nProbably better to follow current coding convention and call it `PeerState` instead of `CPeerState`",
      "created_at": "2019-06-11T17:26:03Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r292573676",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292573676"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 210,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292575733",
      "pull_request_review_id": 248296873,
      "id": 292575733,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjU3NTczMw==",
      "diff_hunk": "@@ -388,7 +399,20 @@ struct CNodeState {\n // Keeps track of the time (in microseconds) when transactions were requested last time\n limitedmap<uint256, int64_t> g_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);\n \n+/** Note that this must be locked BEFORE cs_main! */\n+CCriticalSection cs_peerstate;\n+\n /** Map maintaining per-node state. */\n+static std::map<NodeId, CPeerState> mapPeerState GUARDED_BY(cs_peerstate);\n+\n+static CPeerState *PeerState(NodeId pnode) EXCLUSIVE_LOCKS_REQUIRED(cs_peerstate) LOCKS_EXCLUDED(cs_main) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "54b3431c404c0879ea35091089c33288a3084403",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add a new peer state tracking class to reduce cs_main contention.\" (e89822964e9ef8dadf88d47bc94f5396a8c61a54)\r\n\r\nWould suggest calling this `LookupPeerState`, to be consistent with `LookupBlockIndex`, and because otherwise calls to this function look like they are constructing objects, not looking up existing objects",
      "created_at": "2019-06-11T17:30:58Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r292575733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292575733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 408,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292576265",
      "pull_request_review_id": 248296873,
      "id": 292576265,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjU3NjI2NQ==",
      "diff_hunk": "@@ -388,7 +399,20 @@ struct CNodeState {\n // Keeps track of the time (in microseconds) when transactions were requested last time\n limitedmap<uint256, int64_t> g_already_asked_for GUARDED_BY(cs_main)(MAX_INV_SZ);\n \n+/** Note that this must be locked BEFORE cs_main! */\n+CCriticalSection cs_peerstate;\n+\n /** Map maintaining per-node state. */\n+static std::map<NodeId, CPeerState> mapPeerState GUARDED_BY(cs_peerstate);",
      "path": "src/net_processing.cpp",
      "position": 96,
      "original_position": 26,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "54b3431c404c0879ea35091089c33288a3084403",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add a new peer state tracking class to reduce cs_main contention.\" (e89822964e9ef8dadf88d47bc94f5396a8c61a54)\r\n\r\n`g_peer_states` instead of `mapPeerState` would be more in line with current coding convention",
      "created_at": "2019-06-11T17:32:16Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r292576265",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292576265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 431,
      "original_line": 431,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292586622",
      "pull_request_review_id": 248296873,
      "id": 292586622,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjU4NjYyMg==",
      "diff_hunk": "@@ -3193,6 +3229,8 @@ bool PeerLogicValidation::SendRejectsAndCheckIfBanned(CNode* pnode, bool enable_\n bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgProc)\n {\n     const CChainParams& chainparams = Params();\n+    LOCK(cs_peerstate);",
      "path": "src/net_processing.cpp",
      "position": 603,
      "original_position": 100,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "54b3431c404c0879ea35091089c33288a3084403",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add a new peer state tracking class to reduce cs_main contention.\" (e89822964e9ef8dadf88d47bc94f5396a8c61a54)\r\n\r\nAcquiring a global lock in `PeerLogicValidation::ProcessMessages` for a single peer seems like a pessimization. Why acquire `cs_peerstate` at such a broad scope here instead of just acquiring it directly where needed, like the code is currently doing with `cs_main`? This would potentially be more efficient and make ProcessMessages code easier to parallelize in the future, but more importantly I think it would make the control flow easier to understand because you could see the mutex being locked in actual places the lock is needed, instead of relying on it already being locked somewhere up the call stack.\r\n\r\nIf the broader locking is justified, it would at least be good to have a comment to give a clue about why the mutex is being locked for so long beyond the initial PeerState lookup, and what other things below require the lock.",
      "created_at": "2019-06-11T17:56:24Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r292586622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292586622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3308,
      "original_line": 3308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292598784",
      "pull_request_review_id": 248296873,
      "id": 292598784,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjU5ODc4NA==",
      "diff_hunk": "@@ -3484,6 +3522,9 @@ bool PeerLogicValidation::SendMessages(CNode* pto)\n         // If we get here, the outgoing message serialization version is set and can't change.\n         const CNetMsgMaker msgMaker(pto->GetSendVersion());\n \n+        LOCK(cs_peerstate);",
      "path": "src/net_processing.cpp",
      "position": 644,
      "original_position": 118,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "54b3431c404c0879ea35091089c33288a3084403",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Add a new peer state tracking class to reduce cs_main contention.\" (e89822964e9ef8dadf88d47bc94f5396a8c61a54)\r\n\r\nIt'd be good to have a comment about what code here actually requires the lock. It's unclear if it's just the map lookup and `IsPendingBlockValidated` code added in a later commit, or if cs_peerstate is replacing cs_main in other parts of this function. If you could reduce the scope of the lock to only the code that needs it, I think that'd also be good, but when you're holding a lock over a really wide scope and not briefly for a specific reason, it's good to have some explanation.",
      "created_at": "2019-06-11T18:24:35Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r292598784",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292598784"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3608,
      "original_line": 3608,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292619647",
      "pull_request_review_id": 248296873,
      "id": 292619647,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MjYxOTY0Nw==",
      "diff_hunk": "@@ -204,7 +206,28 @@ struct CBlockReject {\n  * move most (non-validation-specific) state here.\n  */\n struct CPeerState {\n-    CPeerState() {}\n+    //! String name of this peer (debugging/logging purposes).\n+    const std::string name;\n+\n+    //! Whether this peer should be disconnected and banned (unless whitelisted).\n+    bool fShouldBan;\n+    //! Accumulated misbehaviour score for this peer.\n+    int nMisbehavior;\n+\n+    //! Whether this peer is an inbound connection\n+    bool m_is_inbound;\n+\n+    //! Whether this peer is a manual connection\n+    bool m_is_manual_connection;\n+\n+    CPeerState(std::string addrNameIn, bool is_inbound, bool is_manual) :\n+        name(std::move(addrNameIn)),\n+        m_is_inbound(is_inbound),\n+        m_is_manual_connection (is_manual)\n+    {\n+        fShouldBan = false;",
      "path": "src/net_processing.cpp",
      "position": 52,
      "original_position": 36,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "bcc64438d2eebf01866a26a92abf932ed21e0d4f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Move nDoS counters to CPeerState (and, thus, out of cs_main)\" (bcc64438d2eebf01866a26a92abf932ed21e0d4f):\r\n\r\nWould be clearer to assign members directly above (`bool fShouldBan = false;`)",
      "created_at": "2019-06-11T19:17:26Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r292619647",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/292619647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 240,
      "original_line": 240,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293247162",
      "pull_request_review_id": 249179626,
      "id": 293247162,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzI0NzE2Mg==",
      "diff_hunk": "@@ -208,15 +209,17 @@ static const uint64_t MIN_DISK_SPACE_FOR_BLOCK_FILES = 550 * 1024 * 1024;\n  * Note that we guarantee that either the proof-of-work is valid on pblock, or\n  * (and possibly also) BlockChecked will have been called.\n  *\n- * May not be called in a\n- * validationinterface callback.\n+ * May not be called in a validationinterface callback.\n+ *\n+ * Do NOT block on the returned future waiting for it to resolve as this may\n+ * introduce deadlocks (in the case you are holding any mutexes which are\n+ * also taken in validationinterface callbacks).\n  *\n  * @param[in]   pblock  The block we want to process.\n  * @param[in]   fForceProcessing Process this block even if unrequested; used for non-network block sources and whitelisted peers.\n- * @param[out]  fNewBlock A boolean which is set to indicate if the block was first received via this call\n- * @return True if state.IsValid()\n+ * @return      A future which complets with a boolean which is set to indicate if the block was first received via this call",
      "path": "src/validation.h",
      "position": 24,
      "original_position": 24,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Adding an \"e\" completes the spelling here :-)",
      "created_at": "2019-06-13T07:52:26Z",
      "updated_at": "2019-06-13T07:52:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r293247162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293247162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 220,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293532602",
      "pull_request_review_id": 248296873,
      "id": 293532602,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzUzMjYwMg==",
      "diff_hunk": "@@ -95,11 +95,11 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n \n     // Test starts here\n     {\n-        LOCK2(cs_main, dummyNode1.cs_sendProcessing);",
      "path": "src/test/denialofservice_tests.cpp",
      "position": 12,
      "original_position": 4,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Remove unnecessary cs_mains in denialofservice_tests\" (9bc8ca61f5c9ca57ea71b3acdd1021a5cf66512f)\r\n\r\nConsider moving this commit into a separate PR. It could probably be merged quickly and would cut down size of this PR.",
      "created_at": "2019-06-13T19:02:53Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r293532602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293532602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293545964",
      "pull_request_review_id": 248296873,
      "id": 293545964,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzU0NTk2NA==",
      "diff_hunk": "@@ -3448,21 +3451,25 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n         bool ret = CheckBlock(*pblock, state, chainparams.GetConsensus());\n         if (ret) {\n             // Store to disk\n-            ret = ::ChainstateActive().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, fNewBlock);\n+            ret = ::ChainstateActive().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, &fNewBlock);\n         }\n         if (!ret) {\n             GetMainSignals().BlockChecked(*pblock, state);\n-            return error(\"%s: AcceptBlock FAILED (%s)\", __func__, FormatStateMessage(state));\n+            error(\"%s: AcceptBlock FAILED (%s)\", __func__, FormatStateMessage(state));\n+            result_promise.set_value(fNewBlock);\n+            return result;\n         }\n     }\n \n+    result_promise.set_value(fNewBlock);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "79e6e446dd0c8a3f53759a9792388f28e1053bfb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Make ProcessNewBlock return a future instead of an immediate bool\" (79e6e446dd0c8a3f53759a9792388f28e1053bfb)\r\n\r\nThis line is added here and them moved below NotifyHeaderTip in a later commit 64e74ce8a917e071b8a250a4ba9cd110448796d6. It would be preferable to just add in the right place below now so it doesn't need to be moved later.",
      "created_at": "2019-06-13T19:40:25Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r293545964",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293545964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3464,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293548589",
      "pull_request_review_id": 248296873,
      "id": 293548589,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzU0ODU4OQ==",
      "diff_hunk": "@@ -3430,48 +3430,87 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CVali\n     return true;\n }\n \n-std::future<bool> ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing)\n+void CChainState::ProcessBlockValidationQueue()\n {\n-    AssertLockNotHeld(cs_main);\n+    while (true) {\n+        LimitValidationInterfaceQueue();\n \n-    std::promise<bool> result_promise;\n-    std::future<bool> result = result_promise.get_future();\n-    bool fNewBlock = false;\n+        std::shared_ptr<const CBlock> pblock;\n+        bool fForceProcessing;\n+        std::promise<bool> result_promise;\n+        {\n+            std::unique_lock<CCriticalSection> lock(m_cs_block_validation_queue);\n+            if (m_block_validation_queue.empty()) {\n+                m_cv_block_validation_queue.wait_for(lock, std::chrono::seconds(1));\n+            }\n+            if (ShutdownRequested())\n+                break;\n+            boost::this_thread::interruption_point();\n+            if (m_block_validation_queue.empty()) {\n+                continue;\n+            }\n \n-    {\n-        CBlockIndex *pindex = nullptr;\n-        CValidationState state;\n+            std::tuple<std::shared_ptr<const CBlock>, bool, std::promise<bool>>& tuple = m_block_validation_queue.front();\n+            pblock = std::move(std::get<0>(tuple));\n+            fForceProcessing = std::get<1>(tuple);\n+            result_promise = std::move(std::get<2>(tuple));\n+            m_block_validation_queue.pop_front();\n+        }\n \n-        // CheckBlock() does not support multi-threaded block validation because CBlock::fChecked can cause data race.\n-        // Therefore, the following critical section must include the CheckBlock() call as well.\n-        LOCK(cs_main);\n+        CChainParams chainparams = Params();\n+        bool fNewBlock = false;\n+        {\n+            CBlockIndex *pindex = nullptr;\n+            CValidationState state;\n \n-        // Ensure that CheckBlock() passes before calling AcceptBlock, as\n-        // belt-and-suspenders.\n-        bool ret = CheckBlock(*pblock, state, chainparams.GetConsensus());\n-        if (ret) {\n-            // Store to disk\n-            ret = ::ChainstateActive().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, &fNewBlock);\n-        }\n-        if (!ret) {\n-            GetMainSignals().BlockChecked(*pblock, state);\n-            error(\"%s: AcceptBlock FAILED (%s)\", __func__, FormatStateMessage(state));\n-            result_promise.set_value(fNewBlock);\n-            return result;\n+            // CheckBlock() does not support multi-threaded block validation because CBlock::fChecked can cause data race.\n+            // Therefore, the following critical section must include the CheckBlock() call as well.\n+            LOCK(cs_main);\n+\n+            // Ensure that CheckBlock() passes before calling AcceptBlock, as\n+            // belt-and-suspenders.\n+            bool ret = CheckBlock(*pblock, state, chainparams.GetConsensus());\n+            if (ret) {\n+                // Store to disk\n+                ret = ::ChainstateActive().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, &fNewBlock);\n+            }\n+            if (!ret) {\n+                GetMainSignals().BlockChecked(*pblock, state);\n+                error(\"%s: AcceptBlock FAILED (%s)\", __func__, FormatStateMessage(state));\n+                result_promise.set_value(fNewBlock);\n+                continue;\n+            }\n         }\n-    }\n \n-    result_promise.set_value(fNewBlock);\n+        NotifyHeaderTip();\n \n-    NotifyHeaderTip();\n+        CValidationState state; // Only used to report errors, not invalidity - ignore it\n+        if (!::ChainstateActive().ActivateBestChain(state, chainparams, pblock))\n+            error(\"%s: ActivateBestChain failed (%s)\", __func__, FormatStateMessage(state));\n+\n+        result_promise.set_value(fNewBlock);\n+    }\n+}\n \n-    CValidationState state; // Only used to report errors, not invalidity - ignore it\n-    if (!::ChainstateActive().ActivateBestChain(state, chainparams, pblock))\n-        error(\"%s: ActivateBestChain failed (%s)\", __func__, FormatStateMessage(state));\n+std::future<bool> CChainState::ProcessNewBlock(const std::shared_ptr<const CBlock> pblock, bool fForceProcessing)\n+{\n+    AssertLockNotHeld(cs_main);\n \n+    std::promise<bool> result_promise;\n+    std::future<bool> result = result_promise.get_future();\n+    {\n+        LOCK(m_cs_block_validation_queue);\n+        m_block_validation_queue.emplace_back(std::move(pblock), fForceProcessing, std::move(result_promise));\n+    }\n+    m_cv_block_validation_queue.notify_one();\n     return result;\n }\n \n+std::future<bool> ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing)",
      "path": "src/validation.cpp",
      "position": 114,
      "original_position": 109,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "64e74ce8a917e071b8a250a4ba9cd110448796d6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Run ProcessNewBlock in a background thread (XXX: p2p_sendheaders broken)\" (64e74ce8a917e071b8a250a4ba9cd110448796d6)\r\n\r\nDocumentation for this function in validation.h becomes out of date with this commit and should be updated. It still says \"This only returns after the best known valid block is made active.\"",
      "created_at": "2019-06-13T19:48:07Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r293548589",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293548589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3510,
      "original_line": 3509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293553191",
      "pull_request_review_id": 248296873,
      "id": 293553191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzU1MzE5MQ==",
      "diff_hunk": "@@ -3430,48 +3430,87 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, CVali\n     return true;\n }\n \n-std::future<bool> ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing)\n+void CChainState::ProcessBlockValidationQueue()\n {\n-    AssertLockNotHeld(cs_main);\n+    while (true) {\n+        LimitValidationInterfaceQueue();\n \n-    std::promise<bool> result_promise;\n-    std::future<bool> result = result_promise.get_future();\n-    bool fNewBlock = false;\n+        std::shared_ptr<const CBlock> pblock;\n+        bool fForceProcessing;\n+        std::promise<bool> result_promise;\n+        {\n+            std::unique_lock<CCriticalSection> lock(m_cs_block_validation_queue);\n+            if (m_block_validation_queue.empty()) {\n+                m_cv_block_validation_queue.wait_for(lock, std::chrono::seconds(1));\n+            }\n+            if (ShutdownRequested())\n+                break;\n+            boost::this_thread::interruption_point();\n+            if (m_block_validation_queue.empty()) {\n+                continue;\n+            }\n \n-    {\n-        CBlockIndex *pindex = nullptr;\n-        CValidationState state;\n+            std::tuple<std::shared_ptr<const CBlock>, bool, std::promise<bool>>& tuple = m_block_validation_queue.front();\n+            pblock = std::move(std::get<0>(tuple));\n+            fForceProcessing = std::get<1>(tuple);\n+            result_promise = std::move(std::get<2>(tuple));\n+            m_block_validation_queue.pop_front();\n+        }\n \n-        // CheckBlock() does not support multi-threaded block validation because CBlock::fChecked can cause data race.\n-        // Therefore, the following critical section must include the CheckBlock() call as well.\n-        LOCK(cs_main);\n+        CChainParams chainparams = Params();\n+        bool fNewBlock = false;\n+        {\n+            CBlockIndex *pindex = nullptr;\n+            CValidationState state;\n \n-        // Ensure that CheckBlock() passes before calling AcceptBlock, as\n-        // belt-and-suspenders.\n-        bool ret = CheckBlock(*pblock, state, chainparams.GetConsensus());\n-        if (ret) {\n-            // Store to disk\n-            ret = ::ChainstateActive().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, &fNewBlock);\n-        }\n-        if (!ret) {\n-            GetMainSignals().BlockChecked(*pblock, state);\n-            error(\"%s: AcceptBlock FAILED (%s)\", __func__, FormatStateMessage(state));\n-            result_promise.set_value(fNewBlock);\n-            return result;\n+            // CheckBlock() does not support multi-threaded block validation because CBlock::fChecked can cause data race.\n+            // Therefore, the following critical section must include the CheckBlock() call as well.\n+            LOCK(cs_main);\n+\n+            // Ensure that CheckBlock() passes before calling AcceptBlock, as\n+            // belt-and-suspenders.\n+            bool ret = CheckBlock(*pblock, state, chainparams.GetConsensus());\n+            if (ret) {\n+                // Store to disk\n+                ret = ::ChainstateActive().AcceptBlock(pblock, state, chainparams, &pindex, fForceProcessing, nullptr, &fNewBlock);",
      "path": "src/validation.cpp",
      "position": 74,
      "original_position": 69,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "64e74ce8a917e071b8a250a4ba9cd110448796d6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Run ProcessNewBlock in a background thread (XXX: p2p_sendheaders broken)\" (64e74ce8a917e071b8a250a4ba9cd110448796d6)\r\n\r\nThroughout this function shouldn't `::ChainstateActive()` be replaced by `*this`?",
      "created_at": "2019-06-13T20:01:18Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r293553191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293553191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3475,
      "original_line": 3475,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293554242",
      "pull_request_review_id": 248296873,
      "id": 293554242,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzU1NDI0Mg==",
      "diff_hunk": "@@ -745,12 +746,13 @@ static UniValue submitblock(const JSONRPCRequest& request)\n         }\n     }\n \n-    bool new_block;\n     submitblock_StateCatcher sc(block.GetHash());\n     RegisterValidationInterface(&sc);\n-    bool accepted = ProcessNewBlock(Params(), blockptr, /* fForceProcessing */ true, /* fNewBlock */ &new_block);\n+    bool new_block = ProcessNewBlock(Params(), blockptr, /* fForceProcessing */ true).get();\n     UnregisterValidationInterface(&sc);\n-    if (!new_block && accepted) {\n+    LOCK(cs_main);\n+    const CBlockIndex* pindex = LookupBlockIndex(blockptr->GetHash());\n+    if (!new_block && pindex && pindex->IsValid()) {",
      "path": "src/rpc/mining.cpp",
      "position": 24,
      "original_position": 23,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "79e6e446dd0c8a3f53759a9792388f28e1053bfb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Make ProcessNewBlock return a future instead of an immediate bool\" (79e6e446dd0c8a3f53759a9792388f28e1053bfb)\r\n\r\nThis seems fine, but just to make sure I understand correctly, there is a change in behavior here? Previously `accepted` would only be true if `CheckBlock` and `AcceptBlock` and `ActivateBestChain` all succeeded but this can be true even they fail?",
      "created_at": "2019-06-13T20:04:32Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r293554242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293554242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 756,
      "original_line": 755,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293562749",
      "pull_request_review_id": 248296873,
      "id": 293562749,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5MzU2Mjc0OQ==",
      "diff_hunk": "@@ -175,7 +175,7 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, TestChain100Setup)\n     uint256 chainA_last_header = last_header;\n     for (size_t i = 0; i < 2; i++) {\n         const auto& block = chainA[i];\n-        BOOST_REQUIRE(ProcessNewBlock(Params(), block, true, nullptr));",
      "path": "src/test/blockfilter_index_tests.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "79e6e446dd0c8a3f53759a9792388f28e1053bfb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Make ProcessNewBlock return a future instead of an immediate bool\" (79e6e446dd0c8a3f53759a9792388f28e1053bfb)\r\n\r\nIn the commit message about these tests you wrote \"Note that this makes some of the unit tests less restrictive.\" But I don't think there's a good justification for doing this. If you just declared `struct ProcessNewBlockResult { bool error = false; bool already_have = false; };` and returned `std::future<ProcessNewBlockResult>`, the tests could behave the same and the code would be more readable and less fragile, without the need for people to guess from context whether the bool indicates success or newness.\r\n",
      "created_at": "2019-06-13T20:28:25Z",
      "updated_at": "2019-06-13T20:39:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r293562749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/293562749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 178,
      "original_line": 178,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294579194",
      "pull_request_review_id": 250821780,
      "id": 294579194,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI5NDU3OTE5NA==",
      "diff_hunk": "@@ -175,7 +175,7 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, TestChain100Setup)\n     uint256 chainA_last_header = last_header;\n     for (size_t i = 0; i < 2; i++) {\n         const auto& block = chainA[i];\n-        BOOST_REQUIRE(ProcessNewBlock(Params(), block, true, nullptr));",
      "path": "src/test/blockfilter_index_tests.cpp",
      "position": 13,
      "original_position": 13,
      "commit_id": "2d1e8f64cd527b9c44ba171beb0bb837c64cc0a5",
      "original_commit_id": "79e6e446dd0c8a3f53759a9792388f28e1053bfb",
      "in_reply_to_id": 293562749,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Think I agree with this suggestion; dropping the `fNewBlock` result at the same time as turning the return into a `future` seems unnecessarily complicated.",
      "created_at": "2019-06-18T01:30:00Z",
      "updated_at": "2019-06-18T01:30:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/16175#discussion_r294579194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/294579194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16175"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 178,
      "original_line": 178,
      "side": "LEFT"
    }
  ]
}