{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305",
    "id": 515827863,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE1ODI3ODYz",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20305",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/20305.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/20305.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/05e82d86b09d914ebce05dbc92a7299cb026847b",
    "number": 20305,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "wallet: introduce fee_rate sat/vB param/option",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR builds on #11413 and #20220 to address #19543.\r\n\r\n- replace overloading the conf_target and estimate_mode params with `fee_rate` in sat/vB in the sendtoaddress, sendmany, send, fundrawtransaction, walletcreatefundedpsbt, and bumpfee RPCs\r\n\r\n- allow non-actionable conf_target value of `0` and estimate_mode value of `\"\"` to be passed to use `fee_rate` as a positional argument, in addition to as a named argument\r\n\r\n- fix a bug in the experimental send RPC described in https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513789526 where args were not being passed correctly into the options values\r\n\r\n- update the feerate error message units for these RPCs from BTC/kB to sat/vB\r\n\r\n- update the test coverage, help docs, doxygen docs, and some of the RPC examples\r\n\r\n- other changes to address the excellent review feedback\r\n\r\nSee this wallet meeting log for more context: http://www.erisian.com.au/bitcoin-core-dev/log-2020-11-06.html#l-309\r\n",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
      "id": 4914019,
      "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
      "number": 45,
      "state": "closed",
      "title": "0.21.0",
      "description": "",
      "creator": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 132,
      "created_at": "2019-12-09T08:39:58Z",
      "updated_at": "2021-01-15T19:50:53Z",
      "closed_at": "2021-01-15T19:50:53Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2020-11-05T06:26:20Z",
    "updated_at": "2022-02-15T11:15:34Z",
    "closed_at": "2020-11-17T12:52:10Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-11-17T12:52:10Z",
    "merge_commit_sha": "80e32e120ee4ba7e5b458338682cf1130964218f",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jonatack:fee_rate_sat_vb",
      "ref": "fee_rate_sat_vb",
      "sha": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 173103842,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNzMxMDM4NDI=",
        "name": "bitcoin",
        "full_name": "jonatack/bitcoin",
        "owner": {
          "login": "jonatack",
          "id": 2415484,
          "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jonatack",
          "html_url": "https://github.com/jonatack",
          "followers_url": "https://api.github.com/users/jonatack/followers",
          "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
          "organizations_url": "https://api.github.com/users/jonatack/orgs",
          "repos_url": "https://api.github.com/users/jonatack/repos",
          "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jonatack/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jonatack/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jonatack/bitcoin",
        "archive_url": "https://api.github.com/repos/jonatack/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jonatack/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jonatack/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jonatack/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jonatack/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jonatack/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jonatack/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jonatack/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jonatack/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jonatack/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jonatack/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jonatack/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jonatack/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jonatack/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jonatack/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jonatack/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jonatack/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jonatack/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jonatack/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jonatack/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jonatack/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jonatack/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jonatack/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jonatack/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jonatack/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jonatack/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jonatack/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jonatack/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jonatack/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jonatack/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jonatack/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jonatack/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jonatack/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jonatack/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jonatack/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jonatack/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jonatack/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jonatack/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jonatack/bitcoin/hooks",
        "svn_url": "https://github.com/jonatack/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 217428,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T14:39:25Z",
        "created_at": "2019-02-28T11:57:18Z",
        "updated_at": "2023-01-03T22:00:49Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "8a486158cbc3f18adf12d2d3b737f7f4e7399e7d",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T03:51:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 447,
    "deletions": 426,
    "changed_files": 15,
    "commits": 13,
    "review_comments": 83,
    "comments": 30
  },
  "events": [
    {
      "event": "labeled",
      "id": 3960755487,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM5NjA3NTU0ODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3960755487",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T06:27:48Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 722192301,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjE5MjMwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722192301",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T07:18:33Z",
      "updated_at": "2020-11-05T07:18:33Z",
      "author_association": "MEMBER",
      "body": "How does this differ/compare to #20250 ?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-722192301",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 722195542,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjE5NTU0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722195542",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T07:25:36Z",
      "updated_at": "2020-11-05T07:25:36Z",
      "author_association": "MEMBER",
      "body": "I guess this one is adding a new separate option, #20250 is adding named aliases and keeping the existing options.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-722195542",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 722202884,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjIwMjg4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722202884",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T07:42:28Z",
      "updated_at": "2020-11-05T15:00:49Z",
      "author_association": "MEMBER",
      "body": "Yes, this one removes the conf_target/estimate_mode overloading and introduces a standard fee rate param.\r\n\r\n#20250 keeps the current overloading and makes it more consistent between the six RPCs. Some of what it does (feeRate -> fee_rate) is compatible or orthogonal.\r\n\r\nISTM the question is, do we want to release with the overloading or with a standard feerate param. (It would be simpler if we decide before the branch-off. After, this PR would need to be changed as we would have to support both.)",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-722202884",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 722278499,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjI3ODQ5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722278499",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T10:09:57Z",
      "updated_at": "2020-11-16T13:56:56Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20391 (wallet: introduce setfeerate (an improved settxfee, in sat/vB) by jonatack)\n* #20362 (test: Implicitly sync after generate* to preempt races and intermittent test failures by MarcoFalke)\n* #18418 (wallet: Increase OUTPUT_GROUP_MAX_ENTRIES to 100 by fjahr)\n* #17526 (Use Single Random Draw In addition to knapsack as coin selection fallback by achow101)\n* #17331 (Use effective values throughout coin selection by achow101)\n* #17211 (Allow fundrawtransaction and walletcreatefundedpsbt to take external inputs by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-722278499",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "milestoned",
      "id": 3963786914,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDM5NjM3ODY5MTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3963786914",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T18:21:18Z",
      "milestone": {
        "title": "0.21.0"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3968440223,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk2ODQ0MDIyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3968440223",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-06T18:33:08Z"
    },
    {
      "event": "commented",
      "id": 723257780,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzI1Nzc4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723257780",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-06T19:26:16Z",
      "updated_at": "2020-11-06T19:26:16Z",
      "author_association": "MEMBER",
      "body": "AFAICT, the only \"fee_rate\" in 0.20 was bumpfee. Specifying BTC/vkB (current value) in place of the new sat/vB would always be a *much* lower feerate. So it'd most likely be too low and error, or worst case lower than you intended and you can just bump it again to fix.\r\n\r\nWith that in mind, I think the option here should just be renamed to \"fee_rate\" and break the compatibility for bumpfee.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-723257780",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 723264822,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzI2NDgyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723264822",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-06T19:42:18Z",
      "updated_at": "2020-11-06T19:42:18Z",
      "author_association": "MEMBER",
      "body": "@luke-jr SGTM and that would further simplify the implementation too.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-723264822",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "mentioned",
      "id": 3968663798,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzk2ODY2Mzc5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3968663798",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-06T19:42:18Z"
    },
    {
      "event": "subscribed",
      "id": 3968663800,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5Njg2NjM4MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3968663800",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-06T19:42:18Z"
    },
    {
      "event": "commented",
      "id": 723323684,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzMyMzY4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723323684",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-06T22:14:11Z",
      "updated_at": "2020-11-06T22:14:11Z",
      "author_association": "MEMBER",
      "body": "Agree with renaming to `fee_rate`. However having two fee rate options for some RPCs is kinda weird. I suppose it's too late to fix that for this release, but it'd be nice to not do that in the future.\r\n\r\nConcept ACK.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-723323684",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 723398442,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzM5ODQ0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723398442",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-07T06:13:12Z",
      "updated_at": "2020-11-07T06:13:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK for `fee_rate` ",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-723398442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "reviewed",
      "id": 525870724,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1ODcwNzI0",
      "url": null,
      "actor": null,
      "commit_id": "2b8d681fe07fb7fa33b6732ea691a5070c9770f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Why `fee_rate_sat_vb` and not just `fee_rate`? Also, should not change `verbose` parameter index?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#pullrequestreview-525870724",
      "submitted_at": "2020-11-09T01:11:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
    },
    {
      "event": "commented",
      "id": 723929804,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzkyOTgwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723929804",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T10:42:11Z",
      "updated_at": "2020-11-09T15:01:56Z",
      "author_association": "MEMBER",
      "body": "> Why `fee_rate_sat_vb` and not just `fee_rate`?\r\n\r\nI initially began with `fee_rate` in #20231. Then, based on https://github.com/bitcoin/bitcoin/pull/20220#discussion_r513789526 I changed to `fee_rate_sat_vb` here. Today, based on the feedback at last Friday's wallet meeting and here, I will push an update to use `fee_rate`.\r\n\r\n> Also, should not change `verbose` parameter index?\r\n\r\nFor sendtoaddress and sendmany, I hesitated on this because I thought that users are used to seeing the `verbose` argument placed last, e.g. like gettransaction. If positional `true` or `false` are passed for the `fee_rate`, a type error will be raised and the transaction won't proceed. Is it better to put `fee_rate` after `verbose` instead?",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-723929804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 723935004,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzkzNTAwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723935004",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T10:51:48Z",
      "updated_at": "2020-11-09T10:51:48Z",
      "author_association": "MEMBER",
      "body": "Has `verbose` been in a release already?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-723935004",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 723949562,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzk0OTU2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/723949562",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T11:19:17Z",
      "updated_at": "2020-11-09T11:21:37Z",
      "author_association": "MEMBER",
      "body": "Per d5863c0b3e it looks like `verbose` was added to sendtoaddress and sendmany after the 0.20 release. Not a bugfix, so probably not backported. Checking. Edit: nope, they aren't in 0.20.0 or 0.20.1. We're good.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-723949562",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "renamed",
      "id": 3974177837,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mzk3NDE3NzgzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3974177837",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T14:56:25Z",
      "rename": {
        "from": "wallet: introduce fee_rate_sat_vb param/option",
        "to": "wallet: introduce fee_rate param/option"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3974333932,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk3NDMzMzkzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3974333932",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T15:26:51Z"
    },
    {
      "event": "renamed",
      "id": 3974436253,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50Mzk3NDQzNjI1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3974436253",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T15:46:46Z",
      "rename": {
        "from": "wallet: introduce fee_rate param/option",
        "to": "wallet: introduce fee_rate sat/vB param/option"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3974504894,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk3NDUwNDg5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3974504894",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-09T15:59:26Z"
    },
    {
      "event": "reviewed",
      "id": 526433625,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NDMzNjI1",
      "url": null,
      "actor": null,
      "commit_id": "389236d63e34b6779d01913d22f94bb02021fe29",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Partial review up to ~3/4 of 53b35be8f87fd894614a5e3609b1d8895a96c93c. Will continue in approx 60 minutes.",
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#pullrequestreview-526433625",
      "submitted_at": "2020-11-09T18:58:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
    },
    {
      "event": "reviewed",
      "id": 526785231,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2Nzg1MjMx",
      "url": null,
      "actor": null,
      "commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks great to me! Gonna circle back tomorrow after I get up. :)",
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#pullrequestreview-526785231",
      "submitted_at": "2020-11-10T02:03:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
    },
    {
      "event": "commented",
      "id": 724875274,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDg3NTI3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724875274",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T18:11:48Z",
      "updated_at": "2020-11-10T18:11:48Z",
      "author_association": "MEMBER",
      "body": "ACK 5660dd301152c0c7a70934cc7650ad162a44c9b4",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-724875274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3980756166,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk4MDc1NjE2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980756166",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T20:12:32Z"
    },
    {
      "event": "commented",
      "id": 724960865,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDk2MDg2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/724960865",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T20:55:09Z",
      "updated_at": "2020-11-10T22:01:18Z",
      "author_association": "MEMBER",
      "body": "Addressed @Xekyo and @achow101 feedback (thanks!), fixed a few things seen while self-reviewing (and removed a few duplicate tests/added some missing tests in rpc_fundrawtransaction.py) per `git diff 5660dd3 bcb8e0d` 🍰✨",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-724960865",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "mentioned",
      "id": 3980912604,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzk4MDkxMjYwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980912604",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T20:55:09Z"
    },
    {
      "event": "subscribed",
      "id": 3980912607,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5ODA5MTI2MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980912607",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T20:55:09Z"
    },
    {
      "event": "mentioned",
      "id": 3980912609,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mzk4MDkxMjYwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980912609",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T20:55:09Z"
    },
    {
      "event": "subscribed",
      "id": 3980912611,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDM5ODA5MTI2MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980912611",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T20:55:09Z"
    },
    {
      "event": "closed",
      "id": 3981668642,
      "node_id": "MDExOkNsb3NlZEV2ZW50Mzk4MTY2ODY0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3981668642",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T01:30:22Z"
    },
    {
      "event": "reopened",
      "id": 3981668824,
      "node_id": "MDEzOlJlb3BlbmVkRXZlbnQzOTgxNjY4ODI0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3981668824",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T01:30:28Z"
    },
    {
      "event": "commented",
      "id": 725071629,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTA3MTYyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/725071629",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T01:35:02Z",
      "updated_at": "2020-11-11T08:26:50Z",
      "author_association": "MEMBER",
      "body": "Closed and reopened to see if the valgrind fuzzing ci will stop timing out and to try to kick appveyor into working. :hammer: The PR is all green on https://bitcoinbuilds.org/?build=4300.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-725071629",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3984206926,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk4NDIwNjkyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3984206926",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T14:54:19Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjcyNzkxNjEzNDc1NDNjZTRlOTk3ZDc4ZWE4OWE0MDQzNDkxMTQ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f7279161347543ce4e997d78ea89a4043491145",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3f7279161347543ce4e997d78ea89a4043491145",
      "tree": {
        "sha": "405a3b40795572558bd39ee9d8919a7f2501f470",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/405a3b40795572558bd39ee9d8919a7f2501f470"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 405a3b40795572558bd39ee9d8919a7f2501f470\nparent 155bf91c3b66e3ec9f870d8161e1a3c9a5c23251\nauthor Jon Atack <jon@atack.com> 1604554441 +0100\ncommitter Jon Atack <jon@atack.com> 1605106546 +0100\n\nwallet: fix bug in RPC send options\n\nwhen empty, options were not being populated by arguments of the same name\n\nfound while adding test coverage in 603c0050\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+r+3MACgkQT1chs9Dj\nkh2FdRAAxSm3h7Ac0a4yWv5XdNZM1ZlIeSnQl5QJVS4tcyNMC37BxlOSHIw+Dz7L\nhzg97lEFck9t3o8LyZY9VVlUy1H6YyHs+zBmPXWotQl8CdQWCqSs7PRZD5LIW6vH\nzPrdwr1gxRkKDeqy0SVdF1LAT92nVM6V8kPMuF5grNWWNK0H7x+F+1atPSSWJSnV\ngVJcjcArICa0d5uao/rgXOrzbhCgsz2lGV6m5R02/GBkpT+oBzhoWUNHdayy2x8C\nD2Y8oKIZGOKwwPZzGtf8cn0TwBR25Y7QSCKaxaTM+X0P04jIwXBkW/vEv2PJlreD\nEfjMSApCgK2/S1DYjAXLkjx5co6hrGxw50RRptU47pnut3LMo25QNkotsB0g4F/n\nDIUOYIri9ba3NSwoSk03K0JAjFTWNkJNucOenPBsWQu5OjrI2fGe5iP7Zmlre3Id\nYwcxnCQA0LBsHUXOqGtVCrwfu5wDt09hdpNyTI0lzk7GWFCq2h6qVAS1pYlwUaUL\n3C/pOX9IixecwCdOtb/l9GWrf6yR82glmvrlRX6FcHIxk4TPN0r8CuCCq2vw96FV\nigSUTdFoNiwOiP4fdLrSwOMLw5giXA3I1xy+xQ/SL7F343OBWD3PXQZ9bEELzGXy\n4hvXkclSMWsX51WnICj6TNJqzKB3kKqeOJ3pajkytmwsFCFO50I=\n=K4a6\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOp/ymeSTemW/5YOyCHkaPN5lHVazRxtL3AsSNT4LFHjCP/wEFm+xyNkwEFE\nwa5swZseXwEI8QRfq/t18AhUlQIMiEjIzwCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIPvoVoudXMmp9wafhAm\nsboI8QRfq/t08AhajKQHLqyYgwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbfAQwOlzVaUUpINBHls+RUmhUAjxBF+r+3TwCMJ7tKVn\nLZ10AIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/155bf91c3b66e3ec9f870d8161e1a3c9a5c23251",
          "sha": "155bf91c3b66e3ec9f870d8161e1a3c9a5c23251",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/155bf91c3b66e3ec9f870d8161e1a3c9a5c23251"
        }
      ],
      "message": "wallet: fix bug in RPC send options\n\nwhen empty, options were not being populated by arguments of the same name\n\nfound while adding test coverage in 603c0050",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-11T14:55:46Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-05T05:34:01Z"
      },
      "sha": "3f7279161347543ce4e997d78ea89a4043491145"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTEyY2YyMGQ0M2IwYmUzNGZlMGVkY2UyYWMzZTZiMjdjYWUxYmJl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6112cf20d43b0be34fe0edce2ac3e6b27cae1bbe",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6112cf20d43b0be34fe0edce2ac3e6b27cae1bbe",
      "tree": {
        "sha": "15c7e27f4df50706d028caa3c37e1514ea85f6f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15c7e27f4df50706d028caa3c37e1514ea85f6f1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 15c7e27f4df50706d028caa3c37e1514ea85f6f1\nparent 3f7279161347543ce4e997d78ea89a4043491145\nauthor Jon Atack <jon@atack.com> 1605033170 +0100\ncommitter Jon Atack <jon@atack.com> 1605106553 +0100\n\nwallet: add CFeeRate ctor doxygen documentation\n\nas requested by reviewers\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+r+3kACgkQT1chs9Dj\nkh03YQ//cOI/OSv1T5m28r2wYsavQHQ38pOClbvapnmjPlekWnQa+z26SfJ7PRjH\nEctkLtk8V5fw3PBTjxnytf5LzFpszf8gyrR4x1ptBy5nybGrtHz0aiwqhknWYcfX\nhhcqVpdOo3fYdQUvm8rGBPfIzKIrfDsMLDXDKlTOlASbHvuhM/s1iBqtqRvluqQs\n9JocNuctzEhvJKMukYTqfJ05g+OYXg94G/v306UHzGNmFESOLRx6TuVFvkuv0LiP\nT43j1FqJIu22mLtw1mxiCTHvhxS3/PtsU9t2lfAZDeaLTq9xgNbSMZaJn8iWL/fp\nKLPgEPDlvPoPhEQX9jQN3HnE7au2mwdPHBG+bh6d8n9AfOIxjPnm5TupwUPS1tS8\nwDEs3pCpAi3aGeP/gYB8kQBctdZ5k2Vja5Fae6tGf9/tSG+9RN3CrFhzQ82i/MbO\nn96Jn06YXx2wimkd8uySNRnIOvAZImJscf3rWjFwWihSuN5yVU5g3ZE6ZHLCxQqZ\n1uEVAr1walrJ7MmWfXxQm+8rRp7Jt70+cLNiEI2Fm4yZyA3wcBbGXqgOc9AfQbu7\nYzvS6iUp2RBQr/AoODRdJJgFqgcT1HNR6h01Wy8XJJ/OGlylKeZTiKtnczXozexv\nbGm+D8DDABylIWtUZ76ytx0fwL5T5rUAQsmVmhlYfoBDzaJSesY=\n=XSZI\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIDnIWHpW1YqGaKCYyXkr6oeEhR6AmCOYx0vnyz+rfwh9CP/wEA2ZWAhLynZF\nBck/ZP+joP4I8QRfq/t+8AjueNvahFEiQACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEDYmXSbtPLBOuIX2yeakp3YI\n8QRfq/t78Aiu4Ly9SIYshACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wELh8UcIn1SRPXcYvNJpvyUgI8QRfq/t68Ai4YeD8+OYB\nSgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BDxcmXTZGUsNV83JRsGC8P7CPEEX6v7e/AIa9T8nG8N9tUAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f7279161347543ce4e997d78ea89a4043491145",
          "sha": "3f7279161347543ce4e997d78ea89a4043491145",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3f7279161347543ce4e997d78ea89a4043491145"
        }
      ],
      "message": "wallet: add CFeeRate ctor doxygen documentation\n\nas requested by reviewers",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-11T14:55:53Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-10T18:32:50Z"
      },
      "sha": "6112cf20d43b0be34fe0edce2ac3e6b27cae1bbe"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjEyMTJmMDFiN2M0MWViYTEzYjA0NzliMjUyMDUzY2Y0ODJiYzFm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e21212f01b7c41eba13b0479b252053cf482bc1f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e21212f01b7c41eba13b0479b252053cf482bc1f",
      "tree": {
        "sha": "a01d6865b524d836615edd494b1e8f69ddb77841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a01d6865b524d836615edd494b1e8f69ddb77841"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a01d6865b524d836615edd494b1e8f69ddb77841\nparent 6112cf20d43b0be34fe0edce2ac3e6b27cae1bbe\nauthor Jon Atack <jon@atack.com> 1604555016 +0100\ncommitter Jon Atack <jon@atack.com> 1605106556 +0100\n\nwallet: remove unneeded WALLET_BTC_KB_TO_SAT_B constant\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+r+3wACgkQT1chs9Dj\nkh2+2Q/+Jxr2a6Gofe0YX0tu5YxA41yXp0Ulpw6LxCHYR30Q3jdoS8l/zKnuUrW2\nxu/muxqkmtpQg16uXh5f33Iuv+pj1Q+pXHlip76Px382K+WY8oqsUXFgIly2sf3y\n9DjvbKpwe9qefyvm+gwCqSJ0LKyvzWsL/xNP6TXq+X8pa82IPAzz9/uGNch6qx66\nwdFuJ0puGsn74NC5SIGurYCig7q6CMiWdyxH8/N7D8aWlLfEAYtnA1VK0tyvb/5F\nr1t1G7WUu/h18Vverhe6rmIL3dEkBBuCxss2JuW5Dm04iaCyLe7ZvtcPUzi7+dsm\ns06rpWOe96ZJagEyep2CtN9dP1JLdtsqLMkULBODsWPZNo6q69yBMbdEy/ofxLLG\n0JrsNb+rzY77Op+rtCpqhmfHC3J9VQZPAl1U1k8NbUEi0hqfGFoLFMcI1T6SWHb5\nkLwQIXbwbolmHF3+bBb3f3mv2kqrVWtgUavrfnqePtcf2+k0up2Ejf/b11HNay0/\nSvWbGWd6Yt1cq/21oJqAPU2A+rtaRkLCzlPbHLsVtqYk6U94HH8zX2nQGrUBuab6\nC9qPwO15q+OjCP0TuJYp7BARoSynC9SysLtjxlRqxxmfQx8JP5Mxq2iiRCj3G3rH\nmQ85OX+XkhlEurN6Mt66xem/Ekelhqi9XQyjg8e7mxfpMrkpOTY=\n=koJF\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHgqUewPH3JUC60iyDRRoM74Qiu5ntapkr3OmHBWhfTiCP/wEIXIiiwhOzfI\nUIqAV+Z6FzAI8QRfq/t+8AgJX4aOWiCkswCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEOHAsYBwg8mQuMtkSEKGww0I8QRfq/uA\n8Aho53rVSd8jtgCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEOsWnqbSPVJOsE78FHPyM5wI8QRfq/t98AjLfI7gGLrG\nVwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BD2THYcfc+gR/usXIDrevkuCPEEX6v7fvAIro8INqzCteQAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6112cf20d43b0be34fe0edce2ac3e6b27cae1bbe",
          "sha": "6112cf20d43b0be34fe0edce2ac3e6b27cae1bbe",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6112cf20d43b0be34fe0edce2ac3e6b27cae1bbe"
        }
      ],
      "message": "wallet: remove unneeded WALLET_BTC_KB_TO_SAT_B constant",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-11T14:55:56Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-05T05:43:36Z"
      },
      "sha": "e21212f01b7c41eba13b0479b252053cf482bc1f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGQ0OTU3NDczMjBjNzliMjdhODNjMjE2ZGNjNTI2YWM4ZGY4ZjI0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0d495747320c79b27a83c216dcc526ac8df8f24",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a0d495747320c79b27a83c216dcc526ac8df8f24",
      "tree": {
        "sha": "1d662469632dc37850ff4b5bd9a9e04566f8e78a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d662469632dc37850ff4b5bd9a9e04566f8e78a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1d662469632dc37850ff4b5bd9a9e04566f8e78a\nparent e21212f01b7c41eba13b0479b252053cf482bc1f\nauthor Jon Atack <jon@atack.com> 1604491997 +0100\ncommitter Jon Atack <jon@atack.com> 1605106559 +0100\n\nwallet: introduce fee_rate (sat/vB) param/option\n\nCreate a fee_rate (sat/vB) RPC param and replace overloading the conf_target and\nestimate_mode params in the following 6 RPCs with it:\n\n- sendtoaddress\n- sendmany\n- send\n- fundrawtransaction\n- walletcreatefundedpsbt\n- bumpfee\n\nIn RPC bumpfee, the previously existing fee_rate remains but the unit is changed\nfrom BTC/kvB to sat/vB. This is a breaking change, but it should not be an\noverly risky one, as the units change by a factor of 1e5 and any fees specified\nin BTC/kvB after this commit will either be too low and raise an error or be 1\nsat/vB and can be RBFed.\n\nUpdate the test coverage for each RPC.\n\nCo-authored-by: Murch <murch@murch.one>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+r+38ACgkQT1chs9Dj\nkh1O4g/+ONbLbdub0JQ82ayl0WS2ziaOHmxzW3Mz4FqtGrW5mprmHM/8iBYFAEAM\nxYjo1PKTtlf62QPbRzWOkTn3Vsw8lUAewZXlk07gs6j7RJycCrRErs/XabxhbLWb\n6bsnxKINxBU+ppWTgiDs6iW/fbqOVwzyu3fKnWEzB0Q3saHrHkwClBKR4eT8WF4r\n1Q/oqNJfePFTCJ+pDU3XXD7M3pBuEwbS5WHoECbvGEoonsF1jGQ6USaBCJZtdk3c\nXy7CshDOS/7fyREhsFRL1tiMhdppw1O27mQoBVisKX9dYYT264KUKlEYdAk/SxRv\nHHuJc95BFYJ6r7etq431ln0OirN37Ji+6wtsVFxziKydmXJZAFBUbBEqaXNd5QUC\n5mxIdptfghzhbDRdX20aPNqsDZv5jrACmbZohLDMKyJNxs47DXT0gKT02ysvTAUt\nU5uauHSlIG/b3By0af4XhjBAgc/PZ+aFGVE9FE42gtNqBZSEAxLyIjSoUnKVCSki\nPv+Cqqk1ZzqyFQQPrrmHIB8dsO5qvm6n5GSJXLxVYCUu0VpbuQKb5RFbktIRM36K\nFFDlUPan3drN/jNdAp4K467mTKZ+s6FyoeHIRjOuBQaDY6+TuEIFHy6squpgIafW\nNk4qJbuMFn8Aq+gzl9JSUNRRWu7qb3Y2278Jl7yQmtrfMH7aK/w=\n=5L6y\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIE25Lf3p8/gjCEvDFUkB0f9VZB+YhF1bSK6Y38NCaXQFCP/wEB0q9WA2JPMn\nhGfYaDN5xuwI8SANEDfRqLfgE/WB62aSjBz65k45nJpcJocMNqnKAthLqQjxBF+r\n+4DwCCIXGGtoUcseAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BBuDN6Q7Rhq+fobxl8DBDXRCPEEX6v7gfAI\nOqvXikw2ObIAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BBxr/lqUn0E5T9/KNqY5j/pCPEgUhquj1EN+2AywKC+\nMH2hy0xFzJB3tG1vivHvAKlqBKcI8QRfq/uA8Aj5WrK0X5OnKQCD3+MNLvkMjiMi\naHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbfAQ6VLn0zxsbQmiX2xg\nQk6o+gjxIIYYMQ5eHI51ObfTNP1/GEFawBTDUm01bc10DG7UFEWECPEEX6v7g/AI\nJePGtP/+YpAAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e21212f01b7c41eba13b0479b252053cf482bc1f",
          "sha": "e21212f01b7c41eba13b0479b252053cf482bc1f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e21212f01b7c41eba13b0479b252053cf482bc1f"
        }
      ],
      "message": "wallet: introduce fee_rate (sat/vB) param/option\n\nCreate a fee_rate (sat/vB) RPC param and replace overloading the conf_target and\nestimate_mode params in the following 6 RPCs with it:\n\n- sendtoaddress\n- sendmany\n- send\n- fundrawtransaction\n- walletcreatefundedpsbt\n- bumpfee\n\nIn RPC bumpfee, the previously existing fee_rate remains but the unit is changed\nfrom BTC/kvB to sat/vB. This is a breaking change, but it should not be an\noverly risky one, as the units change by a factor of 1e5 and any fees specified\nin BTC/kvB after this commit will either be too low and raise an error or be 1\nsat/vB and can be RBFed.\n\nUpdate the test coverage for each RPC.\n\nCo-authored-by: Murch <murch@murch.one>",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-11T14:55:59Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-04T12:13:17Z"
      },
      "sha": "a0d495747320c79b27a83c216dcc526ac8df8f24"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTBlNDcxZmE0MmQzZGIwNGU4ODc5YzcxZjhjODI0ZGNjMTUxYTgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/410e471fa42d3db04e8879c71f8c824dcc151a83",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/410e471fa42d3db04e8879c71f8c824dcc151a83",
      "tree": {
        "sha": "640921f4d4e7802571c06f1803264197a793179c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/640921f4d4e7802571c06f1803264197a793179c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 640921f4d4e7802571c06f1803264197a793179c\nparent a0d495747320c79b27a83c216dcc526ac8df8f24\nauthor Jon Atack <jon@atack.com> 1604930431 +0100\ncommitter Jon Atack <jon@atack.com> 1605106561 +0100\n\nwallet: remove redundant bumpfee fee_rate checks\n\nSetFeeEstimateMode() handles these checks now and provides a more actionable\nerror message.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+r+4EACgkQT1chs9Dj\nkh2tWw//W/ffFrEbFIBk/bNQr92Z06XGPZkYaigD9OQ6voGCMTH3I+Anq5Wx6U7C\nUaydMv4jU95+b5HWnUcU6B+GRRQM3Xyxhk1QLd+aITcnBvb1F1z8G6ktyVUHM7nj\njkC7PFMw18DqZwOSP+/ZbQnrAP6ztxFATcyofS2HGAeLD2nTTu19SuNOC8McOkEQ\nbUgo7W+geaSZ5W9j4lVZEAK2GaFXqGB85oaIWCk/aESFgrMRdIZ4znrBB0uhtV4I\nrYI7gj8VYSMSOYb5N5D9SmZ4cic5gWdl9wH8KNc2qItIDS2Gc9Z14lME3y61Vd3s\nUi3dP5c+Q7nIKtK882ddKowv9vCqHolaHVIUUAR5SsZh5yoWWeJLQHnI0Ye81/3f\nfYeQ10oBUPafrnC+B21QtTkVSoZDnJylETr4ILHjOxpacJ4ltiwr45m9UBhpF28h\neWTHnnXUEVBLuYh4gbsdTXjHttsKIGUz5Z8INPY1aVaJ1ktzX0bgfz3rL6kJoSU7\nV898cwdPe+KpqJnt0M6V+at19waieVa8GR5tT+TjtdIh39mgYfEYUiLdsLshUEsL\nz+59bH7mxebb8FEkb6C0GpVRM3xC/ynJ6upjo/lSA9sEeaBCzr71Ta2111zFgKO4\nt7DaqyTx5opX/qY3+TjKFTvX/SVDkVSK7jttkdTv0jMvuMyFZd4=\n=rIOE\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHZ+1Gwx54P/xPkGwrbgLAOfAGO1Fbjae5uFv5GtLK3jCP/wECOM2S72dFm8\n3KPG4r3+OBsI8QRfq/uD8AgRRDjCn1PPjACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEGPXt+ATdAu7RTOy/p4D\nysII8QRfq/uC8AiOjXLG3TpBQACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEH0AeXOjfp3jq0KTZOPLH0oI8QRfq/uF8AhYFuxw\nAk+adACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQ4Kk/mOf54fXPuc/AA68AZwjxBF+r+4LwCIpfizPtPt7cAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0d495747320c79b27a83c216dcc526ac8df8f24",
          "sha": "a0d495747320c79b27a83c216dcc526ac8df8f24",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a0d495747320c79b27a83c216dcc526ac8df8f24"
        }
      ],
      "message": "wallet: remove redundant bumpfee fee_rate checks\n\nSetFeeEstimateMode() handles these checks now and provides a more actionable\nerror message.",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-11T14:56:01Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-09T14:00:31Z"
      },
      "sha": "410e471fa42d3db04e8879c71f8c824dcc151a83"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzk5NGMwMWU5YTMyNTE1MzZmZTY1MzhhMjJmNjE0Nzc0ZWVjODJk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7994c01e9a3251536fe6538a22f614774eec82d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b7994c01e9a3251536fe6538a22f614774eec82d",
      "tree": {
        "sha": "7266dae58a36afe603375ec1ec4177f2d33845ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7266dae58a36afe603375ec1ec4177f2d33845ee"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7266dae58a36afe603375ec1ec4177f2d33845ee\nparent 410e471fa42d3db04e8879c71f8c824dcc151a83\nauthor Jon Atack <jon@atack.com> 1604920457 +0100\ncommitter Jon Atack <jon@atack.com> 1605106563 +0100\n\nwallet: add fee_rate unit warnings to bumpfee\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+r+4MACgkQT1chs9Dj\nkh0jARAAoNdfOUslLLwdc0b6YCi7xIqUQc1Tvx/BPP11zpkBRvtnsNCeNAvE111j\nUhWwGZjDfYoPjuz1trg5ffDUTBT7h2Zb6oYfk3HqioZ/w3dTUsFw0PMJqNJkUusU\n4xRBTxqr0C+0GqH5HGvoVqRRY7z8JsY2VU6mfkNLxlbTSrpA0KtUKD/1oRAfi1Ch\nKndFXSK/vCYQsEuC3SWb2KR6NJ44GFGLM25wFGBK70f5cvGHeXiZcRourzAC+vlY\nF3nyGDsq/Xg2C2uJ8kPDnWbw0iwzSGqOYJvW60Zv5028JMRhaMuI7XYj6UL/RY/E\nWND8xaGPBWNIG1OMbGZZm07lpzAmwG8PUgpRiqYXBdbtmLmtxGc8uANB26LS2iOT\n+mXZOUPhZJNpLFl9WZkWUiPoF78qHs255Ks3Fn6SLm9cOPUH6NlqclqCSJXHMR/V\nPNaOM3acW8+4fKR8tcGu2fB9BtV70vWm241ZIOhmaP5ywMiAUMFawqLMn27RfQyz\nykABVT+knuuipC9mwjqnJFoAN/DMtH1lUF3TV1FIEmC7lMNxhMQTA1jEjgPvlUuW\n07NacyHLvn9z0hNEvt3j08A/esm03fuMTDjDDpUE5V2hJRx2mdfE1Fmuq6ELnOHV\nTMl1iKGQpUdL3S6WcwBPXY1oXCQz/6JRcVhJ1wAIyLxgTPc1ll8=\n=95Sq\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPRZ99MLuAi8G9cXtEAz2GeH0jy7X07qBK/QKKhxNYCYCP/wEGLK/Wjr9IB2\nhmj5Z2eMeAAI8SBFe4ljQ6qsTZdqHtr7z6sPOaBsG4ixb7sv9Yl4ICX0KAjxBF+r\n+4TwCIcDGR/FtwTRAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BBkydKEztp8a+fm/cSdq1dyCPEEX6v7hfAI\ne6FQqX7q0ZkAg9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVu\ndGltZXN0YW1wcy5vcmf/8BCFb2Bbh3n1pomsK2yWvi+fCPEEX6v7hPAIhWZ4FGhi\n1QkAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23w\nEN6LEf3gNbB5lhm85oOm0k0I8SCLN7l7XkhI1dPqXFtpyUBIX6YibxDPVskMcNpT\nH9QmOAjxBF+r+4fwCDuoFV/7ahAnAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/410e471fa42d3db04e8879c71f8c824dcc151a83",
          "sha": "410e471fa42d3db04e8879c71f8c824dcc151a83",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/410e471fa42d3db04e8879c71f8c824dcc151a83"
        }
      ],
      "message": "wallet: add fee_rate unit warnings to bumpfee",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-11T14:56:03Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-09T11:14:17Z"
      },
      "sha": "b7994c01e9a3251536fe6538a22f614774eec82d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Zjk4MzVhMDVhYmYzZTE2OGFkOTNlNzE5NWNiYWE0YmY2MWI5YjA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f9835a05abf3e168ad93e7195cbaa4bf61b9b07",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7f9835a05abf3e168ad93e7195cbaa4bf61b9b07",
      "tree": {
        "sha": "88033f2f6d33c75253753badb2c895a7ecae6895",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88033f2f6d33c75253753badb2c895a7ecae6895"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 88033f2f6d33c75253753badb2c895a7ecae6895\nparent b7994c01e9a3251536fe6538a22f614774eec82d\nauthor Jon Atack <jon@atack.com> 1604549271 +0100\ncommitter Jon Atack <jon@atack.com> 1605106565 +0100\n\nwallet: remove fee rates from conf_target helps\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+r+4UACgkQT1chs9Dj\nkh0b4RAAr5AQQhGL1e5FxQth9WnJVL5kFTULDRArDS8P96MGRNYoAF/oEfSfqbQM\nBj/QTz9/rsueZDmUhrruG1YpvB3eXo9sDZALcYpfXLGaLy56qDiJ6XbNx2gS6JFb\njUYw12+g/P3a5tu81RCPRUsWMXH2Wh/oMCrNr7uL8Rhto41iagjwKvRRwMsPwgLM\nP9wKPXPke3+zS1ZokbeiTOaMQ2Q6Cod4V3Q1Qee66Y2v224NtHich2FjRIgLzre/\npFLR7vvOOAOPbZdyxB84jPohEO6lsWk4gIZGW/DRqA2QxO4i4CZV2xOhXborJuLz\nV2Zld88VPpmtW137Z5PHwgTC1zouFw2NtIqfNBopV4wjUtpK4UWIyZHUZjYgYeEj\nwngL3PfPcrnX9ZeDIVypKZxoRXl3z2Sm78xibB8We9+MREPD31hEWoJy1/39L8Lk\nVodKgniXM3KgbkPC7uaAwb53bE34ar8uu8hqwGJQkLHiYQzsltOAjJqtY7C57DAg\ntwY5J30VKNxAtasfQTkVrrUqQGL5DRNPd1OvIhN6gt39E0CJTKCO/88TLQLlkcEM\nGWSutqBfCILUmfo+6C525/EYFgQHgtlStXCHkG35YAfSPkiKn8Gb3xSPUy+g6udL\nUspimsr9zzwtTSlLu3aXX676n0lbjYYGS7RaripETz5SJBn1zFM=\n=VGFv\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIInup7ExTu/AOcUs4Qeu8gSOCyykcB1OghuasZlUjfM4CP/wEBRIEHQd8Nzh\nrBOWitljEdcI8QRfq/uH8Ag/6qJjJv/PZACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wECCXWOFeApvz+pgAHknt\nJx4I8SByaXNwORPEM4fgfbSkv/7m2ZpdrNVoNIS1LtFDNkpwxQjxBF+r+4bwCPLE\nH+oiDfeEAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHku\nY29t//AQr2zRb9MERf1KpHLX+iuFnwjxBF+r+4bwCAoZ0/cwfKyjAIPf4w0u+QyO\nLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfw\nELDdxsWS7B2HbQyvxFIoNNgI8QRfq/uJ8AjgYaZevopmswCD3+MNLvkMjikoaHR0\ncHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7994c01e9a3251536fe6538a22f614774eec82d",
          "sha": "b7994c01e9a3251536fe6538a22f614774eec82d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b7994c01e9a3251536fe6538a22f614774eec82d"
        }
      ],
      "message": "wallet: remove fee rates from conf_target helps",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-11T14:56:05Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-05T04:07:51Z"
      },
      "sha": "7f9835a05abf3e168ad93e7195cbaa4bf61b9b07"
    },
    {
      "event": "commented",
      "id": 725472987,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTQ3Mjk4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/725472987",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T15:01:53Z",
      "updated_at": "2020-11-12T10:59:45Z",
      "author_association": "MEMBER",
      "body": "Rebased on master after merge of #20368 to avoid the valgrind fuzz CI job time-outs.\r\n\r\n`git diff 5660dd3 bcb8e0d` still works for seeing the changes in the last update.\r\n\r\nThe remaining open question is https://github.com/bitcoin/bitcoin/pull/20305#discussion_r521297287 -> Edit: done in 05e82d86b09d914ebce05dbc92a7299cb026847b, this should hopefully be ready for final review.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-725472987",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3984244070,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk4NDI0NDA3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3984244070",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-11T15:02:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3987945023,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk4Nzk0NTAyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3987945023",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-12T10:28:26Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzNiNWI1ZmUwN2Q0NWJlNWExZTViYzdhNWRmOTk2ZjIwYWIxZTg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/173b5b5fe07d45be5a1e5bc7a5df996f20ab1e85",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/173b5b5fe07d45be5a1e5bc7a5df996f20ab1e85",
      "tree": {
        "sha": "0241bef69ca5fe14f4e90cfb99fabc216d875c17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0241bef69ca5fe14f4e90cfb99fabc216d875c17"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0241bef69ca5fe14f4e90cfb99fabc216d875c17\nparent 7f9835a05abf3e168ad93e7195cbaa4bf61b9b07\nauthor Jon Atack <jon@atack.com> 1604861855 +0100\ncommitter Jon Atack <jon@atack.com> 1605177783 +0100\n\nwallet: update fee rate units, use sat/vB for fee_rate error messages\n\nand BTC/kvB for feeRate error messages.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+tEb8ACgkQT1chs9Dj\nkh0AFhAAx3VrVv2NjD0KLisZ96TaA5i+QB+UpaA+kvBLPgwgMntywc2HeB1s9MJS\n3iejy7mALtpgKYE8H+OA+3A1ozQGPGjhEBGCYk0lQrOdtC7YfK1aE1ihGS5QDXJ3\ntibQ9xpc8JTQgQHqRKQzmEXCihDM9O3lK/XOXl4ERURisO8GhKtVjS/xbZbXiADo\n0p0FsLbUM7iD/gwvQ/5ghHxseBuvQ7fHJZb55hUCCztVMQy7+KjMs/laziWN0Avm\nk1EwoIxwY7n/4eNAINcE0fnGimd5dMzUFKD+QxCOtMndK9M7c5p2TLHAbCX+jt/1\nL6GpCAoYev4t/pKqFZXrSnXdENb3pXKOjLUMyeZ8yuhDQKdFMYqvc/E9loYu2zYJ\nQJnATcVrSoXt7dB8Mt759g7gPv2ZIjUAOfZgcIUkBtTRkLi9v4VDHs22DQTFrQyp\n6T1zYy9pU4egW1Jy7IYry06nJ5CDtk2Ab1ICtnRIE8N+bf4hOdbnEQ8QGlckhDKQ\nH2g6abujko0UXOHSBH9hlqWXIst6HhVAdPbtrMy+eiQNtlG+DGJ3AVEmTi7lfeJF\nU+dUbuXShKmNV6zcGUTX8Sfj3UMXpx6BsEy4HqLfxM6xGl3PevrAc52exdekcw+1\nGNBuG/umttOo//cZXqWQ8EoK8SXPYEoSHSFVsqTmhxtqaooANls=\n=3O3f\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHI3Ux1M/13H4C36swVnmJG480rG85nsW35rM6oBiDaxCP/wEAGoH9WaIZ0d\nEsaC9i1JilUI8QRfrRHB8Ag64+XOxdfP5QCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEHTcwYOCk3JfUFy/6tmGdtII8SCUDQJT\nlIjs4klNmF6OvZRF4oQMSmg9AIgF99giDjc+pAjxBF+tEcHwCPHaRTqWr/DIAIPf\n4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BDCHg+O+uIMiUHmHOK9+5BLCPEgS3AFjrI2cLux3T2/dzgutbfZ2peW\nDf94YPujDAEHgdUI8QRfrRHE8AiEsA5y/T3KsACD3+MNLvkMjikoaHR0cHM6Ly9m\naW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQ8WEmogJSCmdWSnSvMfKT\ncgjxINuudPiPACgd6dz4avsbJvrbWBeDGA4H+7mvfKYrfWO1CPEEX60RwfAII23t\nRfyAK14Ag9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f9835a05abf3e168ad93e7195cbaa4bf61b9b07",
          "sha": "7f9835a05abf3e168ad93e7195cbaa4bf61b9b07",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7f9835a05abf3e168ad93e7195cbaa4bf61b9b07"
        }
      ],
      "message": "wallet: update fee rate units, use sat/vB for fee_rate error messages\n\nand BTC/kvB for feeRate error messages.",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-12T10:43:03Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-08T18:57:35Z"
      },
      "sha": "173b5b5fe07d45be5a1e5bc7a5df996f20ab1e85"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZGEzYWZiYWVlNTgwOWViZjZkODhlZmFhMzk1OGM1MDVjMmQ3MWM3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6da3afbaee5809ebf6d88efaa3958c505c2d71c7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6da3afbaee5809ebf6d88efaa3958c505c2d71c7",
      "tree": {
        "sha": "fc8d175d2906059645572238ad8e4bf52e062f57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc8d175d2906059645572238ad8e4bf52e062f57"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fc8d175d2906059645572238ad8e4bf52e062f57\nparent 173b5b5fe07d45be5a1e5bc7a5df996f20ab1e85\nauthor Jon Atack <jon@atack.com> 1604686036 +0100\ncommitter Jon Atack <jon@atack.com> 1605177794 +0100\n\nwallet: update remaining rpcwallet fee rate units to BTC/kvB\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+tEcIACgkQT1chs9Dj\nkh2Axw//b5hLxtLeuHtxJN0GhzNbCCqocWfOC1AZeXmcGIq92riIqDpLMpE1O6Yj\nAqLffpu1dipfuTOKCsPddRNh5ljGuyaCQ0d1BAC8vyBLZCm9pVfhs6itLJMrk2uo\nIpjzr7UEZj8cA7a3y1+qrDH4+6EA8Nghi5tPi3dBG3UAntW7o9hE+wfMAmZqbjfU\nnXV0drBcHS3yD3PQa0IoBmfCdEwEuj7Z4RhqFxvNNXPnZcc7kYUXULw8I84ntw5q\nhhpeNuQNAHZNxO7YgnzemhRNzV09IxD/D19OOTtnz5LftlCPDr9RvhzlgrkJ1i5o\nBD61miIc1nMOREdtC8trkewRYefxKnCZcTvI86TdYOr0qODVHXeptjg8xPNkyypE\n0jMtA9iV4WJvIGWLpmfZcAUwiwzHzO60a2M2upqFD7eOEIjjevi4lC0tVQkDs7te\nh9B9SjBzVSfGBM0208htJiQHrPCV0rxihCG5B3Po8+J6F9xJXoHjgEcXE9Y+cZJx\nHv9i6lOiZ/pEJdByAQMZhVsXIKYQyaSqWH6X7jSfh6VBVgR4j0/1GHg5yXqDfnfP\n2UOjvydsObg4aPFXeCAGvnus7xOUEtRhjPt/vsZzW83jtl5+83z3o4vf1LPRH+H2\nmniT3eEHjOXthOo6Fi538OA8v6+JO2yHDhNgHakNYLUSo99e3Jo=\n=YGF/\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwINtkBlhmK0snQwzKTS43gR0Mc5QArOnvI9CI1FpdZxr4CP/wEDwaJuGQ54F6\nvtWnNvA19+kI8QRfrRHE8AjrPXoHUiNbtACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIj+eyHxY/vfMBttnvcz\nwKsI8QRfrRHE8AiYCxJ98DigwgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wENNNPPvBHo6tovcWNDYg8X4I8QRfrRHH8AiMaZrd\ntYVDjQCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQ8iLTrrDnUNGb+AEdKBv5MQjxBF+tEcTwCLnPQAbEd6X5AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/173b5b5fe07d45be5a1e5bc7a5df996f20ab1e85",
          "sha": "173b5b5fe07d45be5a1e5bc7a5df996f20ab1e85",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/173b5b5fe07d45be5a1e5bc7a5df996f20ab1e85"
        }
      ],
      "message": "wallet: update remaining rpcwallet fee rate units to BTC/kvB",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-12T10:43:14Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-06T18:07:16Z"
      },
      "sha": "6da3afbaee5809ebf6d88efaa3958c505c2d71c7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NDliNzMwNTc5NTY2NDU5ZTM1MDcwMzYxMTYyOWU2M2U1NDY1N2Vk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/449b730579566459e350703611629e63e54657ed",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/449b730579566459e350703611629e63e54657ed",
      "tree": {
        "sha": "0cd98fd3d8cb44d52df4221677fa387e9ecc2dd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0cd98fd3d8cb44d52df4221677fa387e9ecc2dd7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0cd98fd3d8cb44d52df4221677fa387e9ecc2dd7\nparent 6da3afbaee5809ebf6d88efaa3958c505c2d71c7\nauthor Jon Atack <jon@atack.com> 1605007741 +0100\ncommitter Jon Atack <jon@atack.com> 1605177797 +0100\n\nwallet: provide valid values if invalid estimate mode passed\n\nCo-authored-by: Murch <murch@murch.one>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+tEcUACgkQT1chs9Dj\nkh2Qrg/+IUFN23DAdehqioGbfgbVekFAJUqyf4+CmCO5gQ31gO96pz1+pnTbMoY7\n9NEwQHe8r8uYhjf0EUGxYNPO9dsdFrZzqeoWTSEgBS29z1tlSwk2cg5SHVzLX+rK\nE0OTFx1CE1JwFdxm9o5AIwfIl1jE12qlxzbZHZnXGZLTgdKj9lRnwGBVA3RfY3uw\nLkPQdgXprLnOSvkKuVaZU+yS4ro9SEfZHN08/uftf+YEJIW4wJbw8p597PQH5xF+\ns5sTQ0Lm8GYN5SJDALb/EV6lS/gMPpJS1kB1yuJo92thXwtfdnqzPC3u3cefLZve\nH75jjadu0GWIvGP/c4L+xR6v2tajgbdrqcokl3evQYo8bqrBfMzdQglhdmG1QcHj\nL1JESydpybCTE8+44bMAX+YMWwjXDA1EjAg4Z0SghXrV2yWs1ZoIwNTgwgDXSU3Y\n5R/EasJcneH81gHuokC3jRJjeEyzY2sZrT6Vw9+rx0NTgvQ6lGZ4rbFtLIwk7y9K\nz/RmJzuWJQHx4DIRGFnuPnQLAmNCDnYda67yNLQHJO529RW7aqd5l1i7L0Wk7Ycm\nOWPrK59dVb1fExuWbKDMmMtAMo+GxfTDo1bTMyO5YuJESWVTu6D9xfCGbc8ywpNW\n8CAAQhAXOgYj5zdnR1PlpbkSRbxWLhl/ZkVduJhJ4Ys+ETnt4nQ=\n=Jm1e\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwID05U5X6+L9ASO9MmvZYTFjSE4NWSJ8FiQqz/3oJ4WknCP/wEBjALcByvCC6\nfcbIGBXyiKwI8QRfrRHG8AgLBDSbzYX8DACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wECNr5D5tDr33QaF+W8A+\n8HgI8QRfrRHK8AjHh1ypFSfQQACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEE6Cj7n2U9NyHcKVT0URWyII8QRfrRHH\n8AgTgRnW8otlnwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BBszIkJv1vzoPhSQWwu8E3wCPEEX60Rx/AIUsLS\nAjpq3kcAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6da3afbaee5809ebf6d88efaa3958c505c2d71c7",
          "sha": "6da3afbaee5809ebf6d88efaa3958c505c2d71c7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6da3afbaee5809ebf6d88efaa3958c505c2d71c7"
        }
      ],
      "message": "wallet: provide valid values if invalid estimate mode passed\n\nCo-authored-by: Murch <murch@murch.one>",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-12T10:43:17Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-10T11:29:01Z"
      },
      "sha": "449b730579566459e350703611629e63e54657ed"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZTQ4MWI3MmUyNGZiNjgzNGJkNjc0Y2Q4ZGFlZTY3YzY5MzhiNDJk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be481b72e24fb6834bd674cd8daee67c6938b42d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/be481b72e24fb6834bd674cd8daee67c6938b42d",
      "tree": {
        "sha": "9b126fc7c445009df0d1c8527837becc0a4218f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9b126fc7c445009df0d1c8527837becc0a4218f1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9b126fc7c445009df0d1c8527837becc0a4218f1\nparent 449b730579566459e350703611629e63e54657ed\nauthor Jon Atack <jon@atack.com> 1605012201 +0100\ncommitter Jon Atack <jon@atack.com> 1605177799 +0100\n\nwallet: use MIN_RELAY_TX_FEE in bumpfee help\n\nCo-authored-by: Murch <murch@murch.one>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+tEcgACgkQT1chs9Dj\nkh3k0g/9EqJoavNENch/vTD5UFtKhNJHQatatX98vzWTVyLm5bYdxQcZm0Klfn6w\nk98khPc9bxT8YHYrJ8MoNdG22xgS6G9b3PgpR/qypfRAxufbY6dXWsz8pFy5B3bW\n2zQ6RLnGukwIxxcmeaN/8V+OADh2PSawjiS5OagV7hjkXWCWQq3fjxp1+cpWg7Pu\n7000FvPbth4WFIHtsxC044fpvmPOzMbCE6pfEBiA9KxDJpiPemawlKKfnoadEG8Z\nVN5WdiXuUrUqBJ9OEBL9g5sR3/rpAhG6kuJcC3aTPMUsquzWL+NLKIK7z8gxLU06\nfJOsrZ/4SrFjNed7bh7VzOrs1KQQVncxXocD8ZExySLzsrr52PVRCZfreKyu8lZP\nIpNz4mXwtaL5eXCXYn7VS2CYXViaUsAWK0rRV+EBXU+he74zPI55NuMi7Vku56gD\nesVZA9T38CMRHRosjHWi9uLgUBggwQViFctmVCl8P3LEKOBmnKjvhpqyToGebzBk\nvNerJAbFwdO1xOGe6aXikY8HM089L9xutmm9pOqf0B2aP7/+dlNKPcxLrS7bPYpc\ngStTlCweGIOPjnUzQPvJkKBfSny7hz7UZv74H/H0S7zXHUvPRf5nz5TxSemlt87j\njqg6f7+8C898OHTQgTdzhf4B+Wr7i2fY6foocCAmpACt83Jv0hM=\n=EyP0\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICeEXx7gBdoSwIpHka0LxRZNAU55ypFuOprXOEZpYO4eCP/wEGJZWQ4t6kxJ\n1Y7Rfeyl2kYI8QRfrRHJ8Aj//O7fREHOCgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEGZQB7Koq79gIGa1B5lItqMI8QRfrRHJ\n8AiRuw1UW+F1pwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ//wEIvoUoq0dIENrLmG6JxrdH4I8QRfrRHM8Ai7XdpD\nD3cAVwCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQ4+7SOPjU0eI967q5P/nevgjxBF+tEcrwCO45K9MAoZRjAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/449b730579566459e350703611629e63e54657ed",
          "sha": "449b730579566459e350703611629e63e54657ed",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/449b730579566459e350703611629e63e54657ed"
        }
      ],
      "message": "wallet: use MIN_RELAY_TX_FEE in bumpfee help\n\nCo-authored-by: Murch <murch@murch.one>",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-12T10:43:19Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-10T12:43:21Z"
      },
      "sha": "be481b72e24fb6834bd674cd8daee67c6938b42d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTY3MGI0ZjA3YTYxNDBkZTgwOWQ3M2NiZDdmM2U2MTRlYjZlYTc0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a670b4f07a6140de809d73cbd7f3e614eb6ea74",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9a670b4f07a6140de809d73cbd7f3e614eb6ea74",
      "tree": {
        "sha": "dab6b75472ce08191dd6b70a296376d7e8893091",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dab6b75472ce08191dd6b70a296376d7e8893091"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dab6b75472ce08191dd6b70a296376d7e8893091\nparent be481b72e24fb6834bd674cd8daee67c6938b42d\nauthor Jon Atack <jon@atack.com> 1604553137 +0100\ncommitter Jon Atack <jon@atack.com> 1605177802 +0100\n\nwallet: update sendtoaddress, send RPC examples with fee_rate\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+tEcoACgkQT1chs9Dj\nkh1LhQ//R5epS33EZVM/ClJTCeOd5qlTed3uxALzvj2dYFW0ObpjdpJd5vT9s+Xe\n9RIoEXspq9VjjTXG2TIuZQitd2ihQs/NSEZMYaUF9afj/hjcNJ/lFvY4wSZ9q3Ld\n/tphEOW4hJF5kpYgQ8mDoXgJTPT/+4RNdMuHolv91xej8TNB9+DEOgLtYL8a0ffU\nBD4J4BWePFkgpj+RJjmgVRvUBJKnYybc1/rDK3PKCR5LjdUFcttT50jwR8d+yQeo\nGwKb71piq8n5oMA1+HV4LWo/CcozPb3tDPxtN/4q7kSsSKNwSdbzizt4/mMU8QUt\ngmrOvCIPd3LVq9mVcOg5axOTCU0MvcB7v89FhHnAOG8tBJHp3UZEBXUSYgJO5Kty\nhyKbB1nMQ5pPup5n17SeanDst54nnfKXzL4k8V1sEMVj8gmdetSl1k8/IVsg+VY4\nbl8l3YYEQuuXnV9qENb0etGcALqJeBqGFxjgYd6wbnNCxIRV7h8nrf/3C7mY+jQk\nTZNgSHM+HfpBCtcYs87tm1l76hwsItJKIILl/LyYQqmXXAT5oMamxb2H7aU5UVXI\neSGRTd9ecwiqQNP/PEHxWgzMX6RJZT+LJSP/eMCIinCxU7/b/3ABoBaA5wAGqAtA\njVkqUx21dmPUpUz2hUb9WztozOZ/ROnY7dx1PX5yPjil1x1XsKQ=\n=Lu/a\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMwZZn/NC9TxMjs47bN3aLKphi3XCMMG+ah3nSWPzzBjCP/wEEwV1nwJBxCH\nqu+/z10KmkAI8QRfrRHP8AgGeZD3nNcK8ACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEHDalB2uUANsoPbFalhfvQYI\n8QRfrRHM8AhEN5+fBWdTEwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wEL9Fo+ZPyF+iKwAd/O1P2K8I8QRfrRHM8AhI9D72QsNK\nCACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BDKTy+TyciruYd6+SFV/yg3CPEEX60RzPAIp3AFLur1H2MAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/be481b72e24fb6834bd674cd8daee67c6938b42d",
          "sha": "be481b72e24fb6834bd674cd8daee67c6938b42d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/be481b72e24fb6834bd674cd8daee67c6938b42d"
        }
      ],
      "message": "wallet: update sendtoaddress, send RPC examples with fee_rate",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-12T10:43:22Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-05T05:12:17Z"
      },
      "sha": "9a670b4f07a6140de809d73cbd7f3e614eb6ea74"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWU4MmQ4NmIwOWQ5MTRlYmNlMDVkYmM5MmE3Mjk5Y2IwMjY4NDdi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05e82d86b09d914ebce05dbc92a7299cb026847b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/05e82d86b09d914ebce05dbc92a7299cb026847b",
      "tree": {
        "sha": "8b195c88b03678af4cad58226faaf6bcec00d1fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b195c88b03678af4cad58226faaf6bcec00d1fc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8b195c88b03678af4cad58226faaf6bcec00d1fc\nparent 9a670b4f07a6140de809d73cbd7f3e614eb6ea74\nauthor Jon Atack <jon@atack.com> 1605176208 +0100\ncommitter Jon Atack <jon@atack.com> 1605177855 +0100\n\nwallet: override minfee checks (fOverrideFeeRate) for fee_rate\n\nin RPCs fundrawtransaction and walletcreatefundedpsbt only.\n\nThis provides the existing feeRate (BTC/kvB) behavior in these two RPCs to the\nnew fee_rate (sat/vB) param also.\n\nSee these two GitHub review discussions for more info:\nhttps://github.com/bitcoin/bitcoin/pull/10706/#discussion_r126560525\nhttps://github.com/bitcoin/bitcoin/pull/20305#discussion_r520032533\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+tEmYACgkQT1chs9Dj\nkh0vMxAAn6ac+aYP4fVMMU+D4dEEabvxWtkXWRETuDe8KsJOrArCnjpN+IxeLGXZ\nsJW+Yph8ZTPZhx9k9AP/FuG17huX22Knaz6k11qFZe+YnAaDugHbJ0AnIbuQbuCr\nXxbxjJLM6+vJdHFPneQgunFjZCWA/6H+JFac0TvemPd9fVxjztMPsWXBq4c7gzf2\nx7GMcpuI0xRjJIZjmLy/i1Tqthyo5Gpv1SNvMzp1CgLM63DyXR4ARNmA/nmiBb7t\nqQuYXhLyc3Y0Bi3D6bPv/5K7wWEvFAUZUtsHsujSBf+j0ciaz+RoXdfx8W3s+TjC\n0QRy4KiBxVUQF4cAS7UrJAdsQtMHFpXvLpz4GxnbYLsrzUYw25bVd7D6lijhhSB5\ngRTqEJ7j/9YXK8NEGBc9rj/oMDEf1c4ijqFknvCFSkYJ6ilhbevOcdybW0j0Xdrc\njZ2SdKWDMyDgLgcIm6GUEE/K7kMDg4uc3EK0yEys9wXvI5Dal8tZzlzmiLF2ee6g\nxTKz9uzFOiDtib72L2UrAJkh+7d5eoB3oTq8jHX+2dHbD6VsbwcLw3M+WfGBjcDh\nOaEI8ZPmy7uQxxfQtUfgqVlP0fmFuB0YrY2O07LWJH3Bz5juV5z2/AeyXkXEtvYv\nMaeA7HKRRwHO1L6eG4iZX7BDZCjhhQ4z0lua5D3MnlOXyc8kBr4=\n=BubE\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIBn6QJjYSAADBDJJT1hE5Hkgx+rB+9tpmD5iAF1l0OSTCP/wEIFiRwQlCYCL\ndlxitRWNctII8QRfrRJn8AgRbgBxghOYWgCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIyTqNwIy8uA3VPeICEF\nnQ0I8QRfrRJn8AgPFp7qyyXB7gCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQtW6QbRWEaJG77JmB7umRQAjx\nBF+tEmfwCF5PA6/3KgHDAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BDqz2n32WI8bGyiP27Bgt+UCPEEX60SavAIuexuFOZ/V2gA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a670b4f07a6140de809d73cbd7f3e614eb6ea74",
          "sha": "9a670b4f07a6140de809d73cbd7f3e614eb6ea74",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9a670b4f07a6140de809d73cbd7f3e614eb6ea74"
        }
      ],
      "message": "wallet: override minfee checks (fOverrideFeeRate) for fee_rate\n\nin RPCs fundrawtransaction and walletcreatefundedpsbt only.\n\nThis provides the existing feeRate (BTC/kvB) behavior in these two RPCs to the\nnew fee_rate (sat/vB) param also.\n\nSee these two GitHub review discussions for more info:\nhttps://github.com/bitcoin/bitcoin/pull/10706/#discussion_r126560525\nhttps://github.com/bitcoin/bitcoin/pull/20305#discussion_r520032533",
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-12T10:44:15Z"
      },
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-12T10:16:48Z"
      },
      "sha": "05e82d86b09d914ebce05dbc92a7299cb026847b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3988035538,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50Mzk4ODAzNTUzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3988035538",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-12T10:49:10Z"
    },
    {
      "event": "commented",
      "id": 726211938,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjIxMTkzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726211938",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-12T17:09:35Z",
      "updated_at": "2020-11-12T17:09:35Z",
      "author_association": "MEMBER",
      "body": "re-ACK 05e82d8",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-726211938",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "reviewed",
      "id": 529430465,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NDMwNDY1",
      "url": null,
      "actor": null,
      "commit_id": "e21212f01b7c41eba13b0479b252053cf482bc1f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nutACK 05e82d86b09d914ebce05dbc92a7299cb026847b\r\n\r\nConcept meh on adding the `v` (`BTC/kvB` instead of `BTC/kB`, `sat/vB` instead of `sat/B`). The distinction between bytes and \"virtual\" bytes has no practical use. It's only interesting for people who want to understand the internals of Bitcoin or why spending from a SegWit is address is cheaper.\r\n\r\nI found the overloaded `estimate_mode` param more intuitive as a `bitcoin-cli` user, i.e. `send ... 1 sat/b` before vs. `send ... 0 \"\" 1` now. But the example in the help explains how to use it. Since the `send` RPC is experimental, we can overhaul it in a future version anyway.\r\n\r\nI agree that the bumpfee unit change seems safe, even when users downgrade their node, as explained in the commit message of a0d495747320c79b27a83c216dcc526ac8df8f24, except if you downgrade to a version before #16257 (i.e. before v0.19, and the fix has also been backported).\r\n\r\nDo we also want to do something about the `unset` estimate mode? Not sure what it does. It seems safest to make `economical` the default estimate mode. But this PR already has a very large scope.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#pullrequestreview-529430465",
      "submitted_at": "2020-11-12T20:32:11Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
    },
    {
      "event": "commented",
      "id": 726335318,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjMzNTMxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726335318",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-12T20:51:17Z",
      "updated_at": "2020-11-12T20:51:17Z",
      "author_association": "MEMBER",
      "body": "> Concept meh on adding the `v` (`BTC/kvB` instead of `BTC/kB`, `sat/vB` instead of `sat/B`). The distinction between bytes and \"virtual\" bytes has no practical use. It's only interesting for people who want to understand the internals of Bitcoin or why spending from a SegWit is address is cheaper.\r\n\r\nI understand and don't have a strong opinion on sat/B vs sat/vB, happy to follow review consensus.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-726335318",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 726536443,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjUzNjQ0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/726536443",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-13T05:48:25Z",
      "updated_at": "2020-11-13T05:48:25Z",
      "author_association": "MEMBER",
      "body": "Concept ACK 05e82d86b0\r\n\r\nI conceptually agree with the changes, but I haven't reviewed them",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-726536443",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 727067187,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzA2NzE4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727067187",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-13T22:29:34Z",
      "updated_at": "2020-11-13T22:41:13Z",
      "author_association": "MEMBER",
      "body": "> Concept meh on adding the `v` (`BTC/kvB` instead of `BTC/kB`, `sat/vB` instead of `sat/B`). The distinction between bytes and \"virtual\" bytes has no practical use. It's only interesting for people who want to understand the internals of Bitcoin or why spending from a SegWit is address is cheaper.\r\n\r\nI dissent: a bunch of blockexplorers still show \"feerate\" in `sat/B`, but it often refers to \"fee per byte length\" of the transaction (ignoring weight), some really outdated blockexplorers have until recently shown fee per stripped size under that label. In my experience, some users were confused by that, and tried to e.g. CPFP a transaction to an amount slightly higher than the \"fee per byte length\" which happened to still be below the actual feerate. Explicitly stating the feerate with the actually relevant measure potentially resolves that sort of confusion. Maybe that would even be a good argument to fully switch to `satoshi/weightunit`, but that would be a bigger change than we have scoped here at the moment and would bring another slew of UX considerations.",
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-727067187",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 727087797,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzA4Nzc5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727087797",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-13T23:46:37Z",
      "updated_at": "2020-11-13T23:46:37Z",
      "author_association": "MEMBER",
      "body": "tACK 05e82d86b09d914ebce05dbc92a7299cb026847b",
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-727087797",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 727212289,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzIxMjI4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/727212289",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-14T14:08:21Z",
      "updated_at": "2020-11-14T14:08:21Z",
      "author_association": "MEMBER",
      "body": "If there's still block explorers (that people use) using real bytes instead of virtual bytes in their fee calculation, then indeed adding the `v` might be necessary. Either way, don't let it hold back this PR. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-727212289",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 728105125,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyODEwNTEyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728105125",
      "actor": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-16T14:41:33Z",
      "updated_at": "2020-11-16T14:41:33Z",
      "author_association": "MEMBER",
      "body": "Just to provide two examples: \r\n\r\nThis first is from Blockchair providing the fee per raw size as [sat/B] next to the actual feerate: ![image](https://user-images.githubusercontent.com/4060799/99264847-fcafa000-27ee-11eb-86d1-2f3cfb7b66b6.png)\r\n\r\nThis second is Blockchain.com, providing fee per raw size as [sat/B] next to actual [sat/WU]:\r\n![image](https://user-images.githubusercontent.com/4060799/99265376-a131e200-27ef-11eb-890f-d8d693d48f61.png)\r\n",
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-728105125",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 728293009,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyODI5MzAwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728293009",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-16T20:02:46Z",
      "updated_at": "2020-11-16T20:02:46Z",
      "author_association": "MEMBER",
      "body": "Block explorer websites have been confusing users with bogus \"information\" forever. Trying to match them doesn't make sense.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-728293009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 728905724,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkwNTcyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728905724",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T12:48:48Z",
      "updated_at": "2020-11-17T12:48:48Z",
      "author_association": "MEMBER",
      "body": "review ACK 05e82d86b0 did not test and found a few style nits, which can be fixed later 🍯\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK 05e82d86b0 did not test and found a few style nits, which can be fixed later 🍯\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUi04QwAtjdQi2xSn12WwCON4MXuHDxB7owu5U1QxHMD5UpoaASOromS45wnAaaS\r\nX2VhwFoYWJWkPAeCycZ0yr+tyhjr91Z8JqcPpPheryzIKyVys1QMSVVU4Nc4m/2D\r\nPrQOhzn5BX74CnYU+lNoqRECzKslJGXypjWnJz8zmyGU41IDbl7LxQf5sOwYw0kD\r\nk0LDLAcQyg1jLhAwlIvhFMccvzUGz49eXxRfpSO/8qghRm4thKyLvQ7l3nN+zGM7\r\nlQuYdo3MU+OOi82fHJAnsLVwziDVxe0hVr1/r4OHaaeRMJsFSzPVRVox/JV7Zq1E\r\nB8OG5GtifbGR1TqTYhUFZaNCVLKiFCmiKn2SY1VR6UoGonHGgtz/JnQzmpSJbqAd\r\n5i4HtojlkPgtMlLuEadZWmwVNNcpJzgpWjubbc0489/5rrhBg9E+tSSQ0KvclzTg\r\nZBAEKdSJWy/jGvyxZri7Rzp+Z8c13cLo/oWKw98Y6PV12+uNNv2M+DV/jdQkEasW\r\nGaGTrQnL\r\n=h9+z\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npython: error while loading shared libraries: libpython3.8.so.1.0: cannot open shared object file: No such file or directory\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-728905724",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "merged",
      "id": 4005294480,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDAwNTI5NDQ4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4005294480",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "80e32e120ee4ba7e5b458338682cf1130964218f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80e32e120ee4ba7e5b458338682cf1130964218f",
      "created_at": "2020-11-17T12:52:10Z"
    },
    {
      "event": "closed",
      "id": 4005294510,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDAwNTI5NDUxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4005294510",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T12:52:11Z"
    },
    {
      "event": "commented",
      "id": 728909301,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyODkwOTMwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/728909301",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T12:56:15Z",
      "updated_at": "2020-11-17T12:56:15Z",
      "author_association": "MEMBER",
      "body": "I contacted one such explorer and nagged them to switch from bytes to vbytes :-)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-728909301",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "head_ref_deleted",
      "id": 4005346063,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQ0MDA1MzQ2MDYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4005346063",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T13:04:30Z"
    },
    {
      "event": "referenced",
      "id": 4006744538,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwMDY3NDQ1Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4006744538",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8518ab9051f08d7de12632fb828f349394c44e72",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/8518ab9051f08d7de12632fb828f349394c44e72",
      "created_at": "2020-11-17T17:46:17Z"
    },
    {
      "event": "labeled",
      "id": 4006961894,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwMDY5NjE4OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4006961894",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T18:38:03Z",
      "label": {
        "name": "Needs release note",
        "color": "d2db6d"
      }
    },
    {
      "event": "commented",
      "id": 729123179,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTEyMzE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729123179",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T18:38:12Z",
      "updated_at": "2020-11-17T18:38:12Z",
      "author_association": "MEMBER",
      "body": "This probably needs release notes?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-729123179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 729129866,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTEyOTg2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729129866",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T18:50:45Z",
      "updated_at": "2020-11-17T18:50:45Z",
      "author_association": "MEMBER",
      "body": "Btw, the first commit adds tests that pass without the code changes. I haven't tried the other added tests, but as a general rule, I'd prefer if new tests were added in a separate commit and not in the same commit that also changes behaviour.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-729129866",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "reviewed",
      "id": 532686870,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNjg2ODcw",
      "url": null,
      "actor": null,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#pullrequestreview-532686870",
      "submitted_at": "2020-11-17T18:51:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
    },
    {
      "event": "commented",
      "id": 729131541,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTEzMTU0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729131541",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T18:53:47Z",
      "updated_at": "2020-11-17T18:53:47Z",
      "author_association": "MEMBER",
      "body": "> This probably needs release notes?\r\n\r\nYes, will update the wiki.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-729131541",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "commented",
      "id": 729132494,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTEzMjQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729132494",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T18:55:42Z",
      "updated_at": "2020-11-17T18:55:42Z",
      "author_association": "MEMBER",
      "body": "Turns out the style nits are regressions. See https://github.com/bitcoin/bitcoin/pull/20305/files#r525406176 and #20410 ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-729132494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "reviewed",
      "id": 536019491,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MDE5NDkx",
      "url": null,
      "actor": null,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "#18261 ",
      "user": {
        "login": "MONIMAKER365",
        "id": 62938750,
        "node_id": "MDQ6VXNlcjYyOTM4NzUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/62938750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MONIMAKER365",
        "html_url": "https://github.com/MONIMAKER365",
        "followers_url": "https://api.github.com/users/MONIMAKER365/followers",
        "following_url": "https://api.github.com/users/MONIMAKER365/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MONIMAKER365/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MONIMAKER365/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MONIMAKER365/subscriptions",
        "organizations_url": "https://api.github.com/users/MONIMAKER365/orgs",
        "repos_url": "https://api.github.com/users/MONIMAKER365/repos",
        "events_url": "https://api.github.com/users/MONIMAKER365/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MONIMAKER365/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#pullrequestreview-536019491",
      "submitted_at": "2020-11-22T00:33:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
    },
    {
      "event": "commented",
      "id": 734401571,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNDQwMTU3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/734401571",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-26T16:48:25Z",
      "updated_at": "2020-11-26T16:48:25Z",
      "author_association": "MEMBER",
      "body": "Release notes added to the wiki at https://github.com/bitcoin-core/bitcoin-devwiki/wiki/0.21.0-Release-Notes-Draft.\r\n\r\nThe `Needs release note` tag can be removed.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#issuecomment-734401571",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20305"
    },
    {
      "event": "unlabeled",
      "id": 4043423512,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDA0MzQyMzUxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4043423512",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-26T17:19:57Z",
      "label": {
        "name": "Needs release note",
        "color": "d2db6d"
      }
    },
    {
      "event": "referenced",
      "id": 4105787375,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMDU3ODczNzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4105787375",
      "actor": {
        "login": "janus",
        "id": 6726,
        "node_id": "MDQ6VXNlcjY3MjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6726?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janus",
        "html_url": "https://github.com/janus",
        "followers_url": "https://api.github.com/users/janus/followers",
        "following_url": "https://api.github.com/users/janus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janus/subscriptions",
        "organizations_url": "https://api.github.com/users/janus/orgs",
        "repos_url": "https://api.github.com/users/janus/repos",
        "events_url": "https://api.github.com/users/janus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janus/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2a92a5fba8c54696b5fd01ce74878a941d543d00",
      "commit_url": "https://api.github.com/repos/janus/bitgesell/commits/2a92a5fba8c54696b5fd01ce74878a941d543d00",
      "created_at": "2020-12-13T08:23:49Z"
    },
    {
      "event": "locked",
      "id": 6074090567,
      "node_id": "LOE_lADOABII584r6GluzwAAAAFqC0RH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6074090567",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T11:15:34Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519946531",
      "pull_request_review_id": 526433625,
      "id": 519946531,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NjUzMQ==",
      "diff_hunk": "@@ -4087,7 +4087,7 @@ static RPCHelpMan send()\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options = request.params[3];\n+            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "389236d63e34b6779d01913d22f94bb02021fe29",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I get the impression looking around in the codebase that this writes an empty Object, but it's not clear to me how the value gets populated. I assume that this happens in another place, and it was previously failing because of this object being `null` instead of empty?",
      "created_at": "2020-11-09T16:31:35Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r519946531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519946531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519975619",
      "pull_request_review_id": 526433625,
      "id": 519975619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk3NTYxOQ==",
      "diff_hunk": "@@ -282,17 +285,15 @@ def run_test(self):\n         for mode in [\"foo\", Decimal(\"3.141592\")]:",
      "path": "test/functional/wallet_send.py",
      "position": null,
      "original_position": 30,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "389236d63e34b6779d01913d22f94bb02021fe29",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Actual, I was just thinking… wouldn't an empty string be an interesting test case for \"mode\" as well?",
      "created_at": "2020-11-09T17:07:24Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r519975619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519975619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519986635",
      "pull_request_review_id": 526433625,
      "id": 519986635,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk4NjYzNQ==",
      "diff_hunk": "@@ -217,12 +215,8 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n         }\n \n-        CAmount fee_rate = AmountFromValue(estimate_param);\n-        if (cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-            fee_rate /= WALLET_BTC_KB_TO_SAT_B;\n-        }\n-\n-        cc.m_feerate = CFeeRate(fee_rate);\n+        CAmount feerate{AmountFromValue(estimate_param)};\n+        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "0f7df6b2e87ab5177409dd108fff7c519283b205",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not immediately obvious to me why `CFeeRate(feerate, COIN)` is equivalent to `fee_rate /= WALLET_BTC_KB_TO_SAT_B; CFeeRate(fee_rate)`. As far as I see, `COIN` equals 1e8, but `WALLET_BTC_KB_TO_SAT_B` equals 1e5.\r\n\r\nUpon inspection of `./src/policy/feerate.cpp` and `./src/policy/feerate.h`, `CFeeRate(…)` with two arguments appears to construct a fee rate in `sat/kvB` from fees paid in sats divided by transaction weight in vB:\r\n\r\n``` feerate.h\r\n    /** Constructor for a fee rate in satoshis per kB. The size in bytes must not exceed (2^63 - 1)*/\r\n    CFeeRate(const CAmount& nFeePaid, size_t nBytes);\r\n```\r\n\r\n``` feerate.cpp\r\nCFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nBytes_)\r\n{\r\n    assert(nBytes_ <= uint64_t(std::numeric_limits<int64_t>::max()));\r\n    int64_t nSize = int64_t(nBytes_);\r\n\r\n    if (nSize > 0)\r\n        nSatoshisPerK = nFeePaid * 1000 / nSize;\r\n    else\r\n        nSatoshisPerK = 0;\r\n}\r\n```\r\n\r\nand either results in the feerate having been divided by 100,000 (1e5). :heavy_check_mark: ",
      "created_at": "2020-11-09T17:23:40Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r519986635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519986635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519996056",
      "pull_request_review_id": 526433625,
      "id": 519996056,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5NjA1Ng==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it would be nice to add the permitted value range here.",
      "created_at": "2020-11-09T17:37:49Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r519996056",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519996056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519998042",
      "pull_request_review_id": 526433625,
      "id": 519998042,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk5ODA0Mg==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks\n+ * @param[in]     estimate_mode  UniValue string, fee estimation mode (\"unset\", \"economical\" or \"conservative\")\n+ * @param[in]     fee_rate       UniValue real, fee rate in sat/vB",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since setting `fee_rate` is incompatible with a `conf_target` or `estimation_mode`, it might be nice to mention this here in the description.",
      "created_at": "2020-11-09T17:40:53Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r519998042",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/519998042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520001951",
      "pull_request_review_id": 526433625,
      "id": 520001951,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwMTk1MQ==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks\n+ * @param[in]     estimate_mode  UniValue string, fee estimation mode (\"unset\", \"economical\" or \"conservative\")\n+ * @param[in]     fee_rate       UniValue real, fee rate in sat/vB\n  */\n-static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& estimate_mode, const UniValue& estimate_param)\n+static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& conf_target, const UniValue& estimate_mode, const UniValue& fee_rate)\n {\n-    if (!estimate_mode.isNull()) {\n-        if (!FeeModeFromString(estimate_mode.get_str(), cc.m_fee_mode)) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");\n+    if (!fee_rate.isNull()) {\n+        if (!conf_target.isNull() && conf_target.get_int() > 0) { // conf_target value of 0 allowed as positional placeholder\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 46,
      "original_position": 19,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since setting `fee_rate` is incompatible with a `conf_target` or `estimation_mode`, but they are provided as positional arguments via the RPC, it might be nice to mention the correct positional arguments for the latter two in this error message.",
      "created_at": "2020-11-09T17:47:01Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520001951",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520001951"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520003420",
      "pull_request_review_id": 526433625,
      "id": 520003420,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwMzQyMA==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks\n+ * @param[in]     estimate_mode  UniValue string, fee estimation mode (\"unset\", \"economical\" or \"conservative\")\n+ * @param[in]     fee_rate       UniValue real, fee rate in sat/vB\n  */\n-static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& estimate_mode, const UniValue& estimate_param)\n+static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& conf_target, const UniValue& estimate_mode, const UniValue& fee_rate)\n {\n-    if (!estimate_mode.isNull()) {\n-        if (!FeeModeFromString(estimate_mode.get_str(), cc.m_fee_mode)) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");\n+    if (!fee_rate.isNull()) {\n+        if (!conf_target.isNull() && conf_target.get_int() > 0) { // conf_target value of 0 allowed as positional placeholder\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n         }\n-    }\n-\n-    if (cc.m_fee_mode == FeeEstimateMode::BTC_KB || cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-        if (estimate_param.isNull()) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n+        if (!estimate_mode.isNull() && !estimate_mode.get_str().empty()) { // estimate_mode value of \"\" allowed as positional placeholder\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-\n-        CAmount feerate{AmountFromValue(estimate_param)};\n-        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);\n-\n-        // default RBF to true for explicit fee rate modes\n+        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        // Default RBF to true for explicit fee_rate, if unset.\n         if (cc.m_signal_bip125_rbf == nullopt) cc.m_signal_bip125_rbf = true;\n-    } else if (!estimate_param.isNull()) {\n-        cc.m_confirm_target = ParseConfirmTarget(estimate_param, pwallet->chain().estimateMaxBlocks());\n+        return;\n+    }\n+    if (!estimate_mode.isNull() && !FeeModeFromString(estimate_mode.get_str(), cc.m_fee_mode)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If I were a user, I would like to get instructions about what the valid parameters are, if that's not too much work.",
      "created_at": "2020-11-09T17:49:28Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520003420",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520003420"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520005235",
      "pull_request_review_id": 526433625,
      "id": 520005235,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwNTIzNQ==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 215,
      "original_position": 115,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "haha, the horrors. :scream:\r\n\r\nThis has a confusion potential like me being confused about the order of arguments between `find` and `grep` every single time.",
      "created_at": "2020-11-09T17:52:19Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520005235",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520005235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3144,
      "original_line": 3144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520005999",
      "pull_request_review_id": 526433625,
      "id": 520005999,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwNTk5OQ==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");\n+            }\n             if (options.exists(\"conf_target\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate\");\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n             }\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n+            if (fee_rate <= CFeeRate(0)) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 226,
      "original_position": 126,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "But just because being able to ask a miner to pay for including a transaction would be such a terrible DOS vector. :stuck_out_tongue_winking_eye: ",
      "created_at": "2020-11-09T17:53:39Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520005999",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520005999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3153,
      "original_line": 3153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520009078",
      "pull_request_review_id": 526433625,
      "id": 520009078,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAwOTA3OA==",
      "diff_hunk": "@@ -3386,16 +3396,16 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n                 {\n                     {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target (in blocks)\\n\"\n                              \"or fee rate (for \" + CURRENCY_UNIT + \"/kB and \" + CURRENCY_ATOM + \"/B estimate modes)\"},\n-                    {\"fee_rate\", RPCArg::Type::NUM, /* default */ \"fall back to 'conf_target'\", \"fee rate (NOT total fee) to pay, in \" + CURRENCY_UNIT + \"/kB.\\n\"\n-                             \"Specify a fee rate instead of relying on the built-in fee estimator.\\n\"\n-                             \"Must be at least 0.0001 \" + CURRENCY_UNIT + \"/kB higher than the current transaction fee rate.\\n\"},\n+                    {\"fee_rate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\",\n+                             \"\\nSpecify a fee rate in \" + CURRENCY_ATOM + \"/vB instead of relying on the built-in fee estimator.\\n\"\n+                             \"Must be at least 1 \" + CURRENCY_ATOM + \"/vB higher than the current transaction fee rate.\\n\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 177,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think strictly speaking this is tied to `MIN_RELAY_TX_FEE`, so it might be nice to tie it to that instead of hardcoding to satoshi.",
      "created_at": "2020-11-09T17:58:33Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520009078",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520009078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3401,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520014120",
      "pull_request_review_id": 526433625,
      "id": 520014120,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNDEyMA==",
      "diff_hunk": "@@ -4073,26 +4085,31 @@ static RPCHelpMan send()\n                 UniValueType(), // ARR or OBJ, checked later\n                 UniValue::VNUM,\n                 UniValue::VSTR,\n-                UniValue::VOBJ\n+                UniValue::VNUM,\n+                UniValue::VOBJ,\n                 }, true\n             );\n \n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};\n-            if (options.exists(\"feeRate\") || options.exists(\"fee_rate\") || options.exists(\"estimate_mode\") || options.exists(\"conf_target\")) {\n-                if (!request.params[1].isNull() || !request.params[2].isNull()) {\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode or the options dictionary to control fee rate\");\n+            UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\n+                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 243,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe I'm missing something, but I had trouble figuring out from the local code what the parameter set of this particular call is here. If I understand correctly, their types are being defined in 4086-4089. Maybe the parameter names could be added as comments there or here to remind the reader what is being tested to be null here in 4099.",
      "created_at": "2020-11-09T18:06:46Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520014120",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520014120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 4098,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4099,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520015110",
      "pull_request_review_id": 526433625,
      "id": 520015110,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNTExMA==",
      "diff_hunk": "@@ -4073,26 +4085,31 @@ static RPCHelpMan send()\n                 UniValueType(), // ARR or OBJ, checked later\n                 UniValue::VNUM,\n                 UniValue::VSTR,\n-                UniValue::VOBJ\n+                UniValue::VNUM,\n+                UniValue::VOBJ,\n                 }, true\n             );\n \n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};\n-            if (options.exists(\"feeRate\") || options.exists(\"fee_rate\") || options.exists(\"estimate_mode\") || options.exists(\"conf_target\")) {\n-                if (!request.params[1].isNull() || !request.params[2].isNull()) {\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode or the options dictionary to control fee rate\");\n+            UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\n+                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 243,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520014120,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was trying to figure out what exactly is checked here that prevents e.g. both `conf_target` and `fee_rate` to be set here, if `params[1]…[3]` all need to be null here.",
      "created_at": "2020-11-09T18:08:33Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520015110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520015110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 4098,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4099,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520015619",
      "pull_request_review_id": 526433625,
      "id": 520015619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNTYxOQ==",
      "diff_hunk": "@@ -4073,26 +4085,31 @@ static RPCHelpMan send()\n                 UniValueType(), // ARR or OBJ, checked later\n                 UniValue::VNUM,\n                 UniValue::VSTR,\n-                UniValue::VOBJ\n+                UniValue::VNUM,\n+                UniValue::VOBJ,\n                 }, true\n             );\n \n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};\n-            if (options.exists(\"feeRate\") || options.exists(\"fee_rate\") || options.exists(\"estimate_mode\") || options.exists(\"conf_target\")) {\n-                if (!request.params[1].isNull() || !request.params[2].isNull()) {\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode or the options dictionary to control fee rate\");\n+            UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\n+                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode for fee estimation, or fee_rate to specify an explicit fee rate.\");\n                 }\n             } else {\n                 options.pushKV(\"conf_target\", request.params[1]);\n                 options.pushKV(\"estimate_mode\", request.params[2]);\n+                options.pushKV(\"fee_rate\", request.params[3]);\n             }\n             if (!options[\"conf_target\"].isNull() && (options[\"estimate_mode\"].isNull() || (options[\"estimate_mode\"].get_str() == \"unset\"))) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Specify estimate_mode\");\n             }\n+            if (options.exists(\"feeRate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use fee_rate instead of feeRate\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 255,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Optional: mention that `fee_rate` is specified in `[sat/vB]` other than `feeRate`.",
      "created_at": "2020-11-09T18:09:26Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520015619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520015619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520020689",
      "pull_request_review_id": 526433625,
      "id": 520020689,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyMDY4OQ==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 30,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I got hung up on this line because I first thought that `minRelayTxFee` would be 1,000 sats/kvB, but thinking about it, I assume that `self.min_relay_tx_fee` is specified in `BTC/kvB`. I did notice that this does not seem to ever be explicitly stated in this file.\r\n\r\nSo, the number just sort of comes from nowhere.",
      "created_at": "2020-11-09T18:18:12Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520020689",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520020689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 719,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520023407",
      "pull_request_review_id": 526433625,
      "id": 520023407,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyMzQwNw==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 65,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this may be a `fee` so the unit should just be `satoshi`, not `sats/B`. Otherwise, I'd not expect the result below to be 10,000×, but rather at a factor of 10,000/141. :thinking: ",
      "created_at": "2020-11-09T18:22:44Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520023407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520023407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520027877",
      "pull_request_review_id": 526433625,
      "id": 520027877,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyNzg3Nw==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.\n+        assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+        # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 67,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This would in turn mean that this sentence should be:\r\n\r\n > Expect fee to be 10,000x higher when explicit **feerate** 10,000x greater is specified.\r\n\r\nAlso, nit: Wouldn't \"10,000× higher\" be \"10,001 as high\"? :nerd_face: ",
      "created_at": "2020-11-09T18:30:27Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520027877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520027877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 735,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520032533",
      "pull_request_review_id": 526433625,
      "id": 520032533,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMjUzMw==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.\n+        assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+        # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+        result = node.fundrawtransaction(rawtx, {\"fee_rate\": 10000})\n+        assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n \n         self.log.info(\"Test fundrawtxn with invalid estimate_mode settings\")\n         for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n             assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1})\n         for mode in [\"foo\", Decimal(\"3.141592\")]:\n             assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1})\n \n         self.log.info(\"Test fundrawtxn with invalid conf_target settings\")\n-        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+        for mode in [\"unset\", \"economical\", \"conservative\"]:\n             self.log.debug(\"{}\".format(mode))\n             for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n                 assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": v}))\n-            if mode in [\"btc/kb\", \"sat/b\"]:\n-                assert_raises_rpc_error(-3, \"Amount out of range\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": -1}))\n-                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0}))\n-            else:\n-                for n in [-1, 0, 1009]:\n-                    assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n-                        lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\n-\n-        for unit, fee_rate in {\"sat/B\": 0.99999999, \"BTC/kB\": 0.00000999}.items():\n-            self.log.info(\"- raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\n-            assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": unit, \"conf_target\": fee_rate, \"add_inputs\": True}))\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": v})\n+            for n in [-1, 0, 1009]:\n+                assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": n})\n+\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+            node.fundrawtransaction, rawtx, {\"fee_rate\": 0, \"add_inputs\": True})\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            node.fundrawtransaction, rawtx, {\"feeRate\": 0, \"add_inputs\": True})\n+        for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.1)}:",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 112,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure if we did that already, but it would be good to assure that the valid value range for `fee_rate` will cause an error for `feeRate` and vice versa. I would expect a lot of people to plug values for either into the other, and I'm not sure off the top of my head that the ranges have no overlap. (They should be shifted by a factor of 1e5 though, right?)",
      "created_at": "2020-11-09T18:38:51Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520032533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520032533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 759,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520034207",
      "pull_request_review_id": 526433625,
      "id": 520034207,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNDIwNw==",
      "diff_hunk": "@@ -187,60 +187,74 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        self.log.info(\"Test walletcreatefundedpsbt feeRate of 0.1 BTC/kB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n-        res = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n-        assert_approx(res[\"fee\"], 0.055, 0.005)\n-\n-        self.log.info(\"Test walletcreatefundedpsbt explicit fee rate with conf_target and estimate_mode\")\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            fee = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"conf_target\": fee_rate, \"estimate_mode\": unit, \"add_inputs\": True})[\"fee\"]\n-            self.log.info(\"- conf_target {}, estimate_mode {} produces fee {} at or slightly below -maxtxfee (~0.05290000)\".format(fee_rate, unit, fee))\n-            assert_approx(fee, vexp=0.055, vspan=0.005)\n-\n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"- raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(-8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, field: fee_rate, \"add_inputs\": True}))\n+        self.log.info(\"Test walletcreatefundedpsbt fee rate of 10000 sat/vB and 0.1 BTC/kvB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n+        res1 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 10000, \"add_inputs\": True})\n+        assert_approx(res1[\"fee\"], 0.055, 0.005)\n+        res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        assert_approx(res2[\"fee\"], 0.055, 0.005)\n+\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": 0, \"add_inputs\": True})\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"feeRate\": 0, \"add_inputs\": True})\n+        for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.1)}:\n+            assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",",
      "path": "test/functional/rpc_psbt.py",
      "position": 35,
      "original_position": 30,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably out of scope, but it would be kinda nice if an error like this told the user what said limit is.",
      "created_at": "2020-11-09T18:41:39Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520034207",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520034207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 207,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520037187",
      "pull_request_review_id": 526433625,
      "id": 520037187,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNzE4Nw==",
      "diff_hunk": "@@ -227,65 +230,40 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as BTC/kB)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode bTc/kB requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='bTc/kB')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='bTc/kB')\n-        fee_per_kb = 0.0002500\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_per_kb,\n-            estimate_mode='bTc/kB',\n-        )\n-        self.nodes[2].generate(1)\n-        self.sync_all(self.nodes[0:3])\n-        node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('10'), explicit_fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n-        node_0_bal += Decimal('10')\n-        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n-\n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as sat/B)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='sat/b')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='sat/b')\n-        fee_sat_per_b = 2\n-        fee_per_kb = fee_sat_per_b / 100000.0\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_sat_per_b,\n-            estimate_mode='sAT/b',\n-        )\n+        self.log.info(\"Test sendmany with fee_rate param (explicit fee rate in sat/vB)\")\n+        fee_rate_sat_vb = 2\n+        fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0",
      "path": "test/functional/wallet_basic.py",
      "position": null,
      "original_position": 87,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I mean, I see where that 1e-5 is coming from, but if one is not as immersed, it may be a bit more readable, if the two conversions were mentioned more explicitly:\r\n\r\n```\r\nfee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\r\n```\r\n",
      "created_at": "2020-11-09T18:46:46Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520037187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520037187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520039621",
      "pull_request_review_id": 526433625,
      "id": 520039621,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzOTYyMQ==",
      "diff_hunk": "@@ -227,65 +230,40 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as BTC/kB)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode bTc/kB requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='bTc/kB')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='bTc/kB')\n-        fee_per_kb = 0.0002500\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_per_kb,\n-            estimate_mode='bTc/kB',\n-        )\n-        self.nodes[2].generate(1)\n-        self.sync_all(self.nodes[0:3])\n-        node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('10'), explicit_fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n-        node_0_bal += Decimal('10')\n-        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n-\n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as sat/B)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='sat/b')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='sat/b')\n-        fee_sat_per_b = 2\n-        fee_per_kb = fee_sat_per_b / 100000.0\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_sat_per_b,\n-            estimate_mode='sAT/b',\n-        )\n+        self.log.info(\"Test sendmany with fee_rate param (explicit fee rate in sat/vB)\")\n+        fee_rate_sat_vb = 2\n+        fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0\n+        explicit_fee_rate_vb = Decimal(fee_rate_btc_kvb) / 1000",
      "path": "test/functional/wallet_basic.py",
      "position": null,
      "original_position": 88,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems to be the first time we use `BTC/vB`. Given that it's a bit uncommon, that should perhaps be part of the variable name: I suggest to use `explicit_fee_rate_BTC_vb`.",
      "created_at": "2020-11-09T18:50:42Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520039621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520039621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520042704",
      "pull_request_review_id": 526433625,
      "id": 520042704,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MjcwNA==",
      "diff_hunk": "@@ -420,78 +398,41 @@ def run_test(self):\n             self.nodes[0].generate(1)\n             self.sync_all(self.nodes[0:3])\n \n-            self.log.info(\"Test case-insensitive explicit fee rate (sendtoaddress as BTC/kB)\")\n-            self.nodes[0].generate(1)\n-            self.sync_all(self.nodes[0:3])\n+            self.log.info(\"Test sendtoaddress with fee_rate param (explicit fee rate in sat/vB)\")\n             prebalance = self.nodes[2].getbalance()\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n-            # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode BTc/Kb requires a fee rate to be specified in conf_target\",\n-                self.nodes[2].sendtoaddress,\n-                address=address,\n-                amount=1.0,\n-                estimate_mode='BTc/Kb')\n-            # Throw if negative feerate\n-            assert_raises_rpc_error(-3, \"Amount out of range\",\n-                self.nodes[2].sendtoaddress,\n-                address=address,\n-                amount=1.0,\n-                conf_target=-1,\n-                estimate_mode='btc/kb')\n-            txid = self.nodes[2].sendtoaddress(\n-                address=address,\n-                amount=1.0,\n-                conf_target=0.00002500,\n-                estimate_mode='btc/kb',\n-            )\n+            amount = 3\n+            fee_rate_sat_vb = 2\n+            # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.\n+            txid = self.nodes[2].sendtoaddress(address=address, amount=amount, conf_target=0, estimate_mode=\"\", fee_rate=fee_rate_sat_vb)\n             tx_size = self.get_vsize(self.nodes[2].gettransaction(txid)['hex'])\n-            self.sync_all(self.nodes[0:3])\n             self.nodes[0].generate(1)\n             self.sync_all(self.nodes[0:3])\n             postbalance = self.nodes[2].getbalance()\n-            fee = prebalance - postbalance - Decimal('1')\n-            assert_fee_amount(fee, tx_size, Decimal('0.00002500'))\n-\n-            self.sync_all(self.nodes[0:3])\n+            fee = prebalance - postbalance - Decimal(amount)\n+            assert_fee_amount(fee, tx_size, Decimal(fee_rate_sat_vb / 100000.0))",
      "path": "test/functional/wallet_basic.py",
      "position": null,
      "original_position": 189,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isn't that `Decimal(fee_rate_sat_vb / 100000.0)` just a repetition of `fee_rate_btc_kvb`?",
      "created_at": "2020-11-09T18:55:43Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520042704",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520042704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 414,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520043964",
      "pull_request_review_id": 526433625,
      "id": 520043964,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0Mzk2NA==",
      "diff_hunk": "@@ -227,65 +230,40 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as BTC/kB)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode bTc/kB requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='bTc/kB')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='bTc/kB')\n-        fee_per_kb = 0.0002500\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_per_kb,\n-            estimate_mode='bTc/kB',\n-        )\n-        self.nodes[2].generate(1)\n-        self.sync_all(self.nodes[0:3])\n-        node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('10'), explicit_fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n-        node_0_bal += Decimal('10')\n-        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n-\n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as sat/B)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='sat/b')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='sat/b')\n-        fee_sat_per_b = 2\n-        fee_per_kb = fee_sat_per_b / 100000.0\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_sat_per_b,\n-            estimate_mode='sAT/b',\n-        )\n+        self.log.info(\"Test sendmany with fee_rate param (explicit fee rate in sat/vB)\")\n+        fee_rate_sat_vb = 2\n+        fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0\n+        explicit_fee_rate_vb = Decimal(fee_rate_btc_kvb) / 1000\n+        # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.",
      "path": "test/functional/wallet_basic.py",
      "position": 89,
      "original_position": 89,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Okay, this is as far as I got in 53b35be8f87fd894614a5e3609b1d8895a96c93c. I require nourishment. As discussed will continue after lunch.",
      "created_at": "2020-11-09T18:57:43Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520043964",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520043964"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520048053",
      "pull_request_review_id": 526566665,
      "id": 520048053,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0ODA1Mw==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 215,
      "original_position": 115,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520005235,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, reckon we should deprecate `feeRate` as soon as feasible after this.",
      "created_at": "2020-11-09T19:03:10Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520048053",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520048053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3144,
      "original_line": 3144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520054583",
      "pull_request_review_id": 526571604,
      "id": 520054583,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1NDU4Mw==",
      "diff_hunk": "@@ -217,12 +215,8 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n         }\n \n-        CAmount fee_rate = AmountFromValue(estimate_param);\n-        if (cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-            fee_rate /= WALLET_BTC_KB_TO_SAT_B;\n-        }\n-\n-        cc.m_feerate = CFeeRate(fee_rate);\n+        CAmount feerate{AmountFromValue(estimate_param)};\n+        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "0f7df6b2e87ab5177409dd108fff7c519283b205",
      "in_reply_to_id": 519986635,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes :+1: and I was more confident about making this change after all the test coverage we added in #20220.",
      "created_at": "2020-11-09T19:10:00Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520054583",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520054583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520058540",
      "pull_request_review_id": 526575417,
      "id": 520058540,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA1ODU0MA==",
      "diff_hunk": "@@ -4087,7 +4087,7 @@ static RPCHelpMan send()\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options = request.params[3];\n+            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "389236d63e34b6779d01913d22f94bb02021fe29",
      "in_reply_to_id": 519946531,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, that was my read on this too. And if `options` is empty, it is populated from the arg params a few lines after:\r\n```cpp\r\n            } else {\r\n                options.pushKV(\"conf_target\", request.params[1]);\r\n                options.pushKV(\"estimate_mode\", request.params[2]);\r\n                options.pushKV(\"fee_rate\", request.params[3]);\r\n            }\r\n```\r\n",
      "created_at": "2020-11-09T19:15:18Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520058540",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520058540"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520122702",
      "pull_request_review_id": 526657678,
      "id": 520122702,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyMjcwMg==",
      "diff_hunk": "@@ -420,78 +398,41 @@ def run_test(self):\n             self.nodes[0].generate(1)\n             self.sync_all(self.nodes[0:3])\n \n-            self.log.info(\"Test case-insensitive explicit fee rate (sendtoaddress as BTC/kB)\")\n-            self.nodes[0].generate(1)\n-            self.sync_all(self.nodes[0:3])\n+            self.log.info(\"Test sendtoaddress with fee_rate param (explicit fee rate in sat/vB)\")\n             prebalance = self.nodes[2].getbalance()\n             assert prebalance > 2\n             address = self.nodes[1].getnewaddress()\n-            # Throw if no conf_target provided\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode BTc/Kb requires a fee rate to be specified in conf_target\",\n-                self.nodes[2].sendtoaddress,\n-                address=address,\n-                amount=1.0,\n-                estimate_mode='BTc/Kb')\n-            # Throw if negative feerate\n-            assert_raises_rpc_error(-3, \"Amount out of range\",\n-                self.nodes[2].sendtoaddress,\n-                address=address,\n-                amount=1.0,\n-                conf_target=-1,\n-                estimate_mode='btc/kb')\n-            txid = self.nodes[2].sendtoaddress(\n-                address=address,\n-                amount=1.0,\n-                conf_target=0.00002500,\n-                estimate_mode='btc/kb',\n-            )\n+            amount = 3\n+            fee_rate_sat_vb = 2\n+            # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.\n+            txid = self.nodes[2].sendtoaddress(address=address, amount=amount, conf_target=0, estimate_mode=\"\", fee_rate=fee_rate_sat_vb)\n             tx_size = self.get_vsize(self.nodes[2].gettransaction(txid)['hex'])\n-            self.sync_all(self.nodes[0:3])\n             self.nodes[0].generate(1)\n             self.sync_all(self.nodes[0:3])\n             postbalance = self.nodes[2].getbalance()\n-            fee = prebalance - postbalance - Decimal('1')\n-            assert_fee_amount(fee, tx_size, Decimal('0.00002500'))\n-\n-            self.sync_all(self.nodes[0:3])\n+            fee = prebalance - postbalance - Decimal(amount)\n+            assert_fee_amount(fee, tx_size, Decimal(fee_rate_sat_vb / 100000.0))",
      "path": "test/functional/wallet_basic.py",
      "position": null,
      "original_position": 189,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520042704,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yup, good eye. One tests sendmany and the other tests sendtoaddress. Made this change in 136234cb\r\n```diff\r\n             fee_rate_sat_vb = 2\r\n+            fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0\r\n.../...\r\n             fee = prebalance - postbalance - Decimal(amount)\r\n-            assert_fee_amount(fee, tx_size, Decimal(fee_rate_sat_vb / 100000.0))\r\n+            assert_fee_amount(fee, tx_size, Decimal(fee_rate_btc_kvb))\r\n```",
      "created_at": "2020-11-09T21:11:48Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520122702",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520122702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 414,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520124216",
      "pull_request_review_id": 526659586,
      "id": 520124216,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNDIxNg==",
      "diff_hunk": "@@ -227,65 +230,40 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as BTC/kB)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode bTc/kB requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='bTc/kB')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='bTc/kB')\n-        fee_per_kb = 0.0002500\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_per_kb,\n-            estimate_mode='bTc/kB',\n-        )\n-        self.nodes[2].generate(1)\n-        self.sync_all(self.nodes[0:3])\n-        node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('10'), explicit_fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n-        node_0_bal += Decimal('10')\n-        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n-\n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as sat/B)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='sat/b')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='sat/b')\n-        fee_sat_per_b = 2\n-        fee_per_kb = fee_sat_per_b / 100000.0\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_sat_per_b,\n-            estimate_mode='sAT/b',\n-        )\n+        self.log.info(\"Test sendmany with fee_rate param (explicit fee rate in sat/vB)\")\n+        fee_rate_sat_vb = 2\n+        fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0\n+        explicit_fee_rate_vb = Decimal(fee_rate_btc_kvb) / 1000",
      "path": "test/functional/wallet_basic.py",
      "position": null,
      "original_position": 88,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520039621,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea. Renamed to `explicit_fee_rate_btc_kvb` (since the variable names are lowercase) in 136234cb",
      "created_at": "2020-11-09T21:14:49Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520124216",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520124216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 236,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520131249",
      "pull_request_review_id": 526668259,
      "id": 520131249,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzMTI0OQ==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks\n+ * @param[in]     estimate_mode  UniValue string, fee estimation mode (\"unset\", \"economical\" or \"conservative\")\n+ * @param[in]     fee_rate       UniValue real, fee rate in sat/vB\n  */\n-static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& estimate_mode, const UniValue& estimate_param)\n+static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& conf_target, const UniValue& estimate_mode, const UniValue& fee_rate)\n {\n-    if (!estimate_mode.isNull()) {\n-        if (!FeeModeFromString(estimate_mode.get_str(), cc.m_fee_mode)) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");\n+    if (!fee_rate.isNull()) {\n+        if (!conf_target.isNull() && conf_target.get_int() > 0) { // conf_target value of 0 allowed as positional placeholder\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 46,
      "original_position": 19,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520001951,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The positional order depends on the RPC, so the user would need to refer to the specific RPC help. I tried to generally keep to the following positional order, where possible: conf_target, estimate_mode, fee_rate.",
      "created_at": "2020-11-09T21:28:07Z",
      "updated_at": "2020-11-13T03:50:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520131249",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520131249"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520133867",
      "pull_request_review_id": 526671520,
      "id": 520133867,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzMzg2Nw==",
      "diff_hunk": "@@ -227,65 +230,40 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as BTC/kB)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode bTc/kB requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='bTc/kB')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='bTc/kB')\n-        fee_per_kb = 0.0002500\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_per_kb,\n-            estimate_mode='bTc/kB',\n-        )\n-        self.nodes[2].generate(1)\n-        self.sync_all(self.nodes[0:3])\n-        node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('10'), explicit_fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n-        node_0_bal += Decimal('10')\n-        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n-\n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as sat/B)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='sat/b')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='sat/b')\n-        fee_sat_per_b = 2\n-        fee_per_kb = fee_sat_per_b / 100000.0\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_sat_per_b,\n-            estimate_mode='sAT/b',\n-        )\n+        self.log.info(\"Test sendmany with fee_rate param (explicit fee rate in sat/vB)\")\n+        fee_rate_sat_vb = 2\n+        fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0\n+        explicit_fee_rate_vb = Decimal(fee_rate_btc_kvb) / 1000\n+        # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.",
      "path": "test/functional/wallet_basic.py",
      "position": 89,
      "original_position": 89,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520043964,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the good ideas and feedback, @Xekyo. I'll try to implement them (and any other feedback you may have while continuing) tomorrow in the morning to move this forward. Heading to bed :)",
      "created_at": "2020-11-09T21:32:52Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520133867",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520133867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520227883",
      "pull_request_review_id": 526785231,
      "id": 520227883,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIyNzg4Mw==",
      "diff_hunk": "@@ -105,50 +103,43 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         self.sync_mempools((rbf_node, peer_node))\n         assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-        assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-        assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n+        for key in [\"totalFee\", \"feeRate\"]:\n+            assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n-        # For each fee mode, bumping to just above minrelay should fail to increase the total fee enough.\n-        for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:\n-            assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, options)\n+        # Bumping to just above minrelay should fail to increase the total fee enough.\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",",
      "path": "test/functional/wallet_bumpfee.py",
      "position": 53,
      "original_position": 53,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Getting hung up on all the wrong things, but if minRelayTxFee × txsize is 141 sats, I'm surprised that the incrementalFee is `705`. I thought that minimum increments are equal to `minRelayTxFee`.",
      "created_at": "2020-11-10T01:28:47Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520227883",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520227883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": 113,
      "original_start_line": 113,
      "start_side": "LEFT",
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520228906",
      "pull_request_review_id": 526785231,
      "id": 520228906,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIyODkwNg==",
      "diff_hunk": "@@ -105,50 +103,43 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         self.sync_mempools((rbf_node, peer_node))\n         assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-        assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-        assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n+        for key in [\"totalFee\", \"feeRate\"]:\n+            assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n-        # For each fee mode, bumping to just above minrelay should fail to increase the total fee enough.\n-        for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:\n-            assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, options)\n+        # Bumping to just above minrelay should fail to increase the total fee enough.\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n+            rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n-        self.log.info(\"Test explicit fee rate raises RPC error if estimate_mode is passed without a conf_target\")\n-        for unit, fee_rate in {\"SAT/B\": 100, \"BTC/KB\": NORMAL}.items():\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode {} requires a fee rate to be specified in conf_target\".format(unit),\n-                                    rbf_node.bumpfee, rbfid, {\"fee_rate\": fee_rate, \"estimate_mode\": unit})\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n+        assert_raises_rpc_error(-4, \"Specified or calculated fee 0.141 is too high (cannot be higher than -maxtxfee 0.10\",",
      "path": "test/functional/wallet_bumpfee.py",
      "position": 63,
      "original_position": 63,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "woah, damn. I think we may want to have a look at the `maxtxfee` that's a lot of money.",
      "created_at": "2020-11-10T01:31:46Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520228906",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520228906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520231413",
      "pull_request_review_id": 526785231,
      "id": 520231413,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzMTQxMw==",
      "diff_hunk": "@@ -3387,9 +3387,10 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n         \"The command will fail if the wallet or mempool contains a transaction that spends one of T's outputs.\\n\"\n         \"By default, the new fee will be calculated automatically using the estimatesmartfee RPC.\\n\"\n         \"The user can specify a confirmation target for estimatesmartfee.\\n\"\n-        \"Alternatively, the user can specify a fee_rate (in \" + CURRENCY_ATOM + \"/vB) for the new transaction.\\n\"\n+        \"Alternatively, the user can specify a fee rate in \" + CURRENCY_ATOM + \"/vB for the new transaction.\\n\"\n         \"At a minimum, the new fee rate must be high enough to pay an additional new relay fee (incrementalfee\\n\"\n-        \"returned by getnetworkinfo) to enter the node's mempool.\\n\",\n+        \"returned by getnetworkinfo) to enter the node's mempool.\\n\"\n+        \"* WARNING: before version 0.21, fee_rate was in \" + CURRENCY_UNIT + \"/kvB. As of 0.21, fee_rate is in \" + CURRENCY_ATOM + \"/vB. *\\n\",",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 293,
      "original_position": 9,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "fd2ebb6526199c439c5b26ebdaa41ebe122c6355",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Luckily, this is very benign. In the worst case, someone is going to get upped to the `minRelayTxFee` silently and sends at 1 sat/vB. Since RBF is on by default, they should be able to bump when they notice. :+1: ",
      "created_at": "2020-11-10T01:40:07Z",
      "updated_at": "2020-11-24T16:09:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520231413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520231413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3410,
      "original_line": 3410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520231795",
      "pull_request_review_id": 526785231,
      "id": 520231795,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzMTc5NQ==",
      "diff_hunk": "@@ -4369,8 +4363,7 @@ static RPCHelpMan walletcreatefundedpsbt()\n                             },\n                             {\"replaceable\", RPCArg::Type::BOOL, /* default */ \"wallet default\", \"Marks this transaction as BIP125 replaceable.\\n\"\n                                                           \"Allows this transaction to be replaced by a transaction with higher fees\"},\n-                            {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target (in blocks)\\n\"\n-                                                          \"or fee rate (for \" + CURRENCY_UNIT + \"/kB and \" + CURRENCY_ATOM + \"/B estimate modes)\"},\n+                            {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target in blocks\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 468,
      "original_position": 66,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "822ad0272793f50c696c8995f0675f6443ff9df8",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Overloading, begone! :fireworks: ",
      "created_at": "2020-11-10T01:41:15Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520231795",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520231795"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4398,
      "original_line": 4398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520232666",
      "pull_request_review_id": 526785231,
      "id": 520232666,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzMjY2Ng==",
      "diff_hunk": "@@ -19,8 +19,8 @@ enum class FeeEstimateMode {\n     UNSET,        //!< Use default settings based on other criteria\n     ECONOMICAL,   //!< Force estimateSmartFee to use non-conservative estimates\n     CONSERVATIVE, //!< Force estimateSmartFee to use conservative estimates\n-    BTC_KB,       //!< Use explicit BTC/kB fee given in coin control\n-    SAT_B,        //!< Use explicit sat/B fee given in coin control\n+    BTC_KVB,      //!< Use BTC/kvB fee rate unit\n+    SAT_VB,       //!< Use sat/vB fee rate unit",
      "path": "src/policy/feerate.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "ced7d54e6da522c964510ea0c379ef84c7ac689c",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Given that we're introducing `sat/vB` everywhere, how come this `BTC_KVB` was kept?",
      "created_at": "2020-11-10T01:44:09Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520232666",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520232666"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": 22,
      "original_start_line": 22,
      "start_side": "RIGHT",
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520234818",
      "pull_request_review_id": 526785231,
      "id": 520234818,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzNDgxOA==",
      "diff_hunk": "@@ -2303,7 +2303,7 @@ static RPCHelpMan settxfee()\n                 \"\\nSet the transaction fee per kB for this wallet. Overrides the global -paytxfee command line parameter.\\n\"\n                 \"Can be deactivated by passing 0 as the fee. In that case automatic fee selection will be used by default.\\n\",\n                 {\n-                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee in \" + CURRENCY_UNIT + \"/kB\"},\n+                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee in \" + CURRENCY_UNIT + \"/kvB\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 175,
      "original_position": 5,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "cfc14701c6fef7dd3340bfeb5675a821ae615284",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I assume that you considered and deliberately passed on also replacing these. I would surmise that it's it just too much of a can of worms? Otherwise it would be kinda odd that we are using `sat/vB` for the fee rate in all the send variants, but then use `BTC/kvB` for `settxfee`.\r\n\r\nNit: `settxfee` sets not a fee, but a feerate. ;)",
      "created_at": "2020-11-10T01:51:17Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520234818",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520234818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2325,
      "original_line": 2325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520236742",
      "pull_request_review_id": 526785231,
      "id": 520236742,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzNjc0Mg==",
      "diff_hunk": "@@ -454,12 +454,17 @@ static RPCHelpMan sendtoaddress()\n                     },\n                 },\n                 RPCExamples{\n-                    HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"\\\" \\\"\\\" false true 0.00002 \" + (CURRENCY_UNIT + \"/kB\"))\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"\\\" \\\"\\\" false true 2 \" + (CURRENCY_ATOM + \"/B\"))\n-            + HelpExampleRpc(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n+                    \"\\nSend 0.1 BTC\\n\"\n+                    + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1\") +\n+                    \"\\nSend 0.1 BTC with a confirmation target of 6 blocks in economical fee estimate mode using positional arguments\\n\"\n+                    + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"lunch\\\" \\\"seans outpost\\\" false true 6 economical\") +",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "5660dd301152c0c7a70934cc7650ad162a44c9b4",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "To explain why that was \"donation\": \"Sean's Outpost\" was a homeless outreach program based in Florida that was run by a bitcoiner and was somewhat known in the Bitcoin ecosystem in ~2013-2014.",
      "created_at": "2020-11-10T01:58:27Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520236742",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520236742"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 460,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520237993",
      "pull_request_review_id": 526785231,
      "id": 520237993,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDIzNzk5Mw==",
      "diff_hunk": "@@ -4058,9 +4063,15 @@ static RPCHelpMan send()\n                 }\n         },\n         RPCExamples{\"\"\n-        \"\\nSend with a fee rate of 1 satoshi per byte\\n\"\n-        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.1}' 1 sat/b\\n\") +\n-            \"\\nCreate a transaction that should confirm the next block, with a specific input, and return result without adding to wallet or broadcasting to the network\\n\"\n+        \"\\nSend 0.1 BTC with a confirmation target of 6 blocks in economical fee estimate mode\\n\"\n+        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.1}' 6 economical\\n\") +\n+        \"Send 0.2 BTC with a fee rate of 1 \" + CURRENCY_ATOM + \"/vB using positional arguments\\n\"\n+        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.2}' 0 \\\"\\\" 1\\n\") +\n+        \"Send 0.2 BTC with a fee rate of 1 \" + CURRENCY_ATOM + \"/vB using the options argument\\n\"\n+        + HelpExampleCli(\"send\", \"'{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.2}' '{\\\"fee_rate\\\": 1}'\\n\") +\n+        \"Send 0.3 BTC with a fee rate of 25 \" + CURRENCY_ATOM + \"/vB using named arguments\\n\"\n+        + HelpExampleCli(\"-named send\", \"outputs='{\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\": 0.3}' fee_rate=25\\n\") +\n+        \"Create a transaction that should confirm the next block, with a specific input, and return result without adding to wallet or broadcasting to the network\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 393,
      "original_position": 39,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "5660dd301152c0c7a70934cc7650ad162a44c9b4",
      "in_reply_to_id": null,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for updating all these! I think they hadn't been filled-in since 2013ish given the above mention of Sean's Outpost :)",
      "created_at": "2020-11-10T02:02:32Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520237993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520237993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4089,
      "original_line": 4089,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520378840",
      "pull_request_review_id": 526964205,
      "id": 520378840,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM3ODg0MA==",
      "diff_hunk": "@@ -454,12 +454,17 @@ static RPCHelpMan sendtoaddress()\n                     },\n                 },\n                 RPCExamples{\n-                    HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"donation\\\" \\\"seans outpost\\\"\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"\\\" \\\"\\\" true\")\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"\\\" \\\"\\\" false true 0.00002 \" + (CURRENCY_UNIT + \"/kB\"))\n-            + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"\\\" \\\"\\\" false true 2 \" + (CURRENCY_ATOM + \"/B\"))\n-            + HelpExampleRpc(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n+                    \"\\nSend 0.1 BTC\\n\"\n+                    + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1\") +\n+                    \"\\nSend 0.1 BTC with a confirmation target of 6 blocks in economical fee estimate mode using positional arguments\\n\"\n+                    + HelpExampleCli(\"sendtoaddress\", \"\\\"\" + EXAMPLE_ADDRESS[0] + \"\\\" 0.1 \\\"lunch\\\" \\\"seans outpost\\\" false true 6 economical\") +",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "5660dd301152c0c7a70934cc7650ad162a44c9b4",
      "in_reply_to_id": 520236742,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "TIL, thanks! Fixing",
      "created_at": "2020-11-10T08:35:12Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520378840",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520378840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 460,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520388431",
      "pull_request_review_id": 526977005,
      "id": 520388431,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM4ODQzMQ==",
      "diff_hunk": "@@ -282,17 +285,15 @@ def run_test(self):\n         for mode in [\"foo\", Decimal(\"3.141592\")]:",
      "path": "test/functional/wallet_send.py",
      "position": null,
      "original_position": 30,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "389236d63e34b6779d01913d22f94bb02021fe29",
      "in_reply_to_id": 519975619,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, updated each of the test files.\r\n```diff\r\n-        for mode in [\"foo\", Decimal(\"3.141592\")]:\r\n+        for mode in [\"\", \"foo\", Decimal(\"3.141592\")]:\r\n```",
      "created_at": "2020-11-10T08:50:35Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520388431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520388431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 285,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520414437",
      "pull_request_review_id": 527010840,
      "id": 520414437,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxNDQzNw==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 519996056,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, addressed this and https://github.com/bitcoin/bitcoin/pull/20305#discussion_r519998042 in 136234cb with\r\n```diff\r\ndiff --git a/src/wallet/rpcwallet.cpp b/src/wallet/rpcwallet.cpp\r\nindex edd7efb964..238d37ae98 100644\r\n--- a/src/wallet/rpcwallet.cpp\r\n+++ b/src/wallet/rpcwallet.cpp\r\n@@ -198,30 +198,33 @@ static std::string LabelFromValue(const UniValue& value)\r\n  *\r\n  * @param[in]     pwallet        Wallet pointer\r\n  * @param[in,out] cc             Coin control which is to be updated\r\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\r\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\r\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\r\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks, values between 1 and 1008 are valid per policy/fees.h;\r\n+ *                                   if a fee_rate is present, 0 is allowed here as a no-op positional placeholder\r\n+ * @param[in]     estimate_mode  UniValue string, fee estimation mode, valid values are \"unset\", \"economical\" or \"conservative\";\r\n+ *                                   if a fee_rate is present, \"\" is allowed here as a no-op positional placeholder\r\n+ * @param[in]     fee_rate       UniValue real, fee rate in sat/vB;\r\n+ *                                   if a fee_rate is present, both conf_target and estimate_mode must either be null, or no-op values\r\n+ * @throws a JSONRPCError if conf_target, estimate_mode, or fee_rate contain invalid values or are in conflict\r\n```\r\n",
      "created_at": "2020-11-10T09:30:05Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520414437",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520414437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520415563",
      "pull_request_review_id": 527012274,
      "id": 520415563,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQxNTU2Mw==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks\n+ * @param[in]     estimate_mode  UniValue string, fee estimation mode (\"unset\", \"economical\" or \"conservative\")\n+ * @param[in]     fee_rate       UniValue real, fee rate in sat/vB",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 519998042,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ":+1: done as described in https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520414437",
      "created_at": "2020-11-10T09:31:45Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520415563",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520415563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 203,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520504264",
      "pull_request_review_id": 527125432,
      "id": 520504264,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUwNDI2NA==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks\n+ * @param[in]     estimate_mode  UniValue string, fee estimation mode (\"unset\", \"economical\" or \"conservative\")\n+ * @param[in]     fee_rate       UniValue real, fee rate in sat/vB\n  */\n-static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& estimate_mode, const UniValue& estimate_param)\n+static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& conf_target, const UniValue& estimate_mode, const UniValue& fee_rate)\n {\n-    if (!estimate_mode.isNull()) {\n-        if (!FeeModeFromString(estimate_mode.get_str(), cc.m_fee_mode)) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");\n+    if (!fee_rate.isNull()) {\n+        if (!conf_target.isNull() && conf_target.get_int() > 0) { // conf_target value of 0 allowed as positional placeholder\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n         }\n-    }\n-\n-    if (cc.m_fee_mode == FeeEstimateMode::BTC_KB || cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-        if (estimate_param.isNull()) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n+        if (!estimate_mode.isNull() && !estimate_mode.get_str().empty()) { // estimate_mode value of \"\" allowed as positional placeholder\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-\n-        CAmount feerate{AmountFromValue(estimate_param)};\n-        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);\n-\n-        // default RBF to true for explicit fee rate modes\n+        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        // Default RBF to true for explicit fee_rate, if unset.\n         if (cc.m_signal_bip125_rbf == nullopt) cc.m_signal_bip125_rbf = true;\n-    } else if (!estimate_param.isNull()) {\n-        cc.m_confirm_target = ParseConfirmTarget(estimate_param, pwallet->chain().estimateMaxBlocks());\n+        return;\n+    }\n+    if (!estimate_mode.isNull() && !FeeModeFromString(estimate_mode.get_str(), cc.m_fee_mode)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520003420,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea, doing.",
      "created_at": "2020-11-10T11:51:42Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520504264",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520504264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520588429",
      "pull_request_review_id": 527236615,
      "id": 520588429,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU4ODQyOQ==",
      "diff_hunk": "@@ -4073,26 +4085,31 @@ static RPCHelpMan send()\n                 UniValueType(), // ARR or OBJ, checked later\n                 UniValue::VNUM,\n                 UniValue::VSTR,\n-                UniValue::VOBJ\n+                UniValue::VNUM,\n+                UniValue::VOBJ,\n                 }, true\n             );\n \n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};\n-            if (options.exists(\"feeRate\") || options.exists(\"fee_rate\") || options.exists(\"estimate_mode\") || options.exists(\"conf_target\")) {\n-                if (!request.params[1].isNull() || !request.params[2].isNull()) {\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode or the options dictionary to control fee rate\");\n+            UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\n+                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 243,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520014120,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added these comments:\r\n```diff\r\n             RPCTypeCheck(request.params, {\r\n-                UniValueType(), // ARR or OBJ, checked later\r\n-                UniValue::VNUM,\r\n-                UniValue::VSTR,\r\n-                UniValue::VNUM,\r\n-                UniValue::VOBJ,\r\n+                UniValueType(), // outputs (ARR or OBJ, checked later)\r\n+                UniValue::VNUM, // conf_target\r\n+                UniValue::VSTR, // estimate_mode\r\n+                UniValue::VNUM, // fee_rate\r\n+                UniValue::VOBJ, // options\r\n                 }, true\r\n             );\r\n```\r\n> I was trying to figure out what exactly is checked here that prevents e.g. both `conf_target` and `fee_rate` to be set here, if `params[1]…[3]` all need to be null here.\r\n\r\nYou're right. Updated.\r\n```diff\r\n             UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\r\n-            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\r\n-                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {\r\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode for fee estimation, or fee_rate to specify an explicit fee rate.\");\r\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\")) {\r\n+                if (!request.params[1].isNull() || !request.params[2].isNull()) {\r\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Pass conf_target and estimate_mode either as arguments or in the options object, but not both\");\r\n                 }\r\n             } else {\r\n                 options.pushKV(\"conf_target\", request.params[1]);\r\n                 options.pushKV(\"estimate_mode\", request.params[2]);\r\n+            }\r\n+            if (options.exists(\"fee_rate\")) {\r\n+                if (!request.params[3].isNull()) {\r\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Pass fee_rate either as an argument or in the options object, but not both\");\r\n+                }\r\n+            } else {\r\n                 options.pushKV(\"fee_rate\", request.params[3]);\r\n             }\r\n```\r\nThis hopefully maintains the original goal of the code that either the argument or the option should be passed, but not both. The check if conf_target or estimate_mode are passed at the same time as fee_rate happens in `SetFeeEstimateMode()`.\r\n",
      "created_at": "2020-11-10T14:08:21Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520588429",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520588429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 4098,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4099,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520594634",
      "pull_request_review_id": 527244883,
      "id": 520594634,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDU5NDYzNA==",
      "diff_hunk": "@@ -4073,26 +4085,31 @@ static RPCHelpMan send()\n                 UniValueType(), // ARR or OBJ, checked later\n                 UniValue::VNUM,\n                 UniValue::VSTR,\n-                UniValue::VOBJ\n+                UniValue::VNUM,\n+                UniValue::VOBJ,\n                 }, true\n             );\n \n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};\n-            if (options.exists(\"feeRate\") || options.exists(\"fee_rate\") || options.exists(\"estimate_mode\") || options.exists(\"conf_target\")) {\n-                if (!request.params[1].isNull() || !request.params[2].isNull()) {\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode or the options dictionary to control fee rate\");\n+            UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\n+                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 243,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520014120,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated `wallet_send` tests.\r\n```diff\r\n+++ b/test/functional/wallet_send.py\r\n@@ -234,7 +234,7 @@ class WalletSendTest(BitcoinTestFramework):\r\n         for mode in [\"unset\", \"economical\", \"conservative\"]:\r\n             self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_conf_target=1, arg_estimate_mode=\"economical\",\r\n                 conf_target=1, estimate_mode=mode, add_to_wallet=False,\r\n-                expect_error=(-8, \"Use either conf_target and estimate_mode for fee estimation, or fee_rate to specify an explicit fee rate.\"))\r\n+                expect_error=(-8, \"Pass conf_target and estimate_mode either as arguments or in the options object, but not both\"))\r\n \r\n         self.log.info(\"Create PSBT from watch-only wallet w3, sign with w2...\")\r\n         res = self.test_send(from_wallet=w3, to_wallet=w1, amount=1)\r\n@@ -278,6 +278,10 @@ class WalletSendTest(BitcoinTestFramework):\r\n         fee = self.nodes[1].decodepsbt(res[\"psbt\"])[\"fee\"]\r\n         assert_fee_amount(fee, Decimal(len(res[\"hex\"]) / 2), Decimal(\"0.00003\"))\r\n \r\n+        # Test that passing fee_rate as both an argument and an option raises.\r\n+        self.test_send(from_wallet=w0, to_wallet=w1, amount=1, arg_fee_rate=1, fee_rate=1, add_to_wallet=False,\r\n+                       expect_error=(-8, \"Pass fee_rate either as an argument or in the options object, but not both\"))\r\n```\r\n",
      "created_at": "2020-11-10T14:16:38Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520594634",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520594634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 4098,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4099,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520631298",
      "pull_request_review_id": 527293892,
      "id": 520631298,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDYzMTI5OA==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.\n+        assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+        # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+        result = node.fundrawtransaction(rawtx, {\"fee_rate\": 10000})\n+        assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n \n         self.log.info(\"Test fundrawtxn with invalid estimate_mode settings\")\n         for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n             assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1})\n         for mode in [\"foo\", Decimal(\"3.141592\")]:\n             assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1})\n \n         self.log.info(\"Test fundrawtxn with invalid conf_target settings\")\n-        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+        for mode in [\"unset\", \"economical\", \"conservative\"]:\n             self.log.debug(\"{}\".format(mode))\n             for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n                 assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": v}))\n-            if mode in [\"btc/kb\", \"sat/b\"]:\n-                assert_raises_rpc_error(-3, \"Amount out of range\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": -1}))\n-                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0}))\n-            else:\n-                for n in [-1, 0, 1009]:\n-                    assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n-                        lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\n-\n-        for unit, fee_rate in {\"sat/B\": 0.99999999, \"BTC/kB\": 0.00000999}.items():\n-            self.log.info(\"- raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\n-            assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": unit, \"conf_target\": fee_rate, \"add_inputs\": True}))\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": v})\n+            for n in [-1, 0, 1009]:\n+                assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": n})\n+\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+            node.fundrawtransaction, rawtx, {\"fee_rate\": 0, \"add_inputs\": True})\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            node.fundrawtransaction, rawtx, {\"feeRate\": 0, \"add_inputs\": True})\n+        for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.1)}:",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 112,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520032533,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good point. Yes, 1e5 apart. The ranges don't overlap if I'm not confused, except in the minimum fee direction. We already check the min/max for fee_rate (0.1-100,000 sat/vB) and the max for feeRate (1 BTC/kvB) in the functional tests. At the moment, min fee checks with feeRate are disabled due to `coinControl.fOverrideFeeRate = true` in wallet/rpcwallet.cpp `FundTransaction()`.\r\n\r\nTo test the minimum for feeRate (0.00000999 BTC/kvB), we'd have to remove that `fOverrideFeeRate` setting. I've added this for now:\r\n\r\n```diff\r\ntest/functional/rpc_fundrawtransaction.py\r\n@@ 772 @@ class RawTransactionsTest(BitcoinTestFramework):\r\n+        # This feeRate test only passes if `coinControl.fOverrideFeeRate = true` in wallet/rpcwallet.cpp::FundTransaction is removed.\r\n+        assert_raises_rpc_error(-4, \"Fee rate (0.999 sat/vB) is lower than the minimum fee rate setting (1.000 sat/vB)\",\r\n+            node.fundrawtransaction, rawtx, {\"feeRate\": 0.00000999, \"add_inputs\": True})\r\n```\r\n",
      "created_at": "2020-11-10T15:03:11Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520631298",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520631298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 759,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520645909",
      "pull_request_review_id": 527313380,
      "id": 520645909,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0NTkwOQ==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 30,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520020689,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated in 136234cb\r\n```diff\r\n         result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\r\n-        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\r\n+        btc_kvb_to_sat_vb = 100000  # (1e5)\r\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 2 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\r\n         result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\r\n-        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\r\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 10 * btc_kvb_to_sat_vb * self.min_relay_tx_fee})\r\n         result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\r\n```\r\n",
      "created_at": "2020-11-10T15:21:39Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520645909",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520645909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 719,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520648044",
      "pull_request_review_id": 527316288,
      "id": 520648044,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0ODA0NA==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.\n+        assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+        # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 67,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520027877,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well-spotted, done in 136234cb\r\n```diff\r\n-        # With no arguments passed, expect fee of 141 sats/b.\r\n+        # With no arguments passed, expect fee of 141 satoshis.\r\n         assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\r\n-        # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\r\n+        # Expect fee to be 10,000x higher when explicit fee rate 10,000x greater is specified.\r\n```\r\n",
      "created_at": "2020-11-10T15:24:28Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520648044",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520648044"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 735,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520648757",
      "pull_request_review_id": 527317189,
      "id": 520648757,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY0ODc1Nw==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 65,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520023407,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right! Done in 136234cb",
      "created_at": "2020-11-10T15:25:19Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520648757",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520648757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 733,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520651114",
      "pull_request_review_id": 527320330,
      "id": 520651114,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY1MTExNA==",
      "diff_hunk": "@@ -187,60 +187,74 @@ def run_test(self):\n         assert_equal(walletprocesspsbt_out['complete'], True)\n         self.nodes[1].sendrawtransaction(self.nodes[1].finalizepsbt(walletprocesspsbt_out['psbt'])['hex'])\n \n-        self.log.info(\"Test walletcreatefundedpsbt feeRate of 0.1 BTC/kB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n-        res = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n-        assert_approx(res[\"fee\"], 0.055, 0.005)\n-\n-        self.log.info(\"Test walletcreatefundedpsbt explicit fee rate with conf_target and estimate_mode\")\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            fee = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"conf_target\": fee_rate, \"estimate_mode\": unit, \"add_inputs\": True})[\"fee\"]\n-            self.log.info(\"- conf_target {}, estimate_mode {} produces fee {} at or slightly below -maxtxfee (~0.05290000)\".format(fee_rate, unit, fee))\n-            assert_approx(fee, vexp=0.055, vspan=0.005)\n-\n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"- raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(-8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, field: fee_rate, \"add_inputs\": True}))\n+        self.log.info(\"Test walletcreatefundedpsbt fee rate of 10000 sat/vB and 0.1 BTC/kvB produces a total fee at or slightly below -maxtxfee (~0.05290000)\")\n+        res1 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"fee_rate\": 10000, \"add_inputs\": True})\n+        assert_approx(res1[\"fee\"], 0.055, 0.005)\n+        res2 = self.nodes[1].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.1, \"add_inputs\": True})\n+        assert_approx(res2[\"fee\"], 0.055, 0.005)\n+\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"fee_rate\": 0, \"add_inputs\": True})\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"feeRate\": 0, \"add_inputs\": True})\n+        for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.1)}:\n+            assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\",",
      "path": "test/functional/rpc_psbt.py",
      "position": 35,
      "original_position": 30,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520034207,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree--punting on this for the next push but would be good.",
      "created_at": "2020-11-10T15:28:14Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520651114",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520651114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 207,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520653277",
      "pull_request_review_id": 527323176,
      "id": 520653277,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY1MzI3Nw==",
      "diff_hunk": "@@ -227,65 +230,40 @@ def run_test(self):\n         assert_equal(self.nodes[2].getbalance(), node_2_bal)\n         node_0_bal = self.check_fee_amount(self.nodes[0].getbalance(), node_0_bal + Decimal('10'), fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n \n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as BTC/kB)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode bTc/kB requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='bTc/kB')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='bTc/kB')\n-        fee_per_kb = 0.0002500\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_per_kb,\n-            estimate_mode='bTc/kB',\n-        )\n-        self.nodes[2].generate(1)\n-        self.sync_all(self.nodes[0:3])\n-        node_2_bal = self.check_fee_amount(self.nodes[2].getbalance(), node_2_bal - Decimal('10'), explicit_fee_per_byte, self.get_vsize(self.nodes[2].gettransaction(txid)['hex']))\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n-        node_0_bal += Decimal('10')\n-        assert_equal(self.nodes[0].getbalance(), node_0_bal)\n-\n-        self.log.info(\"Test case-insensitive explicit fee rate (sendmany as sat/B)\")\n-        # Throw if no conf_target provided\n-        assert_raises_rpc_error(-8, \"Selected estimate_mode sat/b requires a fee rate to be specified in conf_target\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            estimate_mode='sat/b')\n-        # Throw if negative feerate\n-        assert_raises_rpc_error(-3, \"Amount out of range\",\n-            self.nodes[2].sendmany,\n-            amounts={ address: 10 },\n-            conf_target=-1,\n-            estimate_mode='sat/b')\n-        fee_sat_per_b = 2\n-        fee_per_kb = fee_sat_per_b / 100000.0\n-        explicit_fee_per_byte = Decimal(fee_per_kb) / 1000\n-        txid = self.nodes[2].sendmany(\n-            amounts={ address: 10 },\n-            conf_target=fee_sat_per_b,\n-            estimate_mode='sAT/b',\n-        )\n+        self.log.info(\"Test sendmany with fee_rate param (explicit fee rate in sat/vB)\")\n+        fee_rate_sat_vb = 2\n+        fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0",
      "path": "test/functional/wallet_basic.py",
      "position": null,
      "original_position": 87,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520037187,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 136234cb\r\n```diff\r\n+++ b/test/functional/wallet_basic.py\r\n@@ -232,7 +232,7 @@ class WalletTest(BitcoinTestFramework):\r\n \r\n         self.log.info(\"Test sendmany with fee_rate param (explicit fee rate in sat/vB)\")\r\n         fee_rate_sat_vb = 2\r\n-        fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0\r\n+        fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\r\n         explicit_fee_rate_btc_kvb = Decimal(fee_rate_btc_kvb) / 1000\r\n \r\n         # Passing conf_target 0, estimate_mode \"\" as placeholder arguments should allow fee_rate to apply.\r\n@@ -405,7 +405,7 @@ class WalletTest(BitcoinTestFramework):\r\n             address = self.nodes[1].getnewaddress()\r\n             amount = 3\r\n             fee_rate_sat_vb = 2\r\n-            fee_rate_btc_kvb = fee_rate_sat_vb / 100000.0\r\n+            fee_rate_btc_kvb = fee_rate_sat_vb * 1e3 / 1e8\r\n```\r\n",
      "created_at": "2020-11-10T15:30:50Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520653277",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520653277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 235,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520656622",
      "pull_request_review_id": 527327519,
      "id": 520656622,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY1NjYyMg==",
      "diff_hunk": "@@ -105,50 +103,43 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         self.sync_mempools((rbf_node, peer_node))\n         assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-        assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-        assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n+        for key in [\"totalFee\", \"feeRate\"]:\n+            assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n-        # For each fee mode, bumping to just above minrelay should fail to increase the total fee enough.\n-        for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:\n-            assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, options)\n+        # Bumping to just above minrelay should fail to increase the total fee enough.\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",",
      "path": "test/functional/wallet_bumpfee.py",
      "position": 53,
      "original_position": 53,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520227883,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think that's from `wallet/wallet.h`, though the different fee constants and config options are a bit confusing to me.\r\n```cpp\r\n//! minimum recommended increment for BIP 125 replacement txs\r\nstatic const CAmount WALLET_INCREMENTAL_RELAY_FEE = 5000;\r\n```\r\nand `wallet/feebumper.cpp`\r\n```cpp\r\n    if (new_total_fee < minTotalFee) {\r\n        errors.push_back(strprintf(Untranslated(\"Insufficient total fee %s, must be at least %s (oldFee %s + incrementalFee %s)\"),\r\n            FormatMoney(new_total_fee), FormatMoney(minTotalFee), FormatMoney(nOldFeeRate.GetFee(maxTxSize)), FormatMoney(incrementalRelayFee.GetFee(maxTxSize))));\r\n```\r\n",
      "created_at": "2020-11-10T15:35:00Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520656622",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520656622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": 113,
      "original_start_line": 113,
      "start_side": "LEFT",
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520659527",
      "pull_request_review_id": 527331349,
      "id": 520659527,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY1OTUyNw==",
      "diff_hunk": "@@ -105,50 +103,43 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         self.sync_mempools((rbf_node, peer_node))\n         assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-        assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-        assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n+        for key in [\"totalFee\", \"feeRate\"]:\n+            assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n-        # For each fee mode, bumping to just above minrelay should fail to increase the total fee enough.\n-        for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:\n-            assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, options)\n+        # Bumping to just above minrelay should fail to increase the total fee enough.\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n+            rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n-        self.log.info(\"Test explicit fee rate raises RPC error if estimate_mode is passed without a conf_target\")\n-        for unit, fee_rate in {\"SAT/B\": 100, \"BTC/KB\": NORMAL}.items():\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode {} requires a fee rate to be specified in conf_target\".format(unit),\n-                                    rbf_node.bumpfee, rbfid, {\"fee_rate\": fee_rate, \"estimate_mode\": unit})\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n+        assert_raises_rpc_error(-4, \"Specified or calculated fee 0.141 is too high (cannot be higher than -maxtxfee 0.10\",",
      "path": "test/functional/wallet_bumpfee.py",
      "position": 63,
      "original_position": 63,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520228906,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could be a good follow-up.",
      "created_at": "2020-11-10T15:38:47Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520659527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520659527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520662771",
      "pull_request_review_id": 527335551,
      "id": 520662771,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY2Mjc3MQ==",
      "diff_hunk": "@@ -19,8 +19,8 @@ enum class FeeEstimateMode {\n     UNSET,        //!< Use default settings based on other criteria\n     ECONOMICAL,   //!< Force estimateSmartFee to use non-conservative estimates\n     CONSERVATIVE, //!< Force estimateSmartFee to use conservative estimates\n-    BTC_KB,       //!< Use explicit BTC/kB fee given in coin control\n-    SAT_B,        //!< Use explicit sat/B fee given in coin control\n+    BTC_KVB,      //!< Use BTC/kvB fee rate unit\n+    SAT_VB,       //!< Use sat/vB fee rate unit",
      "path": "src/policy/feerate.h",
      "position": 7,
      "original_position": 7,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "ced7d54e6da522c964510ea0c379ef84c7ac689c",
      "in_reply_to_id": 520232666,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's still the default unit elsewhere (until the remaining RPCs move to sat/vB) and also needed for the `feeRate` BTC/kvB error messages. For now, this PR remains in the scope of the 6 RPCs described in the PR description and the \"wallet: introduce fee_rate (sat/vB) param/option\" commit message.",
      "created_at": "2020-11-10T15:42:53Z",
      "updated_at": "2020-11-12T10:51:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520662771",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520662771"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": 22,
      "original_start_line": 22,
      "start_side": "RIGHT",
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520664675",
      "pull_request_review_id": 527338078,
      "id": 520664675,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY2NDY3NQ==",
      "diff_hunk": "@@ -2303,7 +2303,7 @@ static RPCHelpMan settxfee()\n                 \"\\nSet the transaction fee per kB for this wallet. Overrides the global -paytxfee command line parameter.\\n\"\n                 \"Can be deactivated by passing 0 as the fee. In that case automatic fee selection will be used by default.\\n\",\n                 {\n-                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee in \" + CURRENCY_UNIT + \"/kB\"},\n+                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee in \" + CURRENCY_UNIT + \"/kvB\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 175,
      "original_position": 5,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "cfc14701c6fef7dd3340bfeb5675a821ae615284",
      "in_reply_to_id": 520234818,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep, scope creep on an already-wide PR. Could be a next step.",
      "created_at": "2020-11-10T15:45:13Z",
      "updated_at": "2020-11-14T22:27:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520664675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520664675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2325,
      "original_line": 2325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520730092",
      "pull_request_review_id": 527425347,
      "id": 520730092,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDczMDA5Mg==",
      "diff_hunk": "@@ -217,12 +215,8 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n         }\n \n-        CAmount fee_rate = AmountFromValue(estimate_param);\n-        if (cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-            fee_rate /= WALLET_BTC_KB_TO_SAT_B;\n-        }\n-\n-        cc.m_feerate = CFeeRate(fee_rate);\n+        CAmount feerate{AmountFromValue(estimate_param)};\n+        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "0f7df6b2e87ab5177409dd108fff7c519283b205",
      "in_reply_to_id": 519986635,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It would be nice to have a comment explaining this because it is not immediately clear why this works and future work on this code may not see this explanation.",
      "created_at": "2020-11-10T17:12:45Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520730092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520730092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520815368",
      "pull_request_review_id": 527531991,
      "id": 520815368,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxNTM2OA==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 519996056,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Excellent, I like this very thorough comment.",
      "created_at": "2020-11-10T19:19:46Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520815368",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520815368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520823459",
      "pull_request_review_id": 527542202,
      "id": 520823459,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgyMzQ1OQ==",
      "diff_hunk": "@@ -4073,26 +4085,31 @@ static RPCHelpMan send()\n                 UniValueType(), // ARR or OBJ, checked later\n                 UniValue::VNUM,\n                 UniValue::VSTR,\n-                UniValue::VOBJ\n+                UniValue::VNUM,\n+                UniValue::VOBJ,\n                 }, true\n             );\n \n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};\n-            if (options.exists(\"feeRate\") || options.exists(\"fee_rate\") || options.exists(\"estimate_mode\") || options.exists(\"conf_target\")) {\n-                if (!request.params[1].isNull() || !request.params[2].isNull()) {\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode or the options dictionary to control fee rate\");\n+            UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\n+                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 243,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520014120,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ooooh, so this was checking that not both the options and arguments were being passed. I guess I hadn't fully grokked that. I guess that would have been fine then, if any of the three was set on one, it would be incorrect for the any of the others to be set in the other parameter set. It actually is a bit more lenient locally then, but since e.g. passing both estimate_mode and fee_rate would throw in other places this is not a problem.",
      "created_at": "2020-11-10T19:33:54Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520823459",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520823459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 4098,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4099,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520825149",
      "pull_request_review_id": 527544214,
      "id": 520825149,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgyNTE0OQ==",
      "diff_hunk": "@@ -105,50 +103,43 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         self.sync_mempools((rbf_node, peer_node))\n         assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-        assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-        assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n+        for key in [\"totalFee\", \"feeRate\"]:\n+            assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n-        # For each fee mode, bumping to just above minrelay should fail to increase the total fee enough.\n-        for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:\n-            assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, options)\n+        # Bumping to just above minrelay should fail to increase the total fee enough.\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",",
      "path": "test/functional/wallet_bumpfee.py",
      "position": 53,
      "original_position": 53,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520227883,
      "user": {
        "login": "Xekyo",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Xekyo",
        "html_url": "https://github.com/Xekyo",
        "followers_url": "https://api.github.com/users/Xekyo/followers",
        "following_url": "https://api.github.com/users/Xekyo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Xekyo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Xekyo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
        "organizations_url": "https://api.github.com/users/Xekyo/orgs",
        "repos_url": "https://api.github.com/users/Xekyo/repos",
        "events_url": "https://api.github.com/users/Xekyo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Xekyo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for tracking that down!",
      "created_at": "2020-11-10T19:36:37Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520825149",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520825149"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": 113,
      "original_start_line": 113,
      "start_side": "LEFT",
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520858514",
      "pull_request_review_id": 527587463,
      "id": 520858514,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg1ODUxNA==",
      "diff_hunk": "@@ -217,12 +215,8 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n         }\n \n-        CAmount fee_rate = AmountFromValue(estimate_param);\n-        if (cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-            fee_rate /= WALLET_BTC_KB_TO_SAT_B;\n-        }\n-\n-        cc.m_feerate = CFeeRate(fee_rate);\n+        CAmount feerate{AmountFromValue(estimate_param)};\n+        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "0f7df6b2e87ab5177409dd108fff7c519283b205",
      "in_reply_to_id": 519986635,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done, added Doxygen documentation in a3eac6e603fddeda1dae20fba840d42f02710531",
      "created_at": "2020-11-10T20:37:28Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520858514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520858514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520860273",
      "pull_request_review_id": 527589646,
      "id": 520860273,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2MDI3Mw==",
      "diff_hunk": "@@ -198,30 +198,29 @@ static std::string LabelFromValue(const UniValue& value)\n  *\n  * @param[in]     pwallet        Wallet pointer\n  * @param[in,out] cc             Coin control which is to be updated\n- * @param[in]     estimate_mode  String value (e.g. \"ECONOMICAL\")\n- * @param[in]     estimate_param Parameter (blocks to confirm, explicit fee rate, etc)\n- * @throws a JSONRPCError if estimate_mode is unknown, or if estimate_param is missing when required\n+ * @param[in]     conf_target    UniValue integer, confirmation target in blocks\n+ * @param[in]     estimate_mode  UniValue string, fee estimation mode (\"unset\", \"economical\" or \"conservative\")\n+ * @param[in]     fee_rate       UniValue real, fee rate in sat/vB\n  */\n-static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& estimate_mode, const UniValue& estimate_param)\n+static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const UniValue& conf_target, const UniValue& estimate_mode, const UniValue& fee_rate)\n {\n-    if (!estimate_mode.isNull()) {\n-        if (!FeeModeFromString(estimate_mode.get_str(), cc.m_fee_mode)) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");\n+    if (!fee_rate.isNull()) {\n+        if (!conf_target.isNull() && conf_target.get_int() > 0) { // conf_target value of 0 allowed as positional placeholder\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and fee_rate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n         }\n-    }\n-\n-    if (cc.m_fee_mode == FeeEstimateMode::BTC_KB || cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-        if (estimate_param.isNull()) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n+        if (!estimate_mode.isNull() && !estimate_mode.get_str().empty()) { // estimate_mode value of \"\" allowed as positional placeholder\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and fee_rate\");\n         }\n-\n-        CAmount feerate{AmountFromValue(estimate_param)};\n-        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);\n-\n-        // default RBF to true for explicit fee rate modes\n+        cc.m_feerate = CFeeRate(AmountFromValue(fee_rate), COIN);\n+        // Default RBF to true for explicit fee_rate, if unset.\n         if (cc.m_signal_bip125_rbf == nullopt) cc.m_signal_bip125_rbf = true;\n-    } else if (!estimate_param.isNull()) {\n-        cc.m_confirm_target = ParseConfirmTarget(estimate_param, pwallet->chain().estimateMaxBlocks());\n+        return;\n+    }\n+    if (!estimate_mode.isNull() && !FeeModeFromString(estimate_mode.get_str(), cc.m_fee_mode)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid estimate_mode parameter\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520003420,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> If I were a user, I would like to get instructions about what the valid parameters are, if that's not too much work.\r\n\r\nDone in b827d2dbc229a",
      "created_at": "2020-11-10T20:40:40Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520860273",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520860273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520860669",
      "pull_request_review_id": 527590092,
      "id": 520860669,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2MDY2OQ==",
      "diff_hunk": "@@ -3386,16 +3396,16 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n                 {\n                     {\"conf_target\", RPCArg::Type::NUM, /* default */ \"wallet -txconfirmtarget\", \"Confirmation target (in blocks)\\n\"\n                              \"or fee rate (for \" + CURRENCY_UNIT + \"/kB and \" + CURRENCY_ATOM + \"/B estimate modes)\"},\n-                    {\"fee_rate\", RPCArg::Type::NUM, /* default */ \"fall back to 'conf_target'\", \"fee rate (NOT total fee) to pay, in \" + CURRENCY_UNIT + \"/kB.\\n\"\n-                             \"Specify a fee rate instead of relying on the built-in fee estimator.\\n\"\n-                             \"Must be at least 0.0001 \" + CURRENCY_UNIT + \"/kB higher than the current transaction fee rate.\\n\"},\n+                    {\"fee_rate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\",\n+                             \"\\nSpecify a fee rate in \" + CURRENCY_ATOM + \"/vB instead of relying on the built-in fee estimator.\\n\"\n+                             \"Must be at least 1 \" + CURRENCY_ATOM + \"/vB higher than the current transaction fee rate.\\n\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 177,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520009078,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 802193e73e22580ec77",
      "created_at": "2020-11-10T20:41:19Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520860669",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520860669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3401,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520861171",
      "pull_request_review_id": 527590694,
      "id": 520861171,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2MTE3MQ==",
      "diff_hunk": "@@ -4073,26 +4085,31 @@ static RPCHelpMan send()\n                 UniValueType(), // ARR or OBJ, checked later\n                 UniValue::VNUM,\n                 UniValue::VSTR,\n-                UniValue::VOBJ\n+                UniValue::VNUM,\n+                UniValue::VOBJ,\n                 }, true\n             );\n \n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};\n-            if (options.exists(\"feeRate\") || options.exists(\"fee_rate\") || options.exists(\"estimate_mode\") || options.exists(\"conf_target\")) {\n-                if (!request.params[1].isNull() || !request.params[2].isNull()) {\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode or the options dictionary to control fee rate\");\n+            UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\n+                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 243,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520014120,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks to your feedback, the error messages seem clearer now.",
      "created_at": "2020-11-10T20:42:15Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520861171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520861171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 4098,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 4099,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520861645",
      "pull_request_review_id": 527591298,
      "id": 520861645,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg2MTY0NQ==",
      "diff_hunk": "@@ -4073,26 +4085,31 @@ static RPCHelpMan send()\n                 UniValueType(), // ARR or OBJ, checked later\n                 UniValue::VNUM,\n                 UniValue::VSTR,\n-                UniValue::VOBJ\n+                UniValue::VNUM,\n+                UniValue::VOBJ,\n                 }, true\n             );\n \n             std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n             if (!wallet) return NullUniValue;\n             CWallet* const pwallet = wallet.get();\n \n-            UniValue options{request.params[3].isNull() ? UniValue::VOBJ : request.params[3]};\n-            if (options.exists(\"feeRate\") || options.exists(\"fee_rate\") || options.exists(\"estimate_mode\") || options.exists(\"conf_target\")) {\n-                if (!request.params[1].isNull() || !request.params[2].isNull()) {\n-                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode or the options dictionary to control fee rate\");\n+            UniValue options{request.params[4].isNull() ? UniValue::VOBJ : request.params[4]};\n+            if (options.exists(\"conf_target\") || options.exists(\"estimate_mode\") || options.exists(\"fee_rate\")) {\n+                if (!request.params[1].isNull() || !request.params[2].isNull() || !request.params[3].isNull()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use either conf_target and estimate_mode for fee estimation, or fee_rate to specify an explicit fee rate.\");\n                 }\n             } else {\n                 options.pushKV(\"conf_target\", request.params[1]);\n                 options.pushKV(\"estimate_mode\", request.params[2]);\n+                options.pushKV(\"fee_rate\", request.params[3]);\n             }\n             if (!options[\"conf_target\"].isNull() && (options[\"estimate_mode\"].isNull() || (options[\"estimate_mode\"].get_str() == \"unset\"))) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Specify estimate_mode\");\n             }\n+            if (options.exists(\"feeRate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Use fee_rate instead of feeRate\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 255,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520015619,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 136234cb",
      "created_at": "2020-11-10T20:43:10Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r520861645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520861645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521297287",
      "pull_request_review_id": 528093990,
      "id": 521297287,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NzI4Nw==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.\n+        assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+        # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+        result = node.fundrawtransaction(rawtx, {\"fee_rate\": 10000})\n+        assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n \n         self.log.info(\"Test fundrawtxn with invalid estimate_mode settings\")\n         for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n             assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1})\n         for mode in [\"foo\", Decimal(\"3.141592\")]:\n             assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1})\n \n         self.log.info(\"Test fundrawtxn with invalid conf_target settings\")\n-        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+        for mode in [\"unset\", \"economical\", \"conservative\"]:\n             self.log.debug(\"{}\".format(mode))\n             for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n                 assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": v}))\n-            if mode in [\"btc/kb\", \"sat/b\"]:\n-                assert_raises_rpc_error(-3, \"Amount out of range\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": -1}))\n-                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0}))\n-            else:\n-                for n in [-1, 0, 1009]:\n-                    assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n-                        lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\n-\n-        for unit, fee_rate in {\"sat/B\": 0.99999999, \"BTC/kB\": 0.00000999}.items():\n-            self.log.info(\"- raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\n-            assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": unit, \"conf_target\": fee_rate, \"add_inputs\": True}))\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": v})\n+            for n in [-1, 0, 1009]:\n+                assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": n})\n+\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+            node.fundrawtransaction, rawtx, {\"fee_rate\": 0, \"add_inputs\": True})\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            node.fundrawtransaction, rawtx, {\"feeRate\": 0, \"add_inputs\": True})\n+        for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.1)}:",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 112,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520032533,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's not clear to me if `fOverrideFeeRate` should be set to true if `fee_rate` is passed in fundrawtransaction or walletcreatefundedpsbt, as it is for `feeRate`, or if the `fOverrideFeeRate` flag could just be removed.\r\n\r\nAFAICT `fOverrideFeeRate` set to true currently only serves to bypass minimum feerate checks for `feeRate` in `GetMinimumFeeRate()` for fundrawtransaction and walletcreatefundedpsbt.",
      "created_at": "2020-11-11T11:36:21Z",
      "updated_at": "2020-11-12T10:49:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r521297287",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521297287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 759,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521582406",
      "pull_request_review_id": 528463811,
      "id": 521582406,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU4MjQwNg==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.\n+        assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+        # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+        result = node.fundrawtransaction(rawtx, {\"fee_rate\": 10000})\n+        assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n \n         self.log.info(\"Test fundrawtxn with invalid estimate_mode settings\")\n         for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n             assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1})\n         for mode in [\"foo\", Decimal(\"3.141592\")]:\n             assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1})\n \n         self.log.info(\"Test fundrawtxn with invalid conf_target settings\")\n-        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+        for mode in [\"unset\", \"economical\", \"conservative\"]:\n             self.log.debug(\"{}\".format(mode))\n             for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n                 assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": v}))\n-            if mode in [\"btc/kb\", \"sat/b\"]:\n-                assert_raises_rpc_error(-3, \"Amount out of range\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": -1}))\n-                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0}))\n-            else:\n-                for n in [-1, 0, 1009]:\n-                    assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n-                        lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\n-\n-        for unit, fee_rate in {\"sat/B\": 0.99999999, \"BTC/kB\": 0.00000999}.items():\n-            self.log.info(\"- raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\n-            assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": unit, \"conf_target\": fee_rate, \"add_inputs\": True}))\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": v})\n+            for n in [-1, 0, 1009]:\n+                assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": n})\n+\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+            node.fundrawtransaction, rawtx, {\"fee_rate\": 0, \"add_inputs\": True})\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            node.fundrawtransaction, rawtx, {\"feeRate\": 0, \"add_inputs\": True})\n+        for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.1)}:",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 112,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520032533,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Found this [mini-discussion](https://github.com/bitcoin/bitcoin/pull/10706/#discussion_r126560525) in #10706 in mid-2017 between @ryanofsky and @morcos about the use of `fOverrideFeeRate` for `feeRate` in fundrawtransaction (and now also walletcreatefundedpsbt).",
      "created_at": "2020-11-11T19:16:59Z",
      "updated_at": "2020-11-13T03:52:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r521582406",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/521582406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 759,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522001626",
      "pull_request_review_id": 528951474,
      "id": 522001626,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwMTYyNg==",
      "diff_hunk": "@@ -708,74 +707,108 @@ def test_all_watched_funds(self):\n         wwatch.unloadwallet()\n \n     def test_option_feerate(self):\n-        self.log.info(\"Test fundrawtxn feeRate option\")\n-\n+        self.log.info(\"Test fundrawtxn with explicit fee rates (fee_rate sat/vB and feeRate BTC/kvB)\")\n+        node = self.nodes[3]\n         # Make sure there is exactly one input so coin selection can't skew the result.\n         assert_equal(len(self.nodes[3].listunspent(1)), 1)\n-\n         inputs = []\n-        outputs = {self.nodes[3].getnewaddress() : 1}\n-        rawtx = self.nodes[3].createrawtransaction(inputs, outputs)\n-        result = self.nodes[3].fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n-        result2 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n-        result3 = self.nodes[3].fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n-        assert_raises_rpc_error(-4, \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\", self.nodes[3].fundrawtransaction, rawtx, {\"feeRate\": 1})\n+        outputs = {node.getnewaddress() : 1}\n+        rawtx = node.createrawtransaction(inputs, outputs)\n+\n+        result = node.fundrawtransaction(rawtx)  # uses self.min_relay_tx_fee (set by settxfee)\n+        result1 = node.fundrawtransaction(rawtx, {\"fee_rate\": 200000 * self.min_relay_tx_fee})\n+        result2 = node.fundrawtransaction(rawtx, {\"feeRate\": 2 * self.min_relay_tx_fee})\n+        result3 = node.fundrawtransaction(rawtx, {\"fee_rate\": 1000000 * self.min_relay_tx_fee})\n+        result4 = node.fundrawtransaction(rawtx, {\"feeRate\": 10 * self.min_relay_tx_fee})\n         result_fee_rate = result['fee'] * 1000 / count_bytes(result['hex'])\n+        assert_fee_amount(result1['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result2['fee'], count_bytes(result2['hex']), 2 * result_fee_rate)\n         assert_fee_amount(result3['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n+        assert_fee_amount(result4['fee'], count_bytes(result3['hex']), 10 * result_fee_rate)\n \n-    def test_feerate_with_conf_target_and_estimate_mode(self):\n-        self.log.info(\"Test fundrawtxn passing an explicit fee rate using conf_target and estimate_mode\")\n-        node = self.nodes[3]\n-        # Make sure there is exactly one input so coin selection can't skew the result.\n-        assert_equal(len(node.listunspent(1)), 1)\n-        inputs = []\n-        outputs = {node.getnewaddress() : 1}\n-        rawtx = node.createrawtransaction(inputs, outputs)\n-\n-        for unit, fee_rate in {\"btc/kb\": 0.1, \"sat/b\": 10000}.items():\n-            self.log.info(\"Test fundrawtxn with conf_target {} estimate_mode {} produces expected fee\".format(fee_rate, unit))\n-            # With no arguments passed, expect fee of 141 sats/b.\n-            assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n-            # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n-            result = node.fundrawtransaction(rawtx, {\"conf_target\": fee_rate, \"estimate_mode\": unit})\n-            assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n+        msg = \"Fee exceeds maximum configured by user (e.g. -maxtxfee, maxfeerate)\"\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"fee_rate\": 100000})\n+        assert_raises_rpc_error(-4, msg, node.fundrawtransaction, rawtx, {\"feeRate\": 1})\n \n-        for field, fee_rate in {\"conf_target\": 0.1, \"estimate_mode\": \"sat/b\"}.items():\n-            self.log.info(\"Test fundrawtxn raises RPC error if both feeRate and {} are passed\".format(field))\n-            assert_raises_rpc_error(\n-                -8, \"Cannot specify both {} and feeRate\".format(field),\n-                lambda: node.fundrawtransaction(rawtx, {\"feeRate\": 0.1, field: fee_rate}))\n+        # With no arguments passed, expect fee of 141 sats/b.\n+        assert_approx(node.fundrawtransaction(rawtx)[\"fee\"], vexp=0.00000141, vspan=0.00000001)\n+        # Expect fee to be 10,000x higher when explicit fee 10,000x greater is specified.\n+        result = node.fundrawtransaction(rawtx, {\"fee_rate\": 10000})\n+        assert_approx(result[\"fee\"], vexp=0.0141, vspan=0.0001)\n \n         self.log.info(\"Test fundrawtxn with invalid estimate_mode settings\")\n         for k, v in {\"number\": 42, \"object\": {\"foo\": \"bar\"}}.items():\n             assert_raises_rpc_error(-3, \"Expected type string for estimate_mode, got {}\".format(k),\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": v, \"conf_target\": 0.1})\n         for mode in [\"foo\", Decimal(\"3.141592\")]:\n             assert_raises_rpc_error(-8, \"Invalid estimate_mode parameter\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1}))\n+                node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": 0.1})\n \n         self.log.info(\"Test fundrawtxn with invalid conf_target settings\")\n-        for mode in [\"unset\", \"economical\", \"conservative\", \"btc/kb\", \"sat/b\"]:\n+        for mode in [\"unset\", \"economical\", \"conservative\"]:\n             self.log.debug(\"{}\".format(mode))\n             for k, v in {\"string\": \"\", \"object\": {\"foo\": \"bar\"}}.items():\n                 assert_raises_rpc_error(-3, \"Expected type number for conf_target, got {}\".format(k),\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": v}))\n-            if mode in [\"btc/kb\", \"sat/b\"]:\n-                assert_raises_rpc_error(-3, \"Amount out of range\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": -1}))\n-                assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                    lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": 0}))\n-            else:\n-                for n in [-1, 0, 1009]:\n-                    assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n-                        lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": mode, \"conf_target\": n}))\n-\n-        for unit, fee_rate in {\"sat/B\": 0.99999999, \"BTC/kB\": 0.00000999}.items():\n-            self.log.info(\"- raises RPC error 'fee rate too low' if conf_target {} and estimate_mode {} are passed\".format(fee_rate, unit))\n-            assert_raises_rpc_error(-4, \"Fee rate (0.00000999 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n-                lambda: self.nodes[1].fundrawtransaction(rawtx, {\"estimate_mode\": unit, \"conf_target\": fee_rate, \"add_inputs\": True}))\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": v})\n+            for n in [-1, 0, 1009]:\n+                assert_raises_rpc_error(-8, \"Invalid conf_target, must be between 1 and 1008\",\n+                    node.fundrawtransaction, rawtx, {\"estimate_mode\": mode, \"conf_target\": n})\n+\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-4, \"Fee rate (0.00000000 BTC/kB) is lower than the minimum fee rate setting (0.00001000 BTC/kB)\",\n+            node.fundrawtransaction, rawtx, {\"fee_rate\": 0, \"add_inputs\": True})\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            node.fundrawtransaction, rawtx, {\"feeRate\": 0, \"add_inputs\": True})\n+        for param, value in {(\"fee_rate\", 100000), (\"feeRate\", 1.1)}:",
      "path": "test/functional/rpc_fundrawtransaction.py",
      "position": null,
      "original_position": 112,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520032533,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Decided to maintain the `fOverrideFeeRate` behavior of disabling the min fee checks on `fee_rate` in RPCs fundrawtransaction and walletcreatefundedpsbt only (there is a \"fee rate greater than zero\" check instead), as has been the case for `feeRate` in these two RPCs since 2017, per the above comments. Done in 05e82d86b09d914ebce05dbc92a7299cb026847b.",
      "created_at": "2020-11-12T10:31:37Z",
      "updated_at": "2020-11-12T11:09:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r522001626",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522001626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": 759,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522371491",
      "pull_request_review_id": 529430465,
      "id": 522371491,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM3MTQ5MQ==",
      "diff_hunk": "@@ -217,12 +215,8 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n         }\n \n-        CAmount fee_rate = AmountFromValue(estimate_param);\n-        if (cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-            fee_rate /= WALLET_BTC_KB_TO_SAT_B;\n-        }\n-\n-        cc.m_feerate = CFeeRate(fee_rate);\n+        CAmount feerate{AmountFromValue(estimate_param)};\n+        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "0f7df6b2e87ab5177409dd108fff7c519283b205",
      "in_reply_to_id": 519986635,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This feels like a hack, unless I misunderstand the original purpose of this constructor. Maybe it's better to add a separate constructor with a boolean to distinguish `SAT_VB` from `BTC/kvB`.",
      "created_at": "2020-11-12T19:36:17Z",
      "updated_at": "2020-11-12T20:32:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r522371491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522371491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522385705",
      "pull_request_review_id": 529430465,
      "id": 522385705,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM4NTcwNQ==",
      "diff_hunk": "@@ -105,50 +103,43 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         self.sync_mempools((rbf_node, peer_node))\n         assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-        assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-        assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n+        for key in [\"totalFee\", \"feeRate\"]:\n+            assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n-        # For each fee mode, bumping to just above minrelay should fail to increase the total fee enough.\n-        for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:\n-            assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, options)\n+        # Bumping to just above minrelay should fail to increase the total fee enough.\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n+            rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n-        self.log.info(\"Test explicit fee rate raises RPC error if estimate_mode is passed without a conf_target\")\n-        for unit, fee_rate in {\"SAT/B\": 100, \"BTC/KB\": NORMAL}.items():\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode {} requires a fee rate to be specified in conf_target\".format(unit),\n-                                    rbf_node.bumpfee, rbfid, {\"fee_rate\": fee_rate, \"estimate_mode\": unit})\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n+        assert_raises_rpc_error(-4, \"Specified or calculated fee 0.141 is too high (cannot be higher than -maxtxfee 0.10\",",
      "path": "test/functional/wallet_bumpfee.py",
      "position": 63,
      "original_position": 63,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520228906,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I proposed that once: #16539",
      "created_at": "2020-11-12T20:00:37Z",
      "updated_at": "2020-11-12T20:32:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r522385705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522385705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522420052",
      "pull_request_review_id": 529489224,
      "id": 522420052,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQyMDA1Mg==",
      "diff_hunk": "@@ -105,50 +103,43 @@ def test_invalid_parameters(self, rbf_node, peer_node, dest_address):\n         self.sync_mempools((rbf_node, peer_node))\n         assert rbfid in rbf_node.getrawmempool() and rbfid in peer_node.getrawmempool()\n \n-        assert_raises_rpc_error(-3, \"Unexpected key totalFee\", rbf_node.bumpfee, rbfid, {\"totalFee\": NORMAL})\n-        assert_raises_rpc_error(-4, \"is too high (cannot be higher than\", rbf_node.bumpfee, rbfid, {\"fee_rate\": TOO_HIGH})\n+        for key in [\"totalFee\", \"feeRate\"]:\n+            assert_raises_rpc_error(-3, \"Unexpected key {}\".format(key), rbf_node.bumpfee, rbfid, {key: NORMAL})\n \n-        # For each fee mode, bumping to just above minrelay should fail to increase the total fee enough.\n-        for options in [{\"fee_rate\": INSUFFICIENT}, {\"conf_target\": INSUFFICIENT, \"estimate_mode\": BTC_MODE}, {\"conf_target\": 1, \"estimate_mode\": SAT_MODE}]:\n-            assert_raises_rpc_error(-8, \"Insufficient total fee\", rbf_node.bumpfee, rbfid, options)\n+        # Bumping to just above minrelay should fail to increase the total fee enough.\n+        assert_raises_rpc_error(-8, \"Insufficient total fee 0.00000141, must be at least 0.00001704 (oldFee 0.00000999 + incrementalFee 0.00000705)\",\n+            rbf_node.bumpfee, rbfid, {\"fee_rate\": INSUFFICIENT})\n \n-        self.log.info(\"Test explicit fee rate raises RPC error if estimate_mode is passed without a conf_target\")\n-        for unit, fee_rate in {\"SAT/B\": 100, \"BTC/KB\": NORMAL}.items():\n-            assert_raises_rpc_error(-8, \"Selected estimate_mode {} requires a fee rate to be specified in conf_target\".format(unit),\n-                                    rbf_node.bumpfee, rbfid, {\"fee_rate\": fee_rate, \"estimate_mode\": unit})\n+        self.log.info(\"Test invalid fee rate settings\")\n+        assert_raises_rpc_error(-8, \"Invalid fee_rate 0.00000000 BTC/kB (must be greater than 0)\",\n+            rbf_node.bumpfee, rbfid, {\"fee_rate\": 0})\n+        assert_raises_rpc_error(-4, \"Specified or calculated fee 0.141 is too high (cannot be higher than -maxtxfee 0.10\",",
      "path": "test/functional/wallet_bumpfee.py",
      "position": 63,
      "original_position": 63,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520228906,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I proposed that once: #16539\r\n\r\nTIL, thanks. Interesting discussion in that PR.",
      "created_at": "2020-11-12T20:54:32Z",
      "updated_at": "2020-11-12T20:54:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r522420052",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522420052"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 116,
      "original_line": 116,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522421518",
      "pull_request_review_id": 529491185,
      "id": 522421518,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQyMTUxOA==",
      "diff_hunk": "@@ -217,12 +215,8 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n         }\n \n-        CAmount fee_rate = AmountFromValue(estimate_param);\n-        if (cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-            fee_rate /= WALLET_BTC_KB_TO_SAT_B;\n-        }\n-\n-        cc.m_feerate = CFeeRate(fee_rate);\n+        CAmount feerate{AmountFromValue(estimate_param)};\n+        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "0f7df6b2e87ab5177409dd108fff7c519283b205",
      "in_reply_to_id": 519986635,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I asked myself why else the two-argument ctor might have been written and didn't come up with an answer...I'm not against reviewing a refactoring of it.",
      "created_at": "2020-11-12T20:57:23Z",
      "updated_at": "2020-11-12T20:57:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r522421518",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/522421518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523251311",
      "pull_request_review_id": 530438853,
      "id": 523251311,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1MTMxMQ==",
      "diff_hunk": "@@ -217,12 +215,8 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n         }\n \n-        CAmount fee_rate = AmountFromValue(estimate_param);\n-        if (cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-            fee_rate /= WALLET_BTC_KB_TO_SAT_B;\n-        }\n-\n-        cc.m_feerate = CFeeRate(fee_rate);\n+        CAmount feerate{AmountFromValue(estimate_param)};\n+        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "0f7df6b2e87ab5177409dd108fff7c519283b205",
      "in_reply_to_id": 519986635,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looking at settxfee in `wallet/rpcwallet.cpp`, it uses this ctor in a similar manner.\r\n```cpp\r\n    CAmount nAmount = AmountFromValue(request.params[0]);\r\n    CFeeRate tx_fee_rate(nAmount, 1000);\r\n```",
      "created_at": "2020-11-13T21:52:07Z",
      "updated_at": "2020-11-13T21:53:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r523251311",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523251311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523470651",
      "pull_request_review_id": 530608772,
      "id": 523470651,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQ3MDY1MQ==",
      "diff_hunk": "@@ -2303,7 +2303,7 @@ static RPCHelpMan settxfee()\n                 \"\\nSet the transaction fee per kB for this wallet. Overrides the global -paytxfee command line parameter.\\n\"\n                 \"Can be deactivated by passing 0 as the fee. In that case automatic fee selection will be used by default.\\n\",\n                 {\n-                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee in \" + CURRENCY_UNIT + \"/kB\"},\n+                    {\"amount\", RPCArg::Type::AMOUNT, RPCArg::Optional::NO, \"The transaction fee in \" + CURRENCY_UNIT + \"/kvB\"},",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 175,
      "original_position": 5,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "cfc14701c6fef7dd3340bfeb5675a821ae615284",
      "in_reply_to_id": 520234818,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in #20391.",
      "created_at": "2020-11-14T22:26:57Z",
      "updated_at": "2020-11-14T22:26:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r523470651",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/523470651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2325,
      "original_line": 2325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525405363",
      "pull_request_review_id": 532686870,
      "id": 525405363,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNTM2Mw==",
      "diff_hunk": "@@ -3373,35 +3392,38 @@ RPCHelpMan signrawtransactionwithwallet()\n static RPCHelpMan bumpfee_helper(std::string method_name)\n {\n     bool want_psbt = method_name == \"psbtbumpfee\";\n+    const std::string incremental_fee{CFeeRate(DEFAULT_MIN_RELAY_TX_FEE).ToString(FeeEstimateMode::SAT_VB)};",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 275,
      "original_position": 275,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "DEFAULT_INCREMENTAL_RELAY_FEE, no?",
      "created_at": "2020-11-17T18:51:23Z",
      "updated_at": "2020-11-17T18:51:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r525405363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525405363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3395,
      "original_line": 3395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525406176",
      "pull_request_review_id": 532687823,
      "id": 525406176,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNjE3Ng==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");\n+            }\n             if (options.exists(\"conf_target\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate\");\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n             }\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n+            if (fee_rate <= CFeeRate(0)) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 226,
      "original_position": 126,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520005999,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is a regression. In 0.20 it is possible to fund a raw tx without fee",
      "created_at": "2020-11-17T18:52:40Z",
      "updated_at": "2020-11-17T18:52:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r525406176",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525406176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3153,
      "original_line": 3153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525421166",
      "pull_request_review_id": 532706279,
      "id": 525421166,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyMTE2Ng==",
      "diff_hunk": "@@ -3373,35 +3392,38 @@ RPCHelpMan signrawtransactionwithwallet()\n static RPCHelpMan bumpfee_helper(std::string method_name)\n {\n     bool want_psbt = method_name == \"psbtbumpfee\";\n+    const std::string incremental_fee{CFeeRate(DEFAULT_MIN_RELAY_TX_FEE).ToString(FeeEstimateMode::SAT_VB)};",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 275,
      "original_position": 275,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "in_reply_to_id": 525405363,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed, this looks like an oversight.",
      "created_at": "2020-11-17T19:13:55Z",
      "updated_at": "2020-11-17T19:13:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r525421166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525421166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3395,
      "original_line": 3395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525423785",
      "pull_request_review_id": 532710283,
      "id": 525423785,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQyMzc4NQ==",
      "diff_hunk": "@@ -3373,35 +3392,38 @@ RPCHelpMan signrawtransactionwithwallet()\n static RPCHelpMan bumpfee_helper(std::string method_name)\n {\n     bool want_psbt = method_name == \"psbtbumpfee\";\n+    const std::string incremental_fee{CFeeRate(DEFAULT_MIN_RELAY_TX_FEE).ToString(FeeEstimateMode::SAT_VB)};",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 275,
      "original_position": 275,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "in_reply_to_id": 525405363,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note, remove `#include <validation.h>` in rpcwallet.cpp as part of the change.",
      "created_at": "2020-11-17T19:18:22Z",
      "updated_at": "2020-11-17T19:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r525423785",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/525423785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3395,
      "original_line": 3395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527005186",
      "pull_request_review_id": 534601009,
      "id": 527005186,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAwNTE4Ng==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");\n+            }\n             if (options.exists(\"conf_target\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate\");\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n             }\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n+            if (fee_rate <= CFeeRate(0)) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 226,
      "original_position": 126,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520005999,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It is possible to call fundrawtransaction (or walletcreatefundedpsbt) without passing a feeRate or a fee_rate, as they are optional args.\r\n\r\nBehavior before a0d495747320c79b27a83c216dcc526ac8df8f24: a negative feeRate raised \"Amount out of range\", and passing a feeRate of zero was possible in these two calls, but not in bumpfee or send{toaddress, many}.\r\n\r\nCurrent behavior is the same except that the > 0 feeRate check was extended to fundraw and WCFP.\r\n\r\nI will remove the zero check on feeRate/fee_rate for those two calls.",
      "created_at": "2020-11-19T16:03:58Z",
      "updated_at": "2020-11-19T16:03:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r527005186",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527005186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3153,
      "original_line": 3153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527011022",
      "pull_request_review_id": 534608827,
      "id": 527011022,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzAxMTAyMg==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");\n+            }\n             if (options.exists(\"conf_target\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate\");\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n             }\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n+            if (fee_rate <= CFeeRate(0)) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 226,
      "original_position": 126,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520005999,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Discussing offline with @harding and @Xekyo, zero-fee valid txns used to be a thing and might make sense in some future situations (package relay, LN anchor commitments) even if they are non-standard.",
      "created_at": "2020-11-19T16:11:35Z",
      "updated_at": "2020-11-19T16:11:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r527011022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527011022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3153,
      "original_line": 3153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527049437",
      "pull_request_review_id": 534660336,
      "id": 527049437,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA0OTQzNw==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");\n+            }\n             if (options.exists(\"conf_target\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate\");\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n             }\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n+            if (fee_rate <= CFeeRate(0)) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 226,
      "original_position": 126,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520005999,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"zero-fee\" txs could also pay fees externally (out-of-band), not even in the same package",
      "created_at": "2020-11-19T17:02:39Z",
      "updated_at": "2020-11-19T17:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r527049437",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527049437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3153,
      "original_line": 3153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527104028",
      "pull_request_review_id": 534729484,
      "id": 527104028,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEwNDAyOA==",
      "diff_hunk": "@@ -3373,35 +3392,38 @@ RPCHelpMan signrawtransactionwithwallet()\n static RPCHelpMan bumpfee_helper(std::string method_name)\n {\n     bool want_psbt = method_name == \"psbtbumpfee\";\n+    const std::string incremental_fee{CFeeRate(DEFAULT_MIN_RELAY_TX_FEE).ToString(FeeEstimateMode::SAT_VB)};",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 275,
      "original_position": 275,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "in_reply_to_id": 525405363,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in #20426, thanks for the catch @MarcoFalke ",
      "created_at": "2020-11-19T18:23:44Z",
      "updated_at": "2020-11-19T18:23:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r527104028",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527104028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3395,
      "original_line": 3395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527104596",
      "pull_request_review_id": 534730220,
      "id": 527104596,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzEwNDU5Ng==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");\n+            }\n             if (options.exists(\"conf_target\")) {\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate\");\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both conf_target and feeRate. Please provide either a confirmation target in blocks for automatic fee estimation, or an explicit fee rate.\");\n             }\n             if (options.exists(\"estimate_mode\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both estimate_mode and feeRate\");\n             }\n-            coinControl.m_feerate = CFeeRate(AmountFromValue(options[\"feeRate\"]));\n+            CFeeRate fee_rate(AmountFromValue(options[\"feeRate\"]));\n+            if (fee_rate <= CFeeRate(0)) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 226,
      "original_position": 126,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520005999,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in #20426 ",
      "created_at": "2020-11-19T18:24:41Z",
      "updated_at": "2020-11-19T18:24:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r527104596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/527104596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3153,
      "original_line": 3153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/529908294",
      "pull_request_review_id": 537998928,
      "id": 529908294,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkwODI5NA==",
      "diff_hunk": "@@ -3120,15 +3122,21 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n             lockUnspents = (options.exists(\"lock_unspents\") ? options[\"lock_unspents\"] : options[\"lockUnspents\"]).get_bool();\n         }\n \n-        if (options.exists(\"feeRate\"))\n-        {\n+        if (options.exists(\"feeRate\")) {\n+            if (options.exists(\"fee_rate\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 215,
      "original_position": 115,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "53b35be8f87fd894614a5e3609b1d8895a96c93c",
      "in_reply_to_id": 520005235,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Yes, reckon we should deprecate `feeRate` as soon as feasible after this.\r\n\r\nDone in #20483 ",
      "created_at": "2020-11-24T21:56:43Z",
      "updated_at": "2020-11-24T21:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r529908294",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/529908294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3144,
      "original_line": 3144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532095062",
      "pull_request_review_id": 540411261,
      "id": 532095062,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA5NTA2Mg==",
      "diff_hunk": "@@ -217,12 +215,8 @@ static void SetFeeEstimateMode(const CWallet* pwallet, CCoinControl& cc, const U\n             throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Selected estimate_mode %s requires a fee rate to be specified in conf_target\", estimate_mode.get_str()));\n         }\n \n-        CAmount fee_rate = AmountFromValue(estimate_param);\n-        if (cc.m_fee_mode == FeeEstimateMode::SAT_B) {\n-            fee_rate /= WALLET_BTC_KB_TO_SAT_B;\n-        }\n-\n-        cc.m_feerate = CFeeRate(fee_rate);\n+        CAmount feerate{AmountFromValue(estimate_param)};\n+        cc.m_feerate = cc.m_fee_mode == FeeEstimateMode::SAT_B ? CFeeRate(feerate, COIN) : CFeeRate(feerate);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "05e82d86b09d914ebce05dbc92a7299cb026847b",
      "original_commit_id": "0f7df6b2e87ab5177409dd108fff7c519283b205",
      "in_reply_to_id": 519986635,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> This feels like a hack, unless I misunderstand the original purpose of this constructor. Maybe it's better to add a separate constructor with a boolean to distinguish `SAT_VB` from `BTC/kvB`.\r\n\r\n@Sjors done, proposed a separate constructor in https://github.com/bitcoin/bitcoin/commit/9c479bfc293fec9063acb9667ddb3cb60b46469d",
      "created_at": "2020-11-28T19:05:51Z",
      "updated_at": "2020-11-28T19:05:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20305#discussion_r532095062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/532095062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 219,
      "side": "RIGHT"
    }
  ]
}