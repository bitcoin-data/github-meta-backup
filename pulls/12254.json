{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254",
    "id": 164736329,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY0NzM2MzI5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/12254",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/12254.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/12254.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/254c85b68794ada713dbdae415db72adf5fcbaf3",
    "number": 12254,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "BIP 158: Compact Block Filters for Light Clients",
    "user": {
      "login": "jimpo",
      "id": 881253,
      "node_id": "MDQ6VXNlcjg4MTI1Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimpo",
      "html_url": "https://github.com/jimpo",
      "followers_url": "https://api.github.com/users/jimpo/followers",
      "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
      "organizations_url": "https://api.github.com/users/jimpo/orgs",
      "repos_url": "https://api.github.com/users/jimpo/repos",
      "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jimpo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This implements the compact block filter construction in [BIP 158](https://github.com/bitcoin/bips/blob/master/bip-0158.mediawiki). The code is not used anywhere in the Bitcoin Core code base yet. The next step towards [BIP 157](https://github.com/bitcoin/bips/blob/master/bip-0157.mediawiki) support would be to create an indexing module similar to `TxIndex` that constructs the basic and extended filters for each validated block.\r\n\r\n### Filter Sizes\r\n\r\n[Here](https://gateway.ipfs.io/ipfs/QmRqaAAQZ5ZX5eqxP7J2R1MzFrc2WDdKSWJEKtQzyawqog) is a CSV of filter sizes for blocks in the main chain.\r\n\r\nAs you can see below, the ratio of filter size to block size drops after the first ~150,000 blocks:\r\n\r\n![filter_sizes](https://user-images.githubusercontent.com/881253/42900589-299772d4-8a7e-11e8-886d-0d4f3f4fbe44.png)\r\n\r\nThe reason for the relatively large filter sizes is that Golomb-coded sets only achieve good compression with a sufficient number of elements. Empirically, the average element size with 100 elements is 14% larger than with 10,000 elements.\r\n\r\nThe ratio of filter size to block size is computed without witness data for basic filters. Here is a summary table of filter size ratios *for blocks after height 150,000*:\r\n\r\n| Stat | Filter Type |\r\n|-------|--------------|\r\n| Weighted Size Ratio Mean | 0.0198 |\r\n| Size Ratio Mean | 0.0224 |\r\n| Size Ratio Std Deviation | 0.0202 |\r\n| Mean Element Size (bits) | 21.145 |\r\n| Approx Theoretical Min Element Size (bits) | 21.025 |",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2018-01-24T01:42:05Z",
    "updated_at": "2021-09-08T12:44:57Z",
    "closed_at": "2018-08-26T14:58:09Z",
    "mergeable_state": "unknown",
    "merged_at": "2018-08-26T14:58:09Z",
    "merge_commit_sha": "254c85b68794ada713dbdae415db72adf5fcbaf3",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jimpo:bip-158",
      "ref": "bip-158",
      "sha": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 18502174,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODUwMjE3NA==",
        "name": "bitcoin",
        "full_name": "jimpo/bitcoin",
        "owner": {
          "login": "jimpo",
          "id": 881253,
          "node_id": "MDQ6VXNlcjg4MTI1Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jimpo",
          "html_url": "https://github.com/jimpo",
          "followers_url": "https://api.github.com/users/jimpo/followers",
          "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
          "organizations_url": "https://api.github.com/users/jimpo/orgs",
          "repos_url": "https://api.github.com/users/jimpo/repos",
          "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jimpo/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jimpo/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jimpo/bitcoin",
        "archive_url": "https://api.github.com/repos/jimpo/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jimpo/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jimpo/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jimpo/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jimpo/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jimpo/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jimpo/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jimpo/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jimpo/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jimpo/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jimpo/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jimpo/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jimpo/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jimpo/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jimpo/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jimpo/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jimpo/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jimpo/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jimpo/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jimpo/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jimpo/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jimpo/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jimpo/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jimpo/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jimpo/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jimpo/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jimpo/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jimpo/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jimpo/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jimpo/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jimpo/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jimpo/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jimpo/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jimpo/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jimpo/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jimpo/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jimpo/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jimpo/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jimpo/bitcoin/hooks",
        "svn_url": "https://github.com/jimpo/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 126773,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2020-05-04T07:11:12Z",
        "created_at": "2014-04-06T23:53:29Z",
        "updated_at": "2019-08-03T04:25:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "021dce935af25adc17ae04a721d5f74a2ea1ca76",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T00:30:39Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 852,
    "deletions": 0,
    "changed_files": 11,
    "commits": 14,
    "review_comments": 86,
    "comments": 24
  },
  "events": [
    {
      "event": "labeled",
      "id": 1438610997,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE0Mzg2MTA5OTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1438610997",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T01:42:50Z",
      "label": {
        "name": "Consensus",
        "color": "009800"
      }
    },
    {
      "event": "commented",
      "id": 359994997,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTk5NDk5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/359994997",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T01:57:41Z",
      "updated_at": "2018-01-24T01:57:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Big Concept ACK, excited about this",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-359994997",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "commented",
      "id": 360154896,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE1NDg5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360154896",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T14:36:42Z",
      "updated_at": "2018-01-24T14:36:42Z",
      "author_association": "MEMBER",
      "body": "Should this be labeled consensus? This is a P2P change, right?\r\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-360154896",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "commented",
      "id": 360204783,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDIwNDc4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360204783",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T17:09:36Z",
      "updated_at": "2018-01-24T17:09:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj This is a data structure to be used in a P2P change. I first thought that it shouldn't be tagged \"Consensus\", but there's an argument to be made for it. It doesn't affect blockchain consensus, but it is kind of a softer P2P consensus change, where network clients (though not other full nodes) may disconnect/ban you if you serve incorrectly computed block filters. I'll let you make the call on the tag.",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-360204783",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1439967520,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTQzOTk2NzUyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1439967520",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T17:09:36Z"
    },
    {
      "event": "subscribed",
      "id": 1439967521,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE0Mzk5Njc1MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1439967521",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T17:09:36Z"
    },
    {
      "event": "commented",
      "id": 360205706,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDIwNTcwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360205706",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T17:12:29Z",
      "updated_at": "2018-01-24T17:12:29Z",
      "author_association": "MEMBER",
      "body": "Any fork that can be resolved by a P2P adaptor that speaks both protocols is not a consensus change.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-360205706",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "labeled",
      "id": 1439981051,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE0Mzk5ODEwNTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1439981051",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T17:16:01Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "unlabeled",
      "id": 1439981178,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTQzOTk4MTE3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1439981178",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T17:16:05Z",
      "label": {
        "name": "Consensus",
        "color": "009800"
      }
    },
    {
      "event": "commented",
      "id": 360207830,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDIwNzgzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360207830",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-24T17:19:23Z",
      "updated_at": "2018-01-24T17:19:23Z",
      "author_association": "MEMBER",
      "body": "> This is a data structure to be used in a P2P change.\r\n\r\nThanks for the explanation. With \"consensus\" we mean the blockchain consensus rules code. Banning\\disconnecting is a P2P level issue. So changing the label to P2P.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-360207830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "commented",
      "id": 360623262,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDYyMzI2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/360623262",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-25T22:33:27Z",
      "updated_at": "2018-01-25T22:33:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Great work @jimpo!\r\nBig Concept ACK,... will help to get this done.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-360623262",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1442644382,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTQ0MjY0NDM4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1442644382",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-25T22:33:27Z"
    },
    {
      "event": "subscribed",
      "id": 1442644383,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE0NDI2NDQzODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1442644383",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-25T22:33:27Z"
    },
    {
      "event": "reviewed",
      "id": 95354532,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3OTUzNTQ1MzI=",
      "url": null,
      "actor": null,
      "commit_id": "884ebec137484daac81c208b805815ff9ee3b35c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-95354532",
      "submitted_at": "2018-02-09T09:13:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "commented",
      "id": 364385727,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDM4NTcyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/364385727",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-09T09:46:28Z",
      "updated_at": "2018-02-09T09:46:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Reviewed and tested a bit... nice, clean PR!\r\nI would wish we had more test vectors... ",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-364385727",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "commented",
      "id": 364461376,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDQ2MTM3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/364461376",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-09T15:14:18Z",
      "updated_at": "2018-02-09T15:14:58Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Would it useful to add some (hidden) RPC commands so other developers can test it?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-364461376",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "commented",
      "id": 364513902,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDUxMzkwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/364513902",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-09T18:15:09Z",
      "updated_at": "2018-02-09T18:47:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jonasschnelli Thanks for reviewing. The test vectors were generated from a Go program I have that cross-validates against the [btcsuite implementation](https://github.com/Roasbeef/btcutil/pull/6). I can easily add any specific testnet blocks to the list of cases. The blocks were chosen to exercise certain edge cases (eg. empty filters, duplicate pushdatas, invalid output scripts), but the vectors aren't commented with which edges cases they exercise. I'll add the comments, because it seems worthwhile.\r\n\r\n@Sjors I'd definitely like to see RPC commands to fetch specific filters and filter headers, but I think it makes more sense to do that after adding the filter index, so that the RPC handlers just have to look up a precomputed filter/header. (So basically, in a subsequent PR).",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-364513902",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1467209067,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTQ2NzIwOTA2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1467209067",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-09T18:15:09Z"
    },
    {
      "event": "subscribed",
      "id": 1467209069,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE0NjcyMDkwNjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1467209069",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-09T18:15:09Z"
    },
    {
      "event": "mentioned",
      "id": 1467209070,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTQ2NzIwOTA3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1467209070",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-09T18:15:09Z"
    },
    {
      "event": "subscribed",
      "id": 1467209071,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE0NjcyMDkwNzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1467209071",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-02-09T18:15:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1515259881,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUxNTI1OTg4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1515259881",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-11T23:52:53Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1515286546,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUxNTI4NjU0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1515286546",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-12T00:55:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1516604301,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUxNjYwNDMwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1516604301",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-12T16:01:59Z"
    },
    {
      "event": "mentioned",
      "id": 1524006414,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTUyNDAwNjQxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1524006414",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T18:29:54Z"
    },
    {
      "event": "subscribed",
      "id": 1524006417,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1MjQwMDY0MTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1524006417",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T18:29:54Z"
    },
    {
      "event": "reviewed",
      "id": 104327123,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA0MzI3MTIz",
      "url": null,
      "actor": null,
      "commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "(edited 2018-08-17)\r\n\r\nutACK a23681bd6382f44a1246bcdd430e6f54f71c1f99. Left minor comments (feel free to ignore). Overall code looks very good.\r\n\r\n- [X] f154ded087a1a1f0c9748dd75ceb8531968b75f7 streams: Create VectorReader stream interface for vectors. (1/14)\r\n- [X] bdb34199345ad2c6f98da5d3f303d0993f6c722c streams: Unit test for VectorReader class. (2/14)\r\n- [X] faaa4b8432d194acb26ffcac07c379444da327ac streams: Implement BitStreamReader/Writer classes. (3/14)\r\n- [X] e15e553b746e64f0eeda420e4c10eccfc747d69f streams: Unit tests for BitStreamReader and BitStreamWriter. (4/14)\r\n- [X] a4b03be28699e62a92085e3b75f6a80fe0ad05ea blockfilter: Declare GCSFilter class for BIP 158 impl. (5/14)\r\n- [X] 515af0398b8f2aab77645871198c69fea91a07ff blockfilter: Implement GCSFilter constructors. (6/14)\r\n- [X] 6c1262fac124acc70599760798240027ddf58f8e blockfilter: Implement GCSFilter Match methods. (7/14)\r\n- [X] e98621135aef92106c5b0a7f7b06877a275c19fb blockfilter: Simple test for GCSFilter construction and Match. (8/14)\r\n- [X] f7a5bdb54ba597fe06bcb54e886c43436899ab48 blockfilter: Construction of basic block filters. (9/14)\r\n- [X] c14e4d5a950ed40d96a8956e4622e1d9670da72d blockfilter: Serialization methods on BlockFilter. (10/14)\r\n- [X] ab852f91602c268d894e8f882f7f8212fd39f9dd blockfilter: Additional helper methods to compute hash and header. (11/14)\r\n- [X] 9cf17eb1518f9f7c96ceac4f8f91f13e8dd5c9c2 blockfilter: Unit test against BIP 158 test vectors. (12/14)\r\n- [X] 2837e40ef94d9ae5133c0756ea9ec38d6591d730 blockfilter: Optimization on compilers with int128 support. (13/14)\r\n- [X] a23681bd6382f44a1246bcdd430e6f54f71c1f99 bench: Benchmark GCS filter creation and matching. (14/14)",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-104327123",
      "submitted_at": "2018-03-15T18:39:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "added_to_project",
      "id": 1524076000,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQxNTI0MDc2MDAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1524076000",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T19:05:08Z",
      "project_card": {
        "id": 8193221,
        "url": "https://api.github.com/projects/columns/cards/8193221",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 373489502,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQ4OTUwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/373489502",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T19:07:04Z",
      "updated_at": "2018-03-15T19:07:04Z",
      "author_association": "MEMBER",
      "body": "> @Sjors I'd definitely like to see RPC commands to fetch specific filters and filter headers, but I think it makes more sense to do that after adding the filter index, so that the RPC handlers just have to look up a precomputed filter/header. (So basically, in a subsequent PR).\r\n\r\nEven a proof-of-concept PR for that would be useful for review.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-373489502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1524079608,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTUyNDA3OTYwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1524079608",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T19:07:04Z"
    },
    {
      "event": "subscribed",
      "id": 1524079609,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1MjQwNzk2MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1524079609",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-15T19:07:04Z"
    },
    {
      "event": "commented",
      "id": 374444591,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDQ0NDU5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/374444591",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-20T01:48:16Z",
      "updated_at": "2018-03-20T17:31:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Sjors Here is a branch that exposes an RPC for testing/playing around: https://github.com/jimpo/bitcoin/tree/bip158-rpc. Is not intended to be merged for reasons stated [above](https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-364513902).",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-374444591",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1529906116,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTUyOTkwNjExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1529906116",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-20T01:48:16Z"
    },
    {
      "event": "subscribed",
      "id": 1529906117,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1Mjk5MDYxMTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1529906117",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-20T01:48:16Z"
    },
    {
      "event": "removed_from_project",
      "id": 1536379759,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MTUzNjM3OTc1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1536379759",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-22T19:07:21Z",
      "project_card": {
        "id": 8193221,
        "url": "https://api.github.com/projects/columns/cards/8193221",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 108683613,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA4NjgzNjEz",
      "url": null,
      "actor": null,
      "commit_id": "e6e320d600c70cf4d530b49f3e526cdb7e66be6d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-108683613",
      "submitted_at": "2018-04-02T20:23:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "commented",
      "id": 381383206,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTM4MzIwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381383206",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-15T06:19:50Z",
      "updated_at": "2018-04-15T06:19:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nNice work!",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-381383206",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "commented",
      "id": 381799042,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTc5OTA0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/381799042",
      "actor": {
        "login": "braydonf",
        "id": 544777,
        "node_id": "MDQ6VXNlcjU0NDc3Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/544777?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/braydonf",
        "html_url": "https://github.com/braydonf",
        "followers_url": "https://api.github.com/users/braydonf/followers",
        "following_url": "https://api.github.com/users/braydonf/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/braydonf/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/braydonf/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/braydonf/subscriptions",
        "organizations_url": "https://api.github.com/users/braydonf/orgs",
        "repos_url": "https://api.github.com/users/braydonf/repos",
        "events_url": "https://api.github.com/users/braydonf/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/braydonf/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T01:20:09Z",
      "updated_at": "2018-04-17T01:20:09Z",
      "author_association": "NONE",
      "body": "Has there been any work yet on using this to implement BIP 157? I've worked on indexing in the past, and could take a look at implementing it.",
      "user": {
        "login": "braydonf",
        "id": 544777,
        "node_id": "MDQ6VXNlcjU0NDc3Nw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/544777?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/braydonf",
        "html_url": "https://github.com/braydonf",
        "followers_url": "https://api.github.com/users/braydonf/followers",
        "following_url": "https://api.github.com/users/braydonf/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/braydonf/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/braydonf/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/braydonf/subscriptions",
        "organizations_url": "https://api.github.com/users/braydonf/orgs",
        "repos_url": "https://api.github.com/users/braydonf/repos",
        "events_url": "https://api.github.com/users/braydonf/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/braydonf/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-381799042",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "reviewed",
      "id": 112641204,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTEyNjQxMjA0",
      "url": null,
      "actor": null,
      "commit_id": "68777c59c91fdcdc2967a39b70d41f215c6846ca",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-112641204",
      "submitted_at": "2018-04-17T01:30:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1578324876,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTU3ODMyNDg3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1578324876",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-17T09:27:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1602960889,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYwMjk2MDg4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1602960889",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-01T06:53:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1602961890,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYwMjk2MTg5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1602961890",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-01T06:54:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1602991681,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYwMjk5MTY4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1602991681",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-01T07:31:53Z"
    },
    {
      "event": "added_to_project",
      "id": 1620476906,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQxNjIwNDc2OTA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1620476906",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-10T19:06:59Z",
      "project_card": {
        "id": 9669365,
        "url": "https://api.github.com/projects/columns/cards/9669365",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "reviewed",
      "id": 119634940,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE5NjM0OTQw",
      "url": null,
      "actor": null,
      "commit_id": "e70cefd128833f334ffdc5c0adb9f52a68210f1a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK.\r\n\r\nI'm very skeptical about the usefulness of the extended filter, and don't think it should be implemented in Bitcoin Core until there is a clear use case, but that's perhaps a discussion to be had about the BIP itself.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-119634940",
      "submitted_at": "2018-05-12T20:15:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1623965877,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyMzk2NTg3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1623965877",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T05:31:34Z"
    },
    {
      "event": "commented",
      "id": 388702764,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODcwMjc2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388702764",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T05:41:12Z",
      "updated_at": "2018-05-14T05:41:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "@sipa Thanks for the review. I agree on the extended filter -- I have dropped it from this PR. The code is in a new branch https://github.com/jimpo/bitcoin/tree/bip-158-extended in case it becomes useful in the future.",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-388702764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1623974381,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYyMzk3NDM4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1623974381",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T05:41:12Z"
    },
    {
      "event": "subscribed",
      "id": 1623974383,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MjM5NzQzODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1623974383",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T05:41:12Z"
    },
    {
      "event": "commented",
      "id": 388708714,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODcwODcxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388708714",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T06:19:50Z",
      "updated_at": "2018-05-14T06:19:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK f1b341a9262f24ff72b5961538f83ffbf532d8d9\r\nI think this is a good and sane start since this is not used yet. I wish there would be more test vectors.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-388708714",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "reviewed",
      "id": 119864048,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE5ODY0MDQ4",
      "url": null,
      "actor": null,
      "commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-119864048",
      "submitted_at": "2018-05-14T14:39:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "reviewed",
      "id": 119864543,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE5ODY0NTQz",
      "url": null,
      "actor": null,
      "commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-119864543",
      "submitted_at": "2018-05-14T14:40:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "reviewed",
      "id": 119943482,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTE5OTQzNDgy",
      "url": null,
      "actor": null,
      "commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-119943482",
      "submitted_at": "2018-05-14T17:57:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "mentioned",
      "id": 1625508275,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYyNTUwODI3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625508275",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T18:31:54Z"
    },
    {
      "event": "subscribed",
      "id": 1625508276,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MjU1MDgyNzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625508276",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T18:31:54Z"
    },
    {
      "event": "commented",
      "id": 388941774,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODk0MTc3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388941774",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T19:54:44Z",
      "updated_at": "2018-05-14T19:54:44Z",
      "author_association": "MEMBER",
      "body": "Why match on the txid of each transaction? I can't imagine a use-case where you'd ever want that where you couldn't simply match by one (or multiple) of the output scripts for little additional cost.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-388941774",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "commented",
      "id": 388945360,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODk0NTM2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388945360",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T20:07:04Z",
      "updated_at": "2018-05-14T20:07:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "@TheBlueMatt I can definitely think of use cases where one only has the txid. For example, if a lightning wallet wants to determine if a channel exists, it only gets the txid from the `channel_announcement`.\r\n\r\nI definitely think txids should be included in a filter, though I think there's a valid argument for putting them in their own filter given that a basic wallet does not need them.",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-388945360",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1625694537,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYyNTY5NDUzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625694537",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T20:07:04Z"
    },
    {
      "event": "subscribed",
      "id": 1625694540,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MjU2OTQ1NDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625694540",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T20:07:04Z"
    },
    {
      "event": "commented",
      "id": 388946819,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODk0NjgxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388946819",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T20:12:04Z",
      "updated_at": "2018-05-14T20:12:04Z",
      "author_association": "MEMBER",
      "body": "Hmm? channel_announcement messages don't contain a txid, they contain a block number/tx index/txo index, which is obviously way more effecient than storing all the filters (which are pretty huge, in total), scanning all of them, and then downloading the corresponding block to verify the transaction is there (of course an SPV Proof is much more effecient in either case).\n\nOn May 14, 2018 8:07:17 PM UTC, Jim Posen <notifications@github.com> wrote:\n>@TheBlueMatt I can definitely think of use cases where one only has the\n>txid. For example, if a lightning wallet wants to determine if a\n>channel exists, it only gets the txid from the `channel_announcement`.\n>\n>I definitely think txids should be included in a filter, though I think\n>there's a valid argument for putting them in their own filter given\n>that a basic wallet does not need them.\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-388945360\n",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-388946819",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1625704155,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYyNTcwNDE1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625704155",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T20:12:04Z"
    },
    {
      "event": "subscribed",
      "id": 1625704156,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2MjU3MDQxNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1625704156",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T20:12:04Z"
    },
    {
      "event": "commented",
      "id": 388981463,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODk4MTQ2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/388981463",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-14T22:20:27Z",
      "updated_at": "2018-05-14T22:20:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "You're right, I forgot that channel_announcement uses the short ID instead of the channel ID.\r\n\r\nGiven that it would be a BIP change, I think the conversation about whether to remove TXID from the basic filter and move it to another filter (or drop entirely) is better had on the mailing list.",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-388981463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "reviewed",
      "id": 120137580,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTIwMTM3NTgw",
      "url": null,
      "actor": null,
      "commit_id": "5a339f4118cc65a09d2321628e0db3102361c552",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK f1b341a9262f24ff72b5961538f83ffbf532d8d9\r\n\r\nNice!",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-120137580",
      "submitted_at": "2018-05-15T09:36:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1628089448,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTYyODA4OTQ0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1628089448",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-15T20:02:02Z"
    },
    {
      "event": "commented",
      "id": 389361376,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTM2MTM3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389361376",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T01:01:02Z",
      "updated_at": "2018-05-16T01:01:02Z",
      "author_association": "MEMBER",
      "body": "re-utACK 669599d",
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-389361376",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "commented",
      "id": 389408689,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTQwODY4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/389408689",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T06:25:45Z",
      "updated_at": "2018-05-16T06:25:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "Agree with @jimpo: dropping the txid filter check should be addresses via the BIP.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-389408689",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "mentioned",
      "id": 1628805864,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTYyODgwNTg2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1628805864",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T06:25:45Z"
    },
    {
      "event": "subscribed",
      "id": 1628805865,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE2Mjg4MDU4NjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1628805865",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-16T06:25:45Z"
    },
    {
      "event": "removed_from_project",
      "id": 1632734335,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MTYzMjczNDMzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1632734335",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-05-17T19:05:43Z",
      "project_card": {
        "id": 9669365,
        "url": "https://api.github.com/projects/columns/cards/9669365",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "labeled",
      "id": 1665121227,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE2NjUxMjEyMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1665121227",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-06-06T02:46:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1723850548,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTcyMzg1MDU0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1723850548",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-09T18:41:49Z"
    },
    {
      "event": "unlabeled",
      "id": 1724323810,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTcyNDMyMzgxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1724323810",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-09T23:27:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 137278522,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTM3Mjc4NTIy",
      "url": null,
      "actor": null,
      "commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-137278522",
      "submitted_at": "2018-07-15T23:07:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1736767069,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTczNjc2NzA2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1736767069",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-17T04:47:46Z"
    },
    {
      "event": "mentioned",
      "id": 1738082115,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTczODA4MjExNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1738082115",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-17T15:54:04Z"
    },
    {
      "event": "subscribed",
      "id": 1738082116,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3MzgwODIxMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1738082116",
      "actor": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-17T15:54:04Z"
    },
    {
      "event": "mentioned",
      "id": 1741853226,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTc0MTg1MzIyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1741853226",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-19T07:34:40Z"
    },
    {
      "event": "subscribed",
      "id": 1741853227,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE3NDE4NTMyMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1741853227",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-19T07:34:40Z"
    },
    {
      "event": "reviewed",
      "id": 139266569,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTM5MjY2NTY5",
      "url": null,
      "actor": null,
      "commit_id": "ad2d7c93a26767e948770f56b39b93c8116dbd21",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-139266569",
      "submitted_at": "2018-07-21T19:10:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "reviewed",
      "id": 139339449,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTM5MzM5NDQ5",
      "url": null,
      "actor": null,
      "commit_id": "fcbba910125dcb98814b0c58f4611bf60280a000",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK fcbba910125dcb98814b0c58f4611bf60280a000 after fixing https://github.com/bitcoin/bitcoin/pull/12254#discussion_r204234846\r\n\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-139339449",
      "submitted_at": "2018-07-23T05:59:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1746949425,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc0Njk0OTQyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1746949425",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-23T06:49:44Z"
    },
    {
      "event": "commented",
      "id": 408982346,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQwODk4MjM0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/408982346",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-30T19:30:04Z",
      "updated_at": "2018-07-30T19:30:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-408982346",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "reviewed",
      "id": 147283037,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ3MjgzMDM3",
      "url": null,
      "actor": null,
      "commit_id": "faaa4b8432d194acb26ffcac07c379444da327ac",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-147283037",
      "submitted_at": "2018-08-17T16:55:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "reviewed",
      "id": 147307772,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ3MzA3Nzcy",
      "url": null,
      "actor": null,
      "commit_id": "bdb34199345ad2c6f98da5d3f303d0993f6c722c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-147307772",
      "submitted_at": "2018-08-17T19:33:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1799346283,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTc5OTM0NjI4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1799346283",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-21T06:36:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1800486858,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwMDQ4Njg1OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1800486858",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-21T15:30:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1803087340,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwMzA4NzM0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1803087340",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-22T16:12:19Z"
    },
    {
      "event": "reviewed",
      "id": 149371746,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ5MzcxNzQ2",
      "url": null,
      "actor": null,
      "commit_id": "cc6c570a29118e0b661e66b135a3507081caebbb",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK cc6c570a29118e0b661e66b135a3507081caebbb, with commit squash and fix for travis `undefined reference to GetRandBytes` error. Only changes since previous review were various code review suggestions.\r\n\r\nQuestion for maintainers: While this PR was fun to review, I'm curious if there's a specific reason it wasn't merged previously? It has 4 other acks and doesn't touch existing functionality, and the new functionality is pretty well covered by test vectors.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-149371746",
      "submitted_at": "2018-08-24T16:26:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1808226230,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwODIyNjIzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1808226230",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T18:01:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1808712414,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwODcxMjQxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1808712414",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T23:19:31Z"
    },
    {
      "event": "mentioned",
      "id": 1808716820,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTgwODcxNjgyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1808716820",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T23:24:22Z"
    },
    {
      "event": "subscribed",
      "id": 1808716821,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE4MDg3MTY4MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1808716821",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T23:24:22Z"
    },
    {
      "event": "commented",
      "id": 415907116,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTkwNzExNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/415907116",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T23:24:23Z",
      "updated_at": "2018-08-24T23:24:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky Thank you for the review. I'm going to leave `GCSElementSet` typedef'ed to `std::set` in this PR and will open a separate PR after this is merged to change to `unordered_set`. Creating the custom hasher and putting it in an appropriate location requires shuffling some code around which is not relevant to this PR and I'd rather not add another reason to hold off on merging this.",
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-415907116",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1808717278,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwODcxNzI3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1808717278",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-24T23:24:56Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NDcxMzNkZWM5MmNkMjVlYzJiMzM1OGMwOWI4NjE0YmE2ZmI0MGQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/947133dec92cd25ec2b3358c09b8614ba6fb40d4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/947133dec92cd25ec2b3358c09b8614ba6fb40d4",
      "tree": {
        "sha": "4810f825a87cf27f24708a76a5fc0273808451ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4810f825a87cf27f24708a76a5fc0273808451ba"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/021dce935af25adc17ae04a721d5f74a2ea1ca76",
          "sha": "021dce935af25adc17ae04a721d5f74a2ea1ca76",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/021dce935af25adc17ae04a721d5f74a2ea1ca76"
        }
      ],
      "message": "streams: Create VectorReader stream interface for vectors.\n\nThis is a read analogue for the existing CVectorWriter.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-23T23:59:36Z"
      },
      "sha": "947133dec92cd25ec2b3358c09b8614ba6fb40d4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4N2YyZDllZTQzYTkyMjAwNzZiMTk1OWQxY2E2NTI0NWQ5NTkxYmU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87f2d9ee43a9220076b1959d1ca65245d9591be9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/87f2d9ee43a9220076b1959d1ca65245d9591be9",
      "tree": {
        "sha": "ac31329040276b63058ffcca5975afa0893c4883",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac31329040276b63058ffcca5975afa0893c4883"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/947133dec92cd25ec2b3358c09b8614ba6fb40d4",
          "sha": "947133dec92cd25ec2b3358c09b8614ba6fb40d4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/947133dec92cd25ec2b3358c09b8614ba6fb40d4"
        }
      ],
      "message": "streams: Unit test for VectorReader class.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-04-12T03:51:44Z"
      },
      "sha": "87f2d9ee43a9220076b1959d1ca65245d9591be9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTk0M2Y5OWJmMGEyYmJiMTJlMzBiYzQ4MDNjMDMzN2UzYzk1Yjkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
      "tree": {
        "sha": "2e69c03f96a7199e6e1773b4cab9c3941192c1fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e69c03f96a7199e6e1773b4cab9c3941192c1fb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87f2d9ee43a9220076b1959d1ca65245d9591be9",
          "sha": "87f2d9ee43a9220076b1959d1ca65245d9591be9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/87f2d9ee43a9220076b1959d1ca65245d9591be9"
        }
      ],
      "message": "streams: Implement BitStreamReader/Writer classes.\n\nGolomb-Rice coding, as specified in BIP 158, involves operations on\nindividual bits. These classes will be used to implement the\nencoding/decoding operations.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T00:12:51Z"
      },
      "sha": "fe943f99bf0a2bbb12e30bc4803c0337e3c95b93"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjYyMmRjNzIyNzliMDI3YzU5ZDY1NDFjZGRmZjUzODAwZmM2ODli",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b622dc72279b027c59d6541cddff53800fc689b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b622dc72279b027c59d6541cddff53800fc689b",
      "tree": {
        "sha": "71dcd4e1a76ff09ccb19c5461453ca4654bc1ca0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71dcd4e1a76ff09ccb19c5461453ca4654bc1ca0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
          "sha": "fe943f99bf0a2bbb12e30bc4803c0337e3c95b93",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fe943f99bf0a2bbb12e30bc4803c0337e3c95b93"
        }
      ],
      "message": "streams: Unit tests for BitStreamReader and BitStreamWriter.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-04-17T09:19:36Z"
      },
      "sha": "9b622dc72279b027c59d6541cddff53800fc689b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDU0ZjBhYzYzYzYwMjhmNTRjN2ViNTE2ODNiM2NjZGI0NzViMTli",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
      "tree": {
        "sha": "e856c564f6edb178f14bc6111fdbc87034ff8eea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e856c564f6edb178f14bc6111fdbc87034ff8eea"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b622dc72279b027c59d6541cddff53800fc689b",
          "sha": "9b622dc72279b027c59d6541cddff53800fc689b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b622dc72279b027c59d6541cddff53800fc689b"
        }
      ],
      "message": "blockfilter: Declare GCSFilter class for BIP 158 impl.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T00:10:08Z"
      },
      "sha": "c454f0ac63c6028f54c7eb51683b3ccdb475b19b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjcwYjU1MDA1NGVlZDM2ZjE5NGVhYTEzZjRhOWNiMzFlMzJkZjM4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf70b550054eed36f194eaa13f4a9cb31e32df38",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cf70b550054eed36f194eaa13f4a9cb31e32df38",
      "tree": {
        "sha": "90ce9019d8e1b45bca1bae137aaf3ed70b9f58b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/90ce9019d8e1b45bca1bae137aaf3ed70b9f58b7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
          "sha": "c454f0ac63c6028f54c7eb51683b3ccdb475b19b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c454f0ac63c6028f54c7eb51683b3ccdb475b19b"
        }
      ],
      "message": "blockfilter: Implement GCSFilter constructors.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T00:25:21Z"
      },
      "sha": "cf70b550054eed36f194eaa13f4a9cb31e32df38"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NThjNTM2ZTM1YTI1NTk0ODgxNjkzZTZmZjAxZDI3NWM4OGQ3YWYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/558c536e35a25594881693e6ff01d275c88d7af1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/558c536e35a25594881693e6ff01d275c88d7af1",
      "tree": {
        "sha": "37e7fd3ee010219eee6f2206efd4c58843b5ed0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37e7fd3ee010219eee6f2206efd4c58843b5ed0d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf70b550054eed36f194eaa13f4a9cb31e32df38",
          "sha": "cf70b550054eed36f194eaa13f4a9cb31e32df38",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cf70b550054eed36f194eaa13f4a9cb31e32df38"
        }
      ],
      "message": "blockfilter: Implement GCSFilter Match methods.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T00:33:26Z"
      },
      "sha": "558c536e35a25594881693e6ff01d275c88d7af1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2U3ODc0ZTA3OWY5ZGRmZThiMTc2ZjExZDQ2ZTZiNTljNzI4M2Q1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
      "tree": {
        "sha": "a27a83b09fac2b81380dc68d3b33fcc4a423eec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a27a83b09fac2b81380dc68d3b33fcc4a423eec8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/558c536e35a25594881693e6ff01d275c88d7af1",
          "sha": "558c536e35a25594881693e6ff01d275c88d7af1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/558c536e35a25594881693e6ff01d275c88d7af1"
        }
      ],
      "message": "blockfilter: Simple test for GCSFilter construction and Match.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:13:04Z"
      },
      "sha": "53e7874e079f9ddfe8b176f11d46e6b59c7283d5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTg1NWY2MDUyYWNhODA2ZmRiNTFiZTAxYjMwZGZlZWU4YjU1ZjQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1855f6052aca806fdb51be01b30dfeee8b55f40",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c1855f6052aca806fdb51be01b30dfeee8b55f40",
      "tree": {
        "sha": "7bfbd95109be83236777956b9465727eba5cd3da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bfbd95109be83236777956b9465727eba5cd3da"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
          "sha": "53e7874e079f9ddfe8b176f11d46e6b59c7283d5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/53e7874e079f9ddfe8b176f11d46e6b59c7283d5"
        }
      ],
      "message": "blockfilter: Construction of basic block filters.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:25:30Z"
      },
      "sha": "c1855f6052aca806fdb51be01b30dfeee8b55f40"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDA5Yzc5MjViNWFmNDEwNDgzNDk3MWNmZTA3MjI1MWUzYWMyYmRh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd09c7925b5af4104834971cfe072251e3ac2bda",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cd09c7925b5af4104834971cfe072251e3ac2bda",
      "tree": {
        "sha": "c9205cf5497ba8a07b64b15738613b0133a3231e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9205cf5497ba8a07b64b15738613b0133a3231e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1855f6052aca806fdb51be01b30dfeee8b55f40",
          "sha": "c1855f6052aca806fdb51be01b30dfeee8b55f40",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c1855f6052aca806fdb51be01b30dfeee8b55f40"
        }
      ],
      "message": "blockfilter: Serialization methods on BlockFilter.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:27:06Z"
      },
      "sha": "cd09c7925b5af4104834971cfe072251e3ac2bda"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGFmYjljYWRiYWVjYjA2NzZlNjQ3NWFiOGQzMmE1MmZhZWNiNDdh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
      "tree": {
        "sha": "df0d824aaa7687fb97c7153ea4826e2267eaab73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df0d824aaa7687fb97c7153ea4826e2267eaab73"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd09c7925b5af4104834971cfe072251e3ac2bda",
          "sha": "cd09c7925b5af4104834971cfe072251e3ac2bda",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cd09c7925b5af4104834971cfe072251e3ac2bda"
        }
      ],
      "message": "blockfilter: Additional helper methods to compute hash and header.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:32:46Z"
      },
      "sha": "a4afb9cadbaecb0676e6475ab8d32a52faecb47a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2I2NGQ2N2RhZjAzMzZkZmI2NGIxMzJmM2U0ZDZhNGMxOTY3ZGE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
      "tree": {
        "sha": "56ceac58100d97c9cf70f5c0ec7fd0d83e5bee46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56ceac58100d97c9cf70f5c0ec7fd0d83e5bee46"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
          "sha": "a4afb9cadbaecb0676e6475ab8d32a52faecb47a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a4afb9cadbaecb0676e6475ab8d32a52faecb47a"
        }
      ],
      "message": "blockfilter: Unit test against BIP 158 test vectors.\n\nFull test of block filter and header construction.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jimpo@coinbase.com",
        "date": "2018-01-24T01:38:23Z"
      },
      "sha": "97b64d67daf0336dfb64b132f3e4d6a4c1967da4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMzNiNzE3YTg1MzYzZTA2NzMxNmMxMzNhNTQyNTU5ZDJmNGFhZWNh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f33b717a85363e067316c133a542559d2f4aaeca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f33b717a85363e067316c133a542559d2f4aaeca",
      "tree": {
        "sha": "4434179067bab1ae68b8555678700b25fee4658f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4434179067bab1ae68b8555678700b25fee4658f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
          "sha": "97b64d67daf0336dfb64b132f3e4d6a4c1967da4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97b64d67daf0336dfb64b132f3e4d6a4c1967da4"
        }
      ],
      "message": "blockfilter: Optimization on compilers with int128 support.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-05-13T19:00:02Z"
      },
      "sha": "f33b717a85363e067316c133a542559d2f4aaeca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTRjODViNjg3OTRhZGE3MTNkYmRhZTQxNWRiNzJhZGY1ZmNiYWYz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/254c85b68794ada713dbdae415db72adf5fcbaf3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/254c85b68794ada713dbdae415db72adf5fcbaf3",
      "tree": {
        "sha": "7f733a1ca7c214ffe01e25e4021f7fdc4b2790cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f733a1ca7c214ffe01e25e4021f7fdc4b2790cc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f33b717a85363e067316c133a542559d2f4aaeca",
          "sha": "f33b717a85363e067316c133a542559d2f4aaeca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f33b717a85363e067316c133a542559d2f4aaeca"
        }
      ],
      "message": "bench: Benchmark GCS filter creation and matching.",
      "committer": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-08-25T17:02:37Z"
      },
      "author": {
        "name": "Jim Posen",
        "email": "jim.posen@gmail.com",
        "date": "2018-05-14T05:27:14Z"
      },
      "sha": "254c85b68794ada713dbdae415db72adf5fcbaf3"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1809064145,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTgwOTA2NDE0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809064145",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-25T17:02:49Z"
    },
    {
      "event": "commented",
      "id": 416042517,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjA0MjUxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/416042517",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-26T14:23:02Z",
      "updated_at": "2018-08-26T14:23:02Z",
      "author_association": "MEMBER",
      "body": "> Question for maintainers: While this PR was fun to review, I'm curious if there's a specific reason it wasn't merged previously? It has 4 other acks and doesn't touch existing functionality, and the new functionality is pretty well covered by test vectors.\r\n\r\ndidn't want to merge it last-minute for 0.17, but it can go in now IMO",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#issuecomment-416042517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12254"
    },
    {
      "event": "merged",
      "id": 1809381405,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTgwOTM4MTQwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809381405",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/254c85b68794ada713dbdae415db72adf5fcbaf3",
      "created_at": "2018-08-26T14:58:09Z"
    },
    {
      "event": "closed",
      "id": 1809381407,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTgwOTM4MTQwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809381407",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-26T14:58:10Z"
    },
    {
      "event": "referenced",
      "id": 1809381660,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4MDkzODE2NjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809381660",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c775dc4a94ef1a90afa03269cba80398901bea17",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c775dc4a94ef1a90afa03269cba80398901bea17",
      "created_at": "2018-08-26T14:58:48Z"
    },
    {
      "event": "reviewed",
      "id": 149543032,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ5NTQzMDMy",
      "url": null,
      "actor": null,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-149543032",
      "submitted_at": "2018-08-26T16:07:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "head_ref_deleted",
      "id": 1809418490,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQxODA5NDE4NDkw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1809418490",
      "actor": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-08-26T16:50:41Z"
    },
    {
      "event": "reviewed",
      "id": 149762413,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTQ5NzYyNDEz",
      "url": null,
      "actor": null,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#pullrequestreview-149762413",
      "submitted_at": "2018-08-27T15:30:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
    },
    {
      "event": "referenced",
      "id": 1820380793,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE4MjAzODA3OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1820380793",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3f9690844865dfbea20d21c31595807534420d92",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f9690844865dfbea20d21c31595807534420d92",
      "created_at": "2018-08-31T11:36:47Z"
    },
    {
      "event": "referenced",
      "id": 1949109101,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NDkxMDkxMDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1949109101",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "880bc728b43f1ea3df690512087590270cf35601",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/880bc728b43f1ea3df690512087590270cf35601",
      "created_at": "2018-11-06T14:38:10Z"
    },
    {
      "event": "referenced",
      "id": 2979753236,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5Nzk3NTMyMzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2979753236",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "68ce07f498fc81b42de939b204ea9958454c3d1c",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/68ce07f498fc81b42de939b204ea9958454c3d1c",
      "created_at": "2020-01-26T07:47:37Z"
    },
    {
      "event": "referenced",
      "id": 3237109159,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzcxMDkxNTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237109159",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ae226c5ef04aa808d7b1f102131cd70b937909f6",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/ae226c5ef04aa808d7b1f102131cd70b937909f6",
      "created_at": "2020-04-15T20:13:35Z"
    },
    {
      "event": "referenced",
      "id": 3237109167,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzcxMDkxNjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237109167",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2ee9526dfdf3f27915e1d05d7fd305ed4f8164fb",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/2ee9526dfdf3f27915e1d05d7fd305ed4f8164fb",
      "created_at": "2020-04-15T20:13:36Z"
    },
    {
      "event": "referenced",
      "id": 3237744895,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzc3NDQ4OTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237744895",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1335afa0ebe43ca5822cd63cd6975dfe68533424",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/1335afa0ebe43ca5822cd63cd6975dfe68533424",
      "created_at": "2020-04-16T00:38:22Z"
    },
    {
      "event": "referenced",
      "id": 3237761610,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzc3NjE2MTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237761610",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "919d9211b5f0c9dfbff0c9c919753796f8b00a4b",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/919d9211b5f0c9dfbff0c9c919753796f8b00a4b",
      "created_at": "2020-04-16T00:48:04Z"
    },
    {
      "event": "referenced",
      "id": 3237795411,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzc3OTU0MTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237795411",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8248a1a2833079a237dbf36124fad770a6e7dc58",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/8248a1a2833079a237dbf36124fad770a6e7dc58",
      "created_at": "2020-04-16T01:08:45Z"
    },
    {
      "event": "referenced",
      "id": 3237795413,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzc3OTU0MTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237795413",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b85986189d4067e575c17a5e327cdf1528ec27a1",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/b85986189d4067e575c17a5e327cdf1528ec27a1",
      "created_at": "2020-04-16T01:08:45Z"
    },
    {
      "event": "referenced",
      "id": 3237881723,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzc4ODE3MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237881723",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "296660e5623e2707c5c8f3646ce99767c2e55e49",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/296660e5623e2707c5c8f3646ce99767c2e55e49",
      "created_at": "2020-04-16T01:56:13Z"
    },
    {
      "event": "referenced",
      "id": 3237881727,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzc4ODE3Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3237881727",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6d26c14e28b5366a89867ff2e08e06b039cb7e74",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/6d26c14e28b5366a89867ff2e08e06b039cb7e74",
      "created_at": "2020-04-16T01:56:13Z"
    },
    {
      "event": "referenced",
      "id": 3238076936,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzgwNzY5MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3238076936",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "059a9c4675d23e73cb2155ca3ec77636d0e88c7f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/059a9c4675d23e73cb2155ca3ec77636d0e88c7f",
      "created_at": "2020-04-16T03:48:21Z"
    },
    {
      "event": "referenced",
      "id": 3238076945,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMzgwNzY5NDU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3238076945",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "374eb495689d62056ac9ba111e9da31d360088fa",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/374eb495689d62056ac9ba111e9da31d360088fa",
      "created_at": "2020-04-16T03:48:21Z"
    },
    {
      "event": "referenced",
      "id": 3440118248,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDAxMTgyNDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3440118248",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1aa37dd7d72eb722e1a534835dea371b8a821f51",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/1aa37dd7d72eb722e1a534835dea371b8a821f51",
      "created_at": "2020-06-12T22:30:47Z"
    },
    {
      "event": "referenced",
      "id": 3440118253,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDAxMTgyNTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3440118253",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cbb91e5d08fe282d89ce81785c97b9b49741cf9d",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/cbb91e5d08fe282d89ce81785c97b9b49741cf9d",
      "created_at": "2020-06-12T22:30:47Z"
    },
    {
      "event": "referenced",
      "id": 3441108034,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDExMDgwMzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3441108034",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "17929071d40b3d4d547958f10cd5f5c1a5124ec0",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/17929071d40b3d4d547958f10cd5f5c1a5124ec0",
      "created_at": "2020-06-13T20:12:35Z"
    },
    {
      "event": "referenced",
      "id": 3441108037,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NDExMDgwMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3441108037",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ea90d1b6c1e0367d8654b1e8769aca1104f658d6",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/ea90d1b6c1e0367d8654b1e8769aca1104f658d6",
      "created_at": "2020-06-13T20:12:36Z"
    },
    {
      "event": "referenced",
      "id": 3455070693,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NTUwNzA2OTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3455070693",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "348c2d56f0aa5e5cbd97e4eba5cb4b9ba5ca6f8e",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/348c2d56f0aa5e5cbd97e4eba5cb4b9ba5ca6f8e",
      "created_at": "2020-06-17T19:24:47Z"
    },
    {
      "event": "referenced",
      "id": 3455070703,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM0NTUwNzA3MDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3455070703",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6e873a5b911c84b67a027ceb2a8759184b3cc73f",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/6e873a5b911c84b67a027ceb2a8759184b3cc73f",
      "created_at": "2020-06-17T19:24:47Z"
    },
    {
      "event": "referenced",
      "id": 4958725565,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NTg3MjU1NjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4958725565",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6393db0c7fe1f48ba671d6d398744099c3400520",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/6393db0c7fe1f48ba671d6d398744099c3400520",
      "created_at": "2021-06-30T10:33:07Z"
    },
    {
      "event": "referenced",
      "id": 4966022352,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ5NjYwMjIzNTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4966022352",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "302aadff567e19549856213f25e08847a77e5155",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/302aadff567e19549856213f25e08847a77e5155",
      "created_at": "2021-07-01T13:31:35Z"
    },
    {
      "event": "locked",
      "id": 5272070483,
      "node_id": "LOE_lADOABII584RWSgJzwAAAAE6PWlT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5272070483",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T12:44:57Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/167173632",
      "pull_request_review_id": 95354532,
      "id": 167173632,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzE3MzYzMg==",
      "diff_hunk": "@@ -0,0 +1,319 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const std::set<Element>& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_N(0), m_F(0)\n+{\n+    if (m_P > 32) {\n+        throw std::invalid_argument(\"P must be <=32\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    m_N = ReadCompactSize(stream);\n+    m_F = m_N << m_P;\n+\n+    if (m_N >= (1ULL << 32)) {\n+        throw std::invalid_argument(\"N must be <2^32\");\n+    }\n+\n+    // Surface any errors decoding the filter on construction.",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "884ebec137484daac81c208b805815ff9ee3b35c",
      "in_reply_to_id": null,
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure, but I guess that comments belongs to L113?",
      "created_at": "2018-02-09T09:13:33Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r167173632",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/167173632"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/167313633",
      "pull_request_review_id": 95523188,
      "id": 167313633,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE2NzMxMzYzMw==",
      "diff_hunk": "@@ -0,0 +1,319 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const std::set<Element>& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_N(0), m_F(0)\n+{\n+    if (m_P > 32) {\n+        throw std::invalid_argument(\"P must be <=32\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    m_N = ReadCompactSize(stream);\n+    m_F = m_N << m_P;\n+\n+    if (m_N >= (1ULL << 32)) {\n+        throw std::invalid_argument(\"N must be <2^32\");\n+    }\n+\n+    // Surface any errors decoding the filter on construction.",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "884ebec137484daac81c208b805815ff9ee3b35c",
      "in_reply_to_id": 167173632,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, the idea is that the below lines fully decode the filter in the constructor so that any errors decoding get raised during construction rather than when it is first matched against. I'll elaborate on the comment.",
      "created_at": "2018-02-09T18:49:12Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r167313633",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/167313633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174886724",
      "pull_request_review_id": 104327123,
      "id": 174886724,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDg4NjcyNA==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class CVectorReader",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Create CVectorReader stream interface for vectors.\" (93f702b08e413c5c025b155bfb62b721d27939f5)\r\n\r\nThis is pretty similar to the VectorReader class @TheBlueMatt is adding here: https://github.com/TheBlueMatt/bitcoin/commit/bb608a995e8fd16d156145bf41023e7a77d44971 for https://github.com/bitcoin/bitcoin/compare/master...TheBlueMatt:2018-02-miningserver\r\n\r\nYour implementation is more general with support for deserialization in the constructor and more complete comments. But his has a `pos()` method and uses non-hungarian names which are recommended by the contrib guide. Anyway you may want to incorporate some of his changes.\r\n\r\n",
      "created_at": "2018-03-15T18:29:54Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r174886724",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174886724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174888569",
      "pull_request_review_id": 104327123,
      "id": 174888569,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NDg4ODU2OQ==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class CVectorReader\n+{\n+private:\n+    const int nType;\n+    const int nVersion;\n+    const std::vector<unsigned char>& vchData;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 11,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Create CVectorReader stream interface for vectors.\" (93f702b08e413c5c025b155bfb62b721d27939f5)\r\n\r\nIt would be nice if this just had `const unsigned char*` and `size_t` members instead of a requiring a reference to an actual vector. That way the class could be used to efficiently deserialize from any memory location, and be compatible with other containers like `std::string`.",
      "created_at": "2018-03-15T18:34:53Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r174888569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/174888569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175538303",
      "pull_request_review_id": 105083611,
      "id": 175538303,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzODMwMw==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class CVectorReader",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "in_reply_to_id": 174886724,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "OK, I can bring that commit over instead or modify this one to remove the hungarian notation.",
      "created_at": "2018-03-19T18:22:00Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r175538303",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175538303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175539924",
      "pull_request_review_id": 105085540,
      "id": 175539924,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTUzOTkyNA==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class CVectorReader\n+{\n+private:\n+    const int nType;\n+    const int nVersion;\n+    const std::vector<unsigned char>& vchData;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 11,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "in_reply_to_id": 174888569,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd rather not deal with raw pointers because it leaves space for unsafe accesses. If generality is a concern, I'd prefer a templated approach with random access iterators.",
      "created_at": "2018-03-19T18:27:18Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r175539924",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/175539924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178601571",
      "pull_request_review_id": 108683613,
      "id": 178601571,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYwMTU3MQ==",
      "diff_hunk": "@@ -509,12 +509,88 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+    uint8_t m_buffer;\n+    int m_offset;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 10,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e6e320d600c70cf4d530b49f3e526cdb7e66be6d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Implement BitStreamReader/Writer classes.\"\r\n\r\nComment for m_offset would be helpful. Maybe `//!< Number of high order bits in m_buffer already returned by previous Read() calls.`",
      "created_at": "2018-04-02T17:47:00Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178601571",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178601571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 518,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178604425",
      "pull_request_review_id": 108683613,
      "id": 178604425,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYwNDQyNQ==",
      "diff_hunk": "@@ -509,12 +509,88 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+    uint8_t m_buffer;\n+    int m_offset;\n \n+public:\n+    BitStreamReader(IStream& istream)\n+        : m_istream(istream), m_buffer(0), m_offset(8) {}",
      "path": "src/streams.h",
      "position": null,
      "original_position": 14,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e6e320d600c70cf4d530b49f3e526cdb7e66be6d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Implement BitStreamReader/Writer classes.\"\r\n\r\nWould be nice to initialize `m_buffer`, `m_offset` above, where they are declared (see \"Initialize all non-static class members where they are defined\" guideline from https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md). Similarly in BitStreamWriter below.",
      "created_at": "2018-04-02T17:57:11Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178604425",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178604425"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178605236",
      "pull_request_review_id": 108683613,
      "id": 178605236,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYwNTIzNg==",
      "diff_hunk": "@@ -509,12 +509,88 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+    uint8_t m_buffer;\n+    int m_offset;\n \n+public:\n+    BitStreamReader(IStream& istream)\n+        : m_istream(istream), m_buffer(0), m_offset(8) {}\n \n+    /** Read the specified number of bits from the stream. The data is returned\n+     * in the nbits least signficant bits of a 64-bit uint.\n+     */\n+    uint64_t Read(int nbits) {\n+        if (nbits < 0 || nbits > 64) {\n+            throw std::out_of_range(\"nbits must be between 0 and 64\");\n+        }\n+\n+        uint64_t data = 0;\n+        while (nbits > 0) {\n+            if (m_offset == 8) {\n+                m_istream >> m_buffer;\n+                m_offset = 0;\n+            }\n \n+            int bits = std::min(8 - m_offset, nbits);\n+            data <<= bits;\n+            data |= static_cast<uint8_t>(m_buffer << m_offset) >> (8 - bits);\n+            m_offset += bits;\n+            nbits -= bits;\n+        }\n+        return data;\n+    }\n+};\n \n+template <typename OStream>\n+class BitStreamWriter",
      "path": "src/streams.h",
      "position": 129,
      "original_position": 42,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e6e320d600c70cf4d530b49f3e526cdb7e66be6d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Implement BitStreamReader/Writer classes.\"\r\n\r\nWould be nice to add a simple unit test writing values to a stream with BitStreamWriter, and then making sure same values are returned from BitStreamReader.",
      "created_at": "2018-04-02T17:59:57Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178605236",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178605236"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 557,
      "original_line": 557,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178606747",
      "pull_request_review_id": 108683613,
      "id": 178606747,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYwNjc0Nw==",
      "diff_hunk": "@@ -509,12 +509,88 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+    uint8_t m_buffer;\n+    int m_offset;\n \n+public:\n+    BitStreamReader(IStream& istream)\n+        : m_istream(istream), m_buffer(0), m_offset(8) {}\n \n+    /** Read the specified number of bits from the stream. The data is returned\n+     * in the nbits least signficant bits of a 64-bit uint.\n+     */\n+    uint64_t Read(int nbits) {\n+        if (nbits < 0 || nbits > 64) {\n+            throw std::out_of_range(\"nbits must be between 0 and 64\");\n+        }\n+\n+        uint64_t data = 0;\n+        while (nbits > 0) {\n+            if (m_offset == 8) {\n+                m_istream >> m_buffer;\n+                m_offset = 0;\n+            }\n \n+            int bits = std::min(8 - m_offset, nbits);\n+            data <<= bits;\n+            data |= static_cast<uint8_t>(m_buffer << m_offset) >> (8 - bits);\n+            m_offset += bits;\n+            nbits -= bits;\n+        }\n+        return data;\n+    }\n+};\n \n+template <typename OStream>\n+class BitStreamWriter\n+{\n+private:\n+    OStream& m_ostream;\n+    uint8_t m_buffer;\n+    int m_offset;\n \n+public:\n+    BitStreamWriter(OStream& ostream)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 50,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e6e320d600c70cf4d530b49f3e526cdb7e66be6d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Implement BitStreamReader/Writer classes.\"\r\n\r\nWould be good to add destructor either asserting `m_offset == 0`, or calling Flush(). Discarding bits that have been written but not flushed seems less safe than you might want as default behavior.",
      "created_at": "2018-04-02T18:05:44Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178606747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178606747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 558,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178608110",
      "pull_request_review_id": 108683613,
      "id": 178608110,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYwODExMA==",
      "diff_hunk": "@@ -509,12 +509,88 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+    uint8_t m_buffer;\n+    int m_offset;\n \n+public:\n+    BitStreamReader(IStream& istream)\n+        : m_istream(istream), m_buffer(0), m_offset(8) {}\n \n+    /** Read the specified number of bits from the stream. The data is returned\n+     * in the nbits least signficant bits of a 64-bit uint.\n+     */\n+    uint64_t Read(int nbits) {\n+        if (nbits < 0 || nbits > 64) {\n+            throw std::out_of_range(\"nbits must be between 0 and 64\");\n+        }\n+\n+        uint64_t data = 0;\n+        while (nbits > 0) {\n+            if (m_offset == 8) {\n+                m_istream >> m_buffer;\n+                m_offset = 0;\n+            }\n \n+            int bits = std::min(8 - m_offset, nbits);\n+            data <<= bits;\n+            data |= static_cast<uint8_t>(m_buffer << m_offset) >> (8 - bits);\n+            m_offset += bits;\n+            nbits -= bits;\n+        }\n+        return data;\n+    }\n+};\n \n+template <typename OStream>\n+class BitStreamWriter\n+{\n+private:\n+    OStream& m_ostream;\n+    uint8_t m_buffer;\n+    int m_offset;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 47,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e6e320d600c70cf4d530b49f3e526cdb7e66be6d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Implement BitStreamReader/Writer classes.\"\r\n\r\nWould add  `= 0; //!< Number of high-order bits in m_buffer that have been written but not yet flushed to the stream.`",
      "created_at": "2018-04-02T18:10:47Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178608110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178608110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 555,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178627611",
      "pull_request_review_id": 108683613,
      "id": 178627611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYyNzYxMQ==",
      "diff_hunk": "@@ -0,0 +1,62 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKFILTER_H\n+#define BITCOIN_BLOCKFILTER_H\n+\n+#include <set>\n+#include <stdint.h>\n+#include <vector>\n+\n+#include <serialize.h>\n+#include <uint256.h>\n+\n+/**\n+ * This implements a Golomb-coded set as defined in BIP 158. It is a\n+ * compact, probabilistic data structure for testing set membership.\n+ */\n+class GCSFilter",
      "path": "src/blockfilter.h",
      "position": 21,
      "original_position": 19,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "15d529dfc2b65f2badaa520799187aff103af2b6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockfilter: Declare GCSFilter class for BIP 158 impl.\"\r\n\r\nIt seems cumbersome for this to be implemented as a class, since none of the class members can change after construction, and some of the stored state is redundant (`m_F` is derived from `m_N` and `m_P`), `m_N` is redundant with `elements.size()` and can be derived from `m_encoded`).\r\n\r\nIf this were a simple set of functions instead, like:\r\n\r\n```c++\r\n\r\nstruct FilterParams { k0; k1; P; };\r\n\r\nvector<char> BuildFilter(FilterParams, set<Elements>);\r\n\r\nbool FilterContains(FilterParams, vector<char>, Element);\r\n\r\nbool FilterContainsAny(FilterParams, vector<char>, set<Element>);\r\n```\r\n\r\nusage would be more obvious, and you could get rid of the current runtime throws and asserts checking for inconsistencies in the state.",
      "created_at": "2018-04-02T19:31:35Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178627611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178627611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178629277",
      "pull_request_review_id": 108683613,
      "id": 178629277,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYyOTI3Nw==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "1b1d231ed77869174c33fde97efc65b0a0044ae0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockfilter: Implement GCSFilter constructors.\"\r\n\r\nHere and other places, N seems like it should be 32 bits instead 64.",
      "created_at": "2018-04-02T19:39:04Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178629277",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178629277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178630615",
      "pull_request_review_id": 108683613,
      "id": 178630615,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYzMDYxNQ==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "1b1d231ed77869174c33fde97efc65b0a0044ae0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockfilter: Implement GCSFilter constructors.\"\r\n\r\nI wonder if the optimization below actually buys anything over a more direct:\r\n\r\n```c++\r\nfor (int i = 0; i < q; ++i) bitwriter.Write(1, 1);\r\n```",
      "created_at": "2018-04-02T19:45:15Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178630615",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178630615"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178637016",
      "pull_request_review_id": 108683613,
      "id": 178637016,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODYzNzAxNg==",
      "diff_hunk": "@@ -153,3 +153,64 @@ GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n \n     bitwriter.Flush();\n }\n+\n+bool GCSFilter::Match(const GCSFilter::Element& element) const\n+{\n+    uint64_t query = HashToRange(element);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        if (query == value) {\n+            return true;\n+        } else if (query < value) {\n+            break;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool GCSFilter::MatchAny(const std::set<Element>& elements) const",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "fb96e966c87f27fbfdf53ad7b8fd5a3c6c679a77",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockfilter: Implement GCSFilter Match methods.\"\r\n\r\nWould suggest implementing `Match` and `MatchAny` in terms of a common\r\n\r\n```c++\r\nMatch(const uint64_t* sorted_element_hashes, size_t size)\r\n```\r\n\r\nmethod to get rid of all the code duplication between the existing methods. No outside code would need to change, they could just call \r\n\r\n```c++\r\nMatch(&query, 1);\r\nMatch(queries.data(), queries.size());\r\n```\r\n\r\nrespectively.",
      "created_at": "2018-04-02T20:12:15Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178637016",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/178637016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180940245",
      "pull_request_review_id": 111451491,
      "id": 180940245,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDk0MDI0NQ==",
      "diff_hunk": "@@ -509,12 +509,88 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+    uint8_t m_buffer;\n+    int m_offset;\n \n+public:\n+    BitStreamReader(IStream& istream)\n+        : m_istream(istream), m_buffer(0), m_offset(8) {}",
      "path": "src/streams.h",
      "position": null,
      "original_position": 14,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e6e320d600c70cf4d530b49f3e526cdb7e66be6d",
      "in_reply_to_id": 178604425,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Didn't know about that guideline. Will do.",
      "created_at": "2018-04-12T01:04:44Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r180940245",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/180940245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181930525",
      "pull_request_review_id": 112641204,
      "id": 181930525,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTkzMDUyNQ==",
      "diff_hunk": "@@ -0,0 +1,323 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const std::set<Element>& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_N(0), m_F(0)\n+{\n+    if (m_P > 32) {\n+        throw std::invalid_argument(\"P must be <=32\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    m_N = ReadCompactSize(stream);\n+    m_F = m_N << m_P;\n+\n+    if (m_N >= (1ULL << 32)) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little\n+    // data, a std::ios_base::failure exception will be raised.\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        GolombRiceDecode(bitreader, m_P);\n+    }\n+    if (!stream.empty()) {\n+        throw std::ios_base::failure(\"encoded_filter contains excess data\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     const std::set<GCSFilter::Element>& elements)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    if (elements.size() >= (1ULL << 32)) {\n+        throw std::invalid_argument(\"N must be <2^32\");\n+    }\n+\n+    m_N = elements.size();\n+    m_F = m_N << m_P;\n+\n+    CVectorWriter stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    WriteCompactSize(stream, m_N);\n+\n+    if (elements.empty()) {\n+        return;\n+    }\n+\n+    BitStreamWriter<CVectorWriter> bitwriter(stream);\n+\n+    uint64_t last_value = 0;\n+    for (uint64_t value : BuildHashedSet(elements)) {\n+        uint64_t delta = value - last_value;\n+        GolombRiceEncode(bitwriter, m_P, delta);\n+        last_value = value;\n+    }\n+\n+    bitwriter.Flush();\n+}\n+\n+bool GCSFilter::Match(const GCSFilter::Element& element) const\n+{\n+    uint64_t query = HashToRange(element);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        if (query == value) {\n+            return true;\n+        } else if (query < value) {\n+            break;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool GCSFilter::MatchAny(const std::set<Element>& elements) const\n+{\n+    const std::vector<uint64_t>&& queries = BuildHashedSet(elements);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    auto query_it = queries.begin();\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        while (true) {\n+            if (query_it == queries.end()) {\n+                return false;\n+            } else if (*query_it == value) {\n+                return true;\n+            } else if (*query_it > value) {\n+                break;\n+            }\n+\n+            query_it++;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+static std::set<GCSFilter::Element> BasicFilterElements(const CBlock& block)\n+{\n+    std::set<GCSFilter::Element> elements;\n+    for (const CTransactionRef& tx : block.vtx) {\n+        // Include txid of each transaction.\n+        const uint256& txid = tx->GetHash();\n+        elements.emplace(txid.begin(), txid.end());\n+\n+        // Include previous outpoint of each input, except for coinbase.\n+        if (!tx->IsCoinBase()) {\n+            for (const CTxIn& txin : tx->vin) {\n+                std::vector<unsigned char> ser_outpoint;\n+                CVectorWriter(GCS_SER_TYPE, GCS_SER_VERSION, ser_outpoint, 0, txin.prevout);\n+                elements.insert(std::move(ser_outpoint));\n+            }\n+        }\n+\n+        // Include all data pushes in output scripts.",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 237,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "68777c59c91fdcdc2967a39b70d41f215c6846ca",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This does not seem up to date with the latest version of BIP158 (I'll review in full later).",
      "created_at": "2018-04-17T01:30:56Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r181930525",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181930525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 237,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181987725",
      "pull_request_review_id": 112706974,
      "id": 181987725,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk4NzcyNQ==",
      "diff_hunk": "@@ -153,3 +153,64 @@ GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n \n     bitwriter.Flush();\n }\n+\n+bool GCSFilter::Match(const GCSFilter::Element& element) const\n+{\n+    uint64_t query = HashToRange(element);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        if (query == value) {\n+            return true;\n+        } else if (query < value) {\n+            break;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool GCSFilter::MatchAny(const std::set<Element>& elements) const",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "fb96e966c87f27fbfdf53ad7b8fd5a3c6c679a77",
      "in_reply_to_id": 178637016,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good suggestion.",
      "created_at": "2018-04-17T08:16:24Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r181987725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181987725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181992611",
      "pull_request_review_id": 112712507,
      "id": 181992611,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk5MjYxMQ==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "1b1d231ed77869174c33fde97efc65b0a0044ae0",
      "in_reply_to_id": 178629277,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why do you say that? This function can encode 64-bit ints if it needs to. Also, it would have to immediately get cast to a uint64_t either way.",
      "created_at": "2018-04-17T08:32:52Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r181992611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/181992611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182009549",
      "pull_request_review_id": 112732372,
      "id": 182009549,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjAwOTU0OQ==",
      "diff_hunk": "@@ -509,12 +509,88 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+    uint8_t m_buffer;\n+    int m_offset;\n \n+public:\n+    BitStreamReader(IStream& istream)\n+        : m_istream(istream), m_buffer(0), m_offset(8) {}\n \n+    /** Read the specified number of bits from the stream. The data is returned\n+     * in the nbits least signficant bits of a 64-bit uint.\n+     */\n+    uint64_t Read(int nbits) {\n+        if (nbits < 0 || nbits > 64) {\n+            throw std::out_of_range(\"nbits must be between 0 and 64\");\n+        }\n+\n+        uint64_t data = 0;\n+        while (nbits > 0) {\n+            if (m_offset == 8) {\n+                m_istream >> m_buffer;\n+                m_offset = 0;\n+            }\n \n+            int bits = std::min(8 - m_offset, nbits);\n+            data <<= bits;\n+            data |= static_cast<uint8_t>(m_buffer << m_offset) >> (8 - bits);\n+            m_offset += bits;\n+            nbits -= bits;\n+        }\n+        return data;\n+    }\n+};\n \n+template <typename OStream>\n+class BitStreamWriter",
      "path": "src/streams.h",
      "position": 129,
      "original_position": 42,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e6e320d600c70cf4d530b49f3e526cdb7e66be6d",
      "in_reply_to_id": 178605236,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added in 5f67272f5a2d8567faf7b139c0239bc2788ed8b1.",
      "created_at": "2018-04-17T09:27:58Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r182009549",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182009549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 557,
      "original_line": 557,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182010116",
      "pull_request_review_id": 112733105,
      "id": 182010116,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjAxMDExNg==",
      "diff_hunk": "@@ -0,0 +1,62 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKFILTER_H\n+#define BITCOIN_BLOCKFILTER_H\n+\n+#include <set>\n+#include <stdint.h>\n+#include <vector>\n+\n+#include <serialize.h>\n+#include <uint256.h>\n+\n+/**\n+ * This implements a Golomb-coded set as defined in BIP 158. It is a\n+ * compact, probabilistic data structure for testing set membership.\n+ */\n+class GCSFilter",
      "path": "src/blockfilter.h",
      "position": 21,
      "original_position": 19,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "15d529dfc2b65f2badaa520799187aff103af2b6",
      "in_reply_to_id": 178627611,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I originally tried something like that, but I preferred to make it an actual class. I see the ability to store derivable data in private fields and check data consistency before using the data as features of this approach.",
      "created_at": "2018-04-17T09:29:55Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r182010116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182010116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182010184",
      "pull_request_review_id": 112733198,
      "id": 182010184,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjAxMDE4NA==",
      "diff_hunk": "@@ -0,0 +1,323 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const std::set<Element>& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_N(0), m_F(0)\n+{\n+    if (m_P > 32) {\n+        throw std::invalid_argument(\"P must be <=32\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    m_N = ReadCompactSize(stream);\n+    m_F = m_N << m_P;\n+\n+    if (m_N >= (1ULL << 32)) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little\n+    // data, a std::ios_base::failure exception will be raised.\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        GolombRiceDecode(bitreader, m_P);\n+    }\n+    if (!stream.empty()) {\n+        throw std::ios_base::failure(\"encoded_filter contains excess data\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     const std::set<GCSFilter::Element>& elements)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    if (elements.size() >= (1ULL << 32)) {\n+        throw std::invalid_argument(\"N must be <2^32\");\n+    }\n+\n+    m_N = elements.size();\n+    m_F = m_N << m_P;\n+\n+    CVectorWriter stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    WriteCompactSize(stream, m_N);\n+\n+    if (elements.empty()) {\n+        return;\n+    }\n+\n+    BitStreamWriter<CVectorWriter> bitwriter(stream);\n+\n+    uint64_t last_value = 0;\n+    for (uint64_t value : BuildHashedSet(elements)) {\n+        uint64_t delta = value - last_value;\n+        GolombRiceEncode(bitwriter, m_P, delta);\n+        last_value = value;\n+    }\n+\n+    bitwriter.Flush();\n+}\n+\n+bool GCSFilter::Match(const GCSFilter::Element& element) const\n+{\n+    uint64_t query = HashToRange(element);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        if (query == value) {\n+            return true;\n+        } else if (query < value) {\n+            break;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool GCSFilter::MatchAny(const std::set<Element>& elements) const\n+{\n+    const std::vector<uint64_t>&& queries = BuildHashedSet(elements);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    auto query_it = queries.begin();\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        while (true) {\n+            if (query_it == queries.end()) {\n+                return false;\n+            } else if (*query_it == value) {\n+                return true;\n+            } else if (*query_it > value) {\n+                break;\n+            }\n+\n+            query_it++;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+static std::set<GCSFilter::Element> BasicFilterElements(const CBlock& block)\n+{\n+    std::set<GCSFilter::Element> elements;\n+    for (const CTransactionRef& tx : block.vtx) {\n+        // Include txid of each transaction.\n+        const uint256& txid = tx->GetHash();\n+        elements.emplace(txid.begin(), txid.end());\n+\n+        // Include previous outpoint of each input, except for coinbase.\n+        if (!tx->IsCoinBase()) {\n+            for (const CTxIn& txin : tx->vin) {\n+                std::vector<unsigned char> ser_outpoint;\n+                CVectorWriter(GCS_SER_TYPE, GCS_SER_VERSION, ser_outpoint, 0, txin.prevout);\n+                elements.insert(std::move(ser_outpoint));\n+            }\n+        }\n+\n+        // Include all data pushes in output scripts.",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 237,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "68777c59c91fdcdc2967a39b70d41f215c6846ca",
      "in_reply_to_id": 181930525,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2018-04-17T09:30:10Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r182010184",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/182010184"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 237,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781309",
      "pull_request_review_id": 119634940,
      "id": 187781309,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MTMwOQ==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class CVectorReader",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "in_reply_to_id": 174886724,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree, it would be nice to align the two implementations.",
      "created_at": "2018-05-12T19:34:24Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187781309",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781338",
      "pull_request_review_id": 119634940,
      "id": 187781338,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MTMzOA==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class CVectorReader\n+{\n+private:\n+    const int nType;\n+    const int nVersion;\n+    const std::vector<unsigned char>& vchData;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 11,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "in_reply_to_id": 174888569,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "An alternative (which could be done later, not a blocker for this PR) is using the `Span` class that was introduced in #12886 and is being extended in #13062).",
      "created_at": "2018-05-12T19:36:10Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187781338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781729",
      "pull_request_review_id": 119634940,
      "id": 187781729,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MTcyOQ==",
      "diff_hunk": "@@ -509,12 +509,102 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>",
      "path": "src/streams.h",
      "position": 85,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f7426bde309b35cb773935f7323f7546bcbb8c5b",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Implement BitStreamReader/Writer classes.\", any reason to not make these operate with a 64-bit (or even larger) buffer? That would both simplify the code (no need to loop in the read/write operations) and possibly improve performance (due to fewer read/flush calls to the underlying buffer).",
      "created_at": "2018-05-12T19:54:16Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187781729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 513,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781753",
      "pull_request_review_id": 119634940,
      "id": 187781753,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MTc1Mw==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "1b1d231ed77869174c33fde97efc65b0a0044ae0",
      "in_reply_to_id": 178629277,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand this comment either.",
      "created_at": "2018-05-12T19:55:57Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187781753",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781753"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781789",
      "pull_request_review_id": 119634940,
      "id": 187781789,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MTc4OQ==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "c0815aa428d36d0ce0dc788e397e4e17066f708b",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps add a note here to use `unsigned __int128` on supported platforms; that should be significantly faster than doing 4 separate multiplications.",
      "created_at": "2018-05-12T19:57:45Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187781789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187781789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782008",
      "pull_request_review_id": 119634940,
      "id": 187782008,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MjAwOA==",
      "diff_hunk": "@@ -153,3 +153,47 @@ GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n \n     bitwriter.Flush();\n }\n+\n+bool GCSFilter::MatchInternal(const uint64_t* element_hashes, size_t size) const\n+{\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<CVectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    int hashes_index = 0;\n+    for (uint64_t i = 0; i < m_N; i++) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        while (true) {\n+            if (hashes_index == size) {\n+                return false;\n+            } else if (element_hashes[hashes_index] == value) {\n+                return true;\n+            } else if (element_hashes[hashes_index] > value) {\n+                break;\n+            }\n+\n+            hashes_index++;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool GCSFilter::Match(const GCSFilter::Element& element) const\n+{\n+    uint64_t query = HashToRange(element);\n+    return MatchInternal(&query, 1);\n+}\n+\n+bool GCSFilter::MatchAny(const std::set<Element>& elements) const\n+{\n+    const std::vector<uint64_t>&& queries = BuildHashedSet(elements);",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "a780779b3a8f8e7daf270b4f1355dbcaf31e56fd",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think the reference type is useful here; copy elision should apply, and otherwise at worst a move will occur.",
      "created_at": "2018-05-12T20:07:54Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187782008",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 197,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782029",
      "pull_request_review_id": 119634940,
      "id": 187782029,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzc4MjAyOQ==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const std::set<Element>& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_N(0), m_F(0)\n+{\n+    if (m_P > 32) {\n+        throw std::invalid_argument(\"P must be <=32\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    m_N = ReadCompactSize(stream);\n+    m_F = m_N << m_P;\n+\n+    if (m_N >= (1ULL << 32)) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 115,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "c0815aa428d36d0ce0dc788e397e4e17066f708b",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is this worth it? The filter will be decoded twice in practice due to this?",
      "created_at": "2018-05-12T20:08:57Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187782029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187782029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187809813",
      "pull_request_review_id": 119663169,
      "id": 187809813,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgwOTgxMw==",
      "diff_hunk": "@@ -509,12 +509,102 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>",
      "path": "src/streams.h",
      "position": 85,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f7426bde309b35cb773935f7323f7546bcbb8c5b",
      "in_reply_to_id": 187781729,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps could improve performance, but it'd be trickier to handle streams that are not aligned on 8-byte boundaries. Since the buffer size is an implementation detail, would you be OK leaving that optimization for a later PR?",
      "created_at": "2018-05-13T18:42:21Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187809813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187809813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 513,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187810229",
      "pull_request_review_id": 119663586,
      "id": 187810229,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMDIyOQ==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const std::set<Element>& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_N(0), m_F(0)\n+{\n+    if (m_P > 32) {\n+        throw std::invalid_argument(\"P must be <=32\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    m_N = ReadCompactSize(stream);\n+    m_F = m_N << m_P;\n+\n+    if (m_N >= (1ULL << 32)) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 115,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "c0815aa428d36d0ce0dc788e397e4e17066f708b",
      "in_reply_to_id": 187782029,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'll drop it if people prefer. I think having the constructor check its input makes for a better API. I'd also note that Core won't actually use these match methods unless it implements a light client mode -- they are just here for completeness and testing.",
      "created_at": "2018-05-13T18:59:32Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187810229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187810229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187810670",
      "pull_request_review_id": 119664021,
      "id": 187810670,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMDY3MA==",
      "diff_hunk": "@@ -509,12 +509,102 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>",
      "path": "src/streams.h",
      "position": 85,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f7426bde309b35cb773935f7323f7546bcbb8c5b",
      "in_reply_to_id": 187781729,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, let's look at this later. It would complicate the reader indeed. For the writer I think it's pretty straightfoward.",
      "created_at": "2018-05-13T19:14:53Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187810670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187810670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 513,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187810728",
      "pull_request_review_id": 119664076,
      "id": 187810728,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgxMDcyOA==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const std::set<Element>& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_N(0), m_F(0)\n+{\n+    if (m_P > 32) {\n+        throw std::invalid_argument(\"P must be <=32\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    m_N = ReadCompactSize(stream);\n+    m_F = m_N << m_P;\n+\n+    if (m_N >= (1ULL << 32)) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 115,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "c0815aa428d36d0ce0dc788e397e4e17066f708b",
      "in_reply_to_id": 187782029,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I expect we'll start using it for rescanning pretty quickly, regardless of protocol implementations.\r\n\r\nDo you have any numbers for how fast it is to iterate through a 10000 element set or so?",
      "created_at": "2018-05-13T19:16:51Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187810728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187810728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187839783",
      "pull_request_review_id": 119697928,
      "id": 187839783,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgzOTc4Mw==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class CVectorReader",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "in_reply_to_id": 174886724,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2018-05-14T05:35:31Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187839783",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187839783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187839843",
      "pull_request_review_id": 119698018,
      "id": 187839843,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzgzOTg0Mw==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "c0815aa428d36d0ce0dc788e397e4e17066f708b",
      "in_reply_to_id": 187781789,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed in 07df98686ec423dcf38ac28ad8e325708cb5b902.",
      "created_at": "2018-05-14T05:36:20Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187839843",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187839843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187840056",
      "pull_request_review_id": 119698257,
      "id": 187840056,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzg0MDA1Ng==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        q++;\n+    }\n+\n+    uint64_t r = bitreader.Read(k);\n+\n+    return (q << k) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const std::set<Element>& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_N(0), m_F(0)\n+{\n+    if (m_P > 32) {\n+        throw std::invalid_argument(\"P must be <=32\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    CVectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    m_N = ReadCompactSize(stream);\n+    m_F = m_N << m_P;\n+\n+    if (m_N >= (1ULL << 32)) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 115,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "c0815aa428d36d0ce0dc788e397e4e17066f708b",
      "in_reply_to_id": 187782029,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Benchmarks added in f1b341a9262f24ff72b5961538f83ffbf532d8d9. Decoding a 10,000 element filter and matching against one missing element takes about 20us, and grows linearly in the number of elements (as expected).",
      "created_at": "2018-05-14T05:38:00Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187840056",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187840056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187978111",
      "pull_request_review_id": 119864048,
      "id": 187978111,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk3ODExMQ==",
      "diff_hunk": "@@ -0,0 +1,266 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "in_reply_to_id": null,
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "k should be checked < 64 to avoid right shift overflow, which could trigger a platform specific response. I know this is practically excluded with m_P <= 32, but if that is the safety net then there is also no need to check nbits <= 64 in bit stream read and write.",
      "created_at": "2018-05-14T14:39:32Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187978111",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187978111"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187978488",
      "pull_request_review_id": 119864543,
      "id": 187978488,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk3ODQ4OA==",
      "diff_hunk": "@@ -0,0 +1,266 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = n >> k;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in k bits. Since the remainder is just the bottom\n+    // k bits of n, there is no need to mask first.\n+    bitwriter.Write(n, k);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "in_reply_to_id": null,
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same here with k < 64 to avoid shift left overflow",
      "created_at": "2018-05-14T14:40:34Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187978488",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187978488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187995873",
      "pull_request_review_id": 119885833,
      "id": 187995873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzk5NTg3Mw==",
      "diff_hunk": "@@ -0,0 +1,266 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "in_reply_to_id": 187978111,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not sure this assertion would add much. The reason for the check in the BitStreamReader/Writer is because it is part of a public interface. This function (and decode) are static within this compilation unit and thus part of a private interface.",
      "created_at": "2018-05-14T15:26:05Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r187995873",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/187995873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188012208",
      "pull_request_review_id": 119906053,
      "id": 188012208,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODAxMjIwOA==",
      "diff_hunk": "@@ -0,0 +1,266 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "in_reply_to_id": 187978111,
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "thanks, that is fine then. I did not check the visibility.",
      "created_at": "2018-05-14T16:13:19Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188012208",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188012208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188021443",
      "pull_request_review_id": 119917244,
      "id": 188021443,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODAyMTQ0Mw==",
      "diff_hunk": "@@ -0,0 +1,266 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "in_reply_to_id": 187978111,
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "shouldn't GolombRiceEncode and GolombRiceEncode  functions be rather members of GCSFilter since they always use its initialized m_P as k ?",
      "created_at": "2018-05-14T16:43:48Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188021443",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188021443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188043478",
      "pull_request_review_id": 119943482,
      "id": 188043478,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODA0MzQ3OA==",
      "diff_hunk": "@@ -0,0 +1,140 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKFILTER_H\n+#define BITCOIN_BLOCKFILTER_H\n+\n+#include <set>\n+#include <stdint.h>\n+#include <vector>\n+\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <uint256.h>\n+\n+/**\n+ * This implements a Golomb-coded set as defined in BIP 158. It is a\n+ * compact, probabilistic data structure for testing set membership.\n+ */\n+class GCSFilter\n+{\n+public:\n+    typedef std::vector<unsigned char> Element;\n+\n+private:\n+    uint64_t m_siphash_k0;\n+    uint64_t m_siphash_k1;\n+    uint8_t m_P;",
      "path": "src/blockfilter.h",
      "position": null,
      "original_position": 28,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "in_reply_to_id": null,
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "comments would not hurt here. P Golomb-Rice Parameter (2^P), N number of elements in set. F is derived from P and N, so it better would not be here at all. ",
      "created_at": "2018-05-14T17:57:37Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188043478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188043478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188053959",
      "pull_request_review_id": 119956120,
      "id": 188053959,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODA1Mzk1OQ==",
      "diff_hunk": "@@ -509,12 +509,102 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>",
      "path": "src/streams.h",
      "position": 85,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f7426bde309b35cb773935f7323f7546bcbb8c5b",
      "in_reply_to_id": 187781729,
      "user": {
        "login": "tamasblummer",
        "id": 4289351,
        "node_id": "MDQ6VXNlcjQyODkzNTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4289351?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tamasblummer",
        "html_url": "https://github.com/tamasblummer",
        "followers_url": "https://api.github.com/users/tamasblummer/followers",
        "following_url": "https://api.github.com/users/tamasblummer/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tamasblummer/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tamasblummer/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tamasblummer/subscriptions",
        "organizations_url": "https://api.github.com/users/tamasblummer/orgs",
        "repos_url": "https://api.github.com/users/tamasblummer/repos",
        "events_url": "https://api.github.com/users/tamasblummer/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tamasblummer/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @jimpo, used IStream and OStream should be buffered implementations, not this specific algo. ",
      "created_at": "2018-05-14T18:31:54Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188053959",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188053959"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 513,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188079506",
      "pull_request_review_id": 119987435,
      "id": 188079506,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODA3OTUwNg==",
      "diff_hunk": "@@ -0,0 +1,266 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "in_reply_to_id": 187978111,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I prefer they be standalone functions.",
      "created_at": "2018-05-14T20:02:07Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188079506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188079506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188208980",
      "pull_request_review_id": 120137580,
      "id": 188208980,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIwODk4MA==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class VectorReader\n+{\n+private:\n+    const int m_type;\n+    const int m_version;\n+    const std::vector<unsigned char>& m_data;\n+    size_t m_pos = 0;\n+\n+public:\n+\n+    /*\n+     * @param[in]  type Serialization Type\n+     * @param[in]  version Serialization Version (including any flags)\n+     * @param[in]  data Referenced byte vector to overwrite/append\n+     * @param[in]  pos Starting position. Vector index where reads should start.\n+     */\n+    VectorReader(int type, int version, const std::vector<unsigned char>& data, size_t pos)\n+        : m_type(type), m_version(version), m_data(data)\n+    {\n+        seek(pos);\n+    }\n+\n+    /*\n+     * (other params same as above)\n+     * @param[in]  args  A list of items to deserialize starting at pos.\n+     */\n+    template <typename... Args>\n+    VectorReader(int type, int version, const std::vector<unsigned char>& data, size_t pos,\n+                  Args&&... args)\n+        : VectorReader(type, version, data, pos)\n+    {\n+        ::UnserializeMany(*this, std::forward<Args>(args)...);\n+    }\n+\n+    template<typename T>\n+    VectorReader& operator>>(T& obj)\n+    {\n+        // Unserialize from this stream\n+        ::Unserialize(*this, obj);\n+        return (*this);\n+    }\n+\n+    int GetVersion() const { return m_version; }\n+    int GetType() const { return m_type; }\n+\n+    size_t size() const { return m_data.size() - m_pos; }\n+    bool empty() const { return m_data.size() == m_pos; }\n+\n+    void read(char* dst, size_t n)\n+    {\n+        if (n == 0) {\n+            return;\n+        }\n+\n+        // Read from the beginning of the buffer\n+        unsigned int pos_next = m_pos + n;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 61,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "5a339f4118cc65a09d2321628e0db3102361c552",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`size_t`?",
      "created_at": "2018-05-15T08:48:09Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188208980",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188208980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188209476",
      "pull_request_review_id": 120137580,
      "id": 188209476,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIwOTQ3Ng==",
      "diff_hunk": "@@ -71,6 +71,51 @@ BOOST_AUTO_TEST_CASE(streams_vector_writer)\n     vch.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(streams_vector_reader)\n+{\n+    std::vector<unsigned char> vch = {1, 255, 3, 4, 5, 6};\n+\n+    VectorReader reader(SER_NETWORK, INIT_PROTO_VERSION, vch, 0);\n+    BOOST_CHECK_EQUAL(reader.size(), 6);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a single byte as an unsigned char.\n+    unsigned char a;\n+    reader >> a;\n+    BOOST_CHECK_EQUAL(a, 1);\n+    BOOST_CHECK_EQUAL(reader.size(), 5);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a single byte as a signed char.\n+    char b;\n+    reader >> b;\n+    BOOST_CHECK_EQUAL(b, -1);\n+    BOOST_CHECK_EQUAL(reader.size(), 4);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a 4 bytes as a signed int.\n+    unsigned int c;",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "7a77fc51df74916707b1a6c0ad8583c93de91824",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment says signed, but it is unsigned.",
      "created_at": "2018-05-15T08:49:43Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188209476",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188209476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188209813",
      "pull_request_review_id": 120137580,
      "id": 188209813,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIwOTgxMw==",
      "diff_hunk": "@@ -71,6 +71,51 @@ BOOST_AUTO_TEST_CASE(streams_vector_writer)\n     vch.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(streams_vector_reader)\n+{\n+    std::vector<unsigned char> vch = {1, 255, 3, 4, 5, 6};\n+\n+    VectorReader reader(SER_NETWORK, INIT_PROTO_VERSION, vch, 0);\n+    BOOST_CHECK_EQUAL(reader.size(), 6);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a single byte as an unsigned char.\n+    unsigned char a;\n+    reader >> a;\n+    BOOST_CHECK_EQUAL(a, 1);\n+    BOOST_CHECK_EQUAL(reader.size(), 5);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a single byte as a signed char.\n+    char b;\n+    reader >> b;\n+    BOOST_CHECK_EQUAL(b, -1);\n+    BOOST_CHECK_EQUAL(reader.size(), 4);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a 4 bytes as a signed int.\n+    unsigned int c;\n+    reader >> c;\n+    BOOST_CHECK_EQUAL(c, 100992003); // 3,4,5,6 in little-endian base-256\n+    BOOST_CHECK_EQUAL(reader.size(), 0);\n+    BOOST_CHECK(reader.empty());\n+\n+    // Reading after end of byte vector throws an error.\n+    signed int d;\n+    BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n+\n+    // Read a 4 bytes as an unsigned int from the beginning of the buffer.\n+    reader.seek(-6);",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "7a77fc51df74916707b1a6c0ad8583c93de91824",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`d` is a `signed int`, comment says `unsigned int`.",
      "created_at": "2018-05-15T08:50:46Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188209813",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188209813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188211827",
      "pull_request_review_id": 120137580,
      "id": 188211827,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIxMTgyNw==",
      "diff_hunk": "@@ -116,6 +116,36 @@ BOOST_AUTO_TEST_CASE(streams_vector_reader)\n     BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n }\n \n+BOOST_AUTO_TEST_CASE(bitstream_reader_writer)\n+{\n+    CDataStream data(SER_NETWORK, INIT_PROTO_VERSION);\n+\n+    BitStreamWriter<CDataStream> bit_writer(data);\n+    bit_writer.Write(0, 1);\n+    bit_writer.Write(2, 2);\n+    bit_writer.Write(6, 3);\n+    bit_writer.Write(11, 4);\n+    bit_writer.Write(1, 5);\n+    bit_writer.Write(32, 6);\n+    bit_writer.Write(7, 7);",
      "path": "src/test/streams_tests.cpp",
      "position": 60,
      "original_position": 15,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "84ecb19ab6bf7d96c21c7100d49fad48fc1ac73d",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe also include a really high value (e.g. using all 64 bits). These are all single-byte values and will not test the looping part at all, I think?",
      "created_at": "2018-05-15T08:56:59Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188211827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188211827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188218055",
      "pull_request_review_id": 120137580,
      "id": 188218055,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIxODA1NQ==",
      "diff_hunk": "@@ -0,0 +1,35 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <random.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(blockfilter_tests)\n+\n+BOOST_AUTO_TEST_CASE(gcsfilter_test)\n+{\n+    std::set<GCSFilter::Element> included_elements, excluded_elements;\n+    for (int i = 0; i < 100; ++i) {\n+        GCSFilter::Element rand1(32);\n+        GetRandBytes(rand1.data(), rand1.size());\n+        included_elements.insert(std::move(rand1));\n+\n+        GCSFilter::Element rand2(32);\n+        GetRandBytes(rand2.data(), rand2.size());",
      "path": "src/test/blockfilter_tests.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "a10dc09b7f968b904b136ab09e8959d52f8229ff",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I recommend avoiding actual random values for unit tests, as generating random data is expensive and the tests may end up failing only sporadically, making it harder to debug (run the test 10 times and see the error once kinda thing).\r\n\r\nA simple approach is to use a random generator \"manually\" once to generate 200 random numbers as a big static vector. Another is to do e.g. `srand(12345);` once and then use `rand()`, but I'm not sure if that has downsides (or if it's slow, too).",
      "created_at": "2018-05-15T09:16:31Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188218055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188218055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188220185",
      "pull_request_review_id": 120137580,
      "id": 188220185,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIyMDE4NQ==",
      "diff_hunk": "@@ -32,4 +36,37 @@ BOOST_AUTO_TEST_CASE(gcsfilter_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(blockfilter_basic_test)\n+{\n+    CBlock block = getBlock13b8a();\n+    BlockFilter block_filter(BlockFilterType::BASIC, block);\n+    const GCSFilter& filter = block_filter.GetFilter();\n+\n+    // TXID of first non-coinbase tx in block.\n+    const uint256& txid = uint256S(\"f9fc751cb7dc372406a9f8d738d5e6f8f63bab71986a39cf36ee70ee17036d07\");\n+    GCSFilter::Element txid_element(txid.begin(), txid.end());\n+    BOOST_CHECK(filter.Match(txid_element));\n+\n+    // Outpoint spent by first non-coinbase tx in block.\n+    COutPoint prevout(uint256S(\"36e8f98c5f5733f88ca00dfa05afd7af5dc34dda802790daba6aa1afcb8c6096\"), 0);\n+    GCSFilter::Element prevout_element;\n+    CVectorWriter(SER_NETWORK, 0, prevout_element, 0, prevout);\n+    BOOST_CHECK(filter.Match(prevout_element));",
      "path": "src/test/blockfilter_tests.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "d7f8d3838ae4a7a5043351d81791ded96903761f",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe also check that `prevout(36e, 1)` is not a match while at it.",
      "created_at": "2018-05-15T09:23:57Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188220185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188220185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188223873",
      "pull_request_review_id": 120137580,
      "id": 188223873,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIyMzg3Mw==",
      "diff_hunk": "@@ -0,0 +1,42 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <random.h>\n+#include <blockfilter.h>\n+\n+static void ConstructGCSFilter(benchmark::State& state)\n+{\n+    std::set<GCSFilter::Element> elements;\n+    for (int i = 0; i < 10000; i++) {\n+        GCSFilter::Element element(32);\n+        GetRandBytes(element.data(), element.size());",
      "path": "src/bench/gcs_filter.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f1b341a9262f24ff72b5961538f83ffbf532d8d9",
      "in_reply_to_id": null,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note use of `GetRandBytes` here as well. Potential inconsistency in test outcomes and potential slowdown.",
      "created_at": "2018-05-15T09:35:53Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188223873",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188223873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188416389",
      "pull_request_review_id": 120390684,
      "id": 188416389,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQxNjM4OQ==",
      "diff_hunk": "@@ -32,4 +36,37 @@ BOOST_AUTO_TEST_CASE(gcsfilter_test)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(blockfilter_basic_test)\n+{\n+    CBlock block = getBlock13b8a();\n+    BlockFilter block_filter(BlockFilterType::BASIC, block);\n+    const GCSFilter& filter = block_filter.GetFilter();\n+\n+    // TXID of first non-coinbase tx in block.\n+    const uint256& txid = uint256S(\"f9fc751cb7dc372406a9f8d738d5e6f8f63bab71986a39cf36ee70ee17036d07\");\n+    GCSFilter::Element txid_element(txid.begin(), txid.end());\n+    BOOST_CHECK(filter.Match(txid_element));\n+\n+    // Outpoint spent by first non-coinbase tx in block.\n+    COutPoint prevout(uint256S(\"36e8f98c5f5733f88ca00dfa05afd7af5dc34dda802790daba6aa1afcb8c6096\"), 0);\n+    GCSFilter::Element prevout_element;\n+    CVectorWriter(SER_NETWORK, 0, prevout_element, 0, prevout);\n+    BOOST_CHECK(filter.Match(prevout_element));",
      "path": "src/test/blockfilter_tests.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "d7f8d3838ae4a7a5043351d81791ded96903761f",
      "in_reply_to_id": 188220185,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea.",
      "created_at": "2018-05-15T19:56:32Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188416389",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188416389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188418596",
      "pull_request_review_id": 120393476,
      "id": 188418596,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQxODU5Ng==",
      "diff_hunk": "@@ -116,6 +116,36 @@ BOOST_AUTO_TEST_CASE(streams_vector_reader)\n     BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n }\n \n+BOOST_AUTO_TEST_CASE(bitstream_reader_writer)\n+{\n+    CDataStream data(SER_NETWORK, INIT_PROTO_VERSION);\n+\n+    BitStreamWriter<CDataStream> bit_writer(data);\n+    bit_writer.Write(0, 1);\n+    bit_writer.Write(2, 2);\n+    bit_writer.Write(6, 3);\n+    bit_writer.Write(11, 4);\n+    bit_writer.Write(1, 5);\n+    bit_writer.Write(32, 6);\n+    bit_writer.Write(7, 7);",
      "path": "src/test/streams_tests.cpp",
      "position": 60,
      "original_position": 15,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "84ecb19ab6bf7d96c21c7100d49fad48fc1ac73d",
      "in_reply_to_id": 188211827,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's testing the looping part insofar as some of the writes crossed byte boundaries, but I also added a write/read of a 2-byte value.",
      "created_at": "2018-05-15T20:04:03Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188418596",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188418596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188418651",
      "pull_request_review_id": 120393541,
      "id": 188418651,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQxODY1MQ==",
      "diff_hunk": "@@ -0,0 +1,35 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <random.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_AUTO_TEST_SUITE(blockfilter_tests)\n+\n+BOOST_AUTO_TEST_CASE(gcsfilter_test)\n+{\n+    std::set<GCSFilter::Element> included_elements, excluded_elements;\n+    for (int i = 0; i < 100; ++i) {\n+        GCSFilter::Element rand1(32);\n+        GetRandBytes(rand1.data(), rand1.size());\n+        included_elements.insert(std::move(rand1));\n+\n+        GCSFilter::Element rand2(32);\n+        GetRandBytes(rand2.data(), rand2.size());",
      "path": "src/test/blockfilter_tests.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "a10dc09b7f968b904b136ab09e8959d52f8229ff",
      "in_reply_to_id": 188218055,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed the rand.",
      "created_at": "2018-05-15T20:04:17Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r188418651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/188418651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202554741",
      "pull_request_review_id": 137278522,
      "id": 202554741,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU1NDc0MQ==",
      "diff_hunk": "@@ -0,0 +1,43 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <blockfilter.h>\n+\n+static void ConstructGCSFilter(benchmark::State& state)\n+{\n+    std::set<GCSFilter::Element> elements;\n+    for (int i = 0; i < 10000; i++) {",
      "path": "src/bench/gcs_filter.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `++i` here and elsewhere - I think every non-test post-increment can be pre.",
      "created_at": "2018-07-15T21:13:28Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202554741",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202554741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202554798",
      "pull_request_review_id": 137278522,
      "id": 202554798,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU1NDc5OA==",
      "diff_hunk": "@@ -0,0 +1,261 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `static`?",
      "created_at": "2018-07-15T21:15:47Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202554798",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202554798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202554802",
      "pull_request_review_id": 137278522,
      "id": 202554802,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU1NDgwMg==",
      "diff_hunk": "@@ -0,0 +1,261 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `static`?",
      "created_at": "2018-07-15T21:16:01Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202554802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202554802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202555191",
      "pull_request_review_id": 137278522,
      "id": 202555191,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU1NTE5MQ==",
      "diff_hunk": "@@ -435,12 +509,102 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+\n+    /// Buffered byte read in from the input stream. A new byte is read into the\n+    /// buffer when m_offset reaches 8.\n+    uint8_t m_buffer{0};\n+\n+    /// Number of high order bits in m_buffer already returned by previous\n+    /// Read() calls. The next bit to be returned is at this offset from the\n+    /// most significant bit position.\n+    int m_offset{8};\n+\n+public:\n+    BitStreamReader(IStream& istream) : m_istream(istream) {}\n+\n+    uint64_t Read(int nbits) {\n+        if (nbits < 0 || nbits > 64) {\n+            throw std::out_of_range(\"nbits must be between 0 and 64\");\n+        }\n \n+        uint64_t data = 0;\n+        while (nbits > 0) {\n+            if (m_offset == 8) {\n+                m_istream >> m_buffer;\n+                m_offset = 0;\n+            }\n \n+            int bits = std::min(8 - m_offset, nbits);\n+            data <<= bits;\n+            data |= static_cast<uint8_t>(m_buffer << m_offset) >> (8 - bits);\n+            m_offset += bits;\n+            nbits -= bits;\n+        }\n+        return data;\n+    }\n+};\n \n+template <typename OStream>\n+class BitStreamWriter\n+{\n+private:\n+    OStream& m_ostream;\n \n+    /// Buffered byte waiting to be written to the output stream. The byte is\n+    /// written buffer when m_offset reaches 8 or Flush() is called.\n+    uint8_t m_buffer{0};\n \n+    /// Number of high order bits in m_buffer already written by previous\n+    /// Write() calls and not yet flushed to the stream. The next bit to be\n+    /// written to is at this offset from the most significant bit position.\n+    int m_offset{0};\n+\n+public:\n+    BitStreamWriter(OStream& ostream) : m_ostream(ostream) {}",
      "path": "src/streams.h",
      "position": null,
      "original_position": 141,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `explicit`?",
      "created_at": "2018-07-15T21:30:56Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202555191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202555191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202555331",
      "pull_request_review_id": 137278522,
      "id": 202555331,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU1NTMzMQ==",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKFILTER_H\n+#define BITCOIN_BLOCKFILTER_H\n+\n+#include <set>\n+#include <stdint.h>\n+#include <vector>\n+\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <uint256.h>\n+#include <undo.h>\n+\n+/**\n+ * This implements a Golomb-coded set as defined in BIP 158. It is a\n+ * compact, probabilistic data structure for testing set membership.\n+ */\n+class GCSFilter\n+{\n+public:\n+    typedef std::vector<unsigned char> Element;\n+\n+private:\n+    uint64_t m_siphash_k0;\n+    uint64_t m_siphash_k1;\n+    uint8_t m_P;  //!< Golomb-Rice coding parameter\n+    uint32_t m_M;  //!< Inverse false positive rate\n+    uint32_t m_N;  //!< Number of elements in the filter\n+    uint64_t m_F;  //!< Range of element hashes, F = N * M\n+    std::vector<unsigned char> m_encoded;\n+\n+    /** Hash a data element to an integer in the range [0, N * 2^P). */\n+    uint64_t HashToRange(const Element& element) const;\n+\n+    std::vector<uint64_t> BuildHashedSet(const std::set<Element>& elements) const;\n+\n+    /** Helper method used to implement Match and MatchAny */\n+    bool MatchInternal(const uint64_t* sorted_element_hashes, size_t size) const;\n+\n+public:\n+\n+    /** Constructs an empty filter. */\n+    GCSFilter(uint64_t siphash_k0 = 0, uint64_t siphash_k1 = 0, uint8_t P = 0, uint32_t M = 0);\n+\n+    /** Reconstructs an already-created filter from an encoding. */\n+    GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+              std::vector<unsigned char> encoded_filter);\n+\n+    /** Builds a new filter from the params and set of elements. */\n+    GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+              const std::set<Element>& elements);\n+\n+    uint8_t GetP() const { return m_P; }\n+    uint32_t GetN() const { return m_N; }\n+    uint32_t GetM() const { return m_M; }\n+    const std::vector<unsigned char>& GetEncoded() const { return m_encoded; }\n+\n+    /**\n+     * Checks if the element may be in the set. False positives are possible\n+     * with probability 1/M.\n+     */\n+    bool Match(const Element& element) const;\n+\n+    /**\n+     * Checks if any of the given elements may be in the set. False positives\n+     * are possible with probability 1/M per element checked. This is more\n+     * efficient that checking Match on multiple elements separately.\n+     */\n+    bool MatchAny(const std::set<Element>& elements) const;\n+};\n+\n+constexpr uint8_t BASIC_FILTER_P = 19;\n+constexpr uint32_t BASIC_FILTER_M = 784931;\n+\n+enum BlockFilterType : uint8_t\n+{\n+    BASIC = 0,\n+};\n+\n+/**\n+ * Complete block filter struct as defined in BIP 157. Serialization matches\n+ * payload of \"cfilter\" messages.\n+ */\n+class BlockFilter\n+{\n+private:\n+    BlockFilterType m_filter_type;\n+    uint256 m_block_hash;\n+    GCSFilter m_filter;\n+\n+public:\n+\n+    // Construct a new BlockFilter of the specified type from a block.\n+    BlockFilter(BlockFilterType filter_type, const CBlock& block, const CBlockUndo& block_undo);\n+\n+    BlockFilterType GetFilterType() const { return m_filter_type; }\n+\n+    const GCSFilter& GetFilter() const { return m_filter; }\n+\n+    const std::vector<unsigned char>& GetEncodedFilter() const\n+    {\n+        return m_filter.GetEncoded();\n+    }\n+\n+    // Compute the filter hash.\n+    uint256 GetHash() const;\n+\n+    // Compute the filter header given the previous one.\n+    uint256 ComputeHeader(const uint256& prev_header) const;\n+\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        s << m_block_hash\n+          << static_cast<uint8_t>(m_filter_type)\n+          << m_filter.GetEncoded();\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        std::vector<unsigned char> encoded_filter;\n+        uint8_t filter_type;\n+\n+        s >> m_block_hash\n+          >> filter_type\n+          >> encoded_filter;\n+\n+        m_filter_type = static_cast<BlockFilterType>(filter_type);\n+\n+        switch (m_filter_type) {\n+        case BlockFilterType::BASIC:\n+            m_filter = GCSFilter(m_block_hash.GetUint64(0), m_block_hash.GetUint64(1),\n+                                 BASIC_FILTER_P, BASIC_FILTER_M, std::move(encoded_filter));\n+            break;\n+\n+        default:\n+            throw std::ios_base::failure(\"unknown filter_type\");\n+        }",
      "path": "src/blockfilter.h",
      "position": 141,
      "original_position": 140,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could extract this as a method to share with `BlockFilter::BlockFilter`",
      "created_at": "2018-07-15T21:35:28Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202555331",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202555331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202555497",
      "pull_request_review_id": 137278522,
      "id": 202555497,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU1NTQ5Nw==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference",
      "path": "src/streams.h",
      "position": null,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: `/**` here and elsewhere in the class",
      "created_at": "2018-07-15T21:41:10Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202555497",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202555497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202555770",
      "pull_request_review_id": 137278522,
      "id": 202555770,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU1NTc3MA==",
      "diff_hunk": "@@ -408,6 +409,8 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& message_start);\n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CBlockIndex* pindex, const CMessageHeader::MessageStartChars& message_start);\n \n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex *pindex);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 12,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": null,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is exposing this in b50195afc40188064d43efc71a9c4feab6667ec8 necessary? I don't see a call to it.\r\n\r\nChecked and this builds just the coins.h include from that commit.",
      "created_at": "2018-07-15T21:52:42Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202555770",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202555770"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202758020",
      "pull_request_review_id": 137518178,
      "id": 202758020,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjc1ODAyMA==",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKFILTER_H\n+#define BITCOIN_BLOCKFILTER_H\n+\n+#include <set>\n+#include <stdint.h>\n+#include <vector>\n+\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <uint256.h>\n+#include <undo.h>\n+\n+/**\n+ * This implements a Golomb-coded set as defined in BIP 158. It is a\n+ * compact, probabilistic data structure for testing set membership.\n+ */\n+class GCSFilter\n+{\n+public:\n+    typedef std::vector<unsigned char> Element;\n+\n+private:\n+    uint64_t m_siphash_k0;\n+    uint64_t m_siphash_k1;\n+    uint8_t m_P;  //!< Golomb-Rice coding parameter\n+    uint32_t m_M;  //!< Inverse false positive rate\n+    uint32_t m_N;  //!< Number of elements in the filter\n+    uint64_t m_F;  //!< Range of element hashes, F = N * M\n+    std::vector<unsigned char> m_encoded;\n+\n+    /** Hash a data element to an integer in the range [0, N * 2^P). */\n+    uint64_t HashToRange(const Element& element) const;\n+\n+    std::vector<uint64_t> BuildHashedSet(const std::set<Element>& elements) const;\n+\n+    /** Helper method used to implement Match and MatchAny */\n+    bool MatchInternal(const uint64_t* sorted_element_hashes, size_t size) const;\n+\n+public:\n+\n+    /** Constructs an empty filter. */\n+    GCSFilter(uint64_t siphash_k0 = 0, uint64_t siphash_k1 = 0, uint8_t P = 0, uint32_t M = 0);\n+\n+    /** Reconstructs an already-created filter from an encoding. */\n+    GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+              std::vector<unsigned char> encoded_filter);\n+\n+    /** Builds a new filter from the params and set of elements. */\n+    GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+              const std::set<Element>& elements);\n+\n+    uint8_t GetP() const { return m_P; }\n+    uint32_t GetN() const { return m_N; }\n+    uint32_t GetM() const { return m_M; }\n+    const std::vector<unsigned char>& GetEncoded() const { return m_encoded; }\n+\n+    /**\n+     * Checks if the element may be in the set. False positives are possible\n+     * with probability 1/M.\n+     */\n+    bool Match(const Element& element) const;\n+\n+    /**\n+     * Checks if any of the given elements may be in the set. False positives\n+     * are possible with probability 1/M per element checked. This is more\n+     * efficient that checking Match on multiple elements separately.\n+     */\n+    bool MatchAny(const std::set<Element>& elements) const;\n+};\n+\n+constexpr uint8_t BASIC_FILTER_P = 19;\n+constexpr uint32_t BASIC_FILTER_M = 784931;\n+\n+enum BlockFilterType : uint8_t\n+{\n+    BASIC = 0,\n+};\n+\n+/**\n+ * Complete block filter struct as defined in BIP 157. Serialization matches\n+ * payload of \"cfilter\" messages.\n+ */\n+class BlockFilter\n+{\n+private:\n+    BlockFilterType m_filter_type;\n+    uint256 m_block_hash;\n+    GCSFilter m_filter;\n+\n+public:\n+\n+    // Construct a new BlockFilter of the specified type from a block.\n+    BlockFilter(BlockFilterType filter_type, const CBlock& block, const CBlockUndo& block_undo);\n+\n+    BlockFilterType GetFilterType() const { return m_filter_type; }\n+\n+    const GCSFilter& GetFilter() const { return m_filter; }\n+\n+    const std::vector<unsigned char>& GetEncodedFilter() const\n+    {\n+        return m_filter.GetEncoded();\n+    }\n+\n+    // Compute the filter hash.\n+    uint256 GetHash() const;\n+\n+    // Compute the filter header given the previous one.\n+    uint256 ComputeHeader(const uint256& prev_header) const;\n+\n+    template <typename Stream>\n+    void Serialize(Stream& s) const {\n+        s << m_block_hash\n+          << static_cast<uint8_t>(m_filter_type)\n+          << m_filter.GetEncoded();\n+    }\n+\n+    template <typename Stream>\n+    void Unserialize(Stream& s) {\n+        std::vector<unsigned char> encoded_filter;\n+        uint8_t filter_type;\n+\n+        s >> m_block_hash\n+          >> filter_type\n+          >> encoded_filter;\n+\n+        m_filter_type = static_cast<BlockFilterType>(filter_type);\n+\n+        switch (m_filter_type) {\n+        case BlockFilterType::BASIC:\n+            m_filter = GCSFilter(m_block_hash.GetUint64(0), m_block_hash.GetUint64(1),\n+                                 BASIC_FILTER_P, BASIC_FILTER_M, std::move(encoded_filter));\n+            break;\n+\n+        default:\n+            throw std::ios_base::failure(\"unknown filter_type\");\n+        }",
      "path": "src/blockfilter.h",
      "position": 141,
      "original_position": 140,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": 202555331,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This uses a different form of the constructor from `BlockFilter::BlockFilter`. Could extract to a templated method, but I don't think that's worth it.",
      "created_at": "2018-07-16T17:06:22Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202758020",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202758020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202893314",
      "pull_request_review_id": 137675113,
      "id": 202893314,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjg5MzMxNA==",
      "diff_hunk": "@@ -408,6 +409,8 @@ bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus\n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CDiskBlockPos& pos, const CMessageHeader::MessageStartChars& message_start);\n bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CBlockIndex* pindex, const CMessageHeader::MessageStartChars& message_start);\n \n+bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex *pindex);",
      "path": "src/validation.h",
      "position": null,
      "original_position": 12,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": 202555770,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed that commit.",
      "created_at": "2018-07-17T04:48:26Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r202893314",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/202893314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 412,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203002692",
      "pull_request_review_id": 137805430,
      "id": 203002692,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzAwMjY5Mg==",
      "diff_hunk": "@@ -0,0 +1,261 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": 202554798,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm curious what triggered this request. I may be reading the wrong places, but e.g. https://stackoverflow.com/questions/45987571/difference-between-constexpr-and-static-constexpr-global-variable indicates static does nothing at all here.",
      "created_at": "2018-07-17T12:35:57Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r203002692",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203002692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203040263",
      "pull_request_review_id": 137850985,
      "id": 203040263,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzA0MDI2Mw==",
      "diff_hunk": "@@ -0,0 +1,261 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": 202554798,
      "user": {
        "login": "Empact",
        "id": 5470,
        "node_id": "MDQ6VXNlcjU0NzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Empact",
        "html_url": "https://github.com/Empact",
        "followers_url": "https://api.github.com/users/Empact/followers",
        "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
        "organizations_url": "https://api.github.com/users/Empact/orgs",
        "repos_url": "https://api.github.com/users/Empact/repos",
        "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Empact/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My thought was to make these explicitly translation-unit local, to communicate that to the reader and to enforce that from the linker. Here's what cppreference says about what gets internal linkage:\r\n\r\n> internal linkage. The name can be referred to from all scopes in the current translation unit.\r\n> Any of the following names declared at namespace scope have internal linkage:\r\n> * variables, functions, or function templates declared static;\r\n> * non-volatile non-inline (since C++17) const-qualified variables (including constexpr) that aren't declared extern and aren't previously declared to have external linkage;\r\n> * data members of anonymous unions.\r\n\r\nhttps://en.cppreference.com/w/cpp/language/storage_duration#Linkage\r\n\r\nWorth noting that non-static constexpr variables can be declared extern in other contexts and rendered external linkage, while static variables can not be.\r\n\r\nUnnamed namespaces are another way to enforce this:\r\n> Even though names in an unnamed namespace may be declared with external linkage, they are never accessible from other translation units because their namespace name is unique.\r\nhttps://en.cppreference.com/w/cpp/language/namespace#Unnamed_namespaces",
      "created_at": "2018-07-17T14:18:32Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r203040263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203040263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203078822",
      "pull_request_review_id": 137898822,
      "id": 203078822,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzA3ODgyMg==",
      "diff_hunk": "@@ -0,0 +1,261 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": 202554798,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@kallewoof Interesting. I looked it up too and came across this: https://stackoverflow.com/a/13867690.",
      "created_at": "2018-07-17T15:54:04Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r203078822",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203078822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203627166",
      "pull_request_review_id": 138552301,
      "id": 203627166,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYyNzE2Ng==",
      "diff_hunk": "@@ -0,0 +1,261 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "4fe143a623bbddf794bd29da1ece4b03809783f1",
      "in_reply_to_id": 202554798,
      "user": {
        "login": "kallewoof",
        "id": 250224,
        "node_id": "MDQ6VXNlcjI1MDIyNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kallewoof",
        "html_url": "https://github.com/kallewoof",
        "followers_url": "https://api.github.com/users/kallewoof/followers",
        "following_url": "https://api.github.com/users/kallewoof/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kallewoof/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kallewoof/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
        "organizations_url": "https://api.github.com/users/kallewoof/orgs",
        "repos_url": "https://api.github.com/users/kallewoof/repos",
        "events_url": "https://api.github.com/users/kallewoof/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kallewoof/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@jimpo Yeah I read that one too, but the last paragraph was what made me unsure in the end whether it was good or bad\r\n\r\n> However, there is one case where you wouldn't want to use static constexper. Unless a constexpr declared object is either ODR-used or declared static, the compiler is free to not include it at all. That's pretty useful, because it allows the use of compile-time temporary constexpr arrays without polluting the compiled program with unnecessary bytes. In that case, you would clearly not want to use static, since static is likely to force the object to exist at runtime.\r\n\r\nI honestly can't tell if this applies here or not without thinking about it more.",
      "created_at": "2018-07-19T07:34:40Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r203627166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/203627166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204219029",
      "pull_request_review_id": 139266569,
      "id": 204219029,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxOTAyOQ==",
      "diff_hunk": "@@ -52,6 +52,9 @@ static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n // See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n {\n+#ifdef __SIZE_INT128__",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "ad2d7c93a26767e948770f56b39b93c8116dbd21",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This doesn't seem to work for me (x86_64 linux, GCC 7.3.0), verified by looking at the disassembled code.\r\n\r\nInterestingly, there is hardly any impact on the benchmarks when I modify the code to use force using 128-bit multiplication - suggesting that most of the time is spent elsewhere (hashing, bit operations?).",
      "created_at": "2018-07-21T19:10:46Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r204219029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204219029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204234846",
      "pull_request_review_id": 139282220,
      "id": 204234846,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIzNDg0Ng==",
      "diff_hunk": "@@ -52,6 +52,9 @@ static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n // See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n {\n+#ifdef __SIZE_INT128__",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "ad2d7c93a26767e948770f56b39b93c8116dbd21",
      "in_reply_to_id": 204219029,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops, that's a typo. It should be `__SIZEOF_INT128__`. Will fix.",
      "created_at": "2018-07-22T10:12:36Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r204234846",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204234846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204287501",
      "pull_request_review_id": 139338555,
      "id": 204287501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI4NzUwMQ==",
      "diff_hunk": "@@ -52,6 +52,9 @@ static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t k)\n // See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n {\n+#ifdef __SIZE_INT128__",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "ad2d7c93a26767e948770f56b39b93c8116dbd21",
      "in_reply_to_id": 204219029,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yup, that works.",
      "created_at": "2018-07-23T05:50:41Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r204287501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204287501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204288229",
      "pull_request_review_id": 139339449,
      "id": 204288229,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI4ODIyOQ==",
      "diff_hunk": "@@ -0,0 +1,144 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_BLOCKFILTER_H\n+#define BITCOIN_BLOCKFILTER_H\n+\n+#include <set>\n+#include <stdint.h>\n+#include <vector>\n+\n+#include <primitives/block.h>\n+#include <serialize.h>\n+#include <uint256.h>\n+#include <undo.h>\n+\n+/**\n+ * This implements a Golomb-coded set as defined in BIP 158. It is a\n+ * compact, probabilistic data structure for testing set membership.\n+ */\n+class GCSFilter\n+{\n+public:\n+    typedef std::vector<unsigned char> Element;\n+\n+private:\n+    uint64_t m_siphash_k0;\n+    uint64_t m_siphash_k1;\n+    uint8_t m_P;  //!< Golomb-Rice coding parameter\n+    uint32_t m_M;  //!< Inverse false positive rate\n+    uint32_t m_N;  //!< Number of elements in the filter\n+    uint64_t m_F;  //!< Range of element hashes, F = N * M\n+    std::vector<unsigned char> m_encoded;\n+\n+    /** Hash a data element to an integer in the range [0, N * 2^P). */",
      "path": "src/blockfilter.h",
      "position": null,
      "original_position": 35,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "fcbba910125dcb98814b0c58f4611bf60280a000",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: should be `[0, N * M)` or `[0, F)`, I think.",
      "created_at": "2018-07-23T05:56:44Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r204288229",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/204288229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210287583",
      "pull_request_review_id": 146469075,
      "id": 210287583,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDI4NzU4Mw==",
      "diff_hunk": "@@ -138,6 +138,80 @@ class CVectorWriter\n     size_t nPos;\n };\n \n+/* Minimal stream for reading from an existing vector by reference\n+ */\n+class CVectorReader\n+{\n+private:\n+    const int nType;\n+    const int nVersion;\n+    const std::vector<unsigned char>& vchData;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 11,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "93f702b08e413c5c025b155bfb62b721d27939f5",
      "in_reply_to_id": 174888569,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Re: https://github.com/bitcoin/bitcoin/pull/12254#discussion_r174888569\r\n\r\nI think it would be good to change VectorReader to SpanReader now that Span exists. It would be a simple change, and better describe what this class does, and make it more reusable.",
      "created_at": "2018-08-15T14:30:37Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r210287583",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210287583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210954376",
      "pull_request_review_id": 147283037,
      "id": 210954376,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1NDM3Ng==",
      "diff_hunk": "@@ -509,12 +509,102 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n \n+    /// Buffered byte read in from the input stream. A new byte is read into the\n+    /// buffer when m_offset reaches 8.\n+    uint8_t m_buffer{0};\n \n+    /// Number of high order bits in m_buffer already returned by previous\n+    /// Read() calls. The next bit to be returned is at this offset from the\n+    /// most significant bit position.\n+    int m_offset{8};\n \n+public:\n+    explicit BitStreamReader(IStream& istream) : m_istream(istream) {}\n \n+    uint64_t Read(int nbits) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 22,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "faaa4b8432d194acb26ffcac07c379444da327ac",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Implement BitStreamReader/Writer classes.\" (faaa4b8432d194acb26ffcac07c379444da327ac)\r\n\r\nThere was previously a comment here (in e6e320d600c70cf4d530b49f3e526cdb7e66be6d). Was it dropped inadvertently?\r\n\r\n```c++\r\n    /** Read the specified number of bits from the stream. The data is returned\r\n     * in the nbits least signficant bits of a 64-bit uint.\r\n     */\r\n```",
      "created_at": "2018-08-17T15:51:26Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r210954376",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210954376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 534,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210970797",
      "pull_request_review_id": 147283037,
      "id": 210970797,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk3MDc5Nw==",
      "diff_hunk": "@@ -0,0 +1,155 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "1b1d231ed77869174c33fde97efc65b0a0044ae0",
      "in_reply_to_id": 178629277,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "RE: https://github.com/bitcoin/bitcoin/pull/12254#discussion_r178629277\r\n\r\n> I don't understand this comment either.\r\n\r\nThe comment was just attached in the wrong place. In 15d529dfc2b65f2badaa520799187aff103af2b6 `m_N` was `uint64_t` (fixed now).",
      "created_at": "2018-08-17T16:55:12Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r210970797",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210970797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210974078",
      "pull_request_review_id": 147307772,
      "id": 210974078,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk3NDA3OA==",
      "diff_hunk": "@@ -68,6 +68,51 @@ BOOST_AUTO_TEST_CASE(streams_vector_writer)\n     vch.clear();\n }\n \n+BOOST_AUTO_TEST_CASE(streams_vector_reader)\n+{\n+    std::vector<unsigned char> vch = {1, 255, 3, 4, 5, 6};\n+\n+    VectorReader reader(SER_NETWORK, INIT_PROTO_VERSION, vch, 0);\n+    BOOST_CHECK_EQUAL(reader.size(), 6);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a single byte as an unsigned char.\n+    unsigned char a;\n+    reader >> a;\n+    BOOST_CHECK_EQUAL(a, 1);\n+    BOOST_CHECK_EQUAL(reader.size(), 5);\n+    BOOST_CHECK(!reader.empty());\n+\n+    // Read a single byte as a signed char.\n+    char b;",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "bdb34199345ad2c6f98da5d3f303d0993f6c722c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Unit test for VectorReader class.\" (bdb34199345ad2c6f98da5d3f303d0993f6c722c)\r\n\r\nShould probably say `signed char` explicitly, since plain `char` isn't necessarily signed.",
      "created_at": "2018-08-17T17:08:53Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r210974078",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210974078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210976725",
      "pull_request_review_id": 147307772,
      "id": 210976725,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk3NjcyNQ==",
      "diff_hunk": "@@ -113,6 +113,41 @@ BOOST_AUTO_TEST_CASE(streams_vector_reader)\n     BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n }\n \n+BOOST_AUTO_TEST_CASE(bitstream_reader_writer)\n+{\n+    CDataStream data(SER_NETWORK, INIT_PROTO_VERSION);\n+\n+    BitStreamWriter<CDataStream> bit_writer(data);\n+    bit_writer.Write(0, 1);\n+    bit_writer.Write(2, 2);\n+    bit_writer.Write(6, 3);\n+    bit_writer.Write(11, 4);\n+    bit_writer.Write(1, 5);\n+    bit_writer.Write(32, 6);\n+    bit_writer.Write(7, 7);\n+    bit_writer.Write(30497, 16);\n+    bit_writer.Flush();\n+\n+    CDataStream data_copy(data);\n+    uint32_t serialized_int1;\n+    data >> serialized_int1;\n+    BOOST_CHECK_EQUAL(serialized_int1, (uint32_t)0x7700C35A); // NOTE: Serialized as LE\n+    uint16_t serialized_int2;\n+    data >> serialized_int2;\n+    BOOST_CHECK_EQUAL(serialized_int2, (uint16_t)0x1072); // NOTE: Serialized as LE\n+\n+    BitStreamReader<CDataStream> bit_reader(data_copy);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(1), 0);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(2), 2);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(3), 6);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(4), 11);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(5), 1);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(6), 32);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(7), 7);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(16), 30497);\n+    BOOST_CHECK_THROW(bit_reader.Read(8), std::ios_base::failure);",
      "path": "src/test/streams_tests.cpp",
      "position": 81,
      "original_position": 36,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e15e553b746e64f0eeda420e4c10eccfc747d69f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"streams: Unit tests for BitStreamReader and BitStreamWriter.\" (e15e553b746e64f0eeda420e4c10eccfc747d69f)\r\n\r\nMight be good to have additional `BOOST_CHECK(data.empty())` and `BOOST_CHECK(data_copy.empty())` checks to make sure reads & writes are still aligned if somebody modifies the test.",
      "created_at": "2018-08-17T17:19:25Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r210976725",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210976725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210992123",
      "pull_request_review_id": 147307772,
      "id": 210992123,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk5MjEyMw==",
      "diff_hunk": "@@ -0,0 +1,151 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t k, uint64_t n)",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "515af0398b8f2aab77645871198c69fea91a07ff",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockfilter: Implement GCSFilter constructors.\" (515af0398b8f2aab77645871198c69fea91a07ff)\r\n\r\nMaybe use `x` and `P` instead of `n` and `k` to be consistent with golomb_encode function from BIP158. This would also be more consistent with the `GCSFilter` class, which uses `P`.",
      "created_at": "2018-08-17T18:15:41Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r210992123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210992123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210999608",
      "pull_request_review_id": 147307772,
      "id": 210999608,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk5OTYwOA==",
      "diff_hunk": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_UNDO_H\n #define BITCOIN_UNDO_H\n \n+#include <coins.h>",
      "path": "src/undo.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f7a5bdb54ba597fe06bcb54e886c43436899ab48",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockfilter: Construction of basic block filters.\" (f7a5bdb54ba597fe06bcb54e886c43436899ab48)\r\n\r\nChange seems unrelated to this commit.",
      "created_at": "2018-08-17T18:41:46Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r210999608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/210999608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211006188",
      "pull_request_review_id": 147307772,
      "id": 211006188,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTAwNjE4OA==",
      "diff_hunk": "@@ -193,3 +195,41 @@ bool GCSFilter::MatchAny(const std::set<Element>& elements) const\n     const std::vector<uint64_t> queries = BuildHashedSet(elements);\n     return MatchInternal(queries.data(), queries.size());\n }\n+\n+static std::set<GCSFilter::Element> BasicFilterElements(const CBlock& block,",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f7a5bdb54ba597fe06bcb54e886c43436899ab48",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockfilter: Construction of basic block filters.\" (f7a5bdb54ba597fe06bcb54e886c43436899ab48)\r\n\r\nI think it could be beneficial if `GCSFilter` defined: \r\n\r\n```c++\r\ntypedef std::unordered_set<Element> Elements;\r\n```\r\n\r\nAnd if this function, the `GCSFilter` constructor, `BuildHashedSet`, and `MatchAny` all used  `GCSFilter::Elements` instead of `std::set<GCSFilter::Element>`. It'd be nice to decrease the coupling to one data structure, and since `std::set` is an ordered set, these functions are pointlessly also sorting the elements when order is not important.",
      "created_at": "2018-08-17T19:06:27Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r211006188",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211006188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211010036",
      "pull_request_review_id": 147307772,
      "id": 211010036,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTAxMDAzNg==",
      "diff_hunk": "@@ -233,3 +233,24 @@ BlockFilter::BlockFilter(BlockFilterType filter_type, const CBlock& block, const\n         throw std::invalid_argument(\"unknown filter_type\");\n     }\n }\n+\n+uint256 BlockFilter::GetHash() const",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "ab852f91602c268d894e8f882f7f8212fd39f9dd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"blockfilter: Serialization methods on BlockFilter.\" (c14e4d5a950ed40d96a8956e4622e1d9670da72d)\r\n\r\nNote: https://github.com/bitcoin/bips/blob/master/bip-0157.mediawiki#filter-headers is the relevant section of the bip describing block filter hash (`GetHash`) and filter header (`ComputeHeader`) derivations.",
      "created_at": "2018-08-17T19:23:32Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r211010036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211010036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211403699",
      "pull_request_review_id": 147818087,
      "id": 211403699,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQwMzY5OQ==",
      "diff_hunk": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_UNDO_H\n #define BITCOIN_UNDO_H\n \n+#include <coins.h>",
      "path": "src/undo.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f7a5bdb54ba597fe06bcb54e886c43436899ab48",
      "in_reply_to_id": 210999608,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's required because `blockfilter.h` includes `undo.h` and won't compile otherwise. This could be moved to separate commit though.",
      "created_at": "2018-08-20T20:52:50Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r211403699",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211403699"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211406600",
      "pull_request_review_id": 147821766,
      "id": 211406600,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQwNjYwMA==",
      "diff_hunk": "@@ -113,6 +113,41 @@ BOOST_AUTO_TEST_CASE(streams_vector_reader)\n     BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n }\n \n+BOOST_AUTO_TEST_CASE(bitstream_reader_writer)\n+{\n+    CDataStream data(SER_NETWORK, INIT_PROTO_VERSION);\n+\n+    BitStreamWriter<CDataStream> bit_writer(data);\n+    bit_writer.Write(0, 1);\n+    bit_writer.Write(2, 2);\n+    bit_writer.Write(6, 3);\n+    bit_writer.Write(11, 4);\n+    bit_writer.Write(1, 5);\n+    bit_writer.Write(32, 6);\n+    bit_writer.Write(7, 7);\n+    bit_writer.Write(30497, 16);\n+    bit_writer.Flush();\n+\n+    CDataStream data_copy(data);\n+    uint32_t serialized_int1;\n+    data >> serialized_int1;\n+    BOOST_CHECK_EQUAL(serialized_int1, (uint32_t)0x7700C35A); // NOTE: Serialized as LE\n+    uint16_t serialized_int2;\n+    data >> serialized_int2;\n+    BOOST_CHECK_EQUAL(serialized_int2, (uint16_t)0x1072); // NOTE: Serialized as LE\n+\n+    BitStreamReader<CDataStream> bit_reader(data_copy);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(1), 0);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(2), 2);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(3), 6);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(4), 11);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(5), 1);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(6), 32);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(7), 7);\n+    BOOST_CHECK_EQUAL(bit_reader.Read(16), 30497);\n+    BOOST_CHECK_THROW(bit_reader.Read(8), std::ios_base::failure);",
      "path": "src/test/streams_tests.cpp",
      "position": 81,
      "original_position": 36,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "e15e553b746e64f0eeda420e4c10eccfc747d69f",
      "in_reply_to_id": 210976725,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't understand the benefit. The assertion of a `std::ios_base::failure` is meant to test that the buffer is out of data.",
      "created_at": "2018-08-20T21:03:35Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r211406600",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211406600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 148,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211407126",
      "pull_request_review_id": 147822466,
      "id": 211407126,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQwNzEyNg==",
      "diff_hunk": "@@ -509,12 +509,102 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n \n+    /// Buffered byte read in from the input stream. A new byte is read into the\n+    /// buffer when m_offset reaches 8.\n+    uint8_t m_buffer{0};\n \n+    /// Number of high order bits in m_buffer already returned by previous\n+    /// Read() calls. The next bit to be returned is at this offset from the\n+    /// most significant bit position.\n+    int m_offset{8};\n \n+public:\n+    explicit BitStreamReader(IStream& istream) : m_istream(istream) {}\n \n+    uint64_t Read(int nbits) {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 22,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "faaa4b8432d194acb26ffcac07c379444da327ac",
      "in_reply_to_id": 210954376,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, good catch.",
      "created_at": "2018-08-20T21:05:50Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r211407126",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211407126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 534,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211492786",
      "pull_request_review_id": 147921118,
      "id": 211492786,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTQ5Mjc4Ng==",
      "diff_hunk": "@@ -193,3 +195,41 @@ bool GCSFilter::MatchAny(const std::set<Element>& elements) const\n     const std::vector<uint64_t> queries = BuildHashedSet(elements);\n     return MatchInternal(queries.data(), queries.size());\n }\n+\n+static std::set<GCSFilter::Element> BasicFilterElements(const CBlock& block,",
      "path": "src/blockfilter.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "f7a5bdb54ba597fe06bcb54e886c43436899ab48",
      "in_reply_to_id": 211006188,
      "user": {
        "login": "jimpo",
        "id": 881253,
        "node_id": "MDQ6VXNlcjg4MTI1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/881253?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jimpo",
        "html_url": "https://github.com/jimpo",
        "followers_url": "https://api.github.com/users/jimpo/followers",
        "following_url": "https://api.github.com/users/jimpo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jimpo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jimpo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jimpo/subscriptions",
        "organizations_url": "https://api.github.com/users/jimpo/orgs",
        "repos_url": "https://api.github.com/users/jimpo/repos",
        "events_url": "https://api.github.com/users/jimpo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jimpo/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added the typedef to `std::set`. In commit e645d53b3d5fa5912e3a99cc4fec74aee64e81e5, I change it to `std::unordered_set` which uses a randomly selected SipHash instance to hash the byte vector. Let me know if you think this is acceptable or whether it should be left as `std::set`.",
      "created_at": "2018-08-21T06:39:11Z",
      "updated_at": "2018-08-25T17:02:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r211492786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/211492786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212830981",
      "pull_request_review_id": 149543032,
      "id": 212830981,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjgzMDk4MQ==",
      "diff_hunk": "@@ -0,0 +1,260 @@\n+// Copyright (c) 2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <blockfilter.h>\n+#include <hash.h>\n+#include <primitives/transaction.h>\n+#include <script/script.h>\n+#include <streams.h>\n+\n+/// SerType used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_TYPE = SER_NETWORK;\n+\n+/// Protocol version used to serialize parameters in GCS filter encoding.\n+static constexpr int GCS_SER_VERSION = 0;\n+\n+template <typename OStream>\n+static void GolombRiceEncode(BitStreamWriter<OStream>& bitwriter, uint8_t P, uint64_t x)\n+{\n+    // Write quotient as unary-encoded: q 1's followed by one 0.\n+    uint64_t q = x >> P;\n+    while (q > 0) {\n+        int nbits = q <= 64 ? static_cast<int>(q) : 64;\n+        bitwriter.Write(~0ULL, nbits);\n+        q -= nbits;\n+    }\n+    bitwriter.Write(0, 1);\n+\n+    // Write the remainder in P bits. Since the remainder is just the bottom\n+    // P bits of x, there is no need to mask first.\n+    bitwriter.Write(x, P);\n+}\n+\n+template <typename IStream>\n+static uint64_t GolombRiceDecode(BitStreamReader<IStream>& bitreader, uint8_t P)\n+{\n+    // Read unary-encoded quotient: q 1's followed by one 0.\n+    uint64_t q = 0;\n+    while (bitreader.Read(1) == 1) {\n+        ++q;\n+    }\n+\n+    uint64_t r = bitreader.Read(P);\n+\n+    return (q << P) + r;\n+}\n+\n+// Map a value x that is uniformly distributed in the range [0, 2^64) to a\n+// value uniformly distributed in [0, n) by returning the upper 64 bits of\n+// x * n.\n+//\n+// See: https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/\n+static uint64_t MapIntoRange(uint64_t x, uint64_t n)\n+{\n+#ifdef __SIZEOF_INT128__\n+    return (static_cast<unsigned __int128>(x) * static_cast<unsigned __int128>(n)) >> 64;\n+#else\n+    // To perform the calculation on 64-bit numbers without losing the\n+    // result to overflow, split the numbers into the most significant and\n+    // least significant 32 bits and perform multiplication piece-wise.\n+    //\n+    // See: https://stackoverflow.com/a/26855440\n+    uint64_t x_hi = x >> 32;\n+    uint64_t x_lo = x & 0xFFFFFFFF;\n+    uint64_t n_hi = n >> 32;\n+    uint64_t n_lo = n & 0xFFFFFFFF;\n+\n+    uint64_t ac = x_hi * n_hi;\n+    uint64_t ad = x_hi * n_lo;\n+    uint64_t bc = x_lo * n_hi;\n+    uint64_t bd = x_lo * n_lo;\n+\n+    uint64_t mid34 = (bd >> 32) + (bc & 0xFFFFFFFF) + (ad & 0xFFFFFFFF);\n+    uint64_t upper64 = ac + (bc >> 32) + (ad >> 32) + (mid34 >> 32);\n+    return upper64;\n+#endif\n+}\n+\n+uint64_t GCSFilter::HashToRange(const Element& element) const\n+{\n+    uint64_t hash = CSipHasher(m_siphash_k0, m_siphash_k1)\n+        .Write(element.data(), element.size())\n+        .Finalize();\n+    return MapIntoRange(hash, m_F);\n+}\n+\n+std::vector<uint64_t> GCSFilter::BuildHashedSet(const ElementSet& elements) const\n+{\n+    std::vector<uint64_t> hashed_elements;\n+    hashed_elements.reserve(elements.size());\n+    for (const Element& element : elements) {\n+        hashed_elements.push_back(HashToRange(element));\n+    }\n+    std::sort(hashed_elements.begin(), hashed_elements.end());\n+    return hashed_elements;\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M)\n+    : m_siphash_k0(siphash_k0), m_siphash_k1(siphash_k1), m_P(P), m_M(M), m_N(0), m_F(0)\n+{}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+                     std::vector<unsigned char> encoded_filter)\n+    : GCSFilter(siphash_k0, siphash_k1, P, M)\n+{\n+    m_encoded = std::move(encoded_filter);\n+\n+    VectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    uint64_t N = ReadCompactSize(stream);\n+    m_N = static_cast<uint32_t>(N);\n+    if (m_N != N) {\n+        throw std::ios_base::failure(\"N must be <2^32\");\n+    }\n+    m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_M);\n+\n+    // Verify that the encoded filter contains exactly N elements. If it has too much or too little\n+    // data, a std::ios_base::failure exception will be raised.\n+    BitStreamReader<VectorReader> bitreader(stream);\n+    for (uint64_t i = 0; i < m_N; ++i) {\n+        GolombRiceDecode(bitreader, m_P);\n+    }\n+    if (!stream.empty()) {\n+        throw std::ios_base::failure(\"encoded_filter contains excess data\");\n+    }\n+}\n+\n+GCSFilter::GCSFilter(uint64_t siphash_k0, uint64_t siphash_k1, uint8_t P, uint32_t M,\n+                     const ElementSet& elements)\n+    : GCSFilter(siphash_k0, siphash_k1, P, M)\n+{\n+    size_t N = elements.size();\n+    m_N = static_cast<uint32_t>(N);\n+    if (m_N != N) {\n+        throw std::invalid_argument(\"N must be <2^32\");\n+    }\n+    m_F = static_cast<uint64_t>(m_N) * static_cast<uint64_t>(m_M);\n+\n+    CVectorWriter stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    WriteCompactSize(stream, m_N);\n+\n+    if (elements.empty()) {\n+        return;\n+    }\n+\n+    BitStreamWriter<CVectorWriter> bitwriter(stream);\n+\n+    uint64_t last_value = 0;\n+    for (uint64_t value : BuildHashedSet(elements)) {\n+        uint64_t delta = value - last_value;\n+        GolombRiceEncode(bitwriter, m_P, delta);\n+        last_value = value;\n+    }\n+\n+    bitwriter.Flush();\n+}\n+\n+bool GCSFilter::MatchInternal(const uint64_t* element_hashes, size_t size) const\n+{\n+    VectorReader stream(GCS_SER_TYPE, GCS_SER_VERSION, m_encoded, 0);\n+\n+    // Seek forward by size of N\n+    uint64_t N = ReadCompactSize(stream);\n+    assert(N == m_N);\n+\n+    BitStreamReader<VectorReader> bitreader(stream);\n+\n+    uint64_t value = 0;\n+    size_t hashes_index = 0;\n+    for (uint32_t i = 0; i < m_N; ++i) {\n+        uint64_t delta = GolombRiceDecode(bitreader, m_P);\n+        value += delta;\n+\n+        while (true) {\n+            if (hashes_index == size) {\n+                return false;\n+            } else if (element_hashes[hashes_index] == value) {\n+                return true;\n+            } else if (element_hashes[hashes_index] > value) {\n+                break;\n+            }\n+\n+            hashes_index++;\n+        }\n+    }\n+\n+    return false;\n+}\n+\n+bool GCSFilter::Match(const Element& element) const\n+{\n+    uint64_t query = HashToRange(element);\n+    return MatchInternal(&query, 1);\n+}\n+\n+bool GCSFilter::MatchAny(const ElementSet& elements) const\n+{\n+    const std::vector<uint64_t> queries = BuildHashedSet(elements);\n+    return MatchInternal(queries.data(), queries.size());\n+}\n+\n+static GCSFilter::ElementSet BasicFilterElements(const CBlock& block,\n+                                                 const CBlockUndo& block_undo)\n+{\n+    GCSFilter::ElementSet elements;\n+\n+    for (const CTransactionRef& tx : block.vtx) {\n+        for (const CTxOut& txout : tx->vout) {\n+            const CScript& script = txout.scriptPubKey;\n+            if (script[0] == OP_RETURN) continue;",
      "path": "src/blockfilter.cpp",
      "position": 211,
      "original_position": 211,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Isnt this an OOB read?",
      "created_at": "2018-08-26T16:07:00Z",
      "updated_at": "2018-08-26T16:07:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r212830981",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/212830981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 211,
      "original_line": 211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213016782",
      "pull_request_review_id": 149762413,
      "id": 213016782,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzAxNjc4Mg==",
      "diff_hunk": "@@ -436,12 +510,105 @@ class CDataStream\n     }\n };\n \n+template <typename IStream>\n+class BitStreamReader\n+{\n+private:\n+    IStream& m_istream;\n+\n+    /// Buffered byte read in from the input stream. A new byte is read into the\n+    /// buffer when m_offset reaches 8.\n+    uint8_t m_buffer{0};\n+\n+    /// Number of high order bits in m_buffer already returned by previous\n+    /// Read() calls. The next bit to be returned is at this offset from the\n+    /// most significant bit position.\n+    int m_offset{8};\n+\n+public:\n+    explicit BitStreamReader(IStream& istream) : m_istream(istream) {}\n+\n+    /** Read the specified number of bits from the stream. The data is returned\n+     * in the nbits least signficant bits of a 64-bit uint.",
      "path": "src/streams.h",
      "position": 104,
      "original_position": 104,
      "commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "original_commit_id": "254c85b68794ada713dbdae415db72adf5fcbaf3",
      "in_reply_to_id": null,
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Post-merge nit: \"signficant\" should be \"significant\".\r\n\r\nThis misspelling was automatically identified by `codespell`.\r\n\r\nAutomatic `codespell` checking is introduced in PR #13954. It warns (note: warn only, no build failure) when a PR introduces spelling errors. Please review :-)",
      "created_at": "2018-08-27T15:30:13Z",
      "updated_at": "2018-08-27T15:30:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/12254#discussion_r213016782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/213016782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12254"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 532,
      "original_line": 532,
      "side": "RIGHT"
    }
  ]
}