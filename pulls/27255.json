{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
    "id": 1274950700,
    "node_id": "PR_kwDOABII585L_jQs",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27255",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27255.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27255.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/998d3015898943b1d6dea5edc3d1d18d8702dc73",
    "number": 27255,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "MiniTapscript: port Miniscript to Tapscript",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Miniscript was targeting P2WSH, and as such can currently only be used in `wsh()` descriptors. This pull request introduces support for Tapscript in Miniscript and makes Miniscript available inside `tr()` descriptors. It adds support for both watching *and* signing TapMiniscript descriptors.\r\n\r\nThe main changes to Miniscript for Tapscript are the following:\r\n- A new `multi_a` fragment is introduced with the same semantics as `multi`. Like in other descriptors `multi` and `multi_a` can exclusively be used in respectively P2WSH and Tapscript.\r\n- The `d:` fragment has the `u` property under Tapscript, since the `MINIMALIF` rule is now consensus. See also https://github.com/bitcoin/bitcoin/pull/24906.\r\n- Keys are now serialized as 32 bytes. (Note this affects the key hashes.)\r\n- The resource consumption checks and calculation changed. Some limits were lifted in Tapscript, and signatures are now 64 bytes long.\r\n\r\nThe largest amount of complexity probably lies in the last item. Scripts under Taproot can now run into the maximum stack size while executing a fragment. For instance if you've got a stack size of `999` due to the initial witness plus some execution that happened before and try to execute a `hash256` it would `DUP` (increasing the stack size `1000`), `HASH160` and then push the hash on the stack making the script fail.\r\nTo make sure this does not happen on any of the spending paths of a sane Miniscript, we introduce a tracking of the maximum stack size during execution of a fragment. See the commits messages for details. Those commits were separated from the resource consumption change, and the fuzz target was tweaked to sometimes pad the witness so the script runs on the brink of the stack size limit to make sure the stack size was not underestimated.\r\n\r\nExisting Miniscript unit, functional and fuzz tests are extended with Tapscript logic and test cases. Care was taken for seed stability in the fuzz targets where we cared more about them.\r\n\r\nThe design of Miniscript for Tapscript is the result of discussions between various people over the past year(s). To the extent of my knowledge at least Pieter Wuille, Sanket Kanjalkar, Andrew Poelstra and Andrew Chow contributed thoughts and ideas.",
    "labels": [],
    "created_at": "2023-03-14T12:24:34Z",
    "updated_at": "2023-05-17T04:56:43Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "90c5c0682a9a3f5f6355119eaa4980e1f1512faf",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "darosior:tapminiscript",
      "ref": "tapminiscript",
      "sha": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 168868367,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjg4NjgzNjc=",
        "name": "bitcoin",
        "full_name": "darosior/bitcoin",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/darosior/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bitcoin",
        "archive_url": "https://api.github.com/repos/darosior/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/darosior/bitcoin/events",
        "forks_url": "https://api.github.com/repos/darosior/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/darosior/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/darosior/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/darosior/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/darosior/bitcoin/hooks",
        "svn_url": "https://github.com/darosior/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 216031,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-16T18:02:44Z",
        "created_at": "2019-02-02T19:20:27Z",
        "updated_at": "2023-05-05T11:25:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "904631e0fc00ac9c8a03d1ce226d071bf88c00db",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34325,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 626,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-07T07:29:24Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T07:34:31Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 1368,
    "deletions": 573,
    "changed_files": 11,
    "commits": 22,
    "review_comments": 34,
    "comments": 11
  },
  "events": [
    {
      "event": "commented",
      "id": 1468010901,
      "node_id": "IC_kwDOABII585XgBGV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468010901",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:24:37Z",
      "updated_at": "2023-05-17T04:56:42Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [michaelfolkson](https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468032095), [josibake](https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1485343142) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27552](https://github.com/bitcoin/bitcoin/pull/27552) (Add support for \"partial\" fuzzers that indicate usefulness by sipa)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468010901",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1468032095,
      "node_id": "IC_kwDOABII585XgGRf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468032095",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:40:02Z",
      "updated_at": "2023-03-14T12:40:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, an important piece in opening up Taproot scripting.\r\n\r\n> The design of Miniscript for Tapscript is the result of discussions between various people over the past year(s).\r\n\r\nYour PR description is great but perhaps you can link to a few of those discussions for extra background reading for those that are interested? e.g. https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e\r\n\r\nAlso just checking if this PR should be in Draft or not? Are there ongoing open discussions on anything important or is this ready for extensive review?\r\n\r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468032095",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8743273348,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIJI8OE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8743273348",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T12:53:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8744158901,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIJMUa1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8744158901",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:09:46Z"
    },
    {
      "event": "commented",
      "id": 1468209943,
      "node_id": "IC_kwDOABII585XgxsX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468209943",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:31:10Z",
      "updated_at": "2023-03-14T14:31:10Z",
      "author_association": "MEMBER",
      "body": "Yeah, thanks for the suggestion. Reviewers may be interested in https://github.com/sipa/miniscript/pull/134 as well.\r\n\r\n> Also just checking if this PR should be in Draft or not? Are there ongoing open discussions on anything important or is this ready for extensive review?\r\n\r\nIt is ready for (extensive or not) review. Otherwise i'd have opened it as a draft. But please tell me clearly if you disagree.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468209943",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1468263557,
      "node_id": "IC_kwDOABII585Xg-yF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1468263557",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-14T14:58:54Z",
      "updated_at": "2023-03-16T11:25:48Z",
      "author_association": "MEMBER",
      "body": "As it stands in this PR it would be possible to import a `tr()` descriptor unspendable by standardness: in addition to the script itself, we also need to check if the whole witness (including the control block, which is outside Miniscript..) isn't larger than the maximum standard transaction size.\r\n\r\nEDIT: Actually since we are still bounded by the `MAX_STACK_SIZE` of `1000` and no element is larger than `65` bytes, i think we can do something more elegant than having to compute the maximum witness size of a script. Just have the following conservative bound: refuse any script whose size is larger than `MAX_STANDARD_TX_WEIGHT - (1 + 65) * MAX_STACK_SIZE - TAPROOT_CONTROL_MAX_SIZE` (i.e. `329871` bytes). This is still plenty, and should there ever be a usecase for a larger script we can always relax this check by having an accurate max witness size calculation.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1468263557",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "reviewed",
      "id": 1340932665,
      "node_id": "PRR_kwDOABII585P7QI5",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1340932665",
      "submitted_at": "2023-03-15T08:57:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341664972,
      "node_id": "PRR_kwDOABII585P-C7M",
      "url": null,
      "actor": null,
      "commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341664972",
      "submitted_at": "2023-03-15T14:42:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341720788,
      "node_id": "PRR_kwDOABII585P-QjU",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341720788",
      "submitted_at": "2023-03-15T15:08:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341735215,
      "node_id": "PRR_kwDOABII585P-UEv",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341735215",
      "submitted_at": "2023-03-15T15:14:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341762826,
      "node_id": "PRR_kwDOABII585P-a0K",
      "url": null,
      "actor": null,
      "commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341762826",
      "submitted_at": "2023-03-15T15:20:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1341784989,
      "node_id": "PRR_kwDOABII585P-gOd",
      "url": null,
      "actor": null,
      "commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1341784989",
      "submitted_at": "2023-03-15T15:25:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8768884947,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIKqpDT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8768884947",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T15:33:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8769910509,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIKujbt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769910509",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T16:59:29Z"
    },
    {
      "event": "commented",
      "id": 1472365761,
      "node_id": "IC_kwDOABII585XwoTB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1472365761",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z",
      "updated_at": "2023-03-16T17:04:31Z",
      "author_association": "MEMBER",
      "body": "In the last push i've:\r\n- Added a commit to avoid a stack overflow during the destruction of a too large `Node`, due to recursive calls in `shared_ptr`'s destructor. (The reason the CI was failing under MSVC.)\r\n- Lowered the maximum size of a TapMiniscript to make sure a spending witness would never hit the maximum standard transaction size limit. (It's still pretty high.)\r\n- Addressed all comments from @bigspider.\r\n\r\nThis PR is now ready for another round of review.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1472365761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 8769965302,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIKuwz2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769965302",
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z"
    },
    {
      "event": "subscribed",
      "id": 8769965326,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIKuw0O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8769965326",
      "actor": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-16T17:04:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8776733426,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAILIlLy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8776733426",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T10:30:07Z"
    },
    {
      "event": "commented",
      "id": 1473626748,
      "node_id": "IC_kwDOABII585X1cJ8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473626748",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T10:31:02Z",
      "updated_at": "2023-03-17T10:31:02Z",
      "author_association": "MEMBER",
      "body": "Pushed to try to wake the CI up. Looks like it worked!",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473626748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1473771519,
      "node_id": "IC_kwDOABII585X1_f_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473771519",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:40:32Z",
      "updated_at": "2023-03-17T12:45:04Z",
      "author_association": "MEMBER",
      "body": "Very cool. I also noticed [bitcoin.sipa.be/miniscript](https://bitcoin.sipa.be/miniscript/) has been updated.\r\n\r\nHas there been any thought into how MuSig2 (and threshold friends) would fit into this in the future? I guess that's only a problem for the compiler, since for the purpose of script it doesn't matter if e.g. public key C is an aggregate of A + B. But it does change the meaning of something like `tr(C,multi_a(2,A,B))` (i.e. regular tapscript multisig fallback if MuSig2 coordination fails - maybe not a good example, since this already works).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473771519",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "commented",
      "id": 1473777054,
      "node_id": "IC_kwDOABII585X2A2e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1473777054",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z",
      "updated_at": "2023-03-17T12:45:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Has there been any thought into how MuSig2 (and threshold friends) would fit into this in the future?\r\n\r\nDiscussed in sipa's [gist](https://gist.github.com/sipa/06c5c844df155d4e5044c2c8cac9c05e#musig-descriptors). Can comment on that gist @Sjors \r\n",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1473777054",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 8777928017,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAILNI1R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8777928017",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z"
    },
    {
      "event": "subscribed",
      "id": 8777928043,
      "node_id": "SE_lADOABII585gwrw2zwAAAAILNI1r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8777928043",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-17T12:45:35Z"
    },
    {
      "event": "reviewed",
      "id": 1357917424,
      "node_id": "PRR_kwDOABII585Q8Czw",
      "url": null,
      "actor": null,
      "commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Ayaan7211",
        "id": 128941225,
        "node_id": "U_kgDOB698qQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/128941225?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Ayaan7211",
        "html_url": "https://github.com/Ayaan7211",
        "followers_url": "https://api.github.com/users/Ayaan7211/followers",
        "following_url": "https://api.github.com/users/Ayaan7211/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Ayaan7211/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Ayaan7211/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Ayaan7211/subscriptions",
        "organizations_url": "https://api.github.com/users/Ayaan7211/orgs",
        "repos_url": "https://api.github.com/users/Ayaan7211/repos",
        "events_url": "https://api.github.com/users/Ayaan7211/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Ayaan7211/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1357917424",
      "submitted_at": "2023-03-25T23:49:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "commented",
      "id": 1485343142,
      "node_id": "IC_kwDOABII585YiImm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1485343142",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-27T15:30:34Z",
      "updated_at": "2023-03-27T15:30:34Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1485343142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "labeled",
      "id": 8935769395,
      "node_id": "LE_lADOABII585gwrw2zwAAAAIUnQUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8935769395",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-05T14:18:20Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1376054310,
      "node_id": "PRR_kwDOABII585SBOwm",
      "url": null,
      "actor": null,
      "commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left some style nits, nothing important. Might want to run `clang-tidy`, as it ended up reformatting a lot of the new code. Also got a few warnings, not quite sure about the `FromPKBytes` warning\r\n\r\nStill trying to wrap my head around the logic; I'll follow up with a (hopefully) more helpful review",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1376054310",
      "submitted_at": "2023-04-07T10:54:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "reviewed",
      "id": 1396864124,
      "node_id": "PRR_kwDOABII585TQnR8",
      "url": null,
      "actor": null,
      "commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1396864124",
      "submitted_at": "2023-04-23T08:21:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "commented",
      "id": 1525910357,
      "node_id": "IC_kwDOABII585a84tV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525910357",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z",
      "updated_at": "2023-04-27T15:33:23Z",
      "author_association": "MEMBER",
      "body": "Reviewers, i've seen the comments i'm going to address them soon and rebase this.\r\n\r\nI have discussed this with @sipa in person today. A couple notes from my recollection:\r\n- I introduce the `diff` (net difference in stack size before and after executing a fragment) and `exec` (maximum stack size reached during execution) here to account for the maximum stack size at all time. Pieter noticed we may be able to express the size in function of the diff. Or vice versa.\r\n- We tried to assert this property in the fuzz test.\r\n- We noticed `or_i` is the only fragment with two possible canonical dissatisfactions. If both dissatisfactions are available (only if both fragments are `d`) we choose the one with the largest stack size. But it seems unnecessary, the satisfier would always choose the smallest one. But the satisfier chooses in function of the actual witness size (not stack size) so it could be checking the dissatisfaction with the largest stack size.\r\n\r\nWe'll see if we can introduce some of this to the existing code and rebase this on top.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1525910357",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 9116053227,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIfW-7r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9116053227",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z"
    },
    {
      "event": "subscribed",
      "id": 9116053236,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIfW-70",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9116053236",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-27T15:33:23Z"
    },
    {
      "event": "reviewed",
      "id": 1406271728,
      "node_id": "PRR_kwDOABII585T0gDw",
      "url": null,
      "actor": null,
      "commit_id": "02a5fa633f9f44b378f7c015275eacd54939e980",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#pullrequestreview-1406271728",
      "submitted_at": "2023-04-28T16:32:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUwYWVmYTA2NDY5NDcwZTQyYjY3YzA3YWQ2ODM4MWRkZDhiMDE2YWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50aefa06469470e42b67c07ad68381ddd8b016ae",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/50aefa06469470e42b67c07ad68381ddd8b016ae",
      "tree": {
        "sha": "3eff47e2006cb426abab638e87bfbb61d087266c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3eff47e2006cb426abab638e87bfbb61d087266c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3eff47e2006cb426abab638e87bfbb61d087266c\nparent 397ed22162f05fa7fb27c2e5f49f5917884b4716\nauthor Antoine Poinsot <darosior@protonmail.com> 1674304995 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1682792280 +0200\n\nminiscript: introduce a MsContext() helper to contexts\n\nWe are going to introduce Tapscript support in Miniscript, for which\nsome of Miniscript rules and properties change (new or modified\nfragments, different typing rules, different resources consumption, ..).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRNX1gACgkQ4T/BRc0/\nQwQwLAv8CZRbsn8avIS+8Y4zqNmihDudChxv1NiZALgDBjb+ZpuZjm7qKSa2zlAu\nqp3I20rjwQPVcF1/rAXOVYwoficNWFo+J9/8+LUiKWUXphhL4wb2NFUX1SCN4Vxb\nrItc+k3HmZXyyjVUaq4r5+hfg+X7ExEx5ILyazOFC7JIZu3mrY8csEFI/TTle+QG\nOCXLgo/FFe04fnTX8F02Wx8ZxJLsE5gjnRUoMSzvhJDASG+ngqLcbhH92tlEj1dH\n9/f6/E/En/S0iP+BiaeqKWsxHM91DqjTT8kEqpalgzQ+/5k4HT2PODsWAnusuQYK\nyyC0Nu8qDpBbFSncADQncfUoAE+stTgJlweSqCaQahpZjeqR4Ux0yi0hwcK2IDWv\nhUIktLzGeL/ydkecudLSrBQ+sAjPRAuxvW6PqeT10Rwj9j+VXLzL3XwK97ZqyWX2\nAolPS/oZCpGZ5zHi2nJwFYDjMV8qxUcBnRka6guuW8B+wH0mD3U/36vLaKHBi9ze\nHm1g5TN3\n=ze4q\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397ed22162f05fa7fb27c2e5f49f5917884b4716",
          "sha": "397ed22162f05fa7fb27c2e5f49f5917884b4716",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/397ed22162f05fa7fb27c2e5f49f5917884b4716"
        }
      ],
      "message": "miniscript: introduce a MsContext() helper to contexts\n\nWe are going to introduce Tapscript support in Miniscript, for which\nsome of Miniscript rules and properties change (new or modified\nfragments, different typing rules, different resources consumption, ..).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-04-29T18:18:00Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:43:15Z"
      },
      "sha": "50aefa06469470e42b67c07ad68381ddd8b016ae"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU3N2VkZmNjYmE3ZWNlOGUyZDc4NDcyOTY2ZmI2NmQwNmQyNGViNTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/577edfccba7ece8e2d78472966fb66d06d24eb59",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/577edfccba7ece8e2d78472966fb66d06d24eb59",
      "tree": {
        "sha": "98c59c9a02b25006ccc8098db0092cf71096f98d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98c59c9a02b25006ccc8098db0092cf71096f98d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 98c59c9a02b25006ccc8098db0092cf71096f98d\nparent 50aefa06469470e42b67c07ad68381ddd8b016ae\nauthor Antoine Poinsot <darosior@protonmail.com> 1683042909 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683042909 +0200\n\nminiscript: don't anticipate signature presence in CalcStackSize()\n\nIt's true that for any public key there'll be a signature check in a\nvalid Miniscript. The code would previously, when computing the size of\na satisfaction, account for the signature when it sees a public key\npush. Instead, account for it when it is required (ie when encountering\nthe `c:` wrapper). This has two benefits:\n- Allows to accurately compute the net effect of a fragment on the stack\n  size. This is necessary to track the size of the stack during the\n  execution of a Script.\n- It also just makes more sense, making the code more accessible to\n  future contributors.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRRM/gACgkQ4T/BRc0/\nQwTC6QwAzb3sVNqi5V7u7yYgqaxA1Hrux0wjVx6UVPbnHqws5Mxo7GWdjttzooYc\n1mHFuctmW7XwQ6J9BAJoQDaCE9EjtIxJF6PByhjWffawmmoHbT6yMiG6huMZKzxn\nbh7PJY3/eZ0CsHpgaFimlBcLCdiiOMaZEJPbgY5FJqIR4+59Qhb2coQlZYaNlknh\nMalkS1A5gGj7Bi/yuJUVXyv+LgbGe3RRMncyKGoSyPDE7FbsxQqTyHkdCveAm8AT\nCRb4KAxuF5btwHoyGXKcmlzXp5gsEE3Qq5xLjHpZnHeLg0GOnSgqi+tsCS1JWuDA\nXRW6QCHpliWnkUOysLQ/xytYxOovwRSEmAlaTqZkrzdxqEuR5E5D3QsuQKBplWeu\nhc4VHbfyOkdEFVxr1y+Kb/59E0A/AJwEizKJ0XATh4BGezXvxrfkjIxrsCWXAVlS\nDP9cby4IzijoA/nRPoVwzAd2Hml1dIkQnTxRQqUGTnG7KbqQc/8djentiYBI365g\nONnoq+pL\n=+mYF\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50aefa06469470e42b67c07ad68381ddd8b016ae",
          "sha": "50aefa06469470e42b67c07ad68381ddd8b016ae",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/50aefa06469470e42b67c07ad68381ddd8b016ae"
        }
      ],
      "message": "miniscript: don't anticipate signature presence in CalcStackSize()\n\nIt's true that for any public key there'll be a signature check in a\nvalid Miniscript. The code would previously, when computing the size of\na satisfaction, account for the signature when it sees a public key\npush. Instead, account for it when it is required (ie when encountering\nthe `c:` wrapper). This has two benefits:\n- Allows to accurately compute the net effect of a fragment on the stack\n  size. This is necessary to track the size of the stack during the\n  execution of a Script.\n- It also just makes more sense, making the code more accessible to\n  future contributors.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-02T15:55:09Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-02T15:55:09Z"
      },
      "sha": "577edfccba7ece8e2d78472966fb66d06d24eb59"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNiMGNjYzRkMWM4NDc1MjZmNDgxZjQzYmY1YTIyMzc2OTFjMWQxM2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb0ccc4d1c847526f481f43bf5a2237691c1d13b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cb0ccc4d1c847526f481f43bf5a2237691c1d13b",
      "tree": {
        "sha": "b28c56108988316cd102aabc39880837e6eb278f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b28c56108988316cd102aabc39880837e6eb278f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b28c56108988316cd102aabc39880837e6eb278f\nparent 577edfccba7ece8e2d78472966fb66d06d24eb59\nauthor Antoine Poinsot <darosior@protonmail.com> 1674305399 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683105902 +0200\n\nminiscript: restrict multi() usage to P2WSH context\n\nCHECKMULTISIG is disabled for Tapscript. Instead, we'll introduce\na multi_a() fragment with the same semantic as multi().\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSKH8ACgkQ4T/BRc0/\nQwRPeQwA3knWsDwpyz2tu+AGFuGadRuBqAxwTeFXL2B8IYGZjXAc50DuGYrZ1Ybd\nnXmkirCZyDB0lWM1VIew5NtdnlXdssixv2sWtyc+/17aM0CmGzM4fwgHYHCiJvE5\nma29sjE94p1Y5G3OaN3FQb4eBqB1S2ijLRaNbDt9hpLPvd+FCudFdrwY6olJPT+K\nYlRNsnDQvuLvZTGiHiWwjX3oUjKFlzVjcDP0qhkPbvxQpSKBuk4sdmVCZzKumAID\nBzRRV+Mn0Ap59XKK03yH01TB39PcEGPQyctkSKGjGW7gAHWxfmE+JRfGXd66T+jn\ncFSDty4htZxpRyP0x+UR0EUGv6Z//u+dQIV2tq+O0uOUQCtgvXhG9bZrdzfx5z4+\ntMcmOA7pW2i1bwUA+V8ffSaWCyYCFEepjv3SRTgB3yq7X9++63MZ/O0j9CPSduax\nmBFnddxzUQT7X+CH3BdtMlEQ12ElyvLrbfu76N0laBWjipKjQNqXC3ZP8MoqHcli\ngc7nzLSl\n=C2Mj\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/577edfccba7ece8e2d78472966fb66d06d24eb59",
          "sha": "577edfccba7ece8e2d78472966fb66d06d24eb59",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/577edfccba7ece8e2d78472966fb66d06d24eb59"
        }
      ],
      "message": "miniscript: restrict multi() usage to P2WSH context\n\nCHECKMULTISIG is disabled for Tapscript. Instead, we'll introduce\na multi_a() fragment with the same semantic as multi().",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T09:25:02Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:49:59Z"
      },
      "sha": "cb0ccc4d1c847526f481f43bf5a2237691c1d13b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFjMjczOTAyZDMyMzAzYjg2ODZmYTNhNDE0YzI4MjIxZjA1OWU4ODA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c273902d32303b8686fa3a414c28221f059e880",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1c273902d32303b8686fa3a414c28221f059e880",
      "tree": {
        "sha": "0c64a16fe95db46a2084e22ba23fed75f4ce99b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0c64a16fe95db46a2084e22ba23fed75f4ce99b4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0c64a16fe95db46a2084e22ba23fed75f4ce99b4\nparent cb0ccc4d1c847526f481f43bf5a2237691c1d13b\nauthor Antoine Poinsot <darosior@protonmail.com> 1674305543 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683105920 +0200\n\nminiscript: introduce a multi_a fragment\n\nIt is the equivalent of multi() but for Tapscript, using CHECKSIGADD\ninstead of CHECKMULTISIG.\n\nIt shares the same properties as multi() but for 'n', since a threshold\nmulti_a() may have an empty vector as the top element of its\nsatisfaction. It could also have the 'o' property when it only has a\nsingle key, but in this case a 'pk()' is always preferable anyways.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSKIAACgkQ4T/BRc0/\nQwRMTgwAnHZg7rbDImP5y3/RW4bH17zfnf1eGR3J/Zic9bbPOYqq4DimzV8ofTpN\nXjUfEP5NpA+v2cuF/kjObzs6p5SHKZFd+EnXTVYJBq4POqYfhx6uyme88ZkgBkhM\nZNWRTeQCtXG73oGhhfpGx8A9ggPN3M92R70kjfF21R47IBOQczfnrUj31djH234L\n+1Zlk6Vi/iu6plyN83WDnO1oHYU+11aq72GWQflCgqNpxN0J2kiul47XyqI9V6GG\n8uUdhilD08/FsiIrS+rNXAi2m1H1W5ohf7CrPImCy7U4Vv/WiQQS/nW6egYMDOV6\nXc8geTResvfOpBQVZCye4rSDDRg/mVn+9Z6nRyK09flueP43sjKq9itpIZ9rxDQ7\nx8N0Vve8jggO/i8z5RcdVT9uyaT8MW43K5qtOOmoLUeXZF8XFXl6zz3xvtcgKbDc\n4RvYmw7QH8+3LUAyOFOLujUoRYJCznthovyz3L7rL2Ma1dbRjezr/fDcAzsQFC5l\npTEv0VMA\n=Topn\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb0ccc4d1c847526f481f43bf5a2237691c1d13b",
          "sha": "cb0ccc4d1c847526f481f43bf5a2237691c1d13b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cb0ccc4d1c847526f481f43bf5a2237691c1d13b"
        }
      ],
      "message": "miniscript: introduce a multi_a fragment\n\nIt is the equivalent of multi() but for Tapscript, using CHECKSIGADD\ninstead of CHECKMULTISIG.\n\nIt shares the same properties as multi() but for 'n', since a threshold\nmulti_a() may have an empty vector as the top element of its\nsatisfaction. It could also have the 'o' property when it only has a\nsingle key, but in this case a 'pk()' is always preferable anyways.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T09:25:20Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T12:52:23Z"
      },
      "sha": "1c273902d32303b8686fa3a414c28221f059e880"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFkMzk3YzMyNGQ4OTY1NjIyNDg5MDc3NzkxYjkyYjJmNjc3OTUyZmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad397c324d8965622489077791b92b2f677952fb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ad397c324d8965622489077791b92b2f677952fb",
      "tree": {
        "sha": "74a1c11578f52ebdec1f0cf2168ed8b1b3740ea1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74a1c11578f52ebdec1f0cf2168ed8b1b3740ea1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 74a1c11578f52ebdec1f0cf2168ed8b1b3740ea1\nparent 1c273902d32303b8686fa3a414c28221f059e880\nauthor Antoine Poinsot <darosior@protonmail.com> 1674388184 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683105920 +0200\n\nminiscript: make 'd:' have the 'u' property under Tapscript context\n\nIn Tapscript MINIMALIF is a consensus rule, so we can rely on the fact\nthat the `DUP IF [X] ENDIF` will always put an exact 1 on the stack upon\nsatisfaction.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSKIAACgkQ4T/BRc0/\nQwQ3Mwv+M3Crsda135Wv/g4TgukIG+JIi4gQrrjimWXSUvDKiBdrIbdGRhVddLJk\nd22Bhb0vYk5C6EKGNy/IzSjWS/D7Hsay+d1J8YWwknXNJfm7UBvO+A5VOnPfD6q6\nJMnuAaUeWbCZB3VtMAomb9oJcPeYjQkDC1yPDvJMnrRsCD8mQtRKjcv4Klv8oL5N\nJOZBbg1tJXtrQfjP4KSYQrD8662sRvjvv1RybezFqNihWv4PHxmNo1S9QcFUQpRW\noLCUdUgY4KBWVjeVeY92r//u6nODuJD4BVBxUEWlCg9+VxdDDGc56pix8uv8C65g\nCz/NW7hi7IWmnckAkkGK4E1+5lsSB1FOLjOmfC9EfVVldc+tDaoaxG4c/oYMk1GF\nNiMmu8kxWlPMRv60Tm56h1oEnG8EZZLpOG0TdxE6vq5BA9plMFy2va3R+4ACsb2H\nq/mTQhTIigrvznQQi5LhRRl7PaEbkrFYbapNHDAlJtnJMccz4F4pMI+pgcmhL9C/\naE/RtK3V\n=2o4X\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c273902d32303b8686fa3a414c28221f059e880",
          "sha": "1c273902d32303b8686fa3a414c28221f059e880",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1c273902d32303b8686fa3a414c28221f059e880"
        }
      ],
      "message": "miniscript: make 'd:' have the 'u' property under Tapscript context\n\nIn Tapscript MINIMALIF is a consensus rule, so we can rely on the fact\nthat the `DUP IF [X] ENDIF` will always put an exact 1 on the stack upon\nsatisfaction.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T09:25:20Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-22T11:49:44Z"
      },
      "sha": "ad397c324d8965622489077791b92b2f677952fb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3NGUxNjFhNGZhN2U3YmM0NzI2MGM0Mjg1ZjhmYjFkNjBiZGI1NmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e74e161a4fa7e7bc47260c4285f8fb1d60bdb56f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e74e161a4fa7e7bc47260c4285f8fb1d60bdb56f",
      "tree": {
        "sha": "3d305bf9d0fb0da158382de7cda9bec0bd76bf6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d305bf9d0fb0da158382de7cda9bec0bd76bf6c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3d305bf9d0fb0da158382de7cda9bec0bd76bf6c\nparent ad397c324d8965622489077791b92b2f677952fb\nauthor Antoine Poinsot <darosior@protonmail.com> 1674474349 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683105921 +0200\n\nminiscript: make GetStackSize independent of P2WSH context\n\nIt was taking into account the P2WSH script push in the number of stack\nelements.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSKIEACgkQ4T/BRc0/\nQwQ77Av/cRtfWFKt+Umd82xK14pbyhNU9kulJpFCFQsgM3NK2SvMLPKN+K7E+GPY\n+qjl3vKseCr3IpMUtEUhpQ0K0+aciwyU6gnb7WQEfuGng6EuY6DEKn1b8BhrUze9\nidbofKBQVXijULp7J+x2r0yVaI57RxOoRsMv0GdLYCtc8NjIV9nkJIfn4d1HD5y5\nKIPDp6YUfU5pqJ9JRaDt5CnhvwpvN/To1eJpr+imxglCHT325yccry9tA9LzahI2\ne2DjAqy/45j8bJJiRG9i+pVxg/Wkg33+uEItAhAU6JnB9rWcYRx6oKupNy58UZmc\nksVn59Fa/5fwi3T4DVu6+tAE5BIwxGBs67A/XFBO9+x70PEyOlq96hPBGbFxPL9z\njTY/WNOIhNOsVofmaFGF+mU+KHA9rYPsvtCt67cNzmNujZLZapceIRKJ4iDi/Pbu\nuWysjPsEQgovR9VLBCLxFc0ef/av/hJGpM2zigvq82bf5Z8lIUYLripzXQ4VMVo8\n+5IlcvoC\n=Dh4Z\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad397c324d8965622489077791b92b2f677952fb",
          "sha": "ad397c324d8965622489077791b92b2f677952fb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ad397c324d8965622489077791b92b2f677952fb"
        }
      ],
      "message": "miniscript: make GetStackSize independent of P2WSH context\n\nIt was taking into account the P2WSH script push in the number of stack\nelements.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T09:25:21Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-23T11:45:49Z"
      },
      "sha": "e74e161a4fa7e7bc47260c4285f8fb1d60bdb56f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFiZDdlYjE4MmYzMWY1Y2Y2YjZhMGVlMWZkZGEyNzEyYjk4ODNlZDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bd7eb182f31f5cf6b6a0ee1fdda2712b9883ed2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1bd7eb182f31f5cf6b6a0ee1fdda2712b9883ed2",
      "tree": {
        "sha": "9114e4e99a676b81d7a9302fcbe90dc678e1fe0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9114e4e99a676b81d7a9302fcbe90dc678e1fe0b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9114e4e99a676b81d7a9302fcbe90dc678e1fe0b\nparent e74e161a4fa7e7bc47260c4285f8fb1d60bdb56f\nauthor Antoine Poinsot <darosior@protonmail.com> 1674653465 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683125969 +0200\n\nminiscript: adapt resources checks depending on context\n\nUnder Tapscript, there is:\n- No limit on the number of OPs\n- No limit on the script size, it's implicitly limited by the maximum\n  (standard) transaction size.\n- No standardness limit on the number of stack items, it's limited by\n  the consensus MAX_STACK_SIZE. This requires tracking the maximum stack\n  size at all times during script execution, which will be tackled in\n  its own commit.\n\nIn order to avoid any Miniscript that would not be spendable by a\nstandard transaction because of the size of the witness, we limit the\nscript size under Tapscript to the maximum standard transaction size\nminus the maximum possible witness and Taproot control block sizes. Note\nthis is a conservative limit but it still allows for scripts almost a\nhundred times larger than under P2WSH (329871 vs 3600 bytes).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSdtEACgkQ4T/BRc0/\nQwSFDwv+JRnVqAkL+daAeZetsdE6ycmDES/2QHVWov098PChDhLtKO6kv7N+Lg1X\nYTHd6icxgsGs27ZEIa9fBeOshyiXa0EAl9HQkUqe0FECPhFep/Fi6rXs0hoEAq3t\nMssV8llhzTI0ZlvtihdM1JDu0PTKQuxznHz8Bb+tWzkEQPUpVu6avcNF0vuMGO3z\n0ANbmJ0/2SsVzEHVAfuJs745uaImSYBqBPA2OS/jq2J8Yhs31a9eCBB0TuerX8hZ\nr6EKXKSGsHvLKEBwvLFkWYzJSVKluPx4lJVrVu0nKQjePqi6bmjDwd78HTLLN4sP\nWhBdGByeVwcYuPif4VmDKD2qSIcdvEwG5OHB3JKCISYKeErr/wKYNp7ith06dWD7\nsgsHAaYK//ZXvxiPpfy6NrVjV8urgXItFtkMfQM3y15Ryp1ovecSI/F2P/tfCxGo\nscGyQDy4INrffv1YdfJlrgv4Y0xKXlq27O+cBkCKvHLf4CBvpjzXQ+DLK9tKWHdN\np2Vo69Gn\n=AcCH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e74e161a4fa7e7bc47260c4285f8fb1d60bdb56f",
          "sha": "e74e161a4fa7e7bc47260c4285f8fb1d60bdb56f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e74e161a4fa7e7bc47260c4285f8fb1d60bdb56f"
        }
      ],
      "message": "miniscript: adapt resources checks depending on context\n\nUnder Tapscript, there is:\n- No limit on the number of OPs\n- No limit on the script size, it's implicitly limited by the maximum\n  (standard) transaction size.\n- No standardness limit on the number of stack items, it's limited by\n  the consensus MAX_STACK_SIZE. This requires tracking the maximum stack\n  size at all times during script execution, which will be tackled in\n  its own commit.\n\nIn order to avoid any Miniscript that would not be spendable by a\nstandard transaction because of the size of the witness, we limit the\nscript size under Tapscript to the maximum standard transaction size\nminus the maximum possible witness and Taproot control block sizes. Note\nthis is a conservative limit but it still allows for scripts almost a\nhundred times larger than under P2WSH (329871 vs 3600 bytes).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T14:59:29Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-25T13:31:05Z"
      },
      "sha": "1bd7eb182f31f5cf6b6a0ee1fdda2712b9883ed2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3ZTlhNzA0MjM4NTE2NTY3NDEwZDk3ODllMGY4ODJkNmNlMDhiMGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7e9a704238516567410d9789e0f882d6ce08b0c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e7e9a704238516567410d9789e0f882d6ce08b0c",
      "tree": {
        "sha": "48831f24260e1c00ba5c40cd8e9f4bec03b210a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48831f24260e1c00ba5c40cd8e9f4bec03b210a3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 48831f24260e1c00ba5c40cd8e9f4bec03b210a3\nparent 1bd7eb182f31f5cf6b6a0ee1fdda2712b9883ed2\nauthor Antoine Poinsot <darosior@protonmail.com> 1675795203 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683125969 +0200\n\nminiscript: account for keys as being 32 bytes under Taproot context\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSdtEACgkQ4T/BRc0/\nQwQsnQv/Xebx/7+EGqcDopxIh+JhxQZQ0BydRs+g3jhM9+fduVmWJyBomqY+W6zZ\nJV5jY2oluEwOBkB0UjjxUX+hpTEr7neIl3zSygFXlBEvwZbiREN8bayoLsHqzcWF\n/YX4cDOhr3xbCwSe3xg/ibxywFQBRxkLgeMnAJ9onkhFUy34GDYMKSQFffWp4TBu\nc0mSCYcb0Zu/hgbpHHE0Fyi70qSYC9Rmw3dNARXeNpKhrUAWhqm2/1AvOlDQu9Mi\ntQhfikrRuo1aBq4tsS6z77dH82cH5O1XkuD7+n8SZl0FIs1c6WCRJPtnZlBRu7cf\nPsLsjL60C/sENTEkKQwFP0oyFsrAZllXCOfKIpfRBJENbLc6a13CY1duUNdsvEfh\n/rlKrIQemUpxDAyGoiGATyYgyk76uKcbf13+TSifX2HhmjaE4WuU/bZRWx89y7w2\nDaMqFhjVD4O9NBZs40O9ptzCrlwduVYXh+MDTXFRSfdfL/lfvWhEP/PaXeFzKpO+\n1Lqypvys\n=mntl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1bd7eb182f31f5cf6b6a0ee1fdda2712b9883ed2",
          "sha": "1bd7eb182f31f5cf6b6a0ee1fdda2712b9883ed2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1bd7eb182f31f5cf6b6a0ee1fdda2712b9883ed2"
        }
      ],
      "message": "miniscript: account for keys as being 32 bytes under Taproot context",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T14:59:29Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-07T18:40:03Z"
      },
      "sha": "e7e9a704238516567410d9789e0f882d6ce08b0c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZiY2E4OTUyNjFkM2IwZTkzNGYxMjE5NWEyNDlkM2JmMzE5ZTUwMGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6bca895261d3b0e934f12195a249d3bf319e500b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6bca895261d3b0e934f12195a249d3bf319e500b",
      "tree": {
        "sha": "0b61bac1ea06c40bff11a75c91a2180365a791a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b61bac1ea06c40bff11a75c91a2180365a791a5"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0b61bac1ea06c40bff11a75c91a2180365a791a5\nparent e7e9a704238516567410d9789e0f882d6ce08b0c\nauthor Antoine Poinsot <darosior@protonmail.com> 1676367092 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683125970 +0200\n\npubkey: introduce a GetCPubKey helper\n\nWe'll need to get a compressed key out of an x-only one in other places.\nAvoid duplicating the code.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSdtIACgkQ4T/BRc0/\nQwRXIAwAnMHIF26QRnDZoQYm7YWYp4ozmauy2A7YNwjK8JY5V9H4zNUKJD/VbeI2\nv3N/9BnAGKxXnQfrsFmYHjIA3pLNWffwz2YNu/BYRc143/D9PsoEjdcufVMHmP8f\nFA+Mc2lRxITBVInxLUdLsnTssdtLQH+WEVoC07Sg6DXJiUhh6tkAiwmIBRD/6Ik5\nHghE1FtGlAha/jzEoQWG3NqnkGaqAjY4l6llWIwfNZgsf+BHvmfuqHWicoWzdOrr\n1ary1RIydPdmThUjhzGX+uGZc8YFiMhwZEh8blKL+uTDuzNJvTzIQakjEQG26Rh0\ni9j7b6wKSMMQfCOESCHETAoj/eCViRpgEOmMvCU6KirgOxGTvboIIisLdAaEKqxj\nLShRmw5vgvxWOjcy0X/14MROFv0ioVEr52OZuLpDaW3y1KNk7FXqcEvsD2qYxZ9v\ncfV448hhXKo0Hs5BUAifEt3XXpuJ8NNlUeZEz3lBdPN6uGpxYWjJkBP/MtnHzObw\nMw1SyyiE\n=bosB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7e9a704238516567410d9789e0f882d6ce08b0c",
          "sha": "e7e9a704238516567410d9789e0f882d6ce08b0c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e7e9a704238516567410d9789e0f882d6ce08b0c"
        }
      ],
      "message": "pubkey: introduce a GetCPubKey helper\n\nWe'll need to get a compressed key out of an x-only one in other places.\nAvoid duplicating the code.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T14:59:30Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-14T09:31:32Z"
      },
      "sha": "6bca895261d3b0e934f12195a249d3bf319e500b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc4YzEwZDA0OGI5M2Q2ZmEwNmUxZWM1ZmU4NzExMTUxOTFkNTlhZmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78c10d048b93d6fa06e1ec5fe871115191d59aff",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/78c10d048b93d6fa06e1ec5fe871115191d59aff",
      "tree": {
        "sha": "9c7a7cefe1ba9e175ed3f2be8ae7b7f5cf443296",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c7a7cefe1ba9e175ed3f2be8ae7b7f5cf443296"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9c7a7cefe1ba9e175ed3f2be8ae7b7f5cf443296\nparent 6bca895261d3b0e934f12195a249d3bf319e500b\nauthor Antoine Poinsot <darosior@protonmail.com> 1676363431 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683125970 +0200\n\nqa: Tapscript-Miniscript unit tests\n\nAdapt the test data and the parsing context to support x-only keys.\nAdapt the Test() helper to test existing cases under both Tapscript and\nP2WSH context, asserting what needs to be valid or not in each.\nFinally, add more cases that exercise the logic that was added in the\nprevious commits (multi_a, different resource checks and keys\nserialization under Tapscript, different properties for 'd:' fragment,\n..).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSdtIACgkQ4T/BRc0/\nQwSpkAv/RrNDOiecxRtL9IkoK+dagULpwhaK/go2CfperkEgrQiEeN8KvB4SHLFc\njkju/5x2d98LSqjuAfwz3A6raoN0aYfjVlLaX076VIenDxQNlw0prwToz19yhNqt\n4EwnmtNQ0a0s/+0mvlLv+irLslg/gh8XbqQuyzWe9fd5HU9ENYqB4jcBpc7rCXgE\ny338ydvlmjRxZ1a80Ez/8JXlceU012qadAUmND1tlRZVakOIY254TdkC44dGifw6\nAgcVlCAQGeWdY4AHfLOCmOL+uDVdCrlca4jmqPeyvzzJ3KigVU0Lm4cZP/8p2sjo\nCrh3vWdSy9SB2SmhfCgwDtIZ2CFrOyIteehGqisDWI6I7Erd0Xp18FKqb74s+g+W\nZZZ3pUxCAWMTfnJvGTdoWiWG2kIkMJH8EZ8kc++Ym3D9Zv0nTfeKAI+pbiRD9wqt\nnBBmLW5K56m3Jp+DiOD/TJaYkqe/Pmr90vysYxX0xOCMOgXC3P+iKP+w616Mro46\nr4VoEfoz\n=R8/e\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6bca895261d3b0e934f12195a249d3bf319e500b",
          "sha": "6bca895261d3b0e934f12195a249d3bf319e500b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6bca895261d3b0e934f12195a249d3bf319e500b"
        }
      ],
      "message": "qa: Tapscript-Miniscript unit tests\n\nAdapt the test data and the parsing context to support x-only keys.\nAdapt the Test() helper to test existing cases under both Tapscript and\nP2WSH context, asserting what needs to be valid or not in each.\nFinally, add more cases that exercise the logic that was added in the\nprevious commits (multi_a, different resource checks and keys\nserialization under Tapscript, different properties for 'd:' fragment,\n..).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T14:59:30Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-14T08:30:31Z"
      },
      "sha": "78c10d048b93d6fa06e1ec5fe871115191d59aff"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUzYTJjZmEzNTVmYzZhNTdkN2I2MjgzNmE5NzljZmE5MGY2YWI3MmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3a2cfa355fc6a57d7b62836a979cfa90f6ab72f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e3a2cfa355fc6a57d7b62836a979cfa90f6ab72f",
      "tree": {
        "sha": "51ba0a844ac03e19eac4352c09d5bb3452578d3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51ba0a844ac03e19eac4352c09d5bb3452578d3d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 51ba0a844ac03e19eac4352c09d5bb3452578d3d\nparent 78c10d048b93d6fa06e1ec5fe871115191d59aff\nauthor Antoine Poinsot <darosior@protonmail.com> 1677079738 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1683125971 +0200\n\nfuzz: adapt Miniscript targets to Tapscript\n\nWe introduce another global that dictates the script context under which\nto operate when running the target.\n\nFor miniscript_script, just consume another byte to set the context.\nThis should only affect existing seeds to the extent they contain a\nCHECKMULTISIG. However it would not invalidate them entirely as they may\ncontain a NUMEQUAL or a CHECKSIGADD, and this still exercises a bit of\nthe parser.\n\nFor miniscript_string, reduce the string size by one byte and use the\nlast byte to determine the context. This is the change that i think\nwould invalidate the lowest number of existing seeds.\n\nFor miniscript_stable, we don't want to invalidate any seed. Instead of\ncreating a new miniscript_stable_tapscript, simply run the target once\nfor P2WSH and once for Tapscript (with the same seed).\n\nFor miniscript_smart, consume one byte before generating a pseudo-random\nnode to set the context. We have less regard for seed stability for this\ntarget anyways.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRSdtMACgkQ4T/BRc0/\nQwTpcQv8CL6SF7nivtB0iecKORIeprS4n8fD2380Y0h+TWiDyeBUu3ORhkIXPEyw\nZyRhdJop0vEGqTthDWzCrRpLJCUuyC9wuZEbaoGJ6QtSJ+zkpRIMejXl8JO2hI2y\nOMijP6rCP53GiftWz7g7ujTP/EydP2VqiOx++L/3EiGJhykfm6V5CTAyCmC2FEnK\nctuEGHre8TIBVtGbu/TK06C4llxq7y+2W71HnlEnNItsCKYf7sbb6JbUAqECwVFB\n2LnhivypTf2OqWUpQ7zKtmf0p8LQqZd40bn2pDRK//IuYX7OrlWG1YYV+EAF1zSE\nVSxYYRJT7L3jDiJe6zRgV2U9a0uMci54vb804zXg3Axh1j9llOheMPcmade80GF2\n/kMOJJySPaDDi9IR6uHnmZOPiBdfkTow785yj7m22QVuvCv8jzn0bPBEYmJeSkUg\njqMZwfq2M85LGAhhKMpvhEHv6mRN7raZBVOE+nkWqyUP69fUITldZw9Ex6QR9Agr\nTDnAl9RK\n=rvhZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78c10d048b93d6fa06e1ec5fe871115191d59aff",
          "sha": "78c10d048b93d6fa06e1ec5fe871115191d59aff",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/78c10d048b93d6fa06e1ec5fe871115191d59aff"
        }
      ],
      "message": "fuzz: adapt Miniscript targets to Tapscript\n\nWe introduce another global that dictates the script context under which\nto operate when running the target.\n\nFor miniscript_script, just consume another byte to set the context.\nThis should only affect existing seeds to the extent they contain a\nCHECKMULTISIG. However it would not invalidate them entirely as they may\ncontain a NUMEQUAL or a CHECKSIGADD, and this still exercises a bit of\nthe parser.\n\nFor miniscript_string, reduce the string size by one byte and use the\nlast byte to determine the context. This is the change that i think\nwould invalidate the lowest number of existing seeds.\n\nFor miniscript_stable, we don't want to invalidate any seed. Instead of\ncreating a new miniscript_stable_tapscript, simply run the target once\nfor P2WSH and once for Tapscript (with the same seed).\n\nFor miniscript_smart, consume one byte before generating a pseudo-random\nnode to set the context. We have less regard for seed stability for this\ntarget anyways.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-03T14:59:31Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-22T15:28:58Z"
      },
      "sha": "e3a2cfa355fc6a57d7b62836a979cfa90f6ab72f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE3NTMxZWUwMGJjOTc0YjEyNDVkMmQ1ZjIxNDFjMWUxZDIxOGM0NGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17531ee00bc974b1245d2d5f2141c1e1d218c44b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/17531ee00bc974b1245d2d5f2141c1e1d218c44b",
      "tree": {
        "sha": "f0297c319686f0bbff26625fcc9654de2bac1180",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0297c319686f0bbff26625fcc9654de2bac1180"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f0297c319686f0bbff26625fcc9654de2bac1180\nparent e3a2cfa355fc6a57d7b62836a979cfa90f6ab72f\nauthor Antoine Poinsot <darosior@protonmail.com> 1678361920 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684164573 +0200\n\nminiscript: check maximum stack size during execution\n\nUnder Tapscript, due to the lifting of some standardness and consensus\nlimits, scripts can now run into the maximum stack size during\nexecution. Any Miniscript that may hit the limit on any of its spending\npaths must be marked as unsafe.\n\nTo do so we track the maximum stack size at all time during the\nexecution of a fragment. This is accomplished by:\n1. Tracking how the stack is affected *after* execution of a fragment (how\n   many items it pushed or popped).\n2. Tracking the maximum number of items that may be pushed on the stack\n   *during* the execution of a fragment.\n\nWe then check the maximum number of items pushed during the execution of\nthe root fragment with the maximum initial witness size for satisfying\nthis fragment against the stack size limit. Note this is a conservative\ncheck, since the path that may have the maximum number of items added\nduring execution may be different than the path that requires the\nlargest witness. But it should be a pretty close approximation in most\n(and non-pathological) cases.\n\nFor instance, let's consider an `and_b(X, Y)` fragment (corresponding to\n`[X] [Y] BOOLAND`). Let's say the `X` fragment may make the stack bigger\nby one item during its execution, but after its executed the stack size\nis at most -2 larger.  Let's say the `Y` fragment may grow the stack by\n4 elements during its execution and leave the stack with two items less.\n\nIn this example the `and_b(X, Y)` fragment will grow the stack size by\nat most 2 during its execution (executing `X` then executing `Y`) and\nthe largest size of the stack after its execution is the initial size\nminus 5 items (2 for `X`, 2 for `Y` and 1 for `BOOLAND`).\nIn absolutes, if the maximum satisfaction size for this fragment is 6,\nthen the stack size will never grow beyond 8 during its execution.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiT90ACgkQ4T/BRc0/\nQwTOVgv6Au79iq1I9wjblnpD6Rd8wGxCWAGTa/Cs3z87LRBFQWB85unPbyoQK6dK\nwHNjs6UBAN5W5tkPQMw99HSE+zRA9Fj35K5UZ+EOQzHhT4YtpphlK2O23esEG2Sw\n7jE8VkC15blNKXqZVlN0Kn5bJN+BrFXD9d81+y2J3Oa76QLHI9NLuwta0BORfW/F\nXp7cmAYS6J0cngljt2QMLh9Hzz60SXnGvwIGNuK605PI4jyKFQmjm3/SbNggUQEH\nvNZppfZsn1FKqkVGhfJZ4HqL470hE6ZWA9zHPczOTVY8l4RQd6nHvAbfDuFwEFPk\nvGAES0wtT5waeGJLH0RpXKTsXjFNrLsCpgF2je8y1NEZU3H51KwdIMyzUh5HcguM\nZfNeEQ+zFxTsdK7NURHJYAVTXJId9rwXAaJdMCmfnSliTzvaGS7Nztmt1ZZMFBW7\nyhkge7IORMEwrvVqoMeSpM1vqzKO1y5kW8Yvl2UgrmGk6OfU3IENGpRdlYnVANYK\nQk7cyR/m\n=ojku\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e3a2cfa355fc6a57d7b62836a979cfa90f6ab72f",
          "sha": "e3a2cfa355fc6a57d7b62836a979cfa90f6ab72f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e3a2cfa355fc6a57d7b62836a979cfa90f6ab72f"
        }
      ],
      "message": "miniscript: check maximum stack size during execution\n\nUnder Tapscript, due to the lifting of some standardness and consensus\nlimits, scripts can now run into the maximum stack size during\nexecution. Any Miniscript that may hit the limit on any of its spending\npaths must be marked as unsafe.\n\nTo do so we track the maximum stack size at all time during the\nexecution of a fragment. This is accomplished by:\n1. Tracking how the stack is affected *after* execution of a fragment (how\n   many items it pushed or popped).\n2. Tracking the maximum number of items that may be pushed on the stack\n   *during* the execution of a fragment.\n\nWe then check the maximum number of items pushed during the execution of\nthe root fragment with the maximum initial witness size for satisfying\nthis fragment against the stack size limit. Note this is a conservative\ncheck, since the path that may have the maximum number of items added\nduring execution may be different than the path that requires the\nlargest witness. But it should be a pretty close approximation in most\n(and non-pathological) cases.\n\nFor instance, let's consider an `and_b(X, Y)` fragment (corresponding to\n`[X] [Y] BOOLAND`). Let's say the `X` fragment may make the stack bigger\nby one item during its execution, but after its executed the stack size\nis at most -2 larger.  Let's say the `Y` fragment may grow the stack by\n4 elements during its execution and leave the stack with two items less.\n\nIn this example the `and_b(X, Y)` fragment will grow the stack size by\nat most 2 during its execution (executing `X` then executing `Y`) and\nthe largest size of the stack after its execution is the initial size\nminus 5 items (2 for `X`, 2 for `Y` and 1 for `BOOLAND`).\nIn absolutes, if the maximum satisfaction size for this fragment is 6,\nthen the stack size will never grow beyond 8 during its execution.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T15:29:33Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-09T11:38:40Z"
      },
      "sha": "17531ee00bc974b1245d2d5f2141c1e1d218c44b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDViOGRiMTNmMmMxOGQzNjg4YmNiOTVkOWEyNzM2ZDQwODQ5Y2YzNTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b8db13f2c18d3688bcb95d9a2736d40849cf354",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5b8db13f2c18d3688bcb95d9a2736d40849cf354",
      "tree": {
        "sha": "8a75ada6d55790b8d5d2f4a2de066c200fbaf663",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a75ada6d55790b8d5d2f4a2de066c200fbaf663"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8a75ada6d55790b8d5d2f4a2de066c200fbaf663\nparent 17531ee00bc974b1245d2d5f2141c1e1d218c44b\nauthor Antoine Poinsot <darosior@protonmail.com> 1678361985 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684164574 +0200\n\nqa: test Miniscript max stack size tracking\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiT94ACgkQ4T/BRc0/\nQwSccAwArnh5GXyKg5kRWe614uYIBLY7ipQkGaPes6xVoAjwsbh757H4YLjY41j4\nbPCsplGHwyh2hU9hgOLyAX9T2akqzdcJZGi+QEp5e0f3p2TSjMVvGmxHM6kcikwf\n7x0XBQDsw62hhCZ2pD01K9YQq73KNg6zBjZY0VZmUeyQOS1lzhpl8ZbfRk4+z8uh\nkisDUpjX7TBmWlJovyZAwpu8NxmANZNkn/i6a5edbpREOvkf3YwNlraEY78jceir\nyugxqrq7FjMVl6Y1+TU54Gv4wMvU+d4c1MJjnflwOcnWnjmvE2dSaKYhkVQA9GtG\n6SCTSdjrThu3yeWDS68Is+4zkCxYzufwewNc0M7f45QHYLlDIWSlCvRq2E3uDWHw\n74t2/UfYSQGCk6DxNhS862MREVpTguHYE5llzcXWR1U5mQv1lCg+NRYKhKc4YPrl\nFTTT+YSxjhiS1DKvIYl/KCaewbkXU+QrvPs3L5daZOZAn35JNROyAw1HUzFwv1Xd\n/KGIJBu6\n=59BB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17531ee00bc974b1245d2d5f2141c1e1d218c44b",
          "sha": "17531ee00bc974b1245d2d5f2141c1e1d218c44b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/17531ee00bc974b1245d2d5f2141c1e1d218c44b"
        }
      ],
      "message": "qa: test Miniscript max stack size tracking",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T15:29:34Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-09T11:39:45Z"
      },
      "sha": "5b8db13f2c18d3688bcb95d9a2736d40849cf354"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUyOTE2NzljYzllMzA4NGFhNTg4ZTBlZTM1YzlhOTRjMDM5Y2QwMjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e291679cc9e3084aa588e0ee35c9a94c039cd025",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e291679cc9e3084aa588e0ee35c9a94c039cd025",
      "tree": {
        "sha": "6ed2c8437545779ca5718e001a7dad61fb69dac8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ed2c8437545779ca5718e001a7dad61fb69dac8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6ed2c8437545779ca5718e001a7dad61fb69dac8\nparent 5b8db13f2c18d3688bcb95d9a2736d40849cf354\nauthor Antoine Poinsot <darosior@protonmail.com> 1678049586 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684164574 +0200\n\nfuzz: miniscript: higher sensitivity for max stack size limit under Tapscript\n\nIn order to exacerbate a mistake in the stack size tracking logic,\nsometimes pad the witness to make the script execute at the brink of the\nstack size limit. This way if the stack size is underestimated for a\nscript it would immediately fail `VerifyScript`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiT94ACgkQ4T/BRc0/\nQwQzigwA0ICw4cy1L3HlQk8qEAokTzD7VhPT1eEDNCgo5I1g8Uw9w40+WZoGaX+B\ng6i/RANtp3Np9ZYracfX9bNCc7IK/gdNjpi1KKv0FFJBOrBy9ZWQYO9zJy1A09eY\nuSHe2UtReyGcoWzNT3S2H91CfdtoqXET+3bPNLy2b1q5tYssgfmtK0J2fK9MsNgi\nkfzy8ePiUWhNP4SrG0WZHeC/H38QZvsnyJ9khispD1sry+SeCAtoOapVRZyRyH+C\nok2l2n0VlzlYdoDLqnGKLIse+Rl6FYLuCJCJy+CQ46DFnBFyW5Ma/aWvXuFjA3mV\nCBdMe0A4USkM/W5xIz9migKGbQZckfpP+oymP5rcCIz6swRm6Sr4iyBdNNU36Sz7\nSWYWAJB43dP9vRkHDelvfiXl98aGgex4s8/acoybRBQiDPbQpW+gNJ5qZVL33G82\nP2s+cd+ldB9mrBiQ0Zx6B220uQAp1BBgXJIDQXpQ7zUw/Ks9eygwgD9R5+L4tK0m\nhUY8eGEm\n=zsJg\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b8db13f2c18d3688bcb95d9a2736d40849cf354",
          "sha": "5b8db13f2c18d3688bcb95d9a2736d40849cf354",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5b8db13f2c18d3688bcb95d9a2736d40849cf354"
        }
      ],
      "message": "fuzz: miniscript: higher sensitivity for max stack size limit under Tapscript\n\nIn order to exacerbate a mistake in the stack size tracking logic,\nsometimes pad the witness to make the script execute at the brink of the\nstack size limit. This way if the stack size is underestimated for a\nscript it would immediately fail `VerifyScript`.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T15:29:34Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-05T20:53:06Z"
      },
      "sha": "e291679cc9e3084aa588e0ee35c9a94c039cd025"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg4YjVjYzA3MGRmZjY1ZTllNjdkNGJlMGVjMmViMTRlZWVmZmQzZDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88b5cc070dff65e9e67d4be0ec2eb14eeeffd3d1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/88b5cc070dff65e9e67d4be0ec2eb14eeeffd3d1",
      "tree": {
        "sha": "d5e78479349970aab4527e1cde317dc296ef44ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d5e78479349970aab4527e1cde317dc296ef44ea"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d5e78479349970aab4527e1cde317dc296ef44ea\nparent e291679cc9e3084aa588e0ee35c9a94c039cd025\nauthor Antoine Poinsot <darosior@protonmail.com> 1674325625 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684164575 +0200\n\ndescriptor: Tapscript-specific Miniscript key serialization / parsing\n\n64-hex-characters public keys are valid in Miniscript key expressions\nwithin a Tapscript context.\n\nKeys under a Tapscript context always serialize as 32-bytes x-only\npublic keys (and that's what get hashed by OP_HASH160 on the stack too).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiT98ACgkQ4T/BRc0/\nQwS4/Qv8CST8P9L9uy+GFzAUT5azmriqT2Z0sflKYPeBq8oatfz5vQVq11d4psXi\ngYBGDzQ6xn5fmY/wEZCAtleE9o0soOhNyC7oKt0cSDMzuyCh77J+lzyOqN9SQkWo\npf0j4bbtY6VY5nFnauCDUYdWToDp5gZBx3radiGDY8f/3+VNdip8/8seG0G5+g1W\nUJtXkIzbXythf9JyM5vOJ9/F9ww9TOuGp9xdgNmaeEWxTMywOGG0zBeXE+Pc6/LQ\nMetKC6p/9xn29A8J2zGUqeIlpFAmq/cpVJCv3bdA6N+F9j4/GyHSp4ylXKlq6AIi\n0YEiTgutIODbHjK+EwG86XnMvCBdXPAMPy4ndhijGwAhWRo9KMZMRpGUq7cS0ru0\nbMguoIuNZ8KCm+F4X6so6FNv0BcR6+qg6IO7g2N8J4VOwc1722YMTE+wXO9m31qQ\nE+VNwcGieDt8rGD6ubKhs5nuVbVEA17ll1oxc5kD9lTpjYYr1nvc69y8Y7EIbuJn\nSaJouBg+\n=yA6u\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e291679cc9e3084aa588e0ee35c9a94c039cd025",
          "sha": "e291679cc9e3084aa588e0ee35c9a94c039cd025",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e291679cc9e3084aa588e0ee35c9a94c039cd025"
        }
      ],
      "message": "descriptor: Tapscript-specific Miniscript key serialization / parsing\n\n64-hex-characters public keys are valid in Miniscript key expressions\nwithin a Tapscript context.\n\nKeys under a Tapscript context always serialize as 32-bytes x-only\npublic keys (and that's what get hashed by OP_HASH160 on the stack too).",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T15:29:35Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T18:27:05Z"
      },
      "sha": "88b5cc070dff65e9e67d4be0ec2eb14eeeffd3d1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGMxZWI0OTI2MjgwZjMwODAxYWRlZGQ5NWNmODdiYjZkN2E5NGNkZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1eb4926280f30801adedd95cf87bb6d7a94cdf3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c1eb4926280f30801adedd95cf87bb6d7a94cdf3",
      "tree": {
        "sha": "ea6affdf14c73bff62a941b9874bb697ed8161ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ea6affdf14c73bff62a941b9874bb697ed8161ab"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ea6affdf14c73bff62a941b9874bb697ed8161ab\nparent 88b5cc070dff65e9e67d4be0ec2eb14eeeffd3d1\nauthor Antoine Poinsot <darosior@protonmail.com> 1674308269 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684164575 +0200\n\ndescriptor: parse Miniscript expressions within Taproot descriptors\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiT98ACgkQ4T/BRc0/\nQwSZtwv9HBDwFjNYRSawHDLs7KbXd7fpryogh/6Jp1kW4nUFXYRU9BOZaNFxsMFB\nyl5szCp93RjNfdTIHbQ23q8G8bOZqLpSx0i+AeiAFvd4PcydnC38JY43yQ+W6Ryo\najmsXOMryD4Nyqiwv2/10yh1XSgfH8YnPI/EJqYQAr2KNjBnwGJuru1E886oTEEK\njJFwRi38YvhKj6wp+d0PZAx0qDdvdSnMuRiHe0QqV4wPyjUzfq4gir6v9DMLsBMx\n4rq6u+vKUEFO0F/kcPJb1iD361fZ1W6aZNgxRHklwoQclAJ7b3xl7ud3FsOfSvOc\nCLiD5TYXzbCMjI7AiHgiQaVl9K7lwYV8ifuZEj6unkfTboRaRBb2pxhE8b0lq5pN\nnftvsmg5APmCDR5+3pg2ttyaG89RAC7dhTMIQPjfr0QGPJo8NQsT+qamcTA28MeZ\nUC7WELEX+ZNRPZOh9EeevybQ1si5L5HLO9IsEHsdNGV0A78VZzkeePctD5/Kz0Pd\nQT/KZuQq\n=lvBB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88b5cc070dff65e9e67d4be0ec2eb14eeeffd3d1",
          "sha": "88b5cc070dff65e9e67d4be0ec2eb14eeeffd3d1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/88b5cc070dff65e9e67d4be0ec2eb14eeeffd3d1"
        }
      ],
      "message": "descriptor: parse Miniscript expressions within Taproot descriptors",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T15:29:35Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-01-21T13:37:49Z"
      },
      "sha": "c1eb4926280f30801adedd95cf87bb6d7a94cdf3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk4MTkzY2EzMTE1OTQzYzg3M2FkYzVlMDJhZTUwMThjY2ExYzUwM2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98193ca3115943c873adc5e02ae5018cca1c503b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/98193ca3115943c873adc5e02ae5018cca1c503b",
      "tree": {
        "sha": "ec10dd72afdc0bd63c00543edb5f9581ca41f75c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec10dd72afdc0bd63c00543edb5f9581ca41f75c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ec10dd72afdc0bd63c00543edb5f9581ca41f75c\nparent c1eb4926280f30801adedd95cf87bb6d7a94cdf3\nauthor Antoine Poinsot <darosior@protonmail.com> 1676458561 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684164576 +0200\n\nqa: functional test Miniscript inside Taproot descriptors\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiT+AACgkQ4T/BRc0/\nQwQhFQv/e2bvzi48u3rFxOoGg8X979zGazoX5TRYJz+nLdfFlXukM3vH0krzAu0C\ni4ccnnss1OREbouUQ5PCsZWvFiIG/pLjKP0ZILseaVrFcXffxZ4F2o8O7YUULhyH\nBbIvBFgrPPV/wbPa3mtt4eBlAf9y9pRYwgwwGLC7J7Pd8YbNl5EHhpwamBNp0Cuq\nFNlvJSp0yyQ36PX9pqnAiW8gIvMAQzkghg8V/foQpmdcPkQgRA8cO8wggRJvSxCN\nhRyHDoks3PdMH8FQ/hlt0Lc9ulKSVqInwMj/sdFa3MwMALcSanLA6Yeka7lVYE4S\nA2xwEsrL6JShmOdT64Y5smazyznbN1jK5kPunEmESiha2/J2FYxpOAXRbEEBVgqh\n5GdfbbfwbEeqDWsZVU1MikRTgLFyrgTPRjQ/6+aMoq8edVf1sEKcFEiJNuu9+4/1\nzu3FKVcxLFRzofo4d91GPgSlHwCe/ITXIzT+ocHNNAgWlqyteBKTfe+EHcWdC9Yn\nujbzzjCd\n=GIcQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1eb4926280f30801adedd95cf87bb6d7a94cdf3",
          "sha": "c1eb4926280f30801adedd95cf87bb6d7a94cdf3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c1eb4926280f30801adedd95cf87bb6d7a94cdf3"
        }
      ],
      "message": "qa: functional test Miniscript inside Taproot descriptors",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T15:29:36Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-15T10:56:01Z"
      },
      "sha": "98193ca3115943c873adc5e02ae5018cca1c503b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1ZWU4MDRjYmMxMzk0M2I5MzMyZjU2M2ZlNmEwZmJhZTAzYTlmOWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5ee804cbc13943b9332f563fe6a0fbae03a9f9b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ee804cbc13943b9332f563fe6a0fbae03a9f9b",
      "tree": {
        "sha": "c0677ff5c8e46c80664481cacf77389b7cb32fe8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0677ff5c8e46c80664481cacf77389b7cb32fe8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c0677ff5c8e46c80664481cacf77389b7cb32fe8\nparent 98193ca3115943c873adc5e02ae5018cca1c503b\nauthor Antoine Poinsot <darosior@protonmail.com> 1677248283 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684164576 +0200\n\nMOVEONLY: script/sign: move Satisfier declaration above Tapscript signing\n\nWe'll need the Miniscript satisfier for Tapscript too.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiT+AACgkQ4T/BRc0/\nQwSEgAwApdVq9zZnyij+Qc7yS6ZxJZ/sfbUmdD2sCNxXt3WkuZHbDDAV7A3SgWbo\n5dFhw5uds7i2yJBc9+k4Z3ZLKvt3JmD1xpucsOTYDiTmGALPJ1UKYgdDW35iNrm7\n17LU9ZImODwGOIxejQP34VvHo231g/OPifQOOox6hhYpm7PhgYcOgq/smBzvtJSc\nb6L2Q38YxFl/hc48CCO1d4sRomO10lLEfQnR8P/+OMgJgCWX/nBBHyInOOw3I/96\n+5GUfyL5Cg1IBhW1Z4l78+w1Cf6AfYlhPgzJEPcZKXLdUQjdWalWGQ6CijyNthAu\ngDdADKzNCZ/t6nbm4T/PlQOjdHUl0NsY1lL68aF42CrujN0t2uWgzTYlEEsucFkW\nGSHTNMiA/jAYoPXe69TUwbWeSZKj0D8Ij6Fzxq7jSOpt4cMSKDtLILqCwu0PU6J/\n33u6hRr+26AVhW3up1fpWWcEpawVkJ8PMK16Le5QCa/JNGaMdjGUt7lGKhMklWVC\neqTjClcr\n=8FZS\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98193ca3115943c873adc5e02ae5018cca1c503b",
          "sha": "98193ca3115943c873adc5e02ae5018cca1c503b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/98193ca3115943c873adc5e02ae5018cca1c503b"
        }
      ],
      "message": "MOVEONLY: script/sign: move Satisfier declaration above Tapscript signing\n\nWe'll need the Miniscript satisfier for Tapscript too.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T15:29:36Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-24T14:18:03Z"
      },
      "sha": "b5ee804cbc13943b9332f563fe6a0fbae03a9f9b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFkYmY0ZWUzNmVlZWE1NzIxNjcyZmNlYzZhMmViZWM0NjlkNWNmOGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1dbf4ee36eeea5721672fcec6a2ebec469d5cf8a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1dbf4ee36eeea5721672fcec6a2ebec469d5cf8a",
      "tree": {
        "sha": "7555d26d22e6920beb859395e6ea2463f6eb5127",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7555d26d22e6920beb859395e6ea2463f6eb5127"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7555d26d22e6920beb859395e6ea2463f6eb5127\nparent b5ee804cbc13943b9332f563fe6a0fbae03a9f9b\nauthor Antoine Poinsot <darosior@protonmail.com> 1677252852 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684166816 +0200\n\nscript/sign: Miniscript support in Tapscript\n\nWe make the Satisfier a base in which to store the common methods\nbetween the Tapscript and P2WSH satisfier, and from which they both\ninherit.\n\nThe PSBT logic is to be able to satisfy pkh() under Tapscript context\n(to get the pubkey hash preimage) without wallet data. For instance in\n`finalizepsbt` RPC. See also the next commits for a functional test that\nexercises this.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiWKAACgkQ4T/BRc0/\nQwTxvgwA0ttB1h4Ee8AXuoCCqa8xfzIA6FIqzZHeq8IN97M5Axbpajrq7vW5AcHv\ntVk0fuST7EWNenx+FNsthDfW25jiWtngnwM89HpCdq21bBLPC7dHprr88qz3y1cS\nKDXrsQ6PqtAUKcM2+PfVO8bmERwtSf9UL2hR5VMyablrYtEDcBtY/ptCt4xvd4RK\nKcy7oICIXwKnTlXQbNqxv88Q8Rj4oWqSYJbd9Tai4gDx8QDeojyBop8kO3W1+7Gr\nMKP+uMF29+rhZAjIwmRYoi/YH8kv3Fg4DUozSccA/+G1j2jc9V5LyyZgL3+gKdoD\n2r5H2gIJZNaV/O1/GsYLIAgZpK3BrVRu296IJLvytIX7gpLmZqYzjZZePclnkDBr\nyBLp4w46Wfl3JTUpcjrq2ggC5YoHndfphuW4kFD72iUt1t77nTkeTiuRSsVkmODu\noU9KRqTMwkjer8SRmab+WGT0pSpBggwJBiseWwFS81/YmjV929pIDCm28uxiyQzB\n3cH1w3av\n=st6O\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5ee804cbc13943b9332f563fe6a0fbae03a9f9b",
          "sha": "b5ee804cbc13943b9332f563fe6a0fbae03a9f9b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b5ee804cbc13943b9332f563fe6a0fbae03a9f9b"
        }
      ],
      "message": "script/sign: Miniscript support in Tapscript\n\nWe make the Satisfier a base in which to store the common methods\nbetween the Tapscript and P2WSH satisfier, and from which they both\ninherit.\n\nThe PSBT logic is to be able to satisfy pkh() under Tapscript context\n(to get the pubkey hash preimage) without wallet data. For instance in\n`finalizepsbt` RPC. See also the next commits for a functional test that\nexercises this.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T16:06:56Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-02-24T15:34:12Z"
      },
      "sha": "1dbf4ee36eeea5721672fcec6a2ebec469d5cf8a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQzMjZmYmU3MzJkOWVhM2UyYzg0N2ZjMjRmMmRlNjAxN2NjOTVhZjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4326fbe732d9ea3e2c847fc24f2de6017cc95af1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4326fbe732d9ea3e2c847fc24f2de6017cc95af1",
      "tree": {
        "sha": "fde159dd3ec301ac1d4dcd1e526fcec7e7c4bc7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fde159dd3ec301ac1d4dcd1e526fcec7e7c4bc7e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fde159dd3ec301ac1d4dcd1e526fcec7e7c4bc7e\nparent 1dbf4ee36eeea5721672fcec6a2ebec469d5cf8a\nauthor Antoine Poinsot <darosior@protonmail.com> 1677860777 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684166816 +0200\n\nqa: list descriptors in Miniscript signing functional tests\n\nThis makes it more generalistic than just having the miniscripts since\nwe are going to have Taproot descriptors with (multiple) miniscripts in\nthem too.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiWKAACgkQ4T/BRc0/\nQwQYRAwAl6zpc06+EAUiyW43ZWAftzjPHuReWG5VqsQRbqQx9FkAQOUXBNjFdbFo\nWCzxfprLwBzezRW0lzrDSTxdoaIG+bK6i5YC/puKDUhfp658y/2lfE97H7OkkV+6\ngVHfPnfBnT32DhN491BArZzJJm0XRr7UnYuAnUiIF+6wsfPP27cJlf9x1E4epDGF\nUPUnEdPdUZyolJP9bVNi+tcRnNlQuzDALJQnIcPc4FhNzSbsSNRSiBXtxN0OI52H\n9dm5bgL8dWipnQYCtm9AkbAL9Dr720/EVZGaFZ4eLTZmIJqt6qWHu98u9dXDZl9P\nvFkS7N7cHcSw0f03XH6mcxUdAcuvQhAjDKkwPSh11SzcCDjQxpIGq3B+6THZ4X67\nF1AXLVSe36ZnsNmjJqnLKkVziqFCU0Uwj0TDvBABkpxqdoMnVJ0UYb3Hek4QLLQB\njJEojHmtxUTdoN9PHdR1STabNzNc6IBFycH8Vfyc3H76vKKowCJ2mJY/+G/1s3j0\ng25LbGa+\n=WK+f\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1dbf4ee36eeea5721672fcec6a2ebec469d5cf8a",
          "sha": "1dbf4ee36eeea5721672fcec6a2ebec469d5cf8a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1dbf4ee36eeea5721672fcec6a2ebec469d5cf8a"
        }
      ],
      "message": "qa: list descriptors in Miniscript signing functional tests\n\nThis makes it more generalistic than just having the miniscripts since\nwe are going to have Taproot descriptors with (multiple) miniscripts in\nthem too.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T16:06:56Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-03T16:26:17Z"
      },
      "sha": "4326fbe732d9ea3e2c847fc24f2de6017cc95af1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmZTNmMDU5MTYwYzkxYjU4NmY2Y2M1ZmNhZjI1NWU1MjA0MWFkZGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfe3f059160c91b586f6cc5fcaf255e52041addc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dfe3f059160c91b586f6cc5fcaf255e52041addc",
      "tree": {
        "sha": "7c57d5f0df5d91058e07dab5d933da64370618a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c57d5f0df5d91058e07dab5d933da64370618a3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7c57d5f0df5d91058e07dab5d933da64370618a3\nparent 4326fbe732d9ea3e2c847fc24f2de6017cc95af1\nauthor Antoine Poinsot <darosior@protonmail.com> 1677863925 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684166817 +0200\n\nqa: Tapscript Miniscript signing functional tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiWKEACgkQ4T/BRc0/\nQwS5kwv9G6VR54rh4eA3QvOAdLgWYsAolZPCZP6qEWPXVoTpwZAcmgPt+FiwQSXO\nP7bNEvbcim3Vv7novWbzTQMHYuY5ssISHmOa8SS2muPwjoQEGYZ1TYzQ9TouXkLS\ncI3ZgLMPDRUBVPLgfuiiPTAWB5KdFMs1O/Gq31HCcmAcDLMZi38gIRxKCd9swsag\niHW6oVQEwifa/WOHVA/HtJvASxtNW9sjWgxtDXxg/nb7LAJVWvwo8CMd644rOSxl\nMb0kXFN3zWyV5YuRaBr/kEOjYO10pph0n/u7PdeHlopr2MTfbocMPSilCReFQovb\nDQI2ZN6bKzYAZdokzd34Kr+9X5WFHqN6NWwBkC2dtJptux50GNXAY1dFpYZh5ZKy\nQ3e8N99WYeYhJrRnT+qB104jTwX5G4M4bKWkk7zjppYpSOaIhu5NCcDRvvvt9aRO\n3kATSYmADhQrwAI04uvx5YLgvi4tVe3+Ij/DMICtlaHBTF2EaIFanZXHJhLFBG+h\nNm7LE5wu\n=j0/3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4326fbe732d9ea3e2c847fc24f2de6017cc95af1",
          "sha": "4326fbe732d9ea3e2c847fc24f2de6017cc95af1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4326fbe732d9ea3e2c847fc24f2de6017cc95af1"
        }
      ],
      "message": "qa: Tapscript Miniscript signing functional tests",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T16:06:57Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-03T17:18:45Z"
      },
      "sha": "dfe3f059160c91b586f6cc5fcaf255e52041addc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk5OGQzMDE1ODk4OTQzYjFkNmRlYTVlZGMzZDFkMThkODcwMmRjNzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "tree": {
        "sha": "b8431c0b43057f74eeb8226d1c0ef13fa01a691f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8431c0b43057f74eeb8226d1c0ef13fa01a691f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b8431c0b43057f74eeb8226d1c0ef13fa01a691f\nparent dfe3f059160c91b586f6cc5fcaf255e52041addc\nauthor Antoine Poinsot <darosior@protonmail.com> 1678957425 +0100\ncommitter Antoine Poinsot <darosior@protonmail.com> 1684166817 +0200\n\nminiscript: have a custom Node destructor\n\nTo avoid recursive calls in shared_ptr's destructor that could lead to a\nstack overflow.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmRiWKEACgkQ4T/BRc0/\nQwTFWgwA2Ky+Rs+wjxsIrG0zk04Q/U1OdcMfe+WQIe5kpf8a06isnp5ECqkgJEIs\nRK6LGiFWjo3aqKmTI6VF98E71QZ9aG49Bs4yEsQbFDTtixAPgAIgsDdlYAfotihd\n6KHG+JMbY0eKPsAuFQk4YUNe8caobIUuoQnydrXXg5biIHqxmn8eht5rTnkFtN9Y\n9+Bg7luQN+nAYlkyDUd/STDtJj1eT3HLNvyc3F9aJ4oqVCZSCnQlLEaG9sQudU0W\nlPmkbaTCNiMI622qUH4AmyH3cgiCQ9lLLNYHr+ymdW+eRFh3beFcem8tl5b1mdH6\no4uCM4u1fe9RWrLr6ZbM45nBvZQYGP0ivuXNeCNkWJyXiplLt/dT3jfOFysFasNX\ngMAYK1ItAgRLUWVkGwCjZ7egMr5QwqCil/dtlIewM71TQlRazzk52rL9jjDsnq+v\n+KL5u7Py7AhXPkxFqIvz6P+pxFkMeZ4ZsfggrBKtv7XHX5PK8R3eVwQJ48dZf1AH\n27W/j+GX\n=Bwmd\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfe3f059160c91b586f6cc5fcaf255e52041addc",
          "sha": "dfe3f059160c91b586f6cc5fcaf255e52041addc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dfe3f059160c91b586f6cc5fcaf255e52041addc"
        }
      ],
      "message": "miniscript: have a custom Node destructor\n\nTo avoid recursive calls in shared_ptr's destructor that could lead to a\nstack overflow.",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-05-15T16:06:57Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-03-16T09:03:45Z"
      },
      "sha": "998d3015898943b1d6dea5edc3d1d18d8702dc73"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9261020645,
      "node_id": "HRFPE_lADOABII585gwrw2zwAAAAIn__Xl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261020645",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:02:52Z"
    },
    {
      "event": "commented",
      "id": 1550158814,
      "node_id": "IC_kwDOABII585cZYve",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550158814",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z",
      "updated_at": "2023-05-16T18:25:53Z",
      "author_association": "MEMBER",
      "body": "Rebased and updated.\r\n- I addressed @josibake's comments. (thanks for the review!)\r\n- I fixed the `multi_a` satisfaction to use an algorithm similar to `multi`'s.\r\n- Modified the maximum script size to account for some breathing room for the spending transaction size.\r\n- Made the execution size accounting easier by not tracking the size of the stack after execution of a fragment, instead assuming the maximum amount of stack elements the fragment can consume were consumed. The number of items pushed is an invariant on the type (1 for `B` `K` and `W`, 0 for `V`). See the code comments for more details.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#issuecomment-1550158814",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255"
    },
    {
      "event": "mentioned",
      "id": 9261228253,
      "node_id": "MEE_lADOABII585gwrw2zwAAAAIoAyDd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261228253",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z"
    },
    {
      "event": "subscribed",
      "id": 9261228268,
      "node_id": "SE_lADOABII585gwrw2zwAAAAIoAyDs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9261228268",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T18:25:53Z"
    },
    {
      "event": "unlabeled",
      "id": 9262091452,
      "node_id": "UNLE_lADOABII585gwrw2zwAAAAIoEEy8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9262091452",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T20:06:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 9337578306,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskCNC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337578306",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6052b0856d7ccaafbc68d2a78470e01e6608a6a9",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/6052b0856d7ccaafbc68d2a78470e01e6608a6a9",
      "created_at": "2023-05-25T09:17:38Z"
    },
    {
      "event": "referenced",
      "id": 9337672005,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskZFF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337672005",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d214d14a2402b084f6568a24a1cd78428c96926f",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/d214d14a2402b084f6568a24a1cd78428c96926f",
      "created_at": "2023-05-25T09:24:42Z"
    },
    {
      "event": "referenced",
      "id": 9337685987,
      "node_id": "REFE_lADOABII585gwrw2zwAAAAIskcfj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9337685987",
      "actor": {
        "login": "benma",
        "id": 1225267,
        "node_id": "MDQ6VXNlcjEyMjUyNjc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1225267?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benma",
        "html_url": "https://github.com/benma",
        "followers_url": "https://api.github.com/users/benma/followers",
        "following_url": "https://api.github.com/users/benma/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benma/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benma/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benma/subscriptions",
        "organizations_url": "https://api.github.com/users/benma/orgs",
        "repos_url": "https://api.github.com/users/benma/repos",
        "events_url": "https://api.github.com/users/benma/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benma/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "19fa823d94c16fd116cab20ac9a6c8686a53e45d",
      "commit_url": "https://api.github.com/repos/benma/btcd/commits/19fa823d94c16fd116cab20ac9a6c8686a53e45d",
      "created_at": "2023-05-25T09:25:29Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397",
      "pull_request_review_id": 1340932665,
      "id": 1136724397,
      "node_id": "PRRC_kwDOABII585DwQmt",
      "diff_hunk": "@@ -1901,7 +2136,38 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n                 if (!k || *k < 1 || *k > *n) return {};\n                 in += 3 + *n;\n                 std::reverse(keys.begin(), keys.end());\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), *k));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::MULTI, std::move(keys), *k));\n+                break;\n+            }\n+            // Tapscript's multi",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 965,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perhaps `multi_a` for consistency, since `multi` is a valid fragment elsewhere?\r\nOr `Tapscript multisig` if you want to explicitly _not_ refer to the fragment.",
      "created_at": "2023-03-15T08:57:45Z",
      "updated_at": "2023-03-15T08:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1136724397",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1136724397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661",
      "pull_request_review_id": 1341664972,
      "id": 1137201661,
      "node_id": "PRRC_kwDOABII585DyFH9",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It might be worth explicitly enumerating both the known contexts, and have a defensive final  `assert(false);`.\r\nSimilarly for other places where the context is accessed).",
      "created_at": "2023-03-15T14:42:41Z",
      "updated_at": "2023-03-15T14:42:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137201661",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137201661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1359,
      "original_line": 1359,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005",
      "pull_request_review_id": 1341692112,
      "id": 1137224005,
      "node_id": "PRRC_kwDOABII585DyKlF",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": 1137201661,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I could have a `IsTapscript(ctx)` helper that does that next to the `MiniscriptContext` enum. It could then be used in all those places to not have to duplicate the verbose `switch () ... assert(false)`.",
      "created_at": "2023-03-15T14:55:02Z",
      "updated_at": "2023-03-15T14:55:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137224005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137224005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1359,
      "original_line": 1359,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463",
      "pull_request_review_id": 1341720788,
      "id": 1137247463,
      "node_id": "PRRC_kwDOABII585DyQTn",
      "diff_hunk": "@@ -1139,24 +1314,37 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }\n+\n+    //! Return the maximum number of stack elements needed to satisfy this script non-malleably.\n+    uint32_t GetStackSize() const { return ss.sat.size.value; }\n \n-    /** Return the maximum number of stack elements needed to satisfy this script non-malleably, including\n-     * the script push. */\n-    uint32_t GetStackSize() const { return ss.sat.value + 1; }\n+    //! Return the maximum size of the stack during execution of this script.\n+    uint32_t GetExecStackSize() const {\n+        return ss.sat.size.value + (uint32_t)std::max(ss.sat.exec.value, 0);\n+    }\n \n-    //! Check the maximum stack size for this script against the policy limit.\n-    bool CheckStackSize() const { return GetStackSize() - 1 <= MAX_STANDARD_P2WSH_STACK_ITEMS; }\n+    //! Check the maximum stack size for this script against the limits.\n+    template <typename Ctx> bool CheckStackSize(const Ctx& ctx) const {\n+        if (ctx.MsContext() == MiniscriptContext::P2WSH && GetStackSize() > MAX_STANDARD_P2WSH_STACK_ITEMS) {\n+            return false;\n+        }",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 426,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not this?\r\n```C++\r\n        if (ctx.MsContext() == MiniscriptContext::P2WSH) {\r\n            return GetStackSize() <= MAX_STANDARD_P2WSH_STACK_ITEMS;\r\n        }\r\n```\r\nOtherwise, it seems to add the other condition for the `P2WSH` context as well.",
      "created_at": "2023-03-15T15:08:07Z",
      "updated_at": "2023-03-15T15:08:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137247463",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137247463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200",
      "pull_request_review_id": 1341735215,
      "id": 1137259200,
      "node_id": "PRRC_kwDOABII585DyTLA",
      "diff_hunk": "@@ -536,10 +537,10 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n \n     // Invalid checksum\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\n-    // Only p2wsh context is valid\n-    CheckUnparsable(\"sh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))\", \"sh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))\", \"Miniscript expressions can only be used in wsh\");\n+    // Only p2wsh or tr context are valid",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Typo: \"contexts\"",
      "created_at": "2023-03-15T15:14:54Z",
      "updated_at": "2023-03-15T15:14:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137259200",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137259200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634",
      "pull_request_review_id": 1341762826,
      "id": 1137280634,
      "node_id": "PRRC_kwDOABII585DyYZ6",
      "diff_hunk": "@@ -1017,7 +1148,7 @@ void TestNode(const NodeRef& node, FuzzedDataProvider& provider)\n             assert(it != TEST_DATA.dummy_sigs.end());\n             return it->second.second;\n         }\n-        case Fragment::MULTI: {\n+        case Fragment::MULTI: case Fragment::MULTI_A: {",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": null,
      "original_position": 480,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit: missing a newline",
      "created_at": "2023-03-15T15:20:51Z",
      "updated_at": "2023-03-15T15:20:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137280634",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137280634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790",
      "pull_request_review_id": 1341784989,
      "id": 1137296790,
      "node_id": "PRRC_kwDOABII585DycWW",
      "diff_hunk": "@@ -316,11 +316,22 @@ struct MaxInt {\n         return a.value + b.value;\n     }\n \n+    friend MaxInt<I> operator-(const MaxInt<I>& a, const I& b) {\n+        if (!a.valid) return {};\n+        return a.value - b;",
      "path": "src/script/miniscript.h",
      "position": 65,
      "original_position": 6,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "in_reply_to_id": null,
      "user": {
        "login": "bigspider",
        "id": 6681844,
        "node_id": "MDQ6VXNlcjY2ODE4NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6681844?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bigspider",
        "html_url": "https://github.com/bigspider",
        "followers_url": "https://api.github.com/users/bigspider/followers",
        "following_url": "https://api.github.com/users/bigspider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bigspider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bigspider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bigspider/subscriptions",
        "organizations_url": "https://api.github.com/users/bigspider/orgs",
        "repos_url": "https://api.github.com/users/bigspider/repos",
        "events_url": "https://api.github.com/users/bigspider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bigspider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I suppose it never happens, but worth checking that `a.value >= b`?\r\nEspecially since it could be used with unsigned types.",
      "created_at": "2023-03-15T15:25:05Z",
      "updated_at": "2023-03-15T15:25:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1137296790",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137296790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 331,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375",
      "pull_request_review_id": 1343600247,
      "id": 1138537375,
      "node_id": "PRRC_kwDOABII585D3LOf",
      "diff_hunk": "@@ -1139,24 +1314,37 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }\n+\n+    //! Return the maximum number of stack elements needed to satisfy this script non-malleably.\n+    uint32_t GetStackSize() const { return ss.sat.size.value; }\n \n-    /** Return the maximum number of stack elements needed to satisfy this script non-malleably, including\n-     * the script push. */\n-    uint32_t GetStackSize() const { return ss.sat.value + 1; }\n+    //! Return the maximum size of the stack during execution of this script.\n+    uint32_t GetExecStackSize() const {\n+        return ss.sat.size.value + (uint32_t)std::max(ss.sat.exec.value, 0);\n+    }\n \n-    //! Check the maximum stack size for this script against the policy limit.\n-    bool CheckStackSize() const { return GetStackSize() - 1 <= MAX_STANDARD_P2WSH_STACK_ITEMS; }\n+    //! Check the maximum stack size for this script against the limits.\n+    template <typename Ctx> bool CheckStackSize(const Ctx& ctx) const {\n+        if (ctx.MsContext() == MiniscriptContext::P2WSH && GetStackSize() > MAX_STANDARD_P2WSH_STACK_ITEMS) {\n+            return false;\n+        }",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 426,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137247463,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it didn't matter since the computation is trivial and the bounds more loose for Tapscript anyways. But your suggestion is clearer indeed, taken, thanks.",
      "created_at": "2023-03-16T11:57:43Z",
      "updated_at": "2023-03-16T11:57:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138537375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138537375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1334,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592",
      "pull_request_review_id": 1343601973,
      "id": 1138538592,
      "node_id": "PRRC_kwDOABII585D3Lhg",
      "diff_hunk": "@@ -536,10 +537,10 @@ BOOST_AUTO_TEST_CASE(descriptor_test)\n \n     // Invalid checksum\n     CheckUnparsable(\"wsh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))#abcdef12\", \"wsh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))#abcdef12\", \"Provided checksum 'abcdef12' does not match computed checksum 'tyzp6a7p'\");\n-    // Only p2wsh context is valid\n-    CheckUnparsable(\"sh(and_v(vc:andor(pk(L4gM1FBdyHNpkzsFh9ipnofLhpZRp2mwobpeULy1a6dBTvw8Ywtd),pk_k(Kx9HCDjGiwFcgVNhTrS5z5NeZdD6veeam61eDxLDCkGWujvL4Gnn),and_v(v:older(1),pk_k(L4o2kDvXXDRH2VS9uBnouScLduWt4dZnM25se7kvEjJeQ285en2A))),after(10)))\", \"sh(and_v(vc:andor(pk(03cdabb7f2dce7bfbd8a0b9570c6fd1e712e5d64045e9d6b517b3d5072251dc204),pk_k(032707170c71d8f75e4ca4e3fce870b9409dcaf12b051d3bcadff74747fa7619c0),and_v(v:older(1),pk_k(02aa27e5eb2c185e87cd1dbc3e0efc9cb1175235e0259df1713424941c3cb40402))),after(10)))\", \"Miniscript expressions can only be used in wsh\");\n+    // Only p2wsh or tr context are valid",
      "path": "src/test/descriptor_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137259200,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Meh. Done.",
      "created_at": "2023-03-16T11:58:49Z",
      "updated_at": "2023-03-16T11:58:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138538592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138538592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 540,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531",
      "pull_request_review_id": 1343605518,
      "id": 1138541531,
      "node_id": "PRRC_kwDOABII585D3MPb",
      "diff_hunk": "@@ -1017,7 +1148,7 @@ void TestNode(const NodeRef& node, FuzzedDataProvider& provider)\n             assert(it != TEST_DATA.dummy_sigs.end());\n             return it->second.second;\n         }\n-        case Fragment::MULTI: {\n+        case Fragment::MULTI: case Fragment::MULTI_A: {",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": null,
      "original_position": 480,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "33f28a8d472a2869d37e40f5f9d7efd7f88bcc89",
      "in_reply_to_id": 1137280634,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm i thought i was following the style used elsewhere, but i must have dreamed it. Done.",
      "created_at": "2023-03-16T12:01:05Z",
      "updated_at": "2023-03-16T12:01:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138541531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138541531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620",
      "pull_request_review_id": 1343614719,
      "id": 1138548620,
      "node_id": "PRRC_kwDOABII585D3N-M",
      "diff_hunk": "@@ -316,11 +316,22 @@ struct MaxInt {\n         return a.value + b.value;\n     }\n \n+    friend MaxInt<I> operator-(const MaxInt<I>& a, const I& b) {\n+        if (!a.valid) return {};\n+        return a.value - b;",
      "path": "src/script/miniscript.h",
      "position": 65,
      "original_position": 6,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "157c4a047b573dfac775f25c970e1f1762fe8f7b",
      "in_reply_to_id": 1137296790,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm that's a good point re unsigned type, but it needs to be able to return negative values. So i guess it's up to the caller to make sure they don't call this with `b > a` if `a` is unsigned, as with regular substractions?",
      "created_at": "2023-03-16T12:06:40Z",
      "updated_at": "2023-03-16T12:06:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138548620",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138548620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 331,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649",
      "pull_request_review_id": 1344105798,
      "id": 1138892649,
      "node_id": "PRRC_kwDOABII585D4h9p",
      "diff_hunk": "@@ -1188,23 +1188,28 @@ struct Node {\n     //! Return the number of ops in the script (not counting the dynamic ones that depend on execution).\n     uint32_t GetStaticOps() const { return ops.count; }\n \n-    //! Check the ops limit of this script against the consensus limit.\n-    bool CheckOpsLimit() const { return GetOps() <= MAX_OPS_PER_SCRIPT; }\n+    //! Check the ops limit of this script against the consensus limit. This limit is only present for P2WSH.\n+    template <typename Ctx> bool CheckOpsLimit(const Ctx& ctx) const {\n+        return ctx.MsContext() == MiniscriptContext::TAPSCRIPT || GetOps() <= MAX_OPS_PER_SCRIPT;\n+    }",
      "path": "src/script/miniscript.h",
      "position": 458,
      "original_position": 9,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "62d31e6c7bc190602b0a89a1ff330a2bf6aefbf3",
      "in_reply_to_id": 1137201661,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alright, finally applied the change to the many occurrences in each commit. It should also be more readable now.",
      "created_at": "2023-03-16T15:33:33Z",
      "updated_at": "2023-03-16T15:33:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1138892649",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1138892649"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1359,
      "original_line": 1359,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451",
      "pull_request_review_id": 1376054310,
      "id": 1160599451,
      "node_id": "PRRC_kwDOABII585FLVeb",
      "diff_hunk": "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        KeyParser parser(/*out =*/&out, /*in=*/nullptr, /*ctx=*/miniscript::MiniscriptContext::P2WSH);\r\n```",
      "created_at": "2023-04-07T10:04:12Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160599451",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160599451"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034",
      "pull_request_review_id": 1376054310,
      "id": 1160600034,
      "node_id": "PRRC_kwDOABII585FLVni",
      "diff_hunk": "@@ -1670,7 +1692,7 @@ std::unique_ptr<DescriptorImpl> InferScript(const CScript& script, ParseScriptCo\n     }\n \n     if (ctx == ParseScriptContext::P2WSH) {\n-        KeyParser parser(nullptr, &provider);\n+        KeyParser parser(/* out = */nullptr, /* in = */&provider, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 109,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        KeyParser parser(/*out=*/nullptr, /*in=*/&provider, /*ctx=*/miniscript::MiniscriptContext::P2WSH);",
      "created_at": "2023-04-07T10:05:19Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160600034",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160600034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1695,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636",
      "pull_request_review_id": 1376054310,
      "id": 1160606636,
      "node_id": "PRRC_kwDOABII585FLXOs",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;\n+        case MiniscriptContext::TAPSCRIPT: return true;\n+    }\n+    assert(false);",
      "path": "src/script/miniscript.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "iirc, `assert` crashes the node. wouldn't it be better to use the `Assume` macro?",
      "created_at": "2023-04-07T10:17:46Z",
      "updated_at": "2023-04-07T10:54:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606636",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743",
      "pull_request_review_id": 1376054310,
      "id": 1160606743,
      "node_id": "PRRC_kwDOABII585FLXQX",
      "diff_hunk": "@@ -605,6 +608,7 @@ struct Node {\n                 case Fragment::OR_I: return BuildScript(OP_IF, subs[0], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::ANDOR: return BuildScript(std::move(subs[0]), OP_NOTIF, subs[2], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 14,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same comment as above re: `assert`",
      "created_at": "2023-04-07T10:17:59Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 611,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878",
      "pull_request_review_id": 1376054310,
      "id": 1160606878,
      "node_id": "PRRC_kwDOABII585FLXSe",
      "diff_hunk": "@@ -704,6 +708,7 @@ struct Node {\n                     if (node.subs[2]->fragment == Fragment::JUST_0) return std::move(ret) + \"and_n(\" + std::move(subs[0]) + \",\" + std::move(subs[1]) + \")\";\n                     return std::move(ret) + \"andor(\" + std::move(subs[0]) + \",\" + std::move(subs[1]) + \",\" + std::move(subs[2]) + \")\";\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 22,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "same comment as above re: `assert`",
      "created_at": "2023-04-07T10:18:15Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160606878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160606878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 711,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237",
      "pull_request_review_id": 1376054310,
      "id": 1160608237,
      "node_id": "PRRC_kwDOABII585FLXnt",
      "diff_hunk": "@@ -1534,6 +1539,7 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n+                if (IsTapscript(ctx.MsContext())) return {};",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 30,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "probably out of scope for this PR, but it would be nice to have the parser tell you why it wasn't able to parse the script, rather than just return empty",
      "created_at": "2023-04-07T10:20:52Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160608237",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160608237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483",
      "pull_request_review_id": 1376054310,
      "id": 1160609483,
      "node_id": "PRRC_kwDOABII585FLX7L",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n ",
      "path": "src/script/miniscript.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not a big deal, but I think it's more correct to say \"CHECKMULTISIG is disabled in Tapscript\" in the commit message",
      "created_at": "2023-04-07T10:23:16Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160609483",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160609483"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768",
      "pull_request_review_id": 1376054310,
      "id": 1160611768,
      "node_id": "PRRC_kwDOABII585FLYe4",
      "diff_hunk": "@@ -1539,27 +1617,9 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n-                if (IsTapscript(ctx.MsContext())) return {};\n-                // Get threshold\n-                int next_comma = FindNextChar(in, ',');\n-                if (next_comma < 1) return {};\n-                if (!ParseInt64(std::string(in.begin(), in.begin() + next_comma), &k)) return {};\n-                in = in.subspan(next_comma + 1);\n-                // Get keys\n-                std::vector<Key> keys;\n-                while (next_comma != -1) {\n-                    next_comma = FindNextChar(in, ',');\n-                    int key_length = (next_comma == -1) ? FindNextChar(in, ')') : next_comma;\n-                    if (key_length < 1) return {};\n-                    auto key = ctx.FromString(in.begin(), in.begin() + key_length);\n-                    if (!key) return {};\n-                    keys.push_back(std::move(*key));\n-                    in = in.subspan(key_length + 1);\n-                }\n-                if (keys.size() < 1 || keys.size() > 20) return {};\n-                if (k < 1 || k > (int64_t)keys.size()) return {};\n-                script_size += 2 + (keys.size() > 16) + (k > 16) + 34 * keys.size();\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), k));\n+                if (!parse_multi_exp(in, /* is_multi_a = */false)) return {};",
      "path": "src/script/miniscript.h",
      "position": 796,
      "original_position": 172,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "c0ba8ebbf6369b37b645165bb5cd638fc7eee67f",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                if (!parse_multi_exp(in, /*is_multi_a=*/false)) return {};\r\n```",
      "created_at": "2023-04-07T10:27:31Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160611768",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160611768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1819,
      "original_line": 1819,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094",
      "pull_request_review_id": 1376054310,
      "id": 1160612094,
      "node_id": "PRRC_kwDOABII585FLYj-",
      "diff_hunk": "@@ -1539,27 +1617,9 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n-                if (IsTapscript(ctx.MsContext())) return {};\n-                // Get threshold\n-                int next_comma = FindNextChar(in, ',');\n-                if (next_comma < 1) return {};\n-                if (!ParseInt64(std::string(in.begin(), in.begin() + next_comma), &k)) return {};\n-                in = in.subspan(next_comma + 1);\n-                // Get keys\n-                std::vector<Key> keys;\n-                while (next_comma != -1) {\n-                    next_comma = FindNextChar(in, ',');\n-                    int key_length = (next_comma == -1) ? FindNextChar(in, ')') : next_comma;\n-                    if (key_length < 1) return {};\n-                    auto key = ctx.FromString(in.begin(), in.begin() + key_length);\n-                    if (!key) return {};\n-                    keys.push_back(std::move(*key));\n-                    in = in.subspan(key_length + 1);\n-                }\n-                if (keys.size() < 1 || keys.size() > 20) return {};\n-                if (k < 1 || k > (int64_t)keys.size()) return {};\n-                script_size += 2 + (keys.size() > 16) + (k > 16) + 34 * keys.size();\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::MULTI, std::move(keys), k));\n+                if (!parse_multi_exp(in, /* is_multi_a = */false)) return {};\n+            } else if (Const(\"multi_a(\", in)) {\n+                if (!parse_multi_exp(in, /* is_multi_a = */true)) return {};",
      "path": "src/script/miniscript.h",
      "position": 798,
      "original_position": 174,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "c0ba8ebbf6369b37b645165bb5cd638fc7eee67f",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n                if (!parse_multi_exp(in, /*is_multi_a=*/true)) return {};\r\n```",
      "created_at": "2023-04-07T10:28:16Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160612094",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160612094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1821,
      "original_line": 1821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879",
      "pull_request_review_id": 1376054310,
      "id": 1160615879,
      "node_id": "PRRC_kwDOABII585FLZfH",
      "diff_hunk": "@@ -833,51 +858,152 @@ struct Node {\n     }\n \n     internal::StackSize CalcStackSize() const {\n+        // Among non-malleable satisfactions and dissatisfactions, this computes for each fragment:\n+        // - The maximum witness stack size of this (dis)satisfaction;\n+        // - The maximum number of elements added or removed on the stack after executing it;\n+        // - The maximum number of elements added to the stack while executing it.\n         switch (fragment) {\n-            case Fragment::JUST_0: return {{}, 0};\n+            case Fragment::JUST_0: return {{}, {0, 1}};\n             case Fragment::JUST_1:\n             case Fragment::OLDER:\n-            case Fragment::AFTER: return {0, {}};\n-            case Fragment::PK_K: return {1, 1};\n-            case Fragment::PK_H: return {2, 2};\n+            case Fragment::AFTER: return {{0, 1}, {}};\n+            case Fragment::PK_K: return {{1, 1}, {1, 1}};\n+            case Fragment::PK_H: return {{2, 0, 2}, {2, 0, 2}};\n             case Fragment::SHA256:\n             case Fragment::RIPEMD160:\n             case Fragment::HASH256:\n-            case Fragment::HASH160: return {1, {}};\n+            case Fragment::HASH160: return {{1, 0, 2}, {}};\n             case Fragment::ANDOR: {\n-                const auto sat{(subs[0]->ss.sat + subs[1]->ss.sat) | (subs[0]->ss.dsat + subs[2]->ss.sat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[2]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto& z{subs[2]->ss};\n+                const auto sat_size{(x.sat.size + y.sat.size) | (x.dsat.size + z.sat.size)};\n+                const auto dsat_size{x.dsat.size + z.dsat.size};\n+                const auto sat_diff{((x.sat.diff + y.sat.diff) | (x.dsat.diff + z.sat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff - 1 + z.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff - 1 + y.sat.exec) | (x.dsat.diff - 1 + z.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + z.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::AND_V: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::AND_B: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::AND_V: return {subs[0]->ss.sat + subs[1]->ss.sat, {}};\n-            case Fragment::AND_B: return {subs[0]->ss.sat + subs[1]->ss.sat, subs[0]->ss.dsat + subs[1]->ss.dsat};\n             case Fragment::OR_B: {\n-                const auto sat{(subs[0]->ss.dsat + subs[1]->ss.sat) | (subs[0]->ss.sat + subs[1]->ss.dsat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[1]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.dsat.size + y.sat.size) | (x.sat.size + y.dsat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{((x.dsat.diff + y.sat.diff) | (x.sat.diff + y.dsat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff + y.sat.exec) | (x.sat.diff + y.dsat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_C: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto sat_diff{(x.sat.diff | (x.dsat.diff + y.sat.diff)) - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff - 1 + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::OR_D: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff | (x.dsat.diff - 1 + y.sat.diff)};\n+                const auto dsat_diff{x.dsat.diff - 1 + y.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff + 1) | (x.dsat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_I: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.sat.size + 1) | (y.sat.size + 1)};\n+                const auto dsat_size{(x.dsat.size + 1) | (y.dsat.size + 1)};\n+                const auto sat_diff{(x.sat.diff | y.sat.diff) - 1};\n+                const auto dsat_diff{(x.dsat.diff | y.dsat.diff) - 1};\n+                const auto sat_exec{(x.sat.exec | y.sat.exec) - 1};\n+                const auto dsat_exec{(x.dsat.exec | y.dsat.exec) - 1};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::OR_C: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), {}};\n-            case Fragment::OR_D: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), subs[0]->ss.dsat + subs[1]->ss.dsat};\n-            case Fragment::OR_I: return {(subs[0]->ss.sat + 1) | (subs[1]->ss.sat + 1), (subs[0]->ss.dsat + 1) | (subs[1]->ss.dsat + 1)};\n-            case Fragment::MULTI: return {k + 1, k + 1};\n-            case Fragment::MULTI_A: return {keys.size(), keys.size()};\n+            case Fragment::MULTI: return {{(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}, {(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}};\n+            case Fragment::MULTI_A: return {{(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}, {(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}};\n             case Fragment::WRAP_A:\n             case Fragment::WRAP_N:\n-            case Fragment::WRAP_S:\n-            case Fragment::WRAP_C: return subs[0]->ss;\n-            case Fragment::WRAP_D: return {1 + subs[0]->ss.sat, 1};\n-            case Fragment::WRAP_V: return {subs[0]->ss.sat, {}};\n-            case Fragment::WRAP_J: return {subs[0]->ss.sat, 1};\n+            case Fragment::WRAP_S: return subs[0]->ss;\n+            case Fragment::WRAP_C: {\n+                const auto& sub_sat{subs[0]->ss.sat};\n+                const auto& sub_dsat{subs[0]->ss.dsat};\n+                return {{sub_sat.size, sub_sat.diff - 1, sub_sat.exec}, {sub_dsat.size, sub_dsat.diff - 1, sub_dsat.exec}};\n+            }\n+            case Fragment::WRAP_D: return {{1 + subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, 1}};\n+            case Fragment::WRAP_V: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff - 1, subs[0]->ss.sat.exec}, {}};\n+            case Fragment::WRAP_J: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, subs[0]->ss.dsat.exec | 1}};\n             case Fragment::THRESH: {\n-                auto sats = Vector(internal::MaxInt<uint32_t>(0));\n-                for (const auto& sub : subs) {\n-                    auto next_sats = Vector(sats[0] + sub->ss.dsat);\n-                    for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back((sats[j] + sub->ss.dsat) | (sats[j - 1] + sub->ss.sat));\n-                    next_sats.push_back(sats[sats.size() - 1] + sub->ss.sat);\n-                    sats = std::move(next_sats);\n+                // The maximum satisfaction witness stack size for this fragment, indexed by threshold.\n+                auto sats_size = Vector(internal::MaxInt<uint32_t>(0));\n+                // Same for the stack size differential after executing this fragment.\n+                auto sats_diff = Vector(internal::MaxInt<int32_t>(0));\n+                // The maximum stack size at any point during execution of this fragment (or any sub\n+                // fragment thereoff), indexed by threshold.\n+                auto sats_exec = Vector(internal::MaxInt<int32_t>(0));\n+                for (size_t i = 0; i < subs.size(); ++i) {\n+                    // Start with the (non-malleable) dissatisfaction size.\n+                    auto next_sats_size = Vector(sats_size[0] + subs[i]->ss.dsat.size);\n+                    // Whether to account for OP_ADD that drops one element from the stack (-2 + 1).\n+                    auto add_diff = (i > 0 && i < subs.size() - 1) ? -1 : 0;\n+                    // The total difference in stack size after dissatisfying the first i first fragments.\n+                    auto next_sats_diff = Vector(sats_diff[0] + subs[i]->ss.dsat.diff + add_diff);\n+                    // Does the stack size gets bigger when dissatifying this fragment than the previous ones?\n+                    auto next_sats_exec = Vector(sats_exec[0] | (sats_diff[0] + subs[i]->ss.dsat.exec));\n+                    // Update what combination of sat/dsat is the largest per threshold.\n+                    for (size_t j = 1; j < sats_size.size(); ++j) {\n+                        // Which is larger, k-1 satisfaction and satifying this sub, or k satisfaction and dissatisfying\n+                        // this one?\n+                        next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\n+                        // Same for size of the stack after satisfying k of the past i fragments.\n+                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | (sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff);",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 212,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "efdd1543597aff49c56a1abaa75b574be3b330db",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"warning: suggest parentheses around arithmetic in operand of ‘|’ [-Wparentheses]\"\r\n\r\n```suggestion\r\n                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | ((sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff));",
      "created_at": "2023-04-07T10:36:06Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160615879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160615879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303",
      "pull_request_review_id": 1376054310,
      "id": 1160622303,
      "node_id": "PRRC_kwDOABII585FLbDf",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 952,
      "original_position": 932,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\"warning: ‘void* __builtin_memcpy(void*, const void*, long unsigned int)’ writing 33 bytes into a region of size 32 overflows the destination [-Wstringop-overflow=]\"\r\n\r\ngetting this warning but it doesn't make sense to me why, because it should be calling the right function based on `ctx`? there is a definition for `FromPKBytes` in `src/script/descriptor.cpp` and another one in `src/script/sign.cpp` and the warning is coming from the `src/sign.cpp` one. ",
      "created_at": "2023-04-07T10:49:18Z",
      "updated_at": "2023-04-07T10:54:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1160622303",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160622303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2118,
      "original_line": 2118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364",
      "pull_request_review_id": 1396864124,
      "id": 1174534364,
      "node_id": "PRRC_kwDOABII585GAfjc",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;",
      "path": "src/script/miniscript.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": null,
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason why the only two options are P2WSH and P2TR? Should there be a case statement for P2SH (`sh`) too?",
      "created_at": "2023-04-23T08:21:55Z",
      "updated_at": "2023-04-23T08:21:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1174534364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174534364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019",
      "pull_request_review_id": 1406271728,
      "id": 1180610019,
      "node_id": "PRRC_kwDOABII585GXq3j",
      "diff_hunk": "@@ -811,11 +856,15 @@ NodeRef GenNode(F ConsumeNode, Type root_type, bool strict_valid = false) {\n             // Fragment/children have not been decided yet. Decide them.\n             auto node_info = ConsumeNode(type_needed);\n             if (!node_info) return {};\n+            if ((!miniscript::IsTapscript(SCRIPT_CTX) && node_info->fragment == Fragment::MULTI_A)",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": 286,
      "original_position": 223,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "02a5fa633f9f44b378f7c015275eacd54939e980",
      "in_reply_to_id": null,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note to self: i should relax the ops and script size limits below under Tapscript context.",
      "created_at": "2023-04-28T16:32:58Z",
      "updated_at": "2023-04-28T16:32:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1180610019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1180610019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 859,
      "original_line": 859,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073",
      "pull_request_review_id": 1410428611,
      "id": 1183400073,
      "node_id": "PRRC_kwDOABII585GiUCJ",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;",
      "path": "src/script/miniscript.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1174534364,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Because the current codebase only support P2WSH, there is no support for legacy P2SH.",
      "created_at": "2023-05-03T08:42:48Z",
      "updated_at": "2023-05-03T08:42:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183400073",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183400073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185",
      "pull_request_review_id": 1410436660,
      "id": 1183405185,
      "node_id": "PRRC_kwDOABII585GiVSB",
      "diff_hunk": "@@ -1502,7 +1524,7 @@ std::unique_ptr<DescriptorImpl> ParseScript(uint32_t& key_exp_index, Span<const\n     }\n     // Process miniscript expressions.\n     {\n-        KeyParser parser(&out, nullptr);\n+        KeyParser parser(/*out = */&out, /* in = */nullptr, /* ctx = */miniscript::MiniscriptContext::P2WSH);",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 100,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "ef0eb7f87d19bd8a3ebff4f095d321964808df73",
      "in_reply_to_id": 1160599451,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the rationale for changing this? Do whitespaces prevent the analysis? Happy to do this (and the other similar comments) but i'd rather not go through the hassle of applying it on every single of the 21 commits and solve the rebase conflicts if it's just a style nit. Let me know!",
      "created_at": "2023-05-03T08:48:06Z",
      "updated_at": "2023-05-03T08:48:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183405185",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183405185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413",
      "pull_request_review_id": 1410444252,
      "id": 1183410413,
      "node_id": "PRRC_kwDOABII585GiWjt",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n \n namespace miniscript {\n+\n+bool IsTapscript(MiniscriptContext ms_ctx)\n+{\n+    switch (ms_ctx) {\n+        case MiniscriptContext::P2WSH: return false;\n+        case MiniscriptContext::TAPSCRIPT: return true;\n+    }\n+    assert(false);",
      "path": "src/script/miniscript.cpp",
      "position": 11,
      "original_position": 11,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160606636,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This specific case is the very common match-all-variants-and-assert pattern so i think it's good like that. It's also documented this way in our style guidelines: https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#c-data-structures.",
      "created_at": "2023-05-03T08:53:03Z",
      "updated_at": "2023-05-03T08:53:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183410413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183410413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232",
      "pull_request_review_id": 1410457197,
      "id": 1183419232,
      "node_id": "PRRC_kwDOABII585GiYtg",
      "diff_hunk": "@@ -605,6 +608,7 @@ struct Node {\n                 case Fragment::OR_I: return BuildScript(OP_IF, subs[0], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::ANDOR: return BuildScript(std::move(subs[0]), OP_NOTIF, subs[2], OP_ELSE, subs[1], OP_ENDIF);\n                 case Fragment::MULTI: {\n+                    assert(!IsTapscript(ctx.MsContext()));",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 14,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160606743,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For this and the other assertions of the context: if we get in such an inconsistent state as having a `multi_a` in a `wsh()` descriptor or a `multi` in a `tr()` descriptor, it's probably better to crash than to return inconsistent (and potentially harmful, like an unspendable address) data to the user. Though it could raise an exception instead of crashing the node. I'll see if i can use `CHECK_NONFATAL` instead.\r\n\r\nEDIT: used `CHECK_NONFATAL` instead here and for `MULTI_A` too.",
      "created_at": "2023-05-03T09:00:48Z",
      "updated_at": "2023-05-03T09:22:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183419232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183419232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 611,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783",
      "pull_request_review_id": 1410501997,
      "id": 1183444783,
      "node_id": "PRRC_kwDOABII585Gie8v",
      "diff_hunk": "@@ -1534,6 +1539,7 @@ inline NodeRef<Key> Parse(Span<const char> in, const Ctx& ctx)\n                 in = in.subspan(arg_size + 1);\n                 script_size += 1 + (num > 16) + (num > 0x7f) + (num > 0x7fff) + (num > 0x7fffff);\n             } else if (Const(\"multi(\", in)) {\n+                if (IsTapscript(ctx.MsContext())) return {};",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 30,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160608237,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes generally it would be nice to have better error reporting for descriptors. And i think there are lower hanging fruits when it comes to unclear descriptor errors that confuse users, for instance https://bitcoin.stackexchange.com/q/118022/101498.\r\n\r\nBut yeah definitely not going to bring that into this PR. :)",
      "created_at": "2023-05-03T09:24:05Z",
      "updated_at": "2023-05-03T09:24:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183444783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183444783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1542,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113",
      "pull_request_review_id": 1410504054,
      "id": 1183446113,
      "node_id": "PRRC_kwDOABII585GifRh",
      "diff_hunk": "@@ -11,6 +11,16 @@\n #include <assert.h>\n ",
      "path": "src/script/miniscript.cpp",
      "position": 2,
      "original_position": 2,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "1360b541ae509f2df5ec319be63b083860bed603",
      "in_reply_to_id": 1160609483,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2023-05-03T09:25:25Z",
      "updated_at": "2023-05-03T09:25:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183446113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183446113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461",
      "pull_request_review_id": 1410572054,
      "id": 1183487461,
      "node_id": "PRRC_kwDOABII585GipXl",
      "diff_hunk": "@@ -833,51 +858,152 @@ struct Node {\n     }\n \n     internal::StackSize CalcStackSize() const {\n+        // Among non-malleable satisfactions and dissatisfactions, this computes for each fragment:\n+        // - The maximum witness stack size of this (dis)satisfaction;\n+        // - The maximum number of elements added or removed on the stack after executing it;\n+        // - The maximum number of elements added to the stack while executing it.\n         switch (fragment) {\n-            case Fragment::JUST_0: return {{}, 0};\n+            case Fragment::JUST_0: return {{}, {0, 1}};\n             case Fragment::JUST_1:\n             case Fragment::OLDER:\n-            case Fragment::AFTER: return {0, {}};\n-            case Fragment::PK_K: return {1, 1};\n-            case Fragment::PK_H: return {2, 2};\n+            case Fragment::AFTER: return {{0, 1}, {}};\n+            case Fragment::PK_K: return {{1, 1}, {1, 1}};\n+            case Fragment::PK_H: return {{2, 0, 2}, {2, 0, 2}};\n             case Fragment::SHA256:\n             case Fragment::RIPEMD160:\n             case Fragment::HASH256:\n-            case Fragment::HASH160: return {1, {}};\n+            case Fragment::HASH160: return {{1, 0, 2}, {}};\n             case Fragment::ANDOR: {\n-                const auto sat{(subs[0]->ss.sat + subs[1]->ss.sat) | (subs[0]->ss.dsat + subs[2]->ss.sat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[2]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto& z{subs[2]->ss};\n+                const auto sat_size{(x.sat.size + y.sat.size) | (x.dsat.size + z.sat.size)};\n+                const auto dsat_size{x.dsat.size + z.dsat.size};\n+                const auto sat_diff{((x.sat.diff + y.sat.diff) | (x.dsat.diff + z.sat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff - 1 + z.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff - 1 + y.sat.exec) | (x.dsat.diff - 1 + z.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + z.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::AND_V: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::AND_B: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size + y.sat.size};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff + y.sat.diff - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | (x.sat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::AND_V: return {subs[0]->ss.sat + subs[1]->ss.sat, {}};\n-            case Fragment::AND_B: return {subs[0]->ss.sat + subs[1]->ss.sat, subs[0]->ss.dsat + subs[1]->ss.dsat};\n             case Fragment::OR_B: {\n-                const auto sat{(subs[0]->ss.dsat + subs[1]->ss.sat) | (subs[0]->ss.sat + subs[1]->ss.dsat)};\n-                const auto dsat{subs[0]->ss.dsat + subs[1]->ss.dsat};\n-                return {sat, dsat};\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.dsat.size + y.sat.size) | (x.sat.size + y.dsat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{((x.dsat.diff + y.sat.diff) | (x.sat.diff + y.dsat.diff)) - 1};\n+                const auto dsat_diff{x.dsat.diff + y.dsat.diff - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff + y.sat.exec) | (x.sat.diff + y.dsat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_C: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto sat_diff{(x.sat.diff | (x.dsat.diff + y.sat.diff)) - 1};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.dsat.diff - 1 + y.sat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {}};\n+            }\n+            case Fragment::OR_D: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{x.sat.size | (x.dsat.size + y.sat.size)};\n+                const auto dsat_size{x.dsat.size + y.dsat.size};\n+                const auto sat_diff{x.sat.diff | (x.dsat.diff - 1 + y.sat.diff)};\n+                const auto dsat_diff{x.dsat.diff - 1 + y.dsat.diff};\n+                const auto sat_exec{x.sat.exec | x.dsat.exec | (x.sat.diff + 1) | (x.dsat.diff + y.sat.exec)};\n+                const auto dsat_exec{x.dsat.exec | (x.dsat.diff - 1 + y.dsat.exec)};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n+            }\n+            case Fragment::OR_I: {\n+                const auto& x{subs[0]->ss};\n+                const auto& y{subs[1]->ss};\n+                const auto sat_size{(x.sat.size + 1) | (y.sat.size + 1)};\n+                const auto dsat_size{(x.dsat.size + 1) | (y.dsat.size + 1)};\n+                const auto sat_diff{(x.sat.diff | y.sat.diff) - 1};\n+                const auto dsat_diff{(x.dsat.diff | y.dsat.diff) - 1};\n+                const auto sat_exec{(x.sat.exec | y.sat.exec) - 1};\n+                const auto dsat_exec{(x.dsat.exec | y.dsat.exec) - 1};\n+                return {{sat_size, sat_diff, sat_exec}, {dsat_size, dsat_diff, dsat_exec}};\n             }\n-            case Fragment::OR_C: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), {}};\n-            case Fragment::OR_D: return {subs[0]->ss.sat | (subs[0]->ss.dsat + subs[1]->ss.sat), subs[0]->ss.dsat + subs[1]->ss.dsat};\n-            case Fragment::OR_I: return {(subs[0]->ss.sat + 1) | (subs[1]->ss.sat + 1), (subs[0]->ss.dsat + 1) | (subs[1]->ss.dsat + 1)};\n-            case Fragment::MULTI: return {k + 1, k + 1};\n-            case Fragment::MULTI_A: return {keys.size(), keys.size()};\n+            case Fragment::MULTI: return {{(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}, {(uint32_t)k + 1, -(int32_t)k, 2 + (int32_t)keys.size()}};\n+            case Fragment::MULTI_A: return {{(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}, {(uint32_t)keys.size(), -(int32_t)keys.size() + 1, 1}};\n             case Fragment::WRAP_A:\n             case Fragment::WRAP_N:\n-            case Fragment::WRAP_S:\n-            case Fragment::WRAP_C: return subs[0]->ss;\n-            case Fragment::WRAP_D: return {1 + subs[0]->ss.sat, 1};\n-            case Fragment::WRAP_V: return {subs[0]->ss.sat, {}};\n-            case Fragment::WRAP_J: return {subs[0]->ss.sat, 1};\n+            case Fragment::WRAP_S: return subs[0]->ss;\n+            case Fragment::WRAP_C: {\n+                const auto& sub_sat{subs[0]->ss.sat};\n+                const auto& sub_dsat{subs[0]->ss.dsat};\n+                return {{sub_sat.size, sub_sat.diff - 1, sub_sat.exec}, {sub_dsat.size, sub_dsat.diff - 1, sub_dsat.exec}};\n+            }\n+            case Fragment::WRAP_D: return {{1 + subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, 1}};\n+            case Fragment::WRAP_V: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff - 1, subs[0]->ss.sat.exec}, {}};\n+            case Fragment::WRAP_J: return {{subs[0]->ss.sat.size, subs[0]->ss.sat.diff, subs[0]->ss.sat.exec | 1}, {1, 0, subs[0]->ss.dsat.exec | 1}};\n             case Fragment::THRESH: {\n-                auto sats = Vector(internal::MaxInt<uint32_t>(0));\n-                for (const auto& sub : subs) {\n-                    auto next_sats = Vector(sats[0] + sub->ss.dsat);\n-                    for (size_t j = 1; j < sats.size(); ++j) next_sats.push_back((sats[j] + sub->ss.dsat) | (sats[j - 1] + sub->ss.sat));\n-                    next_sats.push_back(sats[sats.size() - 1] + sub->ss.sat);\n-                    sats = std::move(next_sats);\n+                // The maximum satisfaction witness stack size for this fragment, indexed by threshold.\n+                auto sats_size = Vector(internal::MaxInt<uint32_t>(0));\n+                // Same for the stack size differential after executing this fragment.\n+                auto sats_diff = Vector(internal::MaxInt<int32_t>(0));\n+                // The maximum stack size at any point during execution of this fragment (or any sub\n+                // fragment thereoff), indexed by threshold.\n+                auto sats_exec = Vector(internal::MaxInt<int32_t>(0));\n+                for (size_t i = 0; i < subs.size(); ++i) {\n+                    // Start with the (non-malleable) dissatisfaction size.\n+                    auto next_sats_size = Vector(sats_size[0] + subs[i]->ss.dsat.size);\n+                    // Whether to account for OP_ADD that drops one element from the stack (-2 + 1).\n+                    auto add_diff = (i > 0 && i < subs.size() - 1) ? -1 : 0;\n+                    // The total difference in stack size after dissatisfying the first i first fragments.\n+                    auto next_sats_diff = Vector(sats_diff[0] + subs[i]->ss.dsat.diff + add_diff);\n+                    // Does the stack size gets bigger when dissatifying this fragment than the previous ones?\n+                    auto next_sats_exec = Vector(sats_exec[0] | (sats_diff[0] + subs[i]->ss.dsat.exec));\n+                    // Update what combination of sat/dsat is the largest per threshold.\n+                    for (size_t j = 1; j < sats_size.size(); ++j) {\n+                        // Which is larger, k-1 satisfaction and satifying this sub, or k satisfaction and dissatisfying\n+                        // this one?\n+                        next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\n+                        // Same for size of the stack after satisfying k of the past i fragments.\n+                        next_sats_diff.push_back((sats_diff[j] + subs[i]->ss.dsat.diff) | (sats_diff[j - 1] + subs[i]->ss.sat.diff) + add_diff);",
      "path": "src/script/miniscript.h",
      "position": null,
      "original_position": 212,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "efdd1543597aff49c56a1abaa75b574be3b330db",
      "in_reply_to_id": 1160615879,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, good suggestion that i add those for clarity because your suggestion is incorrect: `add_diff` should always be added. The current (and intended) semantic is:\r\n```diff\r\ndiff --git a/src/script/miniscript.h b/src/script/miniscript.h\r\nindex 011c7ac6d6..35797153da 100644\r\n--- a/src/script/miniscript.h\r\n+++ b/src/script/miniscript.h\r\n@@ -1002,7 +1002,7 @@ private:\r\n                         // this one?\r\n                         next_sats_size.push_back((sats_size[j] + subs[i]->ss.dsat.size) | (sats_size[j - 1] + subs[i]->ss.sat.size));\r\n                         // Same for size of the stack after satisfying k of the past i fragments.\r\n-                        next_sats_diff.push_back((sats_diff[j] + sub_diff.dsat) | (sats_diff[j - 1] + sub_diff.sat) + add_diff);\r\n+                        next_sats_diff.push_back(((sats_diff[j] + sub_diff.dsat) | (sats_diff[j - 1] + sub_diff.sat)) + add_diff);\r\n                         // Update the maximum stack size for satisfying k subs with the largest of the maximum cost of\r\n                         // satisfying k-1 subs (implying we satisfy this one), the cost of dissatisfying this sub\r\n                         // after the satisfaction of j subs beforehand, and the cost of satisfying this sub after the\r\n```\r\n\r\nDid you get this warning with GCC?",
      "created_at": "2023-05-03T10:05:50Z",
      "updated_at": "2023-05-03T10:05:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183487461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183487461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224",
      "pull_request_review_id": 1410595992,
      "id": 1183502224,
      "node_id": "PRRC_kwDOABII585Gis-Q",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 952,
      "original_position": 932,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": 1160622303,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm trying to reproduce the warning. What version of which compiler do you use? And what flags have you enabled?",
      "created_at": "2023-05-03T10:21:47Z",
      "updated_at": "2023-05-03T10:21:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1183502224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1183502224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2118,
      "original_line": 2118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195519598",
      "pull_request_review_id": 1429125748,
      "id": 1195519598,
      "node_id": "PRRC_kwDOABII585HQi5u",
      "diff_hunk": "@@ -1828,65 +2081,66 @@ inline NodeRef<Key> DecodeScript(I& in, I last, const Ctx& ctx)\n             // Constants\n             if (in[0].first == OP_1) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_1));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_1));\n                 break;\n             }\n             if (in[0].first == OP_0) {\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::JUST_0));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::JUST_0));\n                 break;\n             }\n             // Public keys\n-            if (in[0].second.size() == 33) {\n+            if (in[0].second.size() == 33 || in[0].second.size() == 32) {\n                 auto key = ctx.FromPKBytes(in[0].second.begin(), in[0].second.end());\n                 if (!key) return {};\n                 ++in;\n-                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, Fragment::PK_K, Vector(std::move(*key))));\n+                constructed.push_back(MakeNodeRef<Key>(internal::NoDupCheck{}, ctx, Fragment::PK_K, Vector(std::move(*key))));\n                 break;\n             }\n             if (last - in >= 5 && in[0].first == OP_VERIFY && in[1].first == OP_EQUAL && in[3].first == OP_HASH160 && in[4].first == OP_DUP && in[2].second.size() == 20) {\n                 auto key = ctx.FromPKHBytes(in[2].second.begin(), in[2].second.end());",
      "path": "src/script/miniscript.h",
      "position": 952,
      "original_position": 932,
      "commit_id": "998d3015898943b1d6dea5edc3d1d18d8702dc73",
      "original_commit_id": "6e3b37b80cebf9c3f3370f5efbd38f776a918d9c",
      "in_reply_to_id": 1160622303,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reproduced and fixed!",
      "created_at": "2023-05-16T18:02:15Z",
      "updated_at": "2023-05-16T18:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27255#discussion_r1195519598",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1195519598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2118,
      "original_line": 2118,
      "side": "RIGHT"
    }
  ]
}