{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519",
    "id": 224348644,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjI0MzQ4NjQ0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14519",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/14519.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/14519.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/13782b8ba84c5033a59a5234410a763393eafb8d",
    "number": 14519,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "tests: add utility to easily profile node performance with perf",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Adds a context manager to easily (and selectively) profile node performance during functional test execution using `perf`. \r\n\r\nWhile writing some tests, I encountered some odd bitcoind slowness. I wrote up a utility (`TestNode.profile_with_perf`) that generates performance diagnostics for a node by running `perf` during the execution of a particular region of test code.\r\n\r\n`perf` usage is detailed in the excellent (and sadly unmerged) https://github.com/bitcoin/bitcoin/pull/12649; all due props to @eklitzke.\r\n\r\n### Example\r\n\r\n```python\r\nwith node.profile_with_perf(\"large-msgs\"):\r\n    for i in range(200):\r\n        node.p2p.send_message(some_large_msg)\r\n    node.p2p.sync_with_ping()\r\n```\r\n\r\nThis generates a perf data file in the test node's datadir (`/tmp/testtxmpod0y/node0/node-0-TestName-large-msgs.perf.data`).\r\n\r\nRunning `perf report` generates nice output about where the node spent most of its time while running that part of the test:\r\n\r\n```bash\r\n$ perf report -i /tmp/testtxmpod0y/node0/node-0-TestName-large-msgs.perf.data --stdio \\\r\n  | c++filt \\\r\n  | less\r\n\r\n# To display the perf.data header info, please use --header/--header-only options.\r\n#\r\n#\r\n# Total Lost Samples: 0\r\n#\r\n# Samples: 135  of event 'cycles:pp'\r\n# Event count (approx.): 1458205679493582\r\n#\r\n# Children      Self  Command          Shared Object        Symbol\r\n# ........  ........  ...............  ...................  ........................................................................................................................................................................................................................................................................\r\n#\r\n    70.14%     0.00%  bitcoin-net      bitcoind             [.] CNode::ReceiveMsgBytes(char const*, unsigned int, bool&)                                                                                                                                                                                                                        \r\n                |\r\n                ---CNode::ReceiveMsgBytes(char const*, unsigned int, bool&)\r\n\r\n    70.14%     0.00%  bitcoin-net      bitcoind             [.] CNetMessage::readData(char const*, unsigned int)                                                                                                                                                                                                                                \r\n                |\r\n                ---CNetMessage::readData(char const*, unsigned int)\r\n                   CNode::ReceiveMsgBytes(char const*, unsigned int, bool&)\r\n\r\n    35.52%     0.00%  bitcoin-net      bitcoind             [.] std::vector<char, zero_after_free_allocator<char> >::_M_fill_insert(__gnu_cxx::__normal_iterator<char*, std::vector<char, zero_after_free_allocator<char> > >, unsigned long, char const&)                                                                                      \r\n                |\r\n                ---std::vector<char, zero_after_free_allocator<char> >::_M_fill_insert(__gnu_cxx::__normal_iterator<char*, std::vector<char, zero_after_free_allocator<char> > >, unsigned long, char const&)\r\n                   CNetMessage::readData(char const*, unsigned int)\r\n                   CNode::ReceiveMsgBytes(char const*, unsigned int, bool&)\r\n\r\n...\r\n```",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/35",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/35/labels",
      "id": 3318051,
      "node_id": "MDk6TWlsZXN0b25lMzMxODA1MQ==",
      "number": 35,
      "state": "closed",
      "title": "0.18.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 186,
      "created_at": "2018-05-03T15:34:54Z",
      "updated_at": "2020-03-17T18:30:07Z",
      "closed_at": "2019-05-03T02:51:38Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2018-10-19T16:49:37Z",
    "updated_at": "2021-12-16T14:05:42Z",
    "closed_at": "2019-02-05T22:43:29Z",
    "mergeable_state": "unknown",
    "merged_at": "2019-02-05T22:43:29Z",
    "merge_commit_sha": "13782b8ba84c5033a59a5234410a763393eafb8d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jamesob:2018-10-func-test-profiling",
      "ref": "2018-10-func-test-profiling",
      "sha": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 42077031,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MjA3NzAzMQ==",
        "name": "bitcoin",
        "full_name": "jamesob/bitcoin",
        "owner": {
          "login": "jamesob",
          "id": 73197,
          "node_id": "MDQ6VXNlcjczMTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jamesob",
          "html_url": "https://github.com/jamesob",
          "followers_url": "https://api.github.com/users/jamesob/followers",
          "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
          "organizations_url": "https://api.github.com/users/jamesob/orgs",
          "repos_url": "https://api.github.com/users/jamesob/repos",
          "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jamesob/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jamesob/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jamesob/bitcoin",
        "archive_url": "https://api.github.com/repos/jamesob/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jamesob/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jamesob/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jamesob/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jamesob/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jamesob/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jamesob/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jamesob/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jamesob/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jamesob/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jamesob/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jamesob/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jamesob/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jamesob/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jamesob/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jamesob/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jamesob/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jamesob/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jamesob/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jamesob/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jamesob/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jamesob/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jamesob/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jamesob/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jamesob/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jamesob/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jamesob/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jamesob/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jamesob/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jamesob/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jamesob/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jamesob/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jamesob/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jamesob/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jamesob/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jamesob/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jamesob/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jamesob/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jamesob/bitcoin/hooks",
        "svn_url": "https://github.com/jamesob/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 252891,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-31T19:20:56Z",
        "created_at": "2015-09-07T22:18:03Z",
        "updated_at": "2023-05-05T06:31:51Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9bad1e0b22c1065c5ab73d74ac96747ecf33dcdf",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69817,
        "watchers_count": 69817,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T01:13:41Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 211,
    "deletions": 4,
    "changed_files": 6,
    "commits": 2,
    "review_comments": 37,
    "comments": 11
  },
  "events": [
    {
      "event": "mentioned",
      "id": 1915242989,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTkxNTI0Mjk4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915242989",
      "actor": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T16:49:38Z"
    },
    {
      "event": "subscribed",
      "id": 1915242990,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5MTUyNDI5OTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915242990",
      "actor": {
        "login": "eklitzke",
        "id": 2734,
        "node_id": "MDQ6VXNlcjI3MzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2734?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eklitzke",
        "html_url": "https://github.com/eklitzke",
        "followers_url": "https://api.github.com/users/eklitzke/followers",
        "following_url": "https://api.github.com/users/eklitzke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/eklitzke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/eklitzke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/eklitzke/subscriptions",
        "organizations_url": "https://api.github.com/users/eklitzke/orgs",
        "repos_url": "https://api.github.com/users/eklitzke/repos",
        "events_url": "https://api.github.com/users/eklitzke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/eklitzke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T16:49:38Z"
    },
    {
      "event": "renamed",
      "id": 1915351805,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTkxNTM1MTgwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915351805",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T17:40:59Z",
      "rename": {
        "from": "test: add utility to easily profile node performance with perf",
        "to": "tests: add utility to easily profile node performance with perf"
      }
    },
    {
      "event": "renamed",
      "id": 1915352250,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTkxNTM1MjI1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915352250",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T17:41:14Z",
      "rename": {
        "from": "tests: add utility to easily profile node performance with perf",
        "to": "test: add utility to easily profile node performance with perf"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1915385657,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkxNTM4NTY1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915385657",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T17:57:27Z"
    },
    {
      "event": "renamed",
      "id": 1915385868,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTkxNTM4NTg2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915385868",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T17:57:34Z",
      "rename": {
        "from": "test: add utility to easily profile node performance with perf",
        "to": "tests: add utility to easily profile node performance with perf"
      }
    },
    {
      "event": "commented",
      "id": 431450614,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTQ1MDYxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431450614",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T18:10:23Z",
      "updated_at": "2018-10-19T18:10:23Z",
      "author_association": "MEMBER",
      "body": "An example of running the generated perf data file through [hotspot](https://github.com/KDAB/hotspot):\r\n\r\n![selection_109](https://user-images.githubusercontent.com/73197/47235981-b33ebd80-d3a8-11e8-96bd-30f6f91b95f4.png)\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431450614",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "reviewed",
      "id": 166639838,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2NjM5ODM4",
      "url": null,
      "actor": null,
      "commit_id": "b93a17c3153f050eb37292b51463b0aaa5860f1a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK b93a17c3153f050eb37292b51463b0aaa5860f1a. Context manager seems nice for writing new tests. This is just an idea, but maybe it would be useful if there were an option to collect perf data for all nodes from start to stop to gain insight into performance of existing tests.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-166639838",
      "submitted_at": "2018-10-19T18:32:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1915673277,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkxNTY3MzI3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915673277",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T20:29:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1915679777,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkxNTY3OTc3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915679777",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T20:33:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1915685760,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkxNTY4NTc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915685760",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T20:36:29Z"
    },
    {
      "event": "commented",
      "id": 431491862,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTQ5MTg2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431491862",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T20:38:01Z",
      "updated_at": "2018-10-19T20:38:01Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review, @ryanofsky. I really like your suggestions and so I've incorporated them all into a rebase.\r\n\r\nYou can now pass `--perf` when running an individual test file and all nodes will be profiled for the duration of the test. Here's an example run:\r\n```sh\r\n$ ./test/functional/p2p_unrequested_blocks.py --perf\r\n\r\n2018-10-19T20:36:06.542000Z TestFramework (INFO): Initializing test directory /tmp/test71_cfvsc\r\n...\r\n2018-10-19T20:36:09.206000Z TestFramework (INFO): Stopping nodes\r\n2018-10-19T20:36:09.384000Z TestFramework.node0 (INFO): Wrote perf output to '/tmp/test71_cfvsc/node0/node-0-AcceptBlockTest.perf.data'\r\n2018-10-19T20:36:09.558000Z TestFramework.node1 (INFO): Wrote perf output to '/tmp/test71_cfvsc/node1/node-1-AcceptBlockTest.perf.data'\r\n2018-10-19T20:36:09.608000Z TestFramework (WARNING): Not cleaning up dir /tmp/test71_cfvsc due to perf data\r\n2018-10-19T20:36:09.608000Z TestFramework (INFO): Tests successful\r\n\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431491862",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "mentioned",
      "id": 1915688531,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTkxNTY4ODUzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915688531",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T20:38:01Z"
    },
    {
      "event": "subscribed",
      "id": 1915688532,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5MTU2ODg1MzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915688532",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T20:38:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1915696653,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkxNTY5NjY1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915696653",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T20:42:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1915699911,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkxNTY5OTkxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1915699911",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-19T20:44:15Z"
    },
    {
      "event": "commented",
      "id": 431560630,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTU2MDYzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431560630",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-20T08:28:52Z",
      "updated_at": "2018-10-20T08:28:52Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, very nice!",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431560630",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "commented",
      "id": 431566213,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTU2NjIxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431566213",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-20T09:50:34Z",
      "updated_at": "2019-02-01T23:45:55Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431566213",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "commented",
      "id": 431891181,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTg5MTE4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/431891181",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-22T16:40:03Z",
      "updated_at": "2018-10-22T16:40:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431891181",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "reviewed",
      "id": 166981883,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY2OTgxODgz",
      "url": null,
      "actor": null,
      "commit_id": "358e757d566d5f659901acc6f15fa9eb6eb3e741",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 358e757d566d5f659901acc6f15fa9eb6eb3e741",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-166981883",
      "submitted_at": "2018-10-22T18:15:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "labeled",
      "id": 1918796002,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5MTg3OTYwMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1918796002",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-22T22:53:44Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 167233234,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY3MjMzMjM0",
      "url": null,
      "actor": null,
      "commit_id": "358e757d566d5f659901acc6f15fa9eb6eb3e741",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-167233234",
      "submitted_at": "2018-10-23T06:25:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1920854970,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkyMDg1NDk3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1920854970",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-23T15:24:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1920865622,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkyMDg2NTYyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1920865622",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-23T15:27:50Z"
    },
    {
      "event": "commented",
      "id": 432295224,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjI5NTIyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/432295224",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-23T15:28:18Z",
      "updated_at": "2018-10-23T15:28:18Z",
      "author_association": "MEMBER",
      "body": "Addressed feedback from @ryanofsky @conscott.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-432295224",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "mentioned",
      "id": 1920867077,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTkyMDg2NzA3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1920867077",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-23T15:28:18Z"
    },
    {
      "event": "subscribed",
      "id": 1920867080,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5MjA4NjcwODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1920867080",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-23T15:28:18Z"
    },
    {
      "event": "mentioned",
      "id": 1920867083,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTkyMDg2NzA4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1920867083",
      "actor": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-23T15:28:18Z"
    },
    {
      "event": "subscribed",
      "id": 1920867085,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5MjA4NjcwODU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1920867085",
      "actor": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-23T15:28:18Z"
    },
    {
      "event": "reviewed",
      "id": 167857056,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY3ODU3MDU2",
      "url": null,
      "actor": null,
      "commit_id": "dd22df8506544aa3db0ea29f9b4d40c99af48298",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-167857056",
      "submitted_at": "2018-10-24T11:34:58Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "reviewed",
      "id": 167859601,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY3ODU5NjAx",
      "url": null,
      "actor": null,
      "commit_id": "dd22df8506544aa3db0ea29f9b4d40c99af48298",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-167859601",
      "submitted_at": "2018-10-24T11:36:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1924381146,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkyNDM4MTE0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1924381146",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-24T19:11:56Z"
    },
    {
      "event": "commented",
      "id": 432791611,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjc5MTYxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/432791611",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-24T19:12:13Z",
      "updated_at": "2018-10-24T19:12:13Z",
      "author_association": "MEMBER",
      "body": "Pushed feedback from @MarcoFalke. ",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-432791611",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "mentioned",
      "id": 1924381849,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTkyNDM4MTg0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1924381849",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-24T19:12:13Z"
    },
    {
      "event": "subscribed",
      "id": 1924381850,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE5MjQzODE4NTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1924381850",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-24T19:12:13Z"
    },
    {
      "event": "reviewed",
      "id": 168074293,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY4MDc0Mjkz",
      "url": null,
      "actor": null,
      "commit_id": "ac6a6b3ab5c7e37454446ec674cdce4b699633ec",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-168074293",
      "submitted_at": "2018-10-24T19:13:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1924385440,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkyNDM4NTQ0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1924385440",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-24T19:13:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1924388342,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTkyNDM4ODM0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1924388342",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-24T19:15:12Z"
    },
    {
      "event": "reviewed",
      "id": 168461620,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY4NDYxNjIw",
      "url": null,
      "actor": null,
      "commit_id": "5d8ac69be53a876d2b15ba703603cea8f4efdb1a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 5d8ac69be53a876d2b15ba703603cea8f4efdb1a. Just change in string formatting and simplification to file naming since last review.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-168461620",
      "submitted_at": "2018-10-25T15:59:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "commented",
      "id": 433689317,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzY4OTMxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/433689317",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-10-28T09:26:59Z",
      "updated_at": "2018-10-28T09:26:59Z",
      "author_association": "MEMBER",
      "body": "utACK 5d8ac69\r\n\r\nCan't comment on the usage of `perf`, but if this leads to more profiling, and performance related discussion/results in reviews, sounds great.\r\n\r\nAlso pro reviving the flamegraph docs out of #12649, however that shouldn't hold this up.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-433689317",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "reviewed",
      "id": 169523198,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTY5NTIzMTk4",
      "url": null,
      "actor": null,
      "commit_id": "5d8ac69be53a876d2b15ba703603cea8f4efdb1a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-169523198",
      "submitted_at": "2018-10-29T21:20:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "labeled",
      "id": 1948672327,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDE5NDg2NzIzMjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1948672327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-06T11:21:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1957563929,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk1NzU2MzkyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1957563929",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-09T18:40:34Z"
    },
    {
      "event": "unlabeled",
      "id": 1957780517,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MTk1Nzc4MDUxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1957780517",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-09T20:26:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1957799094,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTk1Nzc5OTA5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1957799094",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-11-09T20:37:14Z"
    },
    {
      "event": "reviewed",
      "id": 177459215,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTc3NDU5MjE1",
      "url": null,
      "actor": null,
      "commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nThis seems cool. I haven't had a chance to play around with it yet. I've given the code a cursory glance and will review more thoroughly next week.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-177459215",
      "submitted_at": "2018-11-21T23:16:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "reviewed",
      "id": 180461803,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTgwNDYxODAz",
      "url": null,
      "actor": null,
      "commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "This is really cool. I've now had a chance to play around with it and it's great. I think doing the following would make it even more useful and accessible for developers:\r\n\r\n- move the documentation about installing and using `perf` to `doc/developer-notes.md`\r\n- move the documentation about using `profile_with_perf()` to `test/README.md`, with a reference to `doc/developer-notes.md` for notes on perf.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-180461803",
      "submitted_at": "2018-11-30T22:04:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "labeled",
      "id": 2024462343,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDIwMjQ0NjIzNDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2024462343",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-12-13T15:07:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 450873953,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDg3Mzk1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450873953",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T14:16:57Z",
      "updated_at": "2019-01-02T14:16:57Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-450873953",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2051009577,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA1MTAwOTU3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2051009577",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:04:53Z"
    },
    {
      "event": "commented",
      "id": 450954617,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk1NDYxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/450954617",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:09:38Z",
      "updated_at": "2019-01-02T19:09:38Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review, @jnewbery. I've pushed a rebased tip that addresses the feedback. \r\n\r\n[Here's the diff](https://gist.github.com/jamesob/01ac7b24039621a2863995ef69037a0c) (excluding the rebase).",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-450954617",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "mentioned",
      "id": 2051018288,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjA1MTAxODI4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2051018288",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:09:38Z"
    },
    {
      "event": "subscribed",
      "id": 2051018291,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwNTEwMTgyOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2051018291",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:09:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2051025550,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA1MTAyNTU1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2051025550",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:13:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2051027810,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA1MTAyNzgxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2051027810",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:14:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2051033047,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA1MTAzMzA0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2051033047",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:17:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2051035661,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA1MTAzNTY2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2051035661",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:19:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2051045837,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA1MTA0NTgzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2051045837",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-02T19:24:10Z"
    },
    {
      "event": "unlabeled",
      "id": 2052796932,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50MjA1Mjc5NjkzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2052796932",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-03T16:42:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 189490561,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTg5NDkwNTYx",
      "url": null,
      "actor": null,
      "commit_id": "27a895d72a385bcaa861e08b03bb5c817f8e253f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 27a895d72a385bcaa861e08b03bb5c817f8e253f. Changes since last review: rebase, moving & adding documentation, tweaking output paths.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-189490561",
      "submitted_at": "2019-01-04T19:13:22Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "milestoned",
      "id": 2055893732,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDIwNTU4OTM3MzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2055893732",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-05T14:00:10Z",
      "milestone": {
        "title": "0.18.0"
      }
    },
    {
      "event": "reviewed",
      "id": 190021499,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTkwMDIxNDk5",
      "url": null,
      "actor": null,
      "commit_id": "27a895d72a385bcaa861e08b03bb5c817f8e253f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks great James. A few comments inline.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-190021499",
      "submitted_at": "2019-01-07T22:58:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODE4MGI1ZmQ0NjdmZjE1ZTcxNzAxNDVkNzdjODRmMTNjY2FmZTZl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58180b5fd467ff15e7170145d77c84f13ccafe6e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/58180b5fd467ff15e7170145d77c84f13ccafe6e",
      "tree": {
        "sha": "5a7be4313cd7dd4e15f9666cf702235c2962ce5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a7be4313cd7dd4e15f9666cf702235c2962ce5b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df894fa69a09ff2b7f00af0cf220e5132a69c70a",
          "sha": "df894fa69a09ff2b7f00af0cf220e5132a69c70a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df894fa69a09ff2b7f00af0cf220e5132a69c70a"
        }
      ],
      "message": "tests: add utility to easily profile node performance with perf\n\nIntroduces `TestNode.profile_with_perf()` context manager which\nsamples node execution to produce profiling data.\n\nAlso introduces a test framework flag, `--perf`, which will run\nperf on all nodes for the duration of a given test.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-01-22T13:55:55Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-10-19T16:28:47Z"
      },
      "sha": "58180b5fd467ff15e7170145d77c84f13ccafe6e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzc4MmI4YmE4NGM1MDMzYTU5YTUyMzQ0MTBhNzYzMzkzZWFmYjhk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/13782b8ba84c5033a59a5234410a763393eafb8d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/13782b8ba84c5033a59a5234410a763393eafb8d",
      "tree": {
        "sha": "36d17088039ca4ce050c7577d4079777ef96ead2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36d17088039ca4ce050c7577d4079777ef96ead2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58180b5fd467ff15e7170145d77c84f13ccafe6e",
          "sha": "58180b5fd467ff15e7170145d77c84f13ccafe6e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/58180b5fd467ff15e7170145d77c84f13ccafe6e"
        }
      ],
      "message": "docs: add perf section to developer docs",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-01-22T13:56:01Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-01-02T18:57:21Z"
      },
      "sha": "13782b8ba84c5033a59a5234410a763393eafb8d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2088843374,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjA4ODg0MzM3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2088843374",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T13:56:37Z"
    },
    {
      "event": "commented",
      "id": 456410333,
      "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQxMDMzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/456410333",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T14:04:22Z",
      "updated_at": "2019-01-22T14:04:22Z",
      "author_association": "MEMBER",
      "body": "Pushed an update addressing feedback from @jnewbery. ",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-456410333",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14519"
    },
    {
      "event": "mentioned",
      "id": 2088863456,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MjA4ODg2MzQ1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2088863456",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T14:04:22Z"
    },
    {
      "event": "subscribed",
      "id": 2088863457,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDIwODg4NjM0NTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2088863457",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-01-22T14:04:22Z"
    },
    {
      "event": "reviewed",
      "id": 199777084,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTk5Nzc3MDg0",
      "url": null,
      "actor": null,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 13782b8ba84c5033a59a5234410a763393eafb8d. Main change is removing code in example test, and adding to test README instead.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#pullrequestreview-199777084",
      "submitted_at": "2019-02-04T19:54:53Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
    },
    {
      "event": "merged",
      "id": 2119867302,
      "node_id": "MDExOk1lcmdlZEV2ZW50MjExOTg2NzMwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2119867302",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/13782b8ba84c5033a59a5234410a763393eafb8d",
      "created_at": "2019-02-05T22:43:29Z"
    },
    {
      "event": "closed",
      "id": 2119867312,
      "node_id": "MDExOkNsb3NlZEV2ZW50MjExOTg2NzMxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2119867312",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-02-05T22:43:30Z"
    },
    {
      "event": "referenced",
      "id": 2119867952,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDIxMTk4Njc5NTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2119867952",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5029e94f855c73bad2e0ea6dc0378f33787ae131",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5029e94f855c73bad2e0ea6dc0378f33787ae131",
      "created_at": "2019-02-05T22:43:47Z"
    },
    {
      "event": "referenced",
      "id": 5135791139,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxMzU3OTExMzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5135791139",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "afaaff4669959f981ad6f4291be091664dc1bd84",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/afaaff4669959f981ad6f4291be091664dc1bd84",
      "created_at": "2021-08-10T13:57:08Z"
    },
    {
      "event": "referenced",
      "id": 5158196409,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNTgxOTY0MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5158196409",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3018175236834fa86f0a46db0c36c6b23be669af",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/3018175236834fa86f0a46db0c36c6b23be669af",
      "created_at": "2021-08-14T02:55:14Z"
    },
    {
      "event": "referenced",
      "id": 5166105642,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNjYxMDU2NDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5166105642",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cb8f2265a3b4b10f7d050cf896780e6c6f39e83d",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/cb8f2265a3b4b10f7d050cf896780e6c6f39e83d",
      "created_at": "2021-08-17T01:14:42Z"
    },
    {
      "event": "referenced",
      "id": 5166307521,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNjYzMDc1MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5166307521",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "891c1c6298c1b5859aab9367eb6562842bd796cd",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/891c1c6298c1b5859aab9367eb6562842bd796cd",
      "created_at": "2021-08-17T02:41:15Z"
    },
    {
      "event": "referenced",
      "id": 5177436504,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNzc0MzY1MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5177436504",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "693e1bb4bbb6b12b351692a4c9f400400840b2f4",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/693e1bb4bbb6b12b351692a4c9f400400840b2f4",
      "created_at": "2021-08-18T22:26:22Z"
    },
    {
      "event": "referenced",
      "id": 5177894604,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDUxNzc4OTQ2MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5177894604",
      "actor": {
        "login": "pravblockc",
        "id": 51935684,
        "node_id": "MDQ6VXNlcjUxOTM1Njg0",
        "avatar_url": "https://avatars.githubusercontent.com/u/51935684?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pravblockc",
        "html_url": "https://github.com/pravblockc",
        "followers_url": "https://api.github.com/users/pravblockc/followers",
        "following_url": "https://api.github.com/users/pravblockc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pravblockc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pravblockc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pravblockc/subscriptions",
        "organizations_url": "https://api.github.com/users/pravblockc/orgs",
        "repos_url": "https://api.github.com/users/pravblockc/repos",
        "events_url": "https://api.github.com/users/pravblockc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pravblockc/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "33384816b542a419db938ae65a049ebd57ab1b87",
      "commit_url": "https://api.github.com/repos/pravblockc/dash/commits/33384816b542a419db938ae65a049ebd57ab1b87",
      "created_at": "2021-08-19T01:38:34Z"
    },
    {
      "event": "locked",
      "id": 5778582286,
      "node_id": "LOE_lADOABII584WLNDFzwAAAAFYbisO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5778582286",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-12-16T14:05:42Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226737926",
      "pull_request_review_id": 166639838,
      "id": 226737926,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjczNzkyNg==",
      "diff_hunk": "@@ -267,6 +267,70 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name=None):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Kwargs:\n+\n+            profile_name (str): If specified, this string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"some-function\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.run(\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL).returncode == 0\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(self.binary)):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+        else:\n+            suffix = \"-{}\".format(profile_name) if profile_name else \"\"\n+            output_path = os.path.join(\n+                self.datadir, \"node-{}{}.perf.data\".format(self.index, suffix))\n+\n+            cmd = [\n+                'perf', 'record',\n+                '-g',\n+                '--call-graph', 'dwarf',\n+                '-F', '101',",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 56,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "b93a17c3153f050eb37292b51463b0aaa5860f1a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe comment `# Frequency in Hz`",
      "created_at": "2018-10-19T18:15:42Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r226737926",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226737926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226739869",
      "pull_request_review_id": 166639838,
      "id": 226739869,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNjczOTg2OQ==",
      "diff_hunk": "@@ -267,6 +267,70 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name=None):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Kwargs:\n+\n+            profile_name (str): If specified, this string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"some-function\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.run(\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL).returncode == 0\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(self.binary)):",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 41,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "b93a17c3153f050eb37292b51463b0aaa5860f1a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Escaping self.binary with [shlex.quote](https://docs.python.org/3/library/shlex.html#shlex.quote) would let it work with any filename.",
      "created_at": "2018-10-19T18:22:27Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r226739869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/226739869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 307,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227077441",
      "pull_request_review_id": 166981883,
      "id": 227077441,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzA3NzQ0MQ==",
      "diff_hunk": "@@ -59,7 +60,15 @@ class TestNode():\n     To make things easier for the test writer, any unrecognised messages will\n     be dispatched to the RPC connection.\"\"\"\n \n-    def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mocktime, coverage_dir, extra_conf=None, extra_args=None, use_cli=False):\n+    def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mocktime, coverage_dir, extra_conf=None, extra_args=None, use_cli=False, start_perf=False, test_class_name=None):\n+        \"\"\"\n+        Kwargs:\n+            test_class_name (str): The name of the test class which has spawned this node.",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 16,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "358e757d566d5f659901acc6f15fa9eb6eb3e741",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think I see advantage of the test_class_name plumbing. It seems like it makes resulting filenames less predictable I run a test with --perf and the resulting filenames have a python class name in the middle. It also doesn't seem like it helps with disambiguation either if every node has the same test name.",
      "created_at": "2018-10-22T18:09:20Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227077441",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227077441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227105936",
      "pull_request_review_id": 167070215,
      "id": 227105936,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzEwNTkzNg==",
      "diff_hunk": "@@ -59,7 +60,15 @@ class TestNode():\n     To make things easier for the test writer, any unrecognised messages will\n     be dispatched to the RPC connection.\"\"\"\n \n-    def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mocktime, coverage_dir, extra_conf=None, extra_args=None, use_cli=False):\n+    def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mocktime, coverage_dir, extra_conf=None, extra_args=None, use_cli=False, start_perf=False, test_class_name=None):\n+        \"\"\"\n+        Kwargs:\n+            test_class_name (str): The name of the test class which has spawned this node.",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 16,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "358e757d566d5f659901acc6f15fa9eb6eb3e741",
      "in_reply_to_id": 227077441,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, that's a good point. I thought we needed to do this in order to maintain compatibility with `test/functional/test_runner.py` (to avoid perf data files from getting clobbered), but I forgot that each test gets its own nested tmp directory. Will do.",
      "created_at": "2018-10-22T19:26:54Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227105936",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227105936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227240042",
      "pull_request_review_id": 167233234,
      "id": 227240042,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzI0MDA0Mg==",
      "diff_hunk": "@@ -267,6 +287,93 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.run(",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 113,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "358e757d566d5f659901acc6f15fa9eb6eb3e741",
      "in_reply_to_id": null,
      "user": {
        "login": "conscott",
        "id": 14220652,
        "node_id": "MDQ6VXNlcjE0MjIwNjUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/conscott",
        "html_url": "https://github.com/conscott",
        "followers_url": "https://api.github.com/users/conscott/followers",
        "following_url": "https://api.github.com/users/conscott/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/conscott/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/conscott/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
        "organizations_url": "https://api.github.com/users/conscott/orgs",
        "repos_url": "https://api.github.com/users/conscott/repos",
        "events_url": "https://api.github.com/users/conscott/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/conscott/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Might want to add a try/except here with `CalledProcessError`",
      "created_at": "2018-10-23T06:25:28Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227240042",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227240042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227748224",
      "pull_request_review_id": 167857056,
      "id": 227748224,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc0ODIyNA==",
      "diff_hunk": "@@ -267,6 +284,96 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            try:\n+                return subprocess.run(\n+                    cmd, shell=True,\n+                    stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL).returncode == 0\n+            except (FileNotFoundError, subprocess.CalledProcessError):\n+                self.log.warning(\"Unable to execute command '{}'\".format(cmd))\n+                return False\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+        else:\n+            output_path = self._get_perf_data_path(profile_name)\n+\n+            cmd = [\n+                'perf', 'record',\n+                '-g',                     # Record the callgraph.\n+                '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+                '-F', '101',              # Sampling frequency in Hz.\n+                '-p', str(self.process.pid),\n+                '-o', output_path,\n+            ]\n+            subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+            self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        subp.terminate()\n+        subp.wait()\n+        self.log.info(\"Wrote perf output to '{}'\".format(\n+            self._get_perf_data_path(profile_name)))\n+\n+    def _get_perf_data_path(self, profile_name):\n+        \"\"\"Return a suitable path for perf data given some descriptive name.\"\"\"\n+        suffix = \"-{}\".format(profile_name) if profile_name else \"\"",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 150,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "dd22df8506544aa3db0ea29f9b4d40c99af48298",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "profile_name is always given, so no need for the else?",
      "created_at": "2018-10-24T11:28:19Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227748224",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227748224"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227748951",
      "pull_request_review_id": 167857056,
      "id": 227748951,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc0ODk1MQ==",
      "diff_hunk": "@@ -267,6 +284,96 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            try:\n+                return subprocess.run(",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 111,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "dd22df8506544aa3db0ea29f9b4d40c99af48298",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We don't support this function yet: https://docs.python.org/3.4/library/subprocess.html#subprocess.run",
      "created_at": "2018-10-24T11:31:11Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227748951",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227748951"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 333,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227750306",
      "pull_request_review_id": 167859601,
      "id": 227750306,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzc1MDMwNg==",
      "diff_hunk": "@@ -200,9 +202,18 @@ def main(self):\n                 node.cleanup_on_exit = False\n             self.log.info(\"Note: bitcoinds were not stopped and may still be running\")\n \n-        if not self.options.nocleanup and not self.options.noshutdown and success != TestStatus.FAILED:\n+        should_clean_up = (\n+            not self.options.nocleanup and\n+            not self.options.noshutdown and\n+            success != TestStatus.FAILED and\n+            not self.options.perf\n+        )\n+        if should_clean_up:\n             self.log.info(\"Cleaning up {} on exit\".format(self.options.tmpdir))\n             cleanup_tree_on_exit = True\n+        elif self.options.perf:\n+            self.log.warning(\"Not cleaning up dir %s due to perf data\" % self.options.tmpdir)",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 24,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "dd22df8506544aa3db0ea29f9b4d40c99af48298",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: Could use `.format(...` like two lines above",
      "created_at": "2018-10-24T11:36:02Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227750306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227750306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227922373",
      "pull_request_review_id": 168072078,
      "id": 227922373,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzkyMjM3Mw==",
      "diff_hunk": "@@ -267,6 +284,96 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            try:\n+                return subprocess.run(\n+                    cmd, shell=True,\n+                    stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL).returncode == 0\n+            except (FileNotFoundError, subprocess.CalledProcessError):\n+                self.log.warning(\"Unable to execute command '{}'\".format(cmd))\n+                return False\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+        else:\n+            output_path = self._get_perf_data_path(profile_name)\n+\n+            cmd = [\n+                'perf', 'record',\n+                '-g',                     # Record the callgraph.\n+                '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+                '-F', '101',              # Sampling frequency in Hz.\n+                '-p', str(self.process.pid),\n+                '-o', output_path,\n+            ]\n+            subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+            self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        subp.terminate()\n+        subp.wait()\n+        self.log.info(\"Wrote perf output to '{}'\".format(\n+            self._get_perf_data_path(profile_name)))\n+\n+    def _get_perf_data_path(self, profile_name):\n+        \"\"\"Return a suitable path for perf data given some descriptive name.\"\"\"\n+        suffix = \"-{}\".format(profile_name) if profile_name else \"\"",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 150,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "dd22df8506544aa3db0ea29f9b4d40c99af48298",
      "in_reply_to_id": 227748224,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's an empty string when we specify `--perf` to the runner: https://github.com/bitcoin/bitcoin/blob/358e757d566d5f659901acc6f15fa9eb6eb3e741/test/functional/test_framework/test_node.py#L184",
      "created_at": "2018-10-24T19:07:36Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227922373",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227922373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227924192",
      "pull_request_review_id": 168074293,
      "id": 227924192,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzkyNDE5Mg==",
      "diff_hunk": "@@ -200,9 +202,18 @@ def main(self):\n                 node.cleanup_on_exit = False\n             self.log.info(\"Note: bitcoinds were not stopped and may still be running\")\n \n-        if not self.options.nocleanup and not self.options.noshutdown and success != TestStatus.FAILED:\n+        should_clean_up = (\n+            not self.options.nocleanup and\n+            not self.options.noshutdown and\n+            success != TestStatus.FAILED and\n+            not self.options.perf\n+        )\n+        if should_clean_up:\n             self.log.info(\"Cleaning up {} on exit\".format(self.options.tmpdir))\n             cleanup_tree_on_exit = True\n+        elif self.options.perf:\n+            self.log.warning(\"Not cleaning up dir %s due to perf data\".format(self.options.tmpdir))",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 24,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "ac6a6b3ab5c7e37454446ec674cdce4b699633ec",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "needs to use `{}` in the format string ;)",
      "created_at": "2018-10-24T19:13:15Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227924192",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227924192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227924560",
      "pull_request_review_id": 168074739,
      "id": 227924560,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyNzkyNDU2MA==",
      "diff_hunk": "@@ -200,9 +202,18 @@ def main(self):\n                 node.cleanup_on_exit = False\n             self.log.info(\"Note: bitcoinds were not stopped and may still be running\")\n \n-        if not self.options.nocleanup and not self.options.noshutdown and success != TestStatus.FAILED:\n+        should_clean_up = (\n+            not self.options.nocleanup and\n+            not self.options.noshutdown and\n+            success != TestStatus.FAILED and\n+            not self.options.perf\n+        )\n+        if should_clean_up:\n             self.log.info(\"Cleaning up {} on exit\".format(self.options.tmpdir))\n             cleanup_tree_on_exit = True\n+        elif self.options.perf:\n+            self.log.warning(\"Not cleaning up dir %s due to perf data\".format(self.options.tmpdir))",
      "path": "test/functional/test_framework/test_framework.py",
      "position": null,
      "original_position": 24,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "ac6a6b3ab5c7e37454446ec674cdce4b699633ec",
      "in_reply_to_id": 227924192,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oops! Thanks :)",
      "created_at": "2018-10-24T19:14:17Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227924560",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/227924560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 215,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228503080",
      "pull_request_review_id": 168792581,
      "id": 228503080,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyODUwMzA4MA==",
      "diff_hunk": "@@ -267,6 +284,96 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            try:\n+                return subprocess.run(\n+                    cmd, shell=True,\n+                    stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL).returncode == 0\n+            except (FileNotFoundError, subprocess.CalledProcessError):\n+                self.log.warning(\"Unable to execute command '{}'\".format(cmd))\n+                return False\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+        else:\n+            output_path = self._get_perf_data_path(profile_name)\n+\n+            cmd = [\n+                'perf', 'record',\n+                '-g',                     # Record the callgraph.\n+                '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+                '-F', '101',              # Sampling frequency in Hz.\n+                '-p', str(self.process.pid),\n+                '-o', output_path,\n+            ]\n+            subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+            self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        subp.terminate()\n+        subp.wait()\n+        self.log.info(\"Wrote perf output to '{}'\".format(\n+            self._get_perf_data_path(profile_name)))\n+\n+    def _get_perf_data_path(self, profile_name):\n+        \"\"\"Return a suitable path for perf data given some descriptive name.\"\"\"\n+        suffix = \"-{}\".format(profile_name) if profile_name else \"\"",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 150,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "dd22df8506544aa3db0ea29f9b4d40c99af48298",
      "in_reply_to_id": 227748224,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Wouldn't that overwrite the perf file on restart?",
      "created_at": "2018-10-26T12:10:05Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r228503080",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/228503080"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229102706",
      "pull_request_review_id": 169523198,
      "id": 229102706,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTEwMjcwNg==",
      "diff_hunk": "@@ -167,6 +177,9 @@ def start(self, extra_args=None, *, stdout=None, stderr=None, **kwargs):\n         self.running = True\n         self.log.debug(\"bitcoind started, waiting for RPC to come up\")\n \n+        if self.start_perf:\n+            self._start_perf(\"\")",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 45,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "5d8ac69be53a876d2b15ba703603cea8f4efdb1a",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "That will  overwrite previous perf results.",
      "created_at": "2018-10-29T21:20:10Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r229102706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229102706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229337090",
      "pull_request_review_id": 169813050,
      "id": 229337090,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIyOTMzNzA5MA==",
      "diff_hunk": "@@ -267,6 +284,96 @@ def assert_debug_log(self, expected_msgs):\n                 if re.search(re.escape(expected_msg), log, flags=re.MULTILINE) is None:\n                     self._raise_assertion_error('Expected message \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(expected_msg, print_log))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            try:\n+                return subprocess.run(\n+                    cmd, shell=True,\n+                    stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL).returncode == 0\n+            except (FileNotFoundError, subprocess.CalledProcessError):\n+                self.log.warning(\"Unable to execute command '{}'\".format(cmd))\n+                return False\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+        else:\n+            output_path = self._get_perf_data_path(profile_name)\n+\n+            cmd = [\n+                'perf', 'record',\n+                '-g',                     # Record the callgraph.\n+                '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+                '-F', '101',              # Sampling frequency in Hz.\n+                '-p', str(self.process.pid),\n+                '-o', output_path,\n+            ]\n+            subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+            self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        subp.terminate()\n+        subp.wait()\n+        self.log.info(\"Wrote perf output to '{}'\".format(\n+            self._get_perf_data_path(profile_name)))\n+\n+    def _get_perf_data_path(self, profile_name):\n+        \"\"\"Return a suitable path for perf data given some descriptive name.\"\"\"\n+        suffix = \"-{}\".format(profile_name) if profile_name else \"\"",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 150,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "dd22df8506544aa3db0ea29f9b4d40c99af48298",
      "in_reply_to_id": 227748224,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, good catch. Will verify & fix.",
      "created_at": "2018-10-30T14:46:24Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r229337090",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/229337090"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232352979",
      "pull_request_review_id": 173539657,
      "id": 232352979,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzMjM1Mjk3OQ==",
      "diff_hunk": "@@ -167,6 +177,9 @@ def start(self, extra_args=None, *, stdout=None, stderr=None, **kwargs):\n         self.running = True\n         self.log.debug(\"bitcoind started, waiting for RPC to come up\")\n \n+        if self.start_perf:\n+            self._start_perf(\"\")",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 45,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "5d8ac69be53a876d2b15ba703603cea8f4efdb1a",
      "in_reply_to_id": 229102706,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed and tested by running `./test/functional/p2p_disconnect_ban.py --perf` (which restarts node1):\r\n```sh\r\n $ ./test/functional/p2p_disconnect_ban.py --perf\r\n2018-11-09T18:41:23.959000Z TestFramework (INFO): Initializing test directory /tmp/testk5t2fuyc\r\n[...]\r\n2018-11-09T18:41:25.250000Z TestFramework (INFO): setban: test persistence across node restart\r\n2018-11-09T18:41:25.616000Z TestFramework.node1 (INFO): Wrote perf output to '/tmp/testk5t2fuyc/node1/perf.data'\r\n[...]\r\n2018-11-09T18:41:26.438000Z TestFramework (INFO): Stopping nodes\r\n2018-11-09T18:41:26.756000Z TestFramework.node0 (INFO): Wrote perf output to '/tmp/testk5t2fuyc/node0/perf.data'\r\n2018-11-09T18:41:27.040000Z TestFramework.node1 (INFO): Wrote perf output to '/tmp/testk5t2fuyc/node1/1.perf.data'\r\n2018-11-09T18:41:27.041000Z TestFramework (WARNING): Not cleaning up dir /tmp/testk5t2fuyc due to perf data\r\n2018-11-09T18:41:27.041000Z TestFramework (INFO): Tests successful\r\n```",
      "created_at": "2018-11-09T18:42:38Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r232352979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/232352979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235563914",
      "pull_request_review_id": 177459215,
      "id": 235563914,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNTU2MzkxNA==",
      "diff_hunk": "@@ -316,6 +333,117 @@ def assert_memory_usage_stable(self, perc_increase_allowed=0.03):\n                     perc_increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 71,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Since this is now a user activated feature (with `--perf`, I think most of these usage notes should go in `/test/README/md`)",
      "created_at": "2018-11-21T23:15:17Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r235563914",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/235563914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 342,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238011859",
      "pull_request_review_id": 180461803,
      "id": 238011859,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAxMTg1OQ==",
      "diff_hunk": "@@ -95,6 +103,8 @@ def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mock\n         self.url = None\n         self.log = logging.getLogger('TestFramework.node%d' % i)\n         self.cleanup_on_exit = True # Whether to kill the node when this object goes away\n+        # Cache perf subprocesses here by their data output filename.\n+        self.perf_subprocesses = {}",
      "path": "test/functional/test_framework/test_node.py",
      "position": 37,
      "original_position": 36,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are you ever expecting to have more than one perf process profiling the node? That seems like it's probably unnecessary.",
      "created_at": "2018-11-30T21:45:48Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238011859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238011859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238012360",
      "pull_request_review_id": 180461803,
      "id": 238012360,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAxMjM2MA==",
      "diff_hunk": "@@ -316,6 +333,117 @@ def assert_memory_usage_stable(self, perc_increase_allowed=0.03):\n                     perc_increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.call(\n+                # shell=True required for pipe use below\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL) == 0\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 120,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This might just be personal taste, but I'd prefer to have a `return None` in this if block, so that the main body of the function isn't indented in an else block.",
      "created_at": "2018-11-30T21:47:46Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238012360",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238012360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 391,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238013020",
      "pull_request_review_id": 180461803,
      "id": 238013020,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAxMzAyMA==",
      "diff_hunk": "@@ -316,6 +333,117 @@ def assert_memory_usage_stable(self, perc_increase_allowed=0.03):\n                     perc_increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.call(\n+                # shell=True required for pipe use below\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL) == 0\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):",
      "path": "test/functional/test_framework/test_node.py",
      "position": 104,
      "original_position": 115,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This fails for macOS. Do you want to make this portable or are you just targetting linux? You could make it work on macOS by installing binutils and using `greadelf`.",
      "created_at": "2018-11-30T21:50:16Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238013020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238013020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 376,
      "original_line": 376,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238014054",
      "pull_request_review_id": 180461803,
      "id": 238014054,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAxNDA1NA==",
      "diff_hunk": "@@ -316,6 +333,117 @@ def assert_memory_usage_stable(self, perc_increase_allowed=0.03):\n                     perc_increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.call(\n+                # shell=True required for pipe use below\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL) == 0\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+        else:\n+            output_path = self._get_unique_perf_data_path(profile_name)\n+\n+            cmd = [\n+                'perf', 'record',\n+                '-g',                     # Record the callgraph.\n+                '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+                '-F', '101',              # Sampling frequency in Hz.\n+                '-p', str(self.process.pid),\n+                '-o', output_path,\n+            ]\n+            subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+            self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        output_path = subp.args[subp.args.index('-o') + 1]\n+\n+        subp.terminate()\n+        subp.wait()",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 143,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this have a timeout so the test doesn't hang if the subprocess doesn't terminate?",
      "created_at": "2018-11-30T21:53:54Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238014054",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238014054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 414,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238014160",
      "pull_request_review_id": 180461803,
      "id": 238014160,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAxNDE2MA==",
      "diff_hunk": "@@ -316,6 +333,117 @@ def assert_memory_usage_stable(self, perc_increase_allowed=0.03):\n                     perc_increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.call(\n+                # shell=True required for pipe use below\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL) == 0\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+        else:\n+            output_path = self._get_unique_perf_data_path(profile_name)\n+\n+            cmd = [\n+                'perf', 'record',\n+                '-g',                     # Record the callgraph.\n+                '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+                '-F', '101',              # Sampling frequency in Hz.\n+                '-p', str(self.process.pid),\n+                '-o', output_path,\n+            ]\n+            subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+            self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        output_path = subp.args[subp.args.index('-o') + 1]\n+\n+        subp.terminate()\n+        subp.wait()\n+\n+        stderr = subp.stderr.read().decode()\n+        if 'Consider tweaking /proc/sys/kernel/perf_event_paranoid' in stderr:\n+            self.log.warning(\n+                \"perf couldn't collect data! Try \"",
      "path": "test/functional/test_framework/test_node.py",
      "position": 138,
      "original_position": 148,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was very helpful!",
      "created_at": "2018-11-30T21:54:17Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238014160",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238014160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 410,
      "original_line": 410,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238014495",
      "pull_request_review_id": 180461803,
      "id": 238014495,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAxNDQ5NQ==",
      "diff_hunk": "@@ -316,6 +333,117 @@ def assert_memory_usage_stable(self, perc_increase_allowed=0.03):\n                     perc_increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.call(\n+                # shell=True required for pipe use below\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL) == 0\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+        else:\n+            output_path = self._get_unique_perf_data_path(profile_name)\n+\n+            cmd = [\n+                'perf', 'record',\n+                '-g',                     # Record the callgraph.\n+                '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+                '-F', '101',              # Sampling frequency in Hz.\n+                '-p', str(self.process.pid),\n+                '-o', output_path,\n+            ]\n+            subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+            self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        output_path = subp.args[subp.args.index('-o') + 1]\n+\n+        subp.terminate()\n+        subp.wait()\n+\n+        stderr = subp.stderr.read().decode()\n+        if 'Consider tweaking /proc/sys/kernel/perf_event_paranoid' in stderr:\n+            self.log.warning(\n+                \"perf couldn't collect data! Try \"\n+                \"'sudo sysctl -w kernel.perf_event_paranoid=-1'\")\n+        else:\n+            self.log.info(\"Wrote perf output to '{}'\".format(output_path))\n+\n+    def _get_unique_perf_data_path(self, profile_name):",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 153,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can you replace all this with a call to `tempfile.NamedTemporaryFile`? See above in the same file for an example:\r\n\r\n```\r\n            stderr = tempfile.NamedTemporaryFile(dir=self.stderr_dir, delete=False)\r\n```",
      "created_at": "2018-11-30T21:55:24Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238014495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238014495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 424,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238014809",
      "pull_request_review_id": 180461803,
      "id": 238014809,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAxNDgwOQ==",
      "diff_hunk": "@@ -18,6 +18,7 @@\n import time\n import urllib.parse\n import collections\n+import shlex",
      "path": "test/functional/test_framework/test_node.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why no sorting? :cry: ",
      "created_at": "2018-11-30T21:56:36Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238014809",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238014809"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238015981",
      "pull_request_review_id": 180461803,
      "id": 238015981,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzODAxNTk4MQ==",
      "diff_hunk": "@@ -193,10 +193,14 @@ def run_test(self):\n \n         self.log.info(\"Wait for node2 reach current tip. Test that it has propagated all the blocks to us\")\n \n-        getdata_request = msg_getdata()\n-        for block in blocks:\n-            getdata_request.inv.append(CInv(2, block))\n-        self.nodes[2].p2p.send_message(getdata_request)\n+        # If we have Linux perf-tools installed, we can easily profile part of the",
      "path": "test/functional/example_test.py",
      "position": null,
      "original_position": 8,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this example code should be in `test/README.md`, which is documentation of how to run tests and contains debugging/troubleshooting tips.\r\n\r\nThis is meant as an example of how to write a test. I don't think the expectation is that people leave `profile_with_perf` contexts in test that are checked into the repo.",
      "created_at": "2018-11-30T22:01:15Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238015981",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/238015981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244765123",
      "pull_request_review_id": 188715545,
      "id": 244765123,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDc2NTEyMw==",
      "diff_hunk": "@@ -95,6 +103,8 @@ def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mock\n         self.url = None\n         self.log = logging.getLogger('TestFramework.node%d' % i)\n         self.cleanup_on_exit = True # Whether to kill the node when this object goes away\n+        # Cache perf subprocesses here by their data output filename.\n+        self.perf_subprocesses = {}",
      "path": "test/functional/test_framework/test_node.py",
      "position": 37,
      "original_position": 36,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": 238011859,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's conceivable if you want to do nested benchmarking, or have specific regions benchmarked under different perf output files. There's very little overhead here to keeping the subprocess references around, so I can't think of a good reason to rejigger this.",
      "created_at": "2019-01-02T15:28:18Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r244765123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244765123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244766036",
      "pull_request_review_id": 188716773,
      "id": 244766036,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDc2NjAzNg==",
      "diff_hunk": "@@ -316,6 +333,117 @@ def assert_memory_usage_stable(self, perc_increase_allowed=0.03):\n                     perc_increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        Perf will sample the running node and will generate profile data in the node's\n+        datadir. The profile data can then be presented using `perf report` or a graphical\n+        tool like `hotspot`<https://github.com/KDAB/hotspot>.\n+\n+        To see useful textual output, run\n+\n+            perf report -i /path/to/datadir/node-0.perf.data --stdio | c++filt | less\n+\n+        See also:\n+\n+            Installing perf: https://askubuntu.com/q/50145\n+            Perf examples: http://www.brendangregg.com/perf.html\n+\n+        Args:\n+\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+\n+        Usage:\n+\n+            with node.profile_with_perf(\"send-big-msgs\"):\n+                # Perform activity on the node you're interested in profiling, e.g.:\n+                for _ in range(10000):\n+                    node.p2p.send_message(some_large_message)\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\n+        \"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.call(\n+                # shell=True required for pipe use below\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL) == 0\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):",
      "path": "test/functional/test_framework/test_node.py",
      "position": 104,
      "original_position": 115,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": 238013020,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Perf isn't available for macOS since it's Linux-specific. I'll add a warning and early-exit for non-Linux systems.",
      "created_at": "2019-01-02T15:31:32Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r244766036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244766036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 376,
      "original_line": 376,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244778271",
      "pull_request_review_id": 188732513,
      "id": 244778271,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDc3ODI3MQ==",
      "diff_hunk": "@@ -18,6 +18,7 @@\n import time\n import urllib.parse\n import collections\n+import shlex",
      "path": "test/functional/test_framework/test_node.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": 238014809,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If we want to enforce alphabetical sorting for imports, we should have a linter for it!",
      "created_at": "2019-01-02T16:12:05Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r244778271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244778271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244800893",
      "pull_request_review_id": 188760836,
      "id": 244800893,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NDgwMDg5Mw==",
      "diff_hunk": "@@ -193,10 +193,14 @@ def run_test(self):\n \n         self.log.info(\"Wait for node2 reach current tip. Test that it has propagated all the blocks to us\")\n \n-        getdata_request = msg_getdata()\n-        for block in blocks:\n-            getdata_request.inv.append(CInv(2, block))\n-        self.nodes[2].p2p.send_message(getdata_request)\n+        # If we have Linux perf-tools installed, we can easily profile part of the",
      "path": "test/functional/example_test.py",
      "position": null,
      "original_position": 8,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": 238015981,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Usage here is required to get around vulture's dead code check, but I'll add documentation to `test/functional/README.md`.",
      "created_at": "2019-01-02T17:38:25Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r244800893",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/244800893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245391408",
      "pull_request_review_id": 189490561,
      "id": 245391408,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTM5MTQwOA==",
      "diff_hunk": "@@ -257,6 +258,51 @@ make cov\n # A coverage report will now be accessible at `./test_bitcoin.coverage/index.html`.\n ```\n \n+### Performance profiling with perf\n+\n+Profiling is a good way to get a precise idea of where time is being spent in\n+code. One tool for doing profiling on Linux platforms is called\n+[`perf`](http://www.brendangregg.com/perf.html), and has been integrated into\n+the functional test framework. Perf can observe a running process and sample\n+(at some frequency) where its execution is.\n+\n+Perf installation is contingent on which kernel version you're running; see\n+[this StackExchange\n+thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n+for specific instructions.\n+\n+Certain kernel parameters may need to be set for perf to be able to inspect the\n+running process' stack.\n+\n+```sh\n+$ sudo sysctl -w kernel.perf_event_paranoid=-1\n+$ sudo sysctl -w kernel.kptr_restrict=0\n+```\n+\n+Make sure you [understand the security\n+trade-offs](https://lwn.net/Articles/420403/) of setting these kernel",
      "path": "doc/developer-notes.md",
      "position": 34,
      "original_position": 34,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "27a895d72a385bcaa861e08b03bb5c817f8e253f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"docs: add perf section to developer docs\" (27a895d72a385bcaa861e08b03bb5c817f8e253f)\r\n\r\nSlightly strange the link text is \"understand the security tradeoffs\" instead of just \"security tradeoffs.\"",
      "created_at": "2019-01-04T19:07:54Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245391408",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245391408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 283,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245819954",
      "pull_request_review_id": 190021499,
      "id": 245819954,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTgxOTk1NA==",
      "diff_hunk": "@@ -118,3 +118,36 @@ Helpers for script.py\n \n #### [test_framework/blocktools.py](test_framework/blocktools.py)\n Helper functions for creating blocks and transactions.\n+\n+### Benchmarking with perf",
      "path": "test/functional/README.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "27a895d72a385bcaa861e08b03bb5c817f8e253f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This documentation is excellent. I think it should live in `/test/README.md`, which is documentation for *running* the functional tests, and already includes hints on logging, attaching a debugger, etc. `/test/functional/README.md` is documentation for *writing* test cases (we could probably add a note to the top of each file explaining that).",
      "created_at": "2019-01-07T22:26:57Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245819954",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245819954"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 122,
      "original_line": 122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245823161",
      "pull_request_review_id": 190021499,
      "id": 245823161,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTgyMzE2MQ==",
      "diff_hunk": "@@ -193,10 +193,14 @@ def run_test(self):\n \n         self.log.info(\"Wait for node2 reach current tip. Test that it has propagated all the blocks to us\")\n \n-        getdata_request = msg_getdata()\n-        for block in blocks:\n-            getdata_request.inv.append(CInv(2, block))\n-        self.nodes[2].p2p.send_message(getdata_request)\n+        # If we have Linux perf-tools installed, we can easily profile part of the",
      "path": "test/functional/example_test.py",
      "position": null,
      "original_position": 8,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": 238015981,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If this is just to get around vulture, then I'd prefer to just update `lint-python-dead-code.sh` to ignore the `profile_with_perf` name. This file is supposed to be a guide for writing a new testcase. As far as I can tell, `profile_with_perf` shouldn't be included in new testcases to be checked into master.",
      "created_at": "2019-01-07T22:40:15Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245823161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245823161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245823890",
      "pull_request_review_id": 190021499,
      "id": 245823890,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTgyMzg5MA==",
      "diff_hunk": "@@ -95,6 +103,8 @@ def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mock\n         self.url = None\n         self.log = logging.getLogger('TestFramework.node%d' % i)\n         self.cleanup_on_exit = True # Whether to kill the node when this object goes away\n+        # Cache perf subprocesses here by their data output filename.\n+        self.perf_subprocesses = {}",
      "path": "test/functional/test_framework/test_node.py",
      "position": 37,
      "original_position": 36,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": 238011859,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My point is that there should only ever be one `perf_subprocess` at any time (it gets popped in `_stop_perf`). I think it's fine to have a `perf_subrocess` reference in the `TestNode` object, but making it a dictionary when there can only be one reference at a time seems odd.\r\n\r\nOr maybe I'm misunderstanding. Is it possible to attach more than one perf instance to the same process? Can you give an example of when you'd want that?",
      "created_at": "2019-01-07T22:43:25Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245823890",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245823890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245825685",
      "pull_request_review_id": 190021499,
      "id": 245825685,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTgyNTY4NQ==",
      "diff_hunk": "@@ -186,6 +197,9 @@ def start(self, extra_args=None, *, stdout=None, stderr=None, **kwargs):\n         self.running = True\n         self.log.debug(\"bitcoind started, waiting for RPC to come up\")\n \n+        if self.start_perf:\n+            self._start_perf(\"\")",
      "path": "test/functional/test_framework/test_node.py",
      "position": null,
      "original_position": 46,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "27a895d72a385bcaa861e08b03bb5c817f8e253f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it'd be better to pass `None` here (or even better have `None` as the default argument). `\"\"` and `None` will get treated the same in `(profile_name or 'test')`.\r\n\r\nEDIT: I see you're using `profile_name` as the key in the `perf_subprocesses` dictionary so this wouldn't work. Is `perf_subprocesses` safe from having entries overwritten if the same `profile_name` is passed in twice?",
      "created_at": "2019-01-07T22:51:02Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245825685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245825685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 201,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245826619",
      "pull_request_review_id": 190021499,
      "id": 245826619,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTgyNjYxOQ==",
      "diff_hunk": "@@ -317,6 +335,84 @@ def assert_memory_usage_stable(self, *, increase_allowed=0.03):\n                     increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        See `test/functional/README.md` for details on perf usage.\n+\n+        Args:\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.call(\n+                # shell=True required for pipe use below\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL) == 0\n+\n+        if not sys.platform.startswith('linux'):\n+            self.log.warning(\"Can't profile with perf; only availabe on Linux platforms\")\n+            return None\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+            return None\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        output_path = tempfile.NamedTemporaryFile(\n+            dir=self.datadir,\n+            prefix=\"{}.perf.data.\".format(profile_name or 'test'),\n+            delete=False,\n+        ).name\n+\n+        cmd = [\n+            'perf', 'record',\n+            '-g',                     # Record the callgraph.\n+            '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+            '-F', '101',              # Sampling frequency in Hz.\n+            '-p', str(self.process.pid),\n+            '-o', output_path,\n+        ]\n+        subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+        self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        output_path = subp.args[subp.args.index('-o') + 1]",
      "path": "test/functional/test_framework/test_node.py",
      "position": 130,
      "original_position": 130,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "27a895d72a385bcaa861e08b03bb5c817f8e253f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems a bit brittle. Probably ok to leave as it is, but if anyone updates the arguments or ordering of arguments, then this will break.",
      "created_at": "2019-01-07T22:55:08Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245826619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245826619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 402,
      "original_line": 402,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245827078",
      "pull_request_review_id": 190021499,
      "id": 245827078,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTgyNzA3OA==",
      "diff_hunk": "@@ -118,3 +118,36 @@ Helpers for script.py\n \n #### [test_framework/blocktools.py](test_framework/blocktools.py)\n Helper functions for creating blocks and transactions.\n+\n+### Benchmarking with perf\n+\n+An easy way to profile node performance during functional tests is provided\n+for Linux platforms using `perf`.\n+\n+Perf will sample the running node and will generate profile data in the node's\n+datadir. The profile data can then be presented using `perf report` or a graphical\n+tool like `hotspot`<https://github.com/KDAB/hotspot>.",
      "path": "test/functional/README.md",
      "position": null,
      "original_position": 12,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "27a895d72a385bcaa861e08b03bb5c817f8e253f",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Make this a markdown link: `[hotspot](https://github.com/KDAB/hotspot).`",
      "created_at": "2019-01-07T22:57:11Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245827078",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245827078"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249780132",
      "pull_request_review_id": 195006251,
      "id": 249780132,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTc4MDEzMg==",
      "diff_hunk": "@@ -95,6 +103,8 @@ def __init__(self, i, datadir, *, rpchost, timewait, bitcoind, bitcoin_cli, mock\n         self.url = None\n         self.log = logging.getLogger('TestFramework.node%d' % i)\n         self.cleanup_on_exit = True # Whether to kill the node when this object goes away\n+        # Cache perf subprocesses here by their data output filename.\n+        self.perf_subprocesses = {}",
      "path": "test/functional/test_framework/test_node.py",
      "position": 37,
      "original_position": 36,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "a94c68b3f46c897511bead16cf8a81d14312751f",
      "in_reply_to_id": 238011859,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> My point is that there should only ever be one perf_subprocess at any time\r\n\r\nYeah, this isn't the case: you might have nested context managers, or a context manager used in conjunction with `--perf`.",
      "created_at": "2019-01-22T13:34:35Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r249780132",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249780132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 108,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249780686",
      "pull_request_review_id": 195007003,
      "id": 249780686,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0OTc4MDY4Ng==",
      "diff_hunk": "@@ -317,6 +335,84 @@ def assert_memory_usage_stable(self, *, increase_allowed=0.03):\n                     increase_allowed * 100, before_memory_usage, after_memory_usage,\n                     perc_increase_memory_usage * 100))\n \n+    @contextlib.contextmanager\n+    def profile_with_perf(self, profile_name):\n+        \"\"\"\n+        Context manager that allows easy profiling of node activity using `perf`.\n+\n+        See `test/functional/README.md` for details on perf usage.\n+\n+        Args:\n+            profile_name (str): This string will be appended to the\n+                profile data filename generated by perf.\n+        \"\"\"\n+        subp = self._start_perf(profile_name)\n+\n+        yield\n+\n+        if subp:\n+            self._stop_perf(profile_name)\n+\n+    def _start_perf(self, profile_name):\n+        \"\"\"Start a perf process to profile this node.\n+\n+        Returns the subprocess running perf.\"\"\"\n+        subp = None\n+\n+        def test_success(cmd):\n+            return subprocess.call(\n+                # shell=True required for pipe use below\n+                cmd, shell=True,\n+                stderr=subprocess.DEVNULL, stdout=subprocess.DEVNULL) == 0\n+\n+        if not sys.platform.startswith('linux'):\n+            self.log.warning(\"Can't profile with perf; only availabe on Linux platforms\")\n+            return None\n+\n+        if not test_success('which perf'):\n+            self.log.warning(\"Can't profile with perf; must install perf-tools\")\n+            return None\n+\n+        if not test_success('readelf -S {} | grep .debug_str'.format(shlex.quote(self.binary))):\n+            self.log.warning(\n+                \"perf output won't be very useful without debug symbols compiled into bitcoind\")\n+\n+        output_path = tempfile.NamedTemporaryFile(\n+            dir=self.datadir,\n+            prefix=\"{}.perf.data.\".format(profile_name or 'test'),\n+            delete=False,\n+        ).name\n+\n+        cmd = [\n+            'perf', 'record',\n+            '-g',                     # Record the callgraph.\n+            '--call-graph', 'dwarf',  # Compatibility for gcc's --fomit-frame-pointer.\n+            '-F', '101',              # Sampling frequency in Hz.\n+            '-p', str(self.process.pid),\n+            '-o', output_path,\n+        ]\n+        subp = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+        self.perf_subprocesses[profile_name] = subp\n+\n+        return subp\n+\n+    def _stop_perf(self, profile_name):\n+        \"\"\"Stop (and pop) a perf subprocess.\"\"\"\n+        subp = self.perf_subprocesses.pop(profile_name)\n+        output_path = subp.args[subp.args.index('-o') + 1]",
      "path": "test/functional/test_framework/test_node.py",
      "position": 130,
      "original_position": 130,
      "commit_id": "13782b8ba84c5033a59a5234410a763393eafb8d",
      "original_commit_id": "27a895d72a385bcaa861e08b03bb5c817f8e253f",
      "in_reply_to_id": 245826619,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this is as brittle as it seems; you're always going to have the filename following `-o` otherwise the argument doesn't make any sense.",
      "created_at": "2019-01-22T13:36:21Z",
      "updated_at": "2019-01-22T13:56:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/14519#discussion_r249780686",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/249780686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14519"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 402,
      "original_line": 402,
      "side": "RIGHT"
    }
  ]
}