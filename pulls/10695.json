{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695",
    "id": 128004665,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTI4MDA0NjY1",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10695",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/10695.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/10695.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10695",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10695/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
    "number": 10695,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[qa] Rewrite BIP65/BIP66 functional tests",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "After 122786d0e0170c73536360b705af711e1338adbf, BIP65 and BIP66 activate at\r\nparticular fixed heights (without regard to version numbers of blocks\r\nbelow those heights).  Rewrite the functional tests to take\r\nthis into account, and remove two tests that weren't really testing anything.\r\n\r\nMoves the rewritten functional tests out of the extended test suite, so that they run in travis regularly.\r\n\r\nNote: I discovered that the ComparisonTestFramework (which the original versions of these p2p tests were written is, has a bug that caused them to not catch obvious errors, eg if you just comment out setting the script flags for these softforks in ConnectBlock, the versions of these tests in master do not fail(!) -- will separately PR a fix for the comparison test framework).",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2017-06-28T19:47:22Z",
    "updated_at": "2021-09-08T11:28:03Z",
    "closed_at": "2017-08-08T21:07:32Z",
    "mergeable_state": "unknown",
    "merged_at": "2017-08-08T21:07:32Z",
    "merge_commit_sha": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "sdaftuar:2017-06-fix-bip65-test",
      "ref": "2017-06-fix-bip65-test",
      "sha": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 245665,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:41:53Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2023-02-11T10:16:01Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "be824984626fde54ea8e64f4ac51872f23c634f6",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69818,
        "watchers_count": 69818,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-06T22:16:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 213,
    "deletions": 414,
    "changed_files": 5,
    "commits": 2,
    "review_comments": 17,
    "comments": 4
  },
  "events": [
    {
      "event": "head_ref_force_pushed",
      "id": 1143167984,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTE0MzE2Nzk4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1143167984",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-28T21:13:27Z"
    },
    {
      "event": "renamed",
      "id": 1143174419,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTE0MzE3NDQxOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1143174419",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-28T21:17:48Z",
      "rename": {
        "from": "[qa] Rewrite BIP65 functional tests",
        "to": "[qa] Rewrite BIP65/BIP66 functional tests"
      }
    },
    {
      "event": "reviewed",
      "id": 46983256,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5ODMyNTY=",
      "url": null,
      "actor": null,
      "commit_id": "1cf60bb12574256364f78666e546bf4d5d7b1508",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looks good to me at 06e3f006e499e3238905b92cbca563c69e170410, my test framework/python chops dont make me want to ACK, but I did test a few cases that the test actually failed if tweaked.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#pullrequestreview-46983256",
      "submitted_at": "2017-06-28T23:11:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
    },
    {
      "event": "labeled",
      "id": 1143439090,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDExNDM0MzkwOTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1143439090",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-29T02:08:46Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 47064576,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjQ1NzY=",
      "url": null,
      "actor": null,
      "commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Very nice cleanup. I love removing redundant tests!\r\n\r\nA few nits below. Nothing super important, although I would like to see asserts on reject messages, to ensure that blocks are being rejected for the correct reason.\r\n\r\nIt'd be nice to rename these (and other tests) to remove the `-p2p` suffix, since that now doesn't mean much. That could be done in a future PR if people agree.\r\n\r\nConsider using a linter like flake8 (together with the vim syntastic plugin) for catching obvious style nits like unused imports and trailing whitespace.\r\n\r\nEven without the nit fixes, this is a definite improvement over the current tests. Tested ACK 06e3f006e499e3238905b92cbca563c69e170410",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#pullrequestreview-47064576",
      "submitted_at": "2017-06-29T09:55:55Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1144650053,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTE0NDY1MDA1Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1144650053",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-29T17:26:14Z"
    },
    {
      "event": "commented",
      "id": 312037243,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjAzNzI0Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/312037243",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-29T17:31:55Z",
      "updated_at": "2017-06-29T17:31:55Z",
      "author_association": "MEMBER",
      "body": "@jnewbery Thanks for the review; I addressed all your nits except the one I responded to.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#issuecomment-312037243",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10695"
    },
    {
      "event": "mentioned",
      "id": 1144659014,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE0NDY1OTAxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1144659014",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-29T17:31:55Z"
    },
    {
      "event": "subscribed",
      "id": 1144659015,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExNDQ2NTkwMTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1144659015",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-29T17:31:55Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNGYwZDg3YjZmZTgwMGI2NTAwZGM1YmFmZjJlOGRiMzNlMTUxZGE1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4f0d87b6fe800b6500dc5baff2e8db33e151da5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d4f0d87b6fe800b6500dc5baff2e8db33e151da5",
      "tree": {
        "sha": "fd07108816d4823e36b0c909b824be70eec664ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd07108816d4823e36b0c909b824be70eec664ca"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4e551adfec298d12f2147467227f07e3a94b872",
          "sha": "d4e551adfec298d12f2147467227f07e3a94b872",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d4e551adfec298d12f2147467227f07e3a94b872"
        }
      ],
      "message": "[qa] Rewrite BIP65 functional tests\n\nAfter 122786d0e0170c73536360b705af711e1338adbf, BIP65 activates at\na particular height (without regard to version numbers of blocks\nbelow that height).  Rewrite the BIP65 functional tests to take\nthis into account, and add a test case that exercises\nOP_CHECKLOCKTIMEVERIFY in a block where the soft-fork is active.\n\nAlso moves the bip65 functional test out of the extended test suite.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-06-30T13:04:36Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-06-28T18:52:24Z"
      },
      "sha": "d4f0d87b6fe800b6500dc5baff2e8db33e151da5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1145931875,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTE0NTkzMTg3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1145931875",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-30T13:05:05Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Y2NjMTJhNTRhMjE3ODkyYmQ0Y2NmZDk0YzQ2MDUyYTExY2RiM2Zi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "tree": {
        "sha": "129b24a25fa82ff33a5903f5a8f6c41783da7a11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/129b24a25fa82ff33a5903f5a8f6c41783da7a11"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4f0d87b6fe800b6500dc5baff2e8db33e151da5",
          "sha": "d4f0d87b6fe800b6500dc5baff2e8db33e151da5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d4f0d87b6fe800b6500dc5baff2e8db33e151da5"
        }
      ],
      "message": "[qa] Rewrite BIP66 functional tests\n\nRewrite the BIP66 functional tests to reflect height-based activation,\nand move it out of the extended test suite.\n\nRemove the unnecessary bipdersig.py test",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-07-06T14:09:54Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-06-28T20:56:37Z"
      },
      "sha": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1152798179,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTE1Mjc5ODE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1152798179",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-06T14:10:18Z"
    },
    {
      "event": "commented",
      "id": 313408718,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzQwODcxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313408718",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-06T14:15:01Z",
      "updated_at": "2017-07-06T14:15:01Z",
      "author_association": "MEMBER",
      "body": "Bumped travis after spurious zapwallettxs error popped up (appeared to be an instance of #10678)",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#issuecomment-313408718",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10695"
    },
    {
      "event": "commented",
      "id": 314110705,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDExMDcwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/314110705",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-10T13:48:16Z",
      "updated_at": "2017-07-11T22:12:32Z",
      "author_association": "MEMBER",
      "body": "Tested ACK https://github.com/bitcoin/bitcoin/pull/10695/commits/4ccc12a54a217892bd4ccfd94c46052a11cdb3fb. ~It'd be nice to add asserting on reject messages, but that can wait for a future PR.~\r\n\r\n**Update**: I'm an idiot. You've already added testing reject messages.\r\n\r\nACK",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#issuecomment-314110705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10695"
    },
    {
      "event": "commented",
      "id": 321079698,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTA3OTY5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/321079698",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-08T20:57:26Z",
      "updated_at": "2017-08-08T20:57:26Z",
      "author_association": "MEMBER",
      "body": "utACK 4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#issuecomment-321079698",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10695"
    },
    {
      "event": "merged",
      "id": 1198021099,
      "node_id": "MDExOk1lcmdlZEV2ZW50MTE5ODAyMTA5OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1198021099",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "created_at": "2017-08-08T21:07:32Z"
    },
    {
      "event": "closed",
      "id": 1198021101,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTE5ODAyMTEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1198021101",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-08-08T21:07:32Z"
    },
    {
      "event": "referenced",
      "id": 1198021447,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDExOTgwMjE0NDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1198021447",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "929fd7276c0f0c30b9416f61a6f5f35d763d81e4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/929fd7276c0f0c30b9416f61a6f5f35d763d81e4",
      "created_at": "2017-08-08T21:07:47Z"
    },
    {
      "event": "referenced",
      "id": 2616549969,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2MTY1NDk5Njk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2616549969",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4fe8c74dc1abf58bfdfda9d3f40c08612394abd2",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/4fe8c74dc1abf58bfdfda9d3f40c08612394abd2",
      "created_at": "2019-09-08T04:32:54Z"
    },
    {
      "event": "referenced",
      "id": 2616560770,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2MTY1NjA3NzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2616560770",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4ce64908e5232772d1ad39b8958b5e7ff81fe449",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/4ce64908e5232772d1ad39b8958b5e7ff81fe449",
      "created_at": "2019-09-08T05:13:16Z"
    },
    {
      "event": "referenced",
      "id": 2616841065,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI2MTY4NDEwNjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2616841065",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "6fc928541293d648a991bc92383d6221fbee9434",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/6fc928541293d648a991bc92383d6221fbee9434",
      "created_at": "2019-09-08T16:07:53Z"
    },
    {
      "event": "referenced",
      "id": 2971477102,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDI5NzE0NzcxMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2971477102",
      "actor": {
        "login": "barrystyle",
        "id": 14147070,
        "node_id": "MDQ6VXNlcjE0MTQ3MDcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/14147070?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/barrystyle",
        "html_url": "https://github.com/barrystyle",
        "followers_url": "https://api.github.com/users/barrystyle/followers",
        "following_url": "https://api.github.com/users/barrystyle/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/barrystyle/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/barrystyle/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/barrystyle/subscriptions",
        "organizations_url": "https://api.github.com/users/barrystyle/orgs",
        "repos_url": "https://api.github.com/users/barrystyle/repos",
        "events_url": "https://api.github.com/users/barrystyle/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/barrystyle/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f55e67f6968f7f958185fdaa9393522fe0ac6501",
      "commit_url": "https://api.github.com/repos/PACGlobalOfficial/PAC/commits/f55e67f6968f7f958185fdaa9393522fe0ac6501",
      "created_at": "2020-01-22T20:22:24Z"
    },
    {
      "event": "locked",
      "id": 5271678571,
      "node_id": "LOE_lADOABII584OQwtMzwAAAAE6N25r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5271678571",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-09-08T11:28:03Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124670279",
      "pull_request_review_id": 46983256,
      "id": 124670279,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDY3MDI3OQ==",
      "diff_hunk": "@@ -33,19 +26,34 @@ def cltv_invalidate(tx):\n     tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n                                   list(CScript(tx.vin[0].scriptSig)))\n \n+def cltv_validate(node, tx, height):\n+    '''Modify the signature in vin 0 of the tx to pass CLTV\n+    Prepends <height> CLTV DROP in the scriptSig, and sets\n+    the locktime to height'''\n+    tx.vin[0].nSequence = 0\n+    tx.nLockTime = height",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": 55,
      "original_position": 44,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "1cf60bb12574256364f78666e546bf4d5d7b1508",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "For my own sanity it'd be nice if cltv_invalidate looked much more like cltv_validate, which would make it more obvious that the invalid tx is clearly invalid due to the CLTV and not some other reason, and while you're at it would be nice to test other ways CLTV can be invalid (both tx doesnt meet sequence requirements and tx doesnt meet locktime requirements).",
      "created_at": "2017-06-28T22:13:30Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124670279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124670279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124746991",
      "pull_request_review_id": 47064576,
      "id": 124746991,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc0Njk5MQ==",
      "diff_hunk": "@@ -64,119 +56,74 @@ def create_transaction(self, node, coinbase, to_address, amount):\n         tx.deserialize(f)\n         return tx\n \n-    def get_tests(self):\n+    def run_test(self):\n+        node0 = BaseNode()\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+        NetworkThread().start() # Start up network handling in another thread\n+\n+        # wait_for_verack ensures that the P2P connection is fully up.\n+        node0.wait_for_verack()\n \n-        self.coinbase_blocks = self.nodes[0].generate(2)\n-        height = 3  # height of the next block to build\n-        self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n+        self.log.info(\"Mining %d blocks\", DERSIG_HEIGHT - 2)\n+        self.coinbase_blocks = self.nodes[0].generate(DERSIG_HEIGHT - 2)\n         self.nodeaddress = self.nodes[0].getnewaddress()\n-        self.last_block_time = int(time.time())\n-\n-        ''' 298 more version 2 blocks '''\n-        test_blocks = []\n-        for i in range(298):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 2\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 749 version 3 blocks '''\n-        test_blocks = []\n-        for i in range(749):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' \n-        Check that the new DERSIG rules are not enforced in the 750th\n-        version 3 block.\n-        '''\n+\n+        self.log.info(\"Test that a transaction with non-DER signature can still appear in a block\")\n+\n         spendtx = self.create_transaction(self.nodes[0],\n                 self.coinbase_blocks[0], self.nodeaddress, 1.0)\n         unDERify(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-        block.nVersion = 3\n+        tip = self.nodes[0].getbestblockhash()\n+        block_time = self.nodes[0].getblockheader(tip)['mediantime'] + 1\n+        block = create_block(int(tip, 16), create_coinbase(DERSIG_HEIGHT - 1), block_time)\n+        block.nVersion = 2\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()\n         block.solve()\n \n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])       \n-\n-        ''' Mine 199 new version blocks on last valid tip '''\n-        test_blocks = []\n-        for i in range(199):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 1 old version block '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n+        node0.send_and_ping(msg_block(block))\n+        assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n+\n+        self.log.info(\"Test that blocks must now be at least version 3\")\n+        tip = block.sha256\n+        block_time += 1\n+        block = create_block(tip, create_coinbase(DERSIG_HEIGHT), block_time)\n         block.nVersion = 2\n         block.rehash()\n         block.solve()\n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])\n+        node0.send_and_ping(msg_block(block))",
      "path": "test/functional/bipdersig-p2p.py",
      "position": 185,
      "original_position": 165,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The node-under-test sends a reject message at this point:\r\n\r\n```\r\n2017-06-29 08:56:00.945000 TestFramework.mininode (DEBUG): Received message from 127.0.0.1:11900: msg_reject: b'block' 17 b'bad-version(0x00000002)' [7bb0412e9813a1d13cd14ff2277a906e101d183f93b0136c848bdb94ffd1d6b7]\r\n```\r\n\r\nIt'd be nice to add an assert that mininode received that reject.\r\n\r\nI know that there's talk of removing reject messages from bitcoind, but while they're still there, they're useful for asserting that a block/tx was rejected for the correct reason. If there was some error in the code above (eg if we'd called `create_block()` with bad parameters or it'd created a bad block for some reason), the block would have been rejected, the test would pass, but we wouldn't actually be testing BIP66 activation.",
      "created_at": "2017-06-29T09:02:42Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124746991",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124746991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 98,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124747578",
      "pull_request_review_id": 47064576,
      "id": 124747578,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc0NzU3OA==",
      "diff_hunk": "@@ -64,119 +56,74 @@ def create_transaction(self, node, coinbase, to_address, amount):\n         tx.deserialize(f)\n         return tx\n \n-    def get_tests(self):\n+    def run_test(self):\n+        node0 = BaseNode()\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+        NetworkThread().start() # Start up network handling in another thread\n+\n+        # wait_for_verack ensures that the P2P connection is fully up.\n+        node0.wait_for_verack()\n \n-        self.coinbase_blocks = self.nodes[0].generate(2)\n-        height = 3  # height of the next block to build\n-        self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n+        self.log.info(\"Mining %d blocks\", DERSIG_HEIGHT - 2)\n+        self.coinbase_blocks = self.nodes[0].generate(DERSIG_HEIGHT - 2)\n         self.nodeaddress = self.nodes[0].getnewaddress()\n-        self.last_block_time = int(time.time())\n-\n-        ''' 298 more version 2 blocks '''\n-        test_blocks = []\n-        for i in range(298):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 2\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 749 version 3 blocks '''\n-        test_blocks = []\n-        for i in range(749):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' \n-        Check that the new DERSIG rules are not enforced in the 750th\n-        version 3 block.\n-        '''\n+\n+        self.log.info(\"Test that a transaction with non-DER signature can still appear in a block\")\n+\n         spendtx = self.create_transaction(self.nodes[0],\n                 self.coinbase_blocks[0], self.nodeaddress, 1.0)\n         unDERify(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-        block.nVersion = 3\n+        tip = self.nodes[0].getbestblockhash()\n+        block_time = self.nodes[0].getblockheader(tip)['mediantime'] + 1\n+        block = create_block(int(tip, 16), create_coinbase(DERSIG_HEIGHT - 1), block_time)\n+        block.nVersion = 2\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()\n         block.solve()\n \n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])       \n-\n-        ''' Mine 199 new version blocks on last valid tip '''\n-        test_blocks = []\n-        for i in range(199):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 1 old version block '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n+        node0.send_and_ping(msg_block(block))\n+        assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n+\n+        self.log.info(\"Test that blocks must now be at least version 3\")\n+        tip = block.sha256\n+        block_time += 1\n+        block = create_block(tip, create_coinbase(DERSIG_HEIGHT), block_time)\n         block.nVersion = 2\n         block.rehash()\n         block.solve()\n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])\n+        node0.send_and_ping(msg_block(block))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), tip)\n \n-        ''' Mine 1 new version block '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n+        self.log.info(\"Test that transactions with non-DER signatures cannot appear in a block\")\n         block.nVersion = 3\n-        block.rehash()\n-        block.solve()\n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])\n-\n-        ''' \n-        Check that the new DERSIG rules are enforced in the 951st version 3\n-        block.\n-        '''\n+\n         spendtx = self.create_transaction(self.nodes[0],\n                 self.coinbase_blocks[1], self.nodeaddress, 1.0)\n         unDERify(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-        block.nVersion = 3\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()\n         block.solve()\n-        self.last_block_time += 1\n-        yield TestInstance([[block, False]])\n \n-        ''' Mine 1 old version block, should be invalid '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-        block.nVersion = 2\n+        node0.send_and_ping(msg_block(block))",
      "path": "test/functional/bipdersig-p2p.py",
      "position": 237,
      "original_position": 201,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Again, it'd be good to assert that we received a reject, this time with cause `'block-validation-failed'`",
      "created_at": "2017-06-29T09:05:24Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124747578",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124747578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 128,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124749366",
      "pull_request_review_id": 47064576,
      "id": 124749366,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc0OTM2Ng==",
      "diff_hunk": "@@ -4,27 +4,19 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test BIP66 (DER SIG).\n \n-Connect to a single node.\n-Mine 2 (version 2) blocks (save the coinbases for later).\n-Generate 98 more version 2 blocks, verify the node accepts.\n-Mine 749 version 3 blocks, verify the node accepts.\n-Check that the new DERSIG rules are not enforced on the 750th version 3 block.\n-Check that the new DERSIG rules are enforced on the 751st version 3 block.\n-Mine 199 new version blocks.\n-Mine 1 old-version block.\n-Mine 1 new version block.\n-Mine 1 old version block, see that the node rejects.\n+Test that the DERSIG soft-fork activates at (regtest) height 1251.\n \"\"\"\n \n-from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import CTransaction, NetworkThread\n+from test_framework.mininode import *\n from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n from test_framework.script import CScript\n from io import BytesIO\n import time",
      "path": "test/functional/bipdersig-p2p.py",
      "position": null,
      "original_position": 26,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: this import is unused and can be removed",
      "created_at": "2017-06-29T09:13:36Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124749366",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124749366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124749877",
      "pull_request_review_id": 47064576,
      "id": 124749877,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc0OTg3Nw==",
      "diff_hunk": "@@ -4,27 +4,19 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test BIP66 (DER SIG).\n \n-Connect to a single node.\n-Mine 2 (version 2) blocks (save the coinbases for later).\n-Generate 98 more version 2 blocks, verify the node accepts.\n-Mine 749 version 3 blocks, verify the node accepts.\n-Check that the new DERSIG rules are not enforced on the 750th version 3 block.\n-Check that the new DERSIG rules are enforced on the 751st version 3 block.\n-Mine 199 new version blocks.\n-Mine 1 old-version block.\n-Mine 1 new version block.\n-Mine 1 old version block, see that the node rejects.\n+Test that the DERSIG soft-fork activates at (regtest) height 1251.\n \"\"\"\n \n-from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import CTransaction, NetworkThread\n+from test_framework.mininode import *\n from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n from test_framework.script import CScript\n from io import BytesIO\n import time\n \n+DERSIG_HEIGHT = 1251\n+\n # A canonical signature consists of: ",
      "path": "test/functional/bipdersig-p2p.py",
      "position": null,
      "original_position": 30,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: trailing whitespace",
      "created_at": "2017-06-29T09:16:00Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124749877",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124749877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124749958",
      "pull_request_review_id": 47064576,
      "id": 124749958,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc0OTk1OA==",
      "diff_hunk": "@@ -40,18 +32,18 @@ def unDERify(tx):\n         else:\n             newscript.append(i)\n     tx.vin[0].scriptSig = CScript(newscript)\n+\n+class BaseNode(NodeConnCB):\n+    def __init__(self):\n+        super().__init__()\n             ",
      "path": "test/functional/bipdersig-p2p.py",
      "position": null,
      "original_position": 41,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: trailing whitespace",
      "created_at": "2017-06-29T09:16:25Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124749958",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124749958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124750421",
      "pull_request_review_id": 47064576,
      "id": 124750421,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc1MDQyMQ==",
      "diff_hunk": "@@ -64,119 +56,74 @@ def create_transaction(self, node, coinbase, to_address, amount):\n         tx.deserialize(f)\n         return tx\n \n-    def get_tests(self):\n+    def run_test(self):\n+        node0 = BaseNode()\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+        NetworkThread().start() # Start up network handling in another thread\n+\n+        # wait_for_verack ensures that the P2P connection is fully up.\n+        node0.wait_for_verack()\n \n-        self.coinbase_blocks = self.nodes[0].generate(2)\n-        height = 3  # height of the next block to build\n-        self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n+        self.log.info(\"Mining %d blocks\", DERSIG_HEIGHT - 2)\n+        self.coinbase_blocks = self.nodes[0].generate(DERSIG_HEIGHT - 2)\n         self.nodeaddress = self.nodes[0].getnewaddress()\n-        self.last_block_time = int(time.time())\n-\n-        ''' 298 more version 2 blocks '''\n-        test_blocks = []\n-        for i in range(298):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 2\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 749 version 3 blocks '''\n-        test_blocks = []\n-        for i in range(749):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' \n-        Check that the new DERSIG rules are not enforced in the 750th\n-        version 3 block.\n-        '''\n+\n+        self.log.info(\"Test that a transaction with non-DER signature can still appear in a block\")\n+\n         spendtx = self.create_transaction(self.nodes[0],\n                 self.coinbase_blocks[0], self.nodeaddress, 1.0)\n         unDERify(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-        block.nVersion = 3\n+        tip = self.nodes[0].getbestblockhash()\n+        block_time = self.nodes[0].getblockheader(tip)['mediantime'] + 1\n+        block = create_block(int(tip, 16), create_coinbase(DERSIG_HEIGHT - 1), block_time)\n+        block.nVersion = 2\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()\n         block.solve()\n \n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])       \n-\n-        ''' Mine 199 new version blocks on last valid tip '''\n-        test_blocks = []\n-        for i in range(199):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 1 old version block '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n+        node0.send_and_ping(msg_block(block))\n+        assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n+\n+        self.log.info(\"Test that blocks must now be at least version 3\")\n+        tip = block.sha256\n+        block_time += 1\n+        block = create_block(tip, create_coinbase(DERSIG_HEIGHT), block_time)\n         block.nVersion = 2\n         block.rehash()\n         block.solve()\n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])\n+        node0.send_and_ping(msg_block(block))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), tip)\n \n-        ''' Mine 1 new version block '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n+        self.log.info(\"Test that transactions with non-DER signatures cannot appear in a block\")",
      "path": "test/functional/bipdersig-p2p.py",
      "position": null,
      "original_position": 170,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are transactions with non-DER signatures added to the mempool or relayed after BIP66 activation? If not, is it possible to add a sub-test here to test that?",
      "created_at": "2017-06-29T09:18:31Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124750421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124750421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124753006",
      "pull_request_review_id": 47064576,
      "id": 124753006,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc1MzAwNg==",
      "diff_hunk": "@@ -4,27 +4,20 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test BIP65 (CHECKLOCKTIMEVERIFY).\n \n-Connect to a single node.\n-Mine 2 (version 3) blocks (save the coinbases for later).\n-Generate 98 more version 3 blocks, verify the node accepts.\n-Mine 749 version 4 blocks, verify the node accepts.\n-Check that the new CLTV rules are not enforced on the 750th version 4 block.\n-Check that the new CLTV rules are enforced on the 751st version 4 block.\n-Mine 199 new version blocks.\n-Mine 1 old-version block.\n-Mine 1 new version block.\n-Mine 1 old version block, see that the node rejects.\n+Test that the CHECKLOCKTIMEVERIFY soft-fork activates at (regtest) block height\n+1351.\n \"\"\"\n \n-from test_framework.test_framework import ComparisonTestFramework\n+from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-from test_framework.mininode import CTransaction, NetworkThread\n+from test_framework.mininode import *\n from test_framework.blocktools import create_coinbase, create_block\n-from test_framework.comptool import TestInstance, TestManager\n-from test_framework.script import CScript, OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP\n+from test_framework.script import CScript, OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP, CScriptNum\n from io import BytesIO\n import time",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": null,
      "original_position": 28,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: import time not used",
      "created_at": "2017-06-29T09:29:54Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124753006",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124753006"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124753529",
      "pull_request_review_id": 47064576,
      "id": 124753529,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc1MzUyOQ==",
      "diff_hunk": "@@ -33,19 +26,34 @@ def cltv_invalidate(tx):\n     tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n                                   list(CScript(tx.vin[0].scriptSig)))\n \n+def cltv_validate(node, tx, height):\n+    '''Modify the signature in vin 0 of the tx to pass CLTV\n+    Prepends <height> CLTV DROP in the scriptSig, and sets\n+    the locktime to height'''\n+    tx.vin[0].nSequence = 0\n+    tx.nLockTime = height\n+\n+    # Need to re-sign, since nSequence and nLockTime changed\n+    signed_result = node.signrawtransaction(ToHex(tx))\n+    new_tx = CTransaction()\n+    f = BytesIO(hex_str_to_bytes(signed_result['hex']))\n+    new_tx.deserialize(f)",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": null,
      "original_position": 50,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: perhaps combine this with the line above, rather than have a throwaway variable.",
      "created_at": "2017-06-29T09:32:12Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124753529",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124753529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124753994",
      "pull_request_review_id": 47064576,
      "id": 124753994,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc1Mzk5NA==",
      "diff_hunk": "@@ -33,19 +26,34 @@ def cltv_invalidate(tx):\n     tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n                                   list(CScript(tx.vin[0].scriptSig)))\n \n+def cltv_validate(node, tx, height):\n+    '''Modify the signature in vin 0 of the tx to pass CLTV\n+    Prepends <height> CLTV DROP in the scriptSig, and sets\n+    the locktime to height'''\n+    tx.vin[0].nSequence = 0\n+    tx.nLockTime = height\n+\n+    # Need to re-sign, since nSequence and nLockTime changed\n+    signed_result = node.signrawtransaction(ToHex(tx))\n+    new_tx = CTransaction()\n+    f = BytesIO(hex_str_to_bytes(signed_result['hex']))\n+    new_tx.deserialize(f)\n \n-class BIP65Test(ComparisonTestFramework):\n+    new_tx.vin[0].scriptSig = CScript([CScriptNum(height), OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n+                                  list(CScript(new_tx.vin[0].scriptSig)))\n+    return new_tx\n \n+class BaseNode(NodeConnCB):",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": null,
      "original_position": 57,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not required. Just use the base `NodeConnCB` below.",
      "created_at": "2017-06-29T09:34:20Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124753994",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124753994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124754384",
      "pull_request_review_id": 47064576,
      "id": 124754384,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc1NDM4NA==",
      "diff_hunk": "@@ -33,19 +26,34 @@ def cltv_invalidate(tx):\n     tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n                                   list(CScript(tx.vin[0].scriptSig)))\n \n+def cltv_validate(node, tx, height):\n+    '''Modify the signature in vin 0 of the tx to pass CLTV\n+    Prepends <height> CLTV DROP in the scriptSig, and sets\n+    the locktime to height'''\n+    tx.vin[0].nSequence = 0\n+    tx.nLockTime = height\n+\n+    # Need to re-sign, since nSequence and nLockTime changed\n+    signed_result = node.signrawtransaction(ToHex(tx))\n+    new_tx = CTransaction()\n+    f = BytesIO(hex_str_to_bytes(signed_result['hex']))\n+    new_tx.deserialize(f)\n \n-class BIP65Test(ComparisonTestFramework):\n+    new_tx.vin[0].scriptSig = CScript([CScriptNum(height), OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n+                                  list(CScript(new_tx.vin[0].scriptSig)))\n+    return new_tx\n \n+class BaseNode(NodeConnCB):\n     def __init__(self):\n         super().__init__()\n-        self.num_nodes = 1\n-        self.extra_args = [['-whitelist=127.0.0.1', '-blockversion=3']]\n \n-    def run_test(self):\n-        test = TestManager(self, self.options.tmpdir)\n-        test.add_all_connections(self.nodes)\n-        NetworkThread().start() # Start up network handling in another thread\n-        test.run()\n+class BIP65Test(BitcoinTestFramework):\n+\n+    def __init__(self):\n+        super().__init__()\n+        self.num_nodes = 1\n+        self.extra_args = [['-promiscuousmempoolflags=1', '-whitelist=127.0.0.1']]\n+        self.setup_clean_chain = True\n \n     def create_transaction(self, node, coinbase, to_address, amount):",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": null,
      "original_position": 76,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This doesn't need to be a method in `BIP65Test`. Consider moving it above the class definition to be a module-level function (alongside `cltv_invalidate()` and `cltv_validate()`)",
      "created_at": "2017-06-29T09:36:02Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124754384",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124754384"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124754971",
      "pull_request_review_id": 47064576,
      "id": 124754971,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc1NDk3MQ==",
      "diff_hunk": "@@ -58,119 +66,79 @@ def create_transaction(self, node, coinbase, to_address, amount):\n         tx.deserialize(f)\n         return tx\n \n-    def get_tests(self):\n+    def run_test(self):\n+        node0 = BaseNode()",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": null,
      "original_position": 84,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`self.nodes[0]` is used throughout this test. Consider adding an alias:\r\n\r\n```py\r\nnode = self.nodes[0]\r\n```\r\nand then using `node` throughout the test.\r\n\r\nI think that looks slightly neater for tests that only use one node, but that's just personal preference.",
      "created_at": "2017-06-29T09:38:39Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124754971",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124754971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124756991",
      "pull_request_review_id": 47064576,
      "id": 124756991,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc1Njk5MQ==",
      "diff_hunk": "@@ -58,119 +66,79 @@ def create_transaction(self, node, coinbase, to_address, amount):\n         tx.deserialize(f)\n         return tx\n \n-    def get_tests(self):\n+    def run_test(self):\n+        node0 = BaseNode()\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start() # Start up network handling in another thread\n \n-        self.coinbase_blocks = self.nodes[0].generate(2)\n-        height = 3  # height of the next block to build\n-        self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n+        # wait_for_verack ensures that the P2P connection is fully up.\n+        node0.wait_for_verack()\n+\n+        self.log.info(\"Mining %d blocks\", CLTV_HEIGHT - 2)\n+        self.coinbase_blocks = self.nodes[0].generate(CLTV_HEIGHT - 2)\n         self.nodeaddress = self.nodes[0].getnewaddress()\n-        self.last_block_time = int(time.time())\n-\n-        ''' 398 more version 3 blocks '''\n-        test_blocks = []\n-        for i in range(398):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 749 version 4 blocks '''\n-        test_blocks = []\n-        for i in range(749):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 4\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        '''\n-        Check that the new CLTV rules are not enforced in the 750th\n-        version 3 block.\n-        '''\n+\n+        self.log.info(\"Test that an invalid-according-to-CLTV transaction can still appear in a block\")\n+\n         spendtx = self.create_transaction(self.nodes[0],\n                 self.coinbase_blocks[0], self.nodeaddress, 1.0)\n         cltv_invalidate(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-        block.nVersion = 4\n+        tip = self.nodes[0].getbestblockhash()\n+        block_time = self.nodes[0].getblockheader(tip)['mediantime'] + 1\n+        block = create_block(int(tip, 16), create_coinbase(CLTV_HEIGHT - 1), block_time)\n+        block.nVersion = 3\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": null,
      "original_position": 148,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`block.solve()` calls `block.rehash()`, so there's no need for all of these explicit calls to `block.rehash()`. Up to you if you want to remove them all.",
      "created_at": "2017-06-29T09:48:44Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124756991",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124756991"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124757364",
      "pull_request_review_id": 47064576,
      "id": 124757364,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDc1NzM2NA==",
      "diff_hunk": "@@ -58,119 +66,79 @@ def create_transaction(self, node, coinbase, to_address, amount):\n         tx.deserialize(f)\n         return tx\n \n-    def get_tests(self):\n+    def run_test(self):\n+        node0 = BaseNode()\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+\n+        NetworkThread().start() # Start up network handling in another thread\n \n-        self.coinbase_blocks = self.nodes[0].generate(2)\n-        height = 3  # height of the next block to build\n-        self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n+        # wait_for_verack ensures that the P2P connection is fully up.\n+        node0.wait_for_verack()\n+\n+        self.log.info(\"Mining %d blocks\", CLTV_HEIGHT - 2)\n+        self.coinbase_blocks = self.nodes[0].generate(CLTV_HEIGHT - 2)\n         self.nodeaddress = self.nodes[0].getnewaddress()\n-        self.last_block_time = int(time.time())\n-\n-        ''' 398 more version 3 blocks '''\n-        test_blocks = []\n-        for i in range(398):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 749 version 4 blocks '''\n-        test_blocks = []\n-        for i in range(749):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 4\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        '''\n-        Check that the new CLTV rules are not enforced in the 750th\n-        version 3 block.\n-        '''\n+\n+        self.log.info(\"Test that an invalid-according-to-CLTV transaction can still appear in a block\")\n+\n         spendtx = self.create_transaction(self.nodes[0],\n                 self.coinbase_blocks[0], self.nodeaddress, 1.0)\n         cltv_invalidate(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-        block.nVersion = 4\n+        tip = self.nodes[0].getbestblockhash()\n+        block_time = self.nodes[0].getblockheader(tip)['mediantime'] + 1\n+        block = create_block(int(tip, 16), create_coinbase(CLTV_HEIGHT - 1), block_time)\n+        block.nVersion = 3\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()\n         block.solve()\n \n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])\n-\n-        ''' Mine 199 new version blocks on last valid tip '''\n-        test_blocks = []\n-        for i in range(199):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 4\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 1 old version block '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n+        node0.send_and_ping(msg_block(block))\n+        assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n+\n+        self.log.info(\"Test that blocks must now be at least version 4\")\n+        tip = block.sha256\n+        block_time += 1\n+        block = create_block(tip, create_coinbase(CLTV_HEIGHT), block_time)\n         block.nVersion = 3\n         block.rehash()\n         block.solve()\n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])\n+        node0.send_and_ping(msg_block(block))",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": 206,
      "original_position": 185,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added a comment to bipdersig-p2p.py about asserting on reject messages. Same comment applies here",
      "created_at": "2017-06-29T09:50:20Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124757364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124757364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124863431",
      "pull_request_review_id": 47195824,
      "id": 124863431,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDg2MzQzMQ==",
      "diff_hunk": "@@ -33,19 +26,34 @@ def cltv_invalidate(tx):\n     tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n                                   list(CScript(tx.vin[0].scriptSig)))\n \n+def cltv_validate(node, tx, height):\n+    '''Modify the signature in vin 0 of the tx to pass CLTV\n+    Prepends <height> CLTV DROP in the scriptSig, and sets\n+    the locktime to height'''\n+    tx.vin[0].nSequence = 0\n+    tx.nLockTime = height",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": 55,
      "original_position": 44,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "1cf60bb12574256364f78666e546bf4d5d7b1508",
      "in_reply_to_id": 124670279,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree that this would be nice, but left this as a todo for now.",
      "created_at": "2017-06-29T17:27:13Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124863431",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124863431"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124864359",
      "pull_request_review_id": 47196869,
      "id": 124864359,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDg2NDM1OQ==",
      "diff_hunk": "@@ -64,119 +56,74 @@ def create_transaction(self, node, coinbase, to_address, amount):\n         tx.deserialize(f)\n         return tx\n \n-    def get_tests(self):\n+    def run_test(self):\n+        node0 = BaseNode()\n+        connections = []\n+        connections.append(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], node0))\n+        node0.add_connection(connections[0])\n+        NetworkThread().start() # Start up network handling in another thread\n+\n+        # wait_for_verack ensures that the P2P connection is fully up.\n+        node0.wait_for_verack()\n \n-        self.coinbase_blocks = self.nodes[0].generate(2)\n-        height = 3  # height of the next block to build\n-        self.tip = int(\"0x\" + self.nodes[0].getbestblockhash(), 0)\n+        self.log.info(\"Mining %d blocks\", DERSIG_HEIGHT - 2)\n+        self.coinbase_blocks = self.nodes[0].generate(DERSIG_HEIGHT - 2)\n         self.nodeaddress = self.nodes[0].getnewaddress()\n-        self.last_block_time = int(time.time())\n-\n-        ''' 298 more version 2 blocks '''\n-        test_blocks = []\n-        for i in range(298):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 2\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 749 version 3 blocks '''\n-        test_blocks = []\n-        for i in range(749):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' \n-        Check that the new DERSIG rules are not enforced in the 750th\n-        version 3 block.\n-        '''\n+\n+        self.log.info(\"Test that a transaction with non-DER signature can still appear in a block\")\n+\n         spendtx = self.create_transaction(self.nodes[0],\n                 self.coinbase_blocks[0], self.nodeaddress, 1.0)\n         unDERify(spendtx)\n         spendtx.rehash()\n \n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-        block.nVersion = 3\n+        tip = self.nodes[0].getbestblockhash()\n+        block_time = self.nodes[0].getblockheader(tip)['mediantime'] + 1\n+        block = create_block(int(tip, 16), create_coinbase(DERSIG_HEIGHT - 1), block_time)\n+        block.nVersion = 2\n         block.vtx.append(spendtx)\n         block.hashMerkleRoot = block.calc_merkle_root()\n         block.rehash()\n         block.solve()\n \n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])       \n-\n-        ''' Mine 199 new version blocks on last valid tip '''\n-        test_blocks = []\n-        for i in range(199):\n-            block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n-            block.nVersion = 3\n-            block.rehash()\n-            block.solve()\n-            test_blocks.append([block, True])\n-            self.last_block_time += 1\n-            self.tip = block.sha256\n-            height += 1\n-        yield TestInstance(test_blocks, sync_every_block=False)\n-\n-        ''' Mine 1 old version block '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n+        node0.send_and_ping(msg_block(block))\n+        assert_equal(self.nodes[0].getbestblockhash(), block.hash)\n+\n+        self.log.info(\"Test that blocks must now be at least version 3\")\n+        tip = block.sha256\n+        block_time += 1\n+        block = create_block(tip, create_coinbase(DERSIG_HEIGHT), block_time)\n         block.nVersion = 2\n         block.rehash()\n         block.solve()\n-        self.last_block_time += 1\n-        self.tip = block.sha256\n-        height += 1\n-        yield TestInstance([[block, True]])\n+        node0.send_and_ping(msg_block(block))\n+        assert_equal(int(self.nodes[0].getbestblockhash(), 16), tip)\n \n-        ''' Mine 1 new version block '''\n-        block = create_block(self.tip, create_coinbase(height), self.last_block_time + 1)\n+        self.log.info(\"Test that transactions with non-DER signatures cannot appear in a block\")",
      "path": "test/functional/bipdersig-p2p.py",
      "position": null,
      "original_position": 170,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "06e3f006e499e3238905b92cbca563c69e170410",
      "in_reply_to_id": 124750421,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Default policy is to enforce DERSIG and CLTV on all transactions entering the mempool.  I suppose it might be nice to add a test that the policy is enforcing these rules, but in this test I set custom script flags so that I could show that a transaction is valid under script flags that don't include the soft fork, but invalid under the soft fork.\r\n\r\nIt might be nice to add a second node to these tests that uses default policy so that we can test that default policy is enforcing these script flags all the time, but I would prefer to save that for a future PR.",
      "created_at": "2017-06-29T17:31:09Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124864359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124864359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 108,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124865025",
      "pull_request_review_id": 47197633,
      "id": 124865025,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNDg2NTAyNQ==",
      "diff_hunk": "@@ -33,19 +26,34 @@ def cltv_invalidate(tx):\n     tx.vin[0].scriptSig = CScript([OP_1NEGATE, OP_CHECKLOCKTIMEVERIFY, OP_DROP] +\n                                   list(CScript(tx.vin[0].scriptSig)))\n \n+def cltv_validate(node, tx, height):\n+    '''Modify the signature in vin 0 of the tx to pass CLTV\n+    Prepends <height> CLTV DROP in the scriptSig, and sets\n+    the locktime to height'''\n+    tx.vin[0].nSequence = 0\n+    tx.nLockTime = height",
      "path": "test/functional/bip65-cltv-p2p.py",
      "position": 55,
      "original_position": 44,
      "commit_id": "4ccc12a54a217892bd4ccfd94c46052a11cdb3fb",
      "original_commit_id": "1cf60bb12574256364f78666e546bf4d5d7b1508",
      "in_reply_to_id": 124670279,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I did add a test that shows that the transaction is accepted to the node's mempool, which is using -promiscuousmempoolflags so that it's not enforcing the soft-fork rule.  So hopefully that helps assuage the concern that the transaction might be invalid for non-soft-fork related reasons.\r\n\r\n(Also, this helps sneak in a test that is useful post-#10192, by verifying that a block is invalid even if we may have cached validation success using a different set of flags.)",
      "created_at": "2017-06-29T17:33:55Z",
      "updated_at": "2017-07-06T14:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/10695#discussion_r124865025",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/124865025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10695"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    }
  ]
}