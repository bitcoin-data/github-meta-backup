{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007",
    "id": 561394050,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTYxMzk0MDUw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21007",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/21007.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/21007.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e017a913d0d78ef0766cf73586fe7a38488e1a26",
    "number": 21007,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "bitcoind: Add -daemonwait option to wait for initialization",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds a `-daemonwait` flag that does the same as `-daemon` except that it, from a user perspective, backgrounds the process only after initialization is complete. This is similar to the behaviour of some other software such as c-lightning.\r\n\r\nThis can be useful when the process launching bitcoind wants to guarantee that either the RPC server is running, or that initialization failed, before continuing. The exit code indicates the initialization result.\r\n\r\nThe use of the libc function `daemon()` is replaced by a custom implementation which is inspired by the [glibc implementation](https://github.com/lattera/glibc/blob/master/misc/daemon.c#L44), but which also creates a pipe from the child to the parent process for communication.\r\n\r\nAn additional advantage of having our own `daemon()` implementation is that no MACOS-specific pragmas are needed anymore to silence a deprecation warning.\r\n\r\nTODO:\r\n\r\n- [x] Factor out `token_read` and `token_write` to an utility, and use  them in `shutdown.cpp` as well—this is exactly the same kind of communication mechanism.\r\n\r\n    - [x] RAII-ify pipe endpoints.\r\n\r\n- [x] Improve granularity of the `configure.ac` checks. This currently  still checks for the function `daemon()` which makes no sense as  it's not used. It should check for individual functions such as\r\n  `fork()` and `setsid()` etc—the former being required, the second optional.\r\n\r\n- [-] ~~Signal propagation during initialization: if say, pressing Ctrl-C during `-daemonwait` it would be good to pass this SIGINT on to the child process instead of detaching the parent process and letting the child run free.~~ This is not necessary, see https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-769007341.\r\n\r\nFuture:\r\n\r\n- Consider if it makes sense to use this in the RPC tests (there would be no more need for \"is RPC ready\" polling loops). I think this is out of scope for this PR.",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2021-01-25T22:06:34Z",
    "updated_at": "2022-09-15T15:14:22Z",
    "closed_at": "2021-03-11T14:28:27Z",
    "mergeable_state": "unknown",
    "merged_at": "2021-03-11T14:28:27Z",
    "merge_commit_sha": "92cf3a22e3c79ce28c5cc9dcbc18348c43cbe4d9",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "laanwj:2021-01-daemonwait",
      "ref": "2021-01-daemonwait",
      "sha": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1750308,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNzUwMzA4",
        "name": "bitcoin",
        "full_name": "laanwj/bitcoin",
        "owner": {
          "login": "laanwj",
          "id": 126646,
          "node_id": "MDQ6VXNlcjEyNjY0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/laanwj",
          "html_url": "https://github.com/laanwj",
          "followers_url": "https://api.github.com/users/laanwj/followers",
          "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
          "organizations_url": "https://api.github.com/users/laanwj/orgs",
          "repos_url": "https://api.github.com/users/laanwj/repos",
          "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/laanwj/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/laanwj/bitcoin",
        "description": "Laanwj's Bitcoin Core fork - see README.md on \"readme\" branch",
        "fork": true,
        "url": "https://api.github.com/repos/laanwj/bitcoin",
        "archive_url": "https://api.github.com/repos/laanwj/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/laanwj/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/laanwj/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/laanwj/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/laanwj/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/laanwj/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/laanwj/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/laanwj/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/laanwj/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/laanwj/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/laanwj/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/laanwj/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/laanwj/bitcoin/events",
        "forks_url": "https://api.github.com/repos/laanwj/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/laanwj/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/laanwj/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/laanwj/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/laanwj/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/laanwj/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/laanwj/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/laanwj/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/laanwj/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/laanwj/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/laanwj/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/laanwj/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/laanwj/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/laanwj/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/laanwj/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/laanwj/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:laanwj/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/laanwj/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/laanwj/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/laanwj/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/laanwj/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/laanwj/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/laanwj/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/laanwj/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/laanwj/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/laanwj/bitcoin/hooks",
        "svn_url": "https://github.com/laanwj/bitcoin",
        "homepage": "",
        "forks_count": 19,
        "stargazers_count": 42,
        "watchers_count": 42,
        "size": 200945,
        "default_branch": "readme",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-02-07T09:13:04Z",
        "created_at": "2011-05-15T07:09:54Z",
        "updated_at": "2023-04-02T19:40:33Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b4d22654fe9e90093e643cb7beb896c48a274d47",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 34324,
        "stargazers_count": 69819,
        "watchers_count": 69819,
        "size": 233879,
        "default_branch": "master",
        "open_issues_count": 627,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-06-06T22:42:00Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-06-07T04:47:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 382,
    "deletions": 57,
    "changed_files": 9,
    "commits": 3,
    "review_comments": 57,
    "comments": 26
  },
  "events": [
    {
      "event": "labeled",
      "id": 4247933438,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQyNDc5MzM0Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4247933438",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-25T22:06:34Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 4247935218,
      "node_id": "MDE5OkNvbnZlcnRUb0RyYWZ0RXZlbnQ0MjQ3OTM1MjE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4247935218",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-25T22:07:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4247968576,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI0Nzk2ODU3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4247968576",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-25T22:16:48Z"
    },
    {
      "event": "commented",
      "id": 767155783,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzE1NTc4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767155783",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-25T22:29:47Z",
      "updated_at": "2021-01-25T22:29:47Z",
      "author_association": "MEMBER",
      "body": "> This can be useful when the process launching bitcoind wants to guarantee that either the RPC server is running, or that initialization failed, before continuing. The exit code indicates the initialization result.\r\n\r\nWhy such behavior couldn't be the default?",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-767155783",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "reviewed",
      "id": 575864170,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc1ODY0MTcw",
      "url": null,
      "actor": null,
      "commit_id": "f88aa35dfe4d824ae2ded5c9229bf5763c459e5e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-575864170",
      "submitted_at": "2021-01-25T22:32:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "commented",
      "id": 767157237,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzE1NzIzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767157237",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-25T22:33:10Z",
      "updated_at": "2021-01-25T22:33:10Z",
      "author_association": "MEMBER",
      "body": "> Why such behavior couldn't be the default?\r\n\r\nI didn't do that to avoid that discussion for now :slightly_smiling_face: . It could always be made default at some point in the future if that's what people want.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-767157237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 767157806,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzE1NzgwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767157806",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-25T22:34:36Z",
      "updated_at": "2021-01-25T22:34:36Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-767157806",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 767235287,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzIzNTI4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767235287",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T02:08:44Z",
      "updated_at": "2021-03-11T07:39:39Z",
      "author_association": "MEMBER",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21366 (refactor: replace util::Ref with std::any (C++17) by theStack)\n* #19471 (util: Make default arg values more specific by hebasto)\n* #19461 (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* #19460 (multiprocess: Add bitcoin-wallet -ipcconnect option by ryanofsky)\n* #19160 (multiprocess: Add basic spawn and IPC support by ryanofsky)\n* #10102 ([experimental] Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-767235287",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 767421905,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2NzQyMTkwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767421905",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T09:37:16Z",
      "updated_at": "2021-01-26T09:37:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-767421905",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4251646739,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI1MTY0NjczOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4251646739",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T16:43:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4252217806,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI1MjIxNzgwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4252217806",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T18:53:31Z"
    },
    {
      "event": "commented",
      "id": 767756333,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2Nzc1NjMzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/767756333",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T18:57:30Z",
      "updated_at": "2021-01-26T18:57:30Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-767756333",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4252302631,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDI1MjMwMjYzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4252302631",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-26T19:12:06Z"
    },
    {
      "event": "reviewed",
      "id": 577222489,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3MjIyNDg5",
      "url": null,
      "actor": null,
      "commit_id": "7482634cd455c6d25287e52795c2ac78cb1d44b0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested ACK 7482634cd455c6d25287e52795c2ac78cb1d44b0 on macos.\r\n\r\nWith the following diff\r\n```diff\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -780,6 +780,9 @@ static bool InitSanityCheck()\r\n\r\n static bool AppInitServers(const util::Ref& context, NodeContext& node)\r\n {\r\n+    sleep(5);\r\n+    return false;\r\n+\r\n     const ArgsManager& args = *Assert(node.args);\r\n     RPCServer::OnStarted(&OnRPCStarted);\r\n     RPCServer::OnStopped(&OnRPCStopped);\r\n```\r\nOn master\r\n```\r\n./src/bitcoind -regtest -daemon  && echo running\r\nBitcoin Core starting\r\nrunning\r\n```\r\nBut it's not running :trollface: \r\n\r\nAnd with this change:\r\n```\r\n./src/bitcoind -regtest -daemonwait && echo running\r\nBitcoin Core starting\r\nError during initializaton - check debug.log for details\r\n```\r\n\r\nGood stuff, still have to review code change.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-577222489",
      "submitted_at": "2021-01-27T11:06:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "commented",
      "id": 768302433,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODMwMjQzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768302433",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T13:57:32Z",
      "updated_at": "2021-01-27T13:57:32Z",
      "author_association": "MEMBER",
      "body": "Thanks for testing! FWIW what I use to force a failure in `AppInitMain` is\r\n```\r\nsrc/bitcoind -regtest -daemonwait -pid=/invalid/path\r\n```\r\n(pid is, by definition, only written in the daemon process)\r\nBut that works too :smile: ",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-768302433",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 768305065,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODMwNTA2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768305065",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T14:01:26Z",
      "updated_at": "2021-01-27T14:01:26Z",
      "author_association": "MEMBER",
      "body": "> (pid is, by definition, only written in the daemon process)\r\n\r\nNot sure if this is true in the master branch.\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-768305065",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 768311235,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODMxMTIzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768311235",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T14:11:04Z",
      "updated_at": "2021-01-27T14:11:04Z",
      "author_association": "MEMBER",
      "body": "> Not sure if this is true in the master branch.\r\n\r\nI am sure of this. I did not change this at all, and besides, it would be a bug otherwise. After all, what use is the temporary parent process' PID.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-768311235",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 768315306,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODMxNTMwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768315306",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T14:17:39Z",
      "updated_at": "2021-01-27T14:17:39Z",
      "author_association": "MEMBER",
      "body": "> ... it would be a bug otherwise.\r\n\r\n```\r\nsrc/bitcoind -daemon=0\r\n```\r\ncreates `bitcoind.pid`",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-768315306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 768319284,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODMxOTI4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768319284",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T14:24:04Z",
      "updated_at": "2021-01-27T14:25:12Z",
      "author_association": "MEMBER",
      "body": "> creates bitcoind.pid\r\n\r\nThat's not my point. My point is that it creates the PID file *after* daemonizing (when daemon is enabled). Sure, it also creates the PID file otherwise, that's okay. The only thing I was trying to say is that the option can be used for testing `-daemonwait` because it fails after daemonizing, nothing more.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-768319284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "reviewed",
      "id": 577614370,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3NjE0Mzcw",
      "url": null,
      "actor": null,
      "commit_id": "7482634cd455c6d25287e52795c2ac78cb1d44b0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested at 7482634cd455c6d25287e52795c2ac78cb1d44b0, debug-builds cleanly for me and seems to behave as expected.\r\n\r\ninvalid path\r\n```\r\n$ ./src/bitcoind -signet -daemonwait -pid=/invalid/path\r\nBitcoin Core starting\r\nError during initializaton - check debug.log for details\r\n```\r\n\r\n(this particular case does not log anything to the debug log)\r\n\r\n\r\nhappy path\r\n```\r\n$ ./src/bitcoind -signet -daemonwait ; ./src/bitcoin-cli -signet stop\r\nBitcoin Core starting\r\nBitcoin Core stopping\r\n```\r\ndebug log is as expected\r\n```\r\n2021-01-27T17:49:33Z Command-line arg: daemonwait=\"\"\r\n2021-01-27T17:49:33Z Command-line arg: signet=\"\"\r\n2021-01-27T17:49:33Z Using at most 125 automatic connections (1024 file descriptors available)\r\n...\r\n2021-01-27T17:49:35Z init message: Done loading\r\n2021-01-27T17:49:35Z dnsseed thread start\r\n2021-01-27T17:49:35Z Waiting 11 seconds before querying DNS seeds.\r\n2021-01-27T17:49:35Z tor: Thread interrupt\r\n2021-01-27T17:49:35Z addcon thread exit\r\n...\r\n\r\n2021-01-27T17:49:36Z Shutdown: done\r\n```\r\npassing `-daemonwait=1` behaves (and logs) as expected as well\r\n\r\nCtrl-C works with a second or two of delay; it seems to not take effect until the wait is released but I'm not sure.\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-577614370",
      "submitted_at": "2021-01-27T18:01:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "commented",
      "id": 768474737,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODQ3NDczNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768474737",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T18:13:08Z",
      "updated_at": "2021-01-27T18:13:08Z",
      "author_association": "MEMBER",
      "body": "Thanks for testing @jonatack ,\r\n\r\n> (this particular case does not log anything to the debug log)\r\n\r\nThat it doesn't log anything is peculiar ! (but unrelated to this PR, I guess, the same problem would happen with `-daemon`, it would just mysteriously exit in the background).\r\n\r\n> Ctrl-C works with a second or two of delay; it seems to not take effect until the wait is released but I'm not sure.\r\n\r\nIt does respond to it? That's interesting. I thought the child process wouldn't get the SIGINT signal at all (hence my remaining TODO). That it doesn't react immediately is normal, It can't interrupt during verification of a block, for example. it's the same when interrupting a non-daemon startup.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-768474737",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "mentioned",
      "id": 4257288290,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDI1NzI4ODI5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4257288290",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T18:13:08Z"
    },
    {
      "event": "subscribed",
      "id": 4257288291,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQyNTcyODgyOTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4257288291",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T18:13:08Z"
    },
    {
      "event": "commented",
      "id": 768553517,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODU1MzUxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/768553517",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-27T20:23:43Z",
      "updated_at": "2021-01-27T20:23:43Z",
      "author_association": "MEMBER",
      "body": "Tested with testnet, which is much slower than signet for me (95 sec vs 3)\r\n```\r\n$ time ./src/bitcoind -testnet -daemonwait=1 && ./src/bitcoin-cli -testnet stop\r\nBitcoin Core starting\r\n\r\nreal\t1m35.265s\r\nuser\t0m0.137s\r\nsys\t0m0.015s\r\nBitcoin Core stopping\r\n$\r\n```\r\n\r\nCtrl-C right after launching interrupts successfully after the same time period elapses \r\n```\r\n$ time ./src/bitcoind -testnet -daemonwait=1\r\nBitcoin Core starting\r\n^C\r\nreal\t1m39.239s\r\nuser\t0m0.130s\r\nsys\t0m0.022s\r\n$\r\n```\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-768553517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 769007341,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTAwNzM0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/769007341",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T12:01:54Z",
      "updated_at": "2021-01-28T12:04:18Z",
      "author_association": "MEMBER",
      "body": "I've looked into this a bit.\r\n\r\nIt looks like that until the parent process exits, the child process is still attached to the terminal (or at least, shell session), so it still gets the `SIGINT` from Ctrl-C directly. Even though it did `dup2` `stdin/stdout/stderr` to `/dev/null` already.\r\n\r\nSo there appears to be no need to do explicit signal propagation. That's neat. I'll remove that TODO and open this for review.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-769007341",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "ready_for_review",
      "id": 4260728414,
      "node_id": "MDE5OlJlYWR5Rm9yUmV2aWV3RXZlbnQ0MjYwNzI4NDE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4260728414",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-28T12:03:25Z"
    },
    {
      "event": "reviewed",
      "id": 581839115,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxODM5MTE1",
      "url": null,
      "actor": null,
      "commit_id": "0ef284ba1a4b942654552e4335225b6c2d34420c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Nice idea of introducing a RAII TokenPipe! This reduces the amount of low-level system calls / error handling code in the bitcoind module, looks much cleaner now.\r\nLeft some review comments below, mostly nitpicking. Will review the the third commit (i.e. the actual introduction of `-daemonwait`) more in detail and also to test it on the weekend.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-581839115",
      "submitted_at": "2021-02-02T23:40:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4337814179,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMzNzgxNDE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337814179",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:05:35Z"
    },
    {
      "event": "commented",
      "id": 780054109,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MDA1NDEwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/780054109",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:06:19Z",
      "updated_at": "2021-02-16T19:09:09Z",
      "author_association": "MEMBER",
      "body": "Addressed @theStack's comments:\r\n- Added `TokenPipe::create()` that returns an optional (and make `TokenPipe` movable, and its constructor private), instead of the awkward incomplete construction.\r\n- Call `Close()` in destructor instead of duplicating code.\r\n- Consistently pass int to `TokenWrite`.\r\n- Fixed typos in comments.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-780054109",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "mentioned",
      "id": 4337816873,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDMzNzgxNjg3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337816873",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:06:19Z"
    },
    {
      "event": "subscribed",
      "id": 4337816875,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzMzc4MTY4NzU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337816875",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:06:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4337824183,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDMzNzgyNDE4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4337824183",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-16T19:08:20Z"
    },
    {
      "event": "reviewed",
      "id": 592705254,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkyNzA1MjU0",
      "url": null,
      "actor": null,
      "commit_id": "581f48d818e17bebe75e24c9d72029e4a0f2e8af",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Finished reviewing the code, LGTM. Left some comments, mostly nits and typos again.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-592705254",
      "submitted_at": "2021-02-17T23:35:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4346447570,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM0NjQ0NzU3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4346447570",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-18T12:17:32Z"
    },
    {
      "event": "commented",
      "id": 781303729,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTMwMzcyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/781303729",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-18T12:18:10Z",
      "updated_at": "2021-02-18T12:18:10Z",
      "author_association": "MEMBER",
      "body": "Thanks again for the review @theStack \r\nPushed https://github.com/bitcoin/bitcoin/compare/48858432bc7ef3e02685b693954173e722bae4e5..652d4e4382e8964db3e1ba6e4bb8247daad7ae64",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-781303729",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "mentioned",
      "id": 4346450484,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDM0NjQ1MDQ4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4346450484",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-18T12:18:10Z"
    },
    {
      "event": "subscribed",
      "id": 4346450487,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQzNDY0NTA0ODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4346450487",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-18T12:18:10Z"
    },
    {
      "event": "reviewed",
      "id": 594799464,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0Nzk5NDY0",
      "url": null,
      "actor": null,
      "commit_id": "652d4e4382e8964db3e1ba6e4bb8247daad7ae64",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested ACK 652d4e4382.\r\n\r\nShould disallow conflict options like `-daemon=false -daemonwait=true`?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-594799464",
      "submitted_at": "2021-02-21T01:54:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "commented",
      "id": 783345611,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzM0NTYxMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783345611",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-22T12:40:02Z",
      "updated_at": "2021-02-22T12:40:02Z",
      "author_association": "MEMBER",
      "body": "Thanks for testing!\r\n\r\n> Should disallow conflict options like -daemon=false -daemonwait=true?\r\n\r\nI'm not sure they're really conflicting (\"enable wait-for-daemon, but don't daemonize\"), though pointless, I see no reason to add a special error message for this.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-783345611",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 783351622,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzM1MTYyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783351622",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-22T12:51:46Z",
      "updated_at": "2021-02-22T12:51:46Z",
      "author_association": "MEMBER",
      "body": "My point is with `-daemon=false -daemonwait=true` it will daemonize.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-783351622",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 783363821,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzM2MzgyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/783363821",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-22T13:12:27Z",
      "updated_at": "2021-02-22T13:13:02Z",
      "author_association": "MEMBER",
      "body": "> My point is with -daemon=false -daemonwait=true it will daemonize.\r\n\r\nOh that's intentional, it means that you can just write `bitcoind -daemonwait` and it will work instead of having to do `bitcoind -daemon -daemonwait`.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-783363821",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "referenced",
      "id": 4366601302,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNjY2MDEzMDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4366601302",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2e8116149ca45316e7cdd8ed25ea9a130afd0130",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e8116149ca45316e7cdd8ed25ea9a130afd0130",
      "created_at": "2021-02-23T17:57:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4366650141,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDM2NjY1MDE0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4366650141",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-23T18:07:44Z"
    },
    {
      "event": "commented",
      "id": 784396850,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDM5Njg1MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/784396850",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-02-23T18:07:48Z",
      "updated_at": "2021-02-23T18:07:48Z",
      "author_association": "MEMBER",
      "body": "Rebased for  #21250.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-784396850",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "referenced",
      "id": 4368215708,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQzNjgyMTU3MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4368215708",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0939a207f69a6e7e5a0901d4857141679e29c1c6",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/0939a207f69a6e7e5a0901d4857141679e29c1c6",
      "created_at": "2021-02-24T01:13:02Z"
    },
    {
      "event": "reviewed",
      "id": 599196324,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5MTk2MzI0",
      "url": null,
      "actor": null,
      "commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Tested ACK 8e6d339434fdb6cfe5057b60f89ce08101e2eeb0 :beers:\r\n(ran on Debian GNU/Linux bullseye/sid, Kernel 4.19.0)",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-599196324",
      "submitted_at": "2021-02-26T02:02:29Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "reviewed",
      "id": 600609252,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwNjA5MjUy",
      "url": null,
      "actor": null,
      "commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-600609252",
      "submitted_at": "2021-03-01T11:30:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "reviewed",
      "id": 600639629,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAwNjM5NjI5",
      "url": null,
      "actor": null,
      "commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 8e6d339434fdb6cfe5057b60f89ce08101e2eeb0\r\n\r\nSome nit suggestions below, feel free to ignore.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-600639629",
      "submitted_at": "2021-03-01T11:56:33Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "reviewed",
      "id": 601023934,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxMDIzOTM0",
      "url": null,
      "actor": null,
      "commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK 8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-601023934",
      "submitted_at": "2021-03-01T18:25:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4401872388,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwMTg3MjM4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4401872388",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T12:58:00Z"
    },
    {
      "event": "commented",
      "id": 789696470,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTY5NjQ3MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789696470",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T12:58:37Z",
      "updated_at": "2021-03-03T12:58:37Z",
      "author_association": "MEMBER",
      "body": "@hebasto @jonatack @ajtowns\r\nThanks for the reviews. I have addressed your comments.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-789696470",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "mentioned",
      "id": 4401875114,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQwMTg3NTExNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4401875114",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T12:58:37Z"
    },
    {
      "event": "subscribed",
      "id": 4401875118,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MDE4NzUxMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4401875118",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T12:58:37Z"
    },
    {
      "event": "mentioned",
      "id": 4401875123,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQwMTg3NTEyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4401875123",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T12:58:37Z"
    },
    {
      "event": "subscribed",
      "id": 4401875130,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MDE4NzUxMzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4401875130",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T12:58:37Z"
    },
    {
      "event": "mentioned",
      "id": 4401875134,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQwMTg3NTEzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4401875134",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T12:58:37Z"
    },
    {
      "event": "subscribed",
      "id": 4401875137,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MDE4NzUxMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4401875137",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-03T12:58:37Z"
    },
    {
      "event": "reviewed",
      "id": 603089570,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAzMDg5NTcw",
      "url": null,
      "actor": null,
      "commit_id": "b83b386c6e03a57f93110dfefdbbf515e62b5753",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK b83b386c6e03a57f93110dfefdbbf515e62b5753 reviewed diff/code, built/tested\r\n\r\nSome nits if you retouch.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#pullrequestreview-603089570",
      "submitted_at": "2021-03-03T16:36:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4408252539,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwODI1MjUzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4408252539",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:06:59Z"
    },
    {
      "event": "commented",
      "id": 790647321,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDY0NzMyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/790647321",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:14:04Z",
      "updated_at": "2021-03-04T14:14:04Z",
      "author_association": "MEMBER",
      "body": "Thanks @jonatack, have addressed the comments and re-pushed\r\n[b83b386c6e03a57f93110dfefdbbf515e62b5753..9a09a494e59b61d7a185da44f9c6736cb536c0c1](https://github.com/bitcoin/bitcoin/compare/b83b386c6e03a57f93110dfefdbbf515e62b5753..9a09a494e59b61d7a185da44f9c6736cb536c0c1)",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-790647321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "mentioned",
      "id": 4408289244,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDQwODI4OTI0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4408289244",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:14:04Z"
    },
    {
      "event": "subscribed",
      "id": 4408289247,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQ0MDgyODkyNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4408289247",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T14:14:04Z"
    },
    {
      "event": "commented",
      "id": 790731440,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDczMTQ0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/790731440",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T16:09:36Z",
      "updated_at": "2021-03-04T16:09:36Z",
      "author_association": "MEMBER",
      "body": "re-ACK 9a09a494e59b61d7a185da44f9c6736cb536c0c1",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-790731440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTJmNzQ2YThmZmEyNjViNjg3N2JlZGJiZTIxZmNiYjM5MmYxNTE2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/612f746a8ffa265b6877bedbbe21fcbb392f1516",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/612f746a8ffa265b6877bedbbe21fcbb392f1516",
      "tree": {
        "sha": "0d9f1e994cd718b698ee03bd63be422d268129cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d9f1e994cd718b698ee03bd63be422d268129cc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e8116149ca45316e7cdd8ed25ea9a130afd0130",
          "sha": "2e8116149ca45316e7cdd8ed25ea9a130afd0130",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2e8116149ca45316e7cdd8ed25ea9a130afd0130"
        }
      ],
      "message": "util: Add RAII TokenPipe",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-03-04T17:24:00Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-26T18:36:41Z"
      },
      "sha": "612f746a8ffa265b6877bedbbe21fcbb392f1516"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2U2ZmRlZTZkMzlkM2Y1MmRlYzQyMWI0OGEwYWM4YmFkNTAwNmY3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3e6fdee6d39d3f52dec421b48a0ac8bad5006f7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c3e6fdee6d39d3f52dec421b48a0ac8bad5006f7",
      "tree": {
        "sha": "1662d3f5e07cc9d044834cdc8528e42d67ecc907",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1662d3f5e07cc9d044834cdc8528e42d67ecc907"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/612f746a8ffa265b6877bedbbe21fcbb392f1516",
          "sha": "612f746a8ffa265b6877bedbbe21fcbb392f1516",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/612f746a8ffa265b6877bedbbe21fcbb392f1516"
        }
      ],
      "message": "shutdown: Use RAII TokenPipe in shutdown",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-03-04T17:24:00Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-26T18:34:47Z"
      },
      "sha": "c3e6fdee6d39d3f52dec421b48a0ac8bad5006f7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDE3YTkxM2QwZDc4ZWYwNzY2Y2Y3MzU4NmZlN2EzODQ4OGUxYTI2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "tree": {
        "sha": "f5d47c98db9c0c32c59a0f08aaeb6aaed75dbe70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5d47c98db9c0c32c59a0f08aaeb6aaed75dbe70"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3e6fdee6d39d3f52dec421b48a0ac8bad5006f7",
          "sha": "c3e6fdee6d39d3f52dec421b48a0ac8bad5006f7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c3e6fdee6d39d3f52dec421b48a0ac8bad5006f7"
        }
      ],
      "message": "bitcoind: Add -daemonwait option to wait for initialization\n\nThis adds a `-daemonwait` flag that does the same as `-daemon` except\nit, from a user perspective, backgrounds the process only after\ninitialization is complete.\n\nThis can be useful when the process launching bitcoind wants to\nguarantee that either the RPC server is running, or that initialization\nfailed, before continuing. The exit code indicates the initialization\nresult.\n\nThis replaces the use of the libc function `daemon()` by a custom\nimplementation which is inspired by the glibc implementation, but also\ncreates a pipe from the child to the parent process for communication.\n\nAn additional advantage of having our own `daemon()` implementation is\nthat no MACOS-specific pragmas are needed anymore to silence a\ndeprecation warning.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-03-04T17:24:00Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2021-01-25T21:45:54Z"
      },
      "sha": "e017a913d0d78ef0766cf73586fe7a38488e1a26"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4409339667,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDQwOTMzOTY2Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4409339667",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T17:24:24Z"
    },
    {
      "event": "commented",
      "id": 790790596,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDc5MDU5Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/790790596",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T17:27:31Z",
      "updated_at": "2021-03-04T17:27:31Z",
      "author_association": "MEMBER",
      "body": "Repushed for an ordering issue in `tokenpipe.cpp` reported out-of-band, the implementation file now has same class order as the header\r\n[9a09a494e59b61d7a185da44f9c6736cb536c0c1..e017a913d0d78ef0766cf73586fe7a38488e1a26](https://github.com/bitcoin/bitcoin/compare/9a09a494e59b61d7a185da44f9c6736cb536c0c1..e017a913d0d78ef0766cf73586fe7a38488e1a26)\r\n\r\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-790790596",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "commented",
      "id": 790828126,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDgyODEyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/790828126",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-04T18:23:29Z",
      "updated_at": "2021-03-04T18:23:29Z",
      "author_association": "MEMBER",
      "body": "Tested ACK e017a913d0d78ef0766cf73586fe7a38488e1a26 checked change since previous review is move-only\r\n\r\n```\r\n$ time ./src/bitcoind -testnet -daemonwait=1 && ./src/bitcoin-cli -testnet stop\r\nBitcoin Core starting\r\n\r\nreal\t1m4.095s\r\nuser\t0m0.132s\r\nsys\t0m0.027s\r\nBitcoin Core stopping\r\n\r\n$ time ./src/bitcoind -testnet -daemonwait=1\r\nBitcoin Core starting\r\n^C \r\nreal\t1m5.311s\r\nuser\t0m0.047s\r\nsys\t0m0.023s\r\n```\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-790828126",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    },
    {
      "event": "merged",
      "id": 4445256215,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDQ0NTI1NjIxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4445256215",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "92cf3a22e3c79ce28c5cc9dcbc18348c43cbe4d9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92cf3a22e3c79ce28c5cc9dcbc18348c43cbe4d9",
      "created_at": "2021-03-11T14:28:27Z"
    },
    {
      "event": "closed",
      "id": 4445256251,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDQ0NTI1NjI1MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4445256251",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T14:28:28Z"
    },
    {
      "event": "labeled",
      "id": 4445259733,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQ0NDUyNTk3MzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4445259733",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-03-11T14:28:54Z",
      "label": {
        "name": "Needs release note",
        "color": "d2db6d"
      }
    },
    {
      "event": "referenced",
      "id": 4445809431,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0NDU4MDk0MzE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4445809431",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "51927eeb04362602ae07ee5cc8ad66099d229e5d",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/51927eeb04362602ae07ee5cc8ad66099d229e5d",
      "created_at": "2021-03-11T15:42:55Z"
    },
    {
      "event": "referenced",
      "id": 4464791429,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0NjQ3OTE0Mjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4464791429",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "01bb3afb5197cffec6bfe324a2efc314ddfdca57",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01bb3afb5197cffec6bfe324a2efc314ddfdca57",
      "created_at": "2021-03-16T14:11:03Z"
    },
    {
      "event": "referenced",
      "id": 4465461748,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQ0NjU0NjE3NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4465461748",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "24c1d9100604377b332de923b7b62232a7d0196f",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/24c1d9100604377b332de923b7b62232a7d0196f",
      "created_at": "2021-03-16T15:58:33Z"
    },
    {
      "event": "referenced",
      "id": 5321350360,
      "node_id": "REFE_lADOABII584vT9TvzwAAAAE9LVzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5321350360",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f6a2ab5365f9767c415d423f0be83de3c0400d8c",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/f6a2ab5365f9767c415d423f0be83de3c0400d8c",
      "created_at": "2021-09-17T20:02:25Z"
    },
    {
      "event": "referenced",
      "id": 5893137993,
      "node_id": "REFE_lADOABII584vT9TvzwAAAAFfQiZJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/5893137993",
      "actor": {
        "login": "whitslack",
        "id": 797782,
        "node_id": "MDQ6VXNlcjc5Nzc4Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/797782?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/whitslack",
        "html_url": "https://github.com/whitslack",
        "followers_url": "https://api.github.com/users/whitslack/followers",
        "following_url": "https://api.github.com/users/whitslack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/whitslack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/whitslack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/whitslack/subscriptions",
        "organizations_url": "https://api.github.com/users/whitslack/orgs",
        "repos_url": "https://api.github.com/users/whitslack/repos",
        "events_url": "https://api.github.com/users/whitslack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/whitslack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "49287e0ab4ad51d7a40cb9b6990a34a218b58c98",
      "commit_url": "https://api.github.com/repos/whitslack/bitcoin/commits/49287e0ab4ad51d7a40cb9b6990a34a218b58c98",
      "created_at": "2022-01-14T08:27:16Z"
    },
    {
      "event": "locked",
      "id": 7199029577,
      "node_id": "LOE_lADOABII584vT9TvzwAAAAGtGHlJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199029577",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:06:18Z",
      "lock_reason": "resolved"
    },
    {
      "event": "unlabeled",
      "id": 7395997203,
      "node_id": "UNLE_lADOABII584vT9TvzwAAAAG41fYT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7395997203",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T15:14:16Z",
      "label": {
        "name": "Needs release note",
        "color": "d2db6d"
      }
    },
    {
      "event": "commented",
      "id": 1248244044,
      "node_id": "IC_kwDOABII585KZrFM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1248244044",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T15:14:22Z",
      "updated_at": "2022-09-15T15:14:22Z",
      "author_association": "MEMBER",
      "body": "This change was part of 22.0, removing \"Needs release note\".",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#issuecomment-1248244044",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21007"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564088898",
      "pull_request_review_id": 575864170,
      "id": 564088898,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDA4ODg5OA==",
      "diff_hunk": "@@ -577,7 +577,8 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n \n #if HAVE_DECL_DAEMON\n-    argsman.AddArg(\"-daemon\", \"Run in the background as a daemon and accept commands\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-daemon\", \"Run in the background as a daemon and accept commands (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-daemonwait\", \"Wait for initialization to be finished before exiting. This implies -daemon (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "f88aa35dfe4d824ae2ded5c9229bf5763c459e5e",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/`ALLOW_ANY`/`ALLOW_BOOL`/ in both lines?",
      "created_at": "2021-01-25T22:32:46Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r564088898",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564088898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 580,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564296569",
      "pull_request_review_id": 576079338,
      "id": 564296569,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDI5NjU2OQ==",
      "diff_hunk": "@@ -577,7 +577,8 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-server\", \"Accept command line and JSON-RPC commands\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n \n #if HAVE_DECL_DAEMON\n-    argsman.AddArg(\"-daemon\", \"Run in the background as a daemon and accept commands\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-daemon\", \"Run in the background as a daemon and accept commands (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-daemonwait\", \"Wait for initialization to be finished before exiting. This implies -daemon (default: 0)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "f88aa35dfe4d824ae2ded5c9229bf5763c459e5e",
      "in_reply_to_id": 564088898,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good idea!\r\nI'm also surprised there are no DEFAULT_XXX constants here.",
      "created_at": "2021-01-26T07:28:09Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r564296569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/564296569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 580,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 581,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568983015",
      "pull_request_review_id": 581839115,
      "id": 568983015,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk4MzAxNQ==",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <unistd.h>\n+\n+TokenPipe::TokenPipe()\n+{\n+#if HAVE_O_CLOEXEC\n+    if (pipe2(m_fds, O_CLOEXEC) != 0) {\n+        return;",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "0ef284ba1a4b942654552e4335225b6c2d34420c",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm, it's always a bit frustrating to see that within a C++ ctor it's impossible to directly signal to the caller that the construction failed (I had to think about this article: https://250bpm.com/blog:4/). Since we can't do anything immediately anyways if there was a failure, I guess the pipe{2} return value checks could simply be dropped?",
      "created_at": "2021-02-02T22:44:16Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r568983015",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568983015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568985945",
      "pull_request_review_id": 581839115,
      "id": 568985945,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk4NTk0NQ==",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <unistd.h>\n+\n+TokenPipe::TokenPipe()\n+{\n+#if HAVE_O_CLOEXEC\n+    if (pipe2(m_fds, O_CLOEXEC) != 0) {\n+        return;\n+    }\n+#else\n+    if (pipe(m_fds) != 0) {\n+        return;\n+    }\n+#endif\n+}\n+\n+TokenPipe::~TokenPipe()\n+{\n+    if (m_fds[0] != -1) close(m_fds[0]);\n+    if (m_fds[1] != -1) close(m_fds[1]);\n+}\n+\n+TokenPipeEnd TokenPipe::ReadEnd()\n+{\n+    TokenPipeEnd res(m_fds[0]);\n+    m_fds[0] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd TokenPipe::WriteEnd()\n+{\n+    TokenPipeEnd res(m_fds[1]);\n+    m_fds[1] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd::TokenPipeEnd(int fd):\n+    m_fd(fd)\n+{\n+}\n+\n+TokenPipeEnd::~TokenPipeEnd()\n+{\n+    if (m_fd != -1) close(m_fd);",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "0ef284ba1a4b942654552e4335225b6c2d34420c",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could simply call the `Close()` method here to deduplicate? (Only drawback: it unnecessarily sets m_fd to -1 before destroying the object.)",
      "created_at": "2021-02-02T22:50:21Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r568985945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568985945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568990330",
      "pull_request_review_id": 581839115,
      "id": 568990330,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk5MDMzMA==",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <stdint.h>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return valus constants for TokenWrite and TokenRead. */",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 20,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "0ef284ba1a4b942654552e4335225b6c2d34420c",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    /** Return value constants for TokenWrite and TokenRead. */\r\n```",
      "created_at": "2021-02-02T22:59:43Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r568990330",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568990330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568990947",
      "pull_request_review_id": 581839115,
      "id": 568990947,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk5MDk0Nw==",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <stdint.h>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return valus constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Read token from file descriptor.",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 26,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "0ef284ba1a4b942654552e4335225b6c2d34420c",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    /** Write token to file descriptor.\r\n```",
      "created_at": "2021-02-02T23:01:06Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r568990947",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568990947"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568997766",
      "pull_request_review_id": 581839115,
      "id": 568997766,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODk5Nzc2Ng==",
      "diff_hunk": "@@ -105,24 +187,34 @@ static bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             return false;\n         }\n-        if (args.GetBoolArg(\"-daemon\", false)) {\n-#if HAVE_DECL_DAEMON\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n-#endif\n+        if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+#if HAVE_DECL_FORK\n             tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n-            if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n-                return InitError(Untranslated(strprintf(\"daemon() failed: %s\\n\", strerror(errno))));\n+            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\n+                case 0: // Child: continue.\n+                    // If -daemonwait is not enabled, immediately send a success token the parent.\n+                    if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+                        daemon_ep.TokenWrite(true);",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "7482634cd455c6d25287e52795c2ac78cb1d44b0",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, feel free to ignore: maybe avoid implicit casting from bool to uint8_t and use literal 1 (or some character literal) as success token instead? I think as it is this could be potentially confusing for readers (also the counterpart `TokenRead` call below). As a drawback though, `-daemonwait` code gets longer: `daemon_ep.TokenWrite(fRet ? 1 : 0)`.",
      "created_at": "2021-02-02T23:17:20Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r568997766",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/568997766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569717901",
      "pull_request_review_id": 582762626,
      "id": 569717901,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTcxNzkwMQ==",
      "diff_hunk": "@@ -105,24 +187,34 @@ static bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             return false;\n         }\n-        if (args.GetBoolArg(\"-daemon\", false)) {\n-#if HAVE_DECL_DAEMON\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n-#endif\n+        if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+#if HAVE_DECL_FORK\n             tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n-            if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n-                return InitError(Untranslated(strprintf(\"daemon() failed: %s\\n\", strerror(errno))));\n+            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\n+                case 0: // Child: continue.\n+                    // If -daemonwait is not enabled, immediately send a success token the parent.\n+                    if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+                        daemon_ep.TokenWrite(true);",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 124,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "7482634cd455c6d25287e52795c2ac78cb1d44b0",
      "in_reply_to_id": 568997766,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~~Agree, it's probably better to pass some constant.~~\r\n~~Or even just fRet as-is? It's an integer after all.~~\r\nNever mind, i was already doing that, just turned this into a value.",
      "created_at": "2021-02-03T20:14:41Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r569717901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569717901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569721308",
      "pull_request_review_id": 582766865,
      "id": 569721308,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTcyMTMwOA==",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <unistd.h>\n+\n+TokenPipe::TokenPipe()\n+{\n+#if HAVE_O_CLOEXEC\n+    if (pipe2(m_fds, O_CLOEXEC) != 0) {\n+        return;",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "0ef284ba1a4b942654552e4335225b6c2d34420c",
      "in_reply_to_id": 568983015,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I was first thinking of using the rust trick: to have a private constructor, and a static public factory function on the class that returns a `std::optional<Pipe>`. But it would complicate some things. E.g. currently this type is not movable at all, it felt like overkill to implement that just for initialization, but maybe it's worth it if we can make it a standard idiom.\r\n\r\nHaving to check `complete()` as a mandatory step feels slightly ugly too, after all.",
      "created_at": "2021-02-03T20:20:25Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r569721308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569721308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569724510",
      "pull_request_review_id": 582771069,
      "id": 569724510,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTcyNDUxMA==",
      "diff_hunk": "@@ -0,0 +1,98 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <unistd.h>\n+\n+TokenPipe::TokenPipe()\n+{\n+#if HAVE_O_CLOEXEC\n+    if (pipe2(m_fds, O_CLOEXEC) != 0) {\n+        return;\n+    }\n+#else\n+    if (pipe(m_fds) != 0) {\n+        return;\n+    }\n+#endif\n+}\n+\n+TokenPipe::~TokenPipe()\n+{\n+    if (m_fds[0] != -1) close(m_fds[0]);\n+    if (m_fds[1] != -1) close(m_fds[1]);\n+}\n+\n+TokenPipeEnd TokenPipe::ReadEnd()\n+{\n+    TokenPipeEnd res(m_fds[0]);\n+    m_fds[0] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd TokenPipe::WriteEnd()\n+{\n+    TokenPipeEnd res(m_fds[1]);\n+    m_fds[1] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd::TokenPipeEnd(int fd):\n+    m_fd(fd)\n+{\n+}\n+\n+TokenPipeEnd::~TokenPipeEnd()\n+{\n+    if (m_fd != -1) close(m_fd);",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "0ef284ba1a4b942654552e4335225b6c2d34420c",
      "in_reply_to_id": 568985945,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, why not. It seemed like so little code that it wouldn't really be worth deduplicating. I agree the redundant set to `-1` doesn't matter, this is not a performance critical function.",
      "created_at": "2021-02-03T20:26:05Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r569724510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/569724510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578007134",
      "pull_request_review_id": 592705254,
      "id": 578007134,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODAwNzEzNA==",
      "diff_hunk": "@@ -24,25 +27,17 @@ std::mutex g_shutdown_mutex;\n std::condition_variable g_shutdown_cv;\n #else\n /** On UNIX-like operating systems use the self-pipe trick.\n- * Index 0 will be the read end of the pipe, index 1 the write end.\n  */\n-static int g_shutdown_pipe[2] = {-1, -1};\n+static TokenPipeEnd g_shutdown_r;\n+static TokenPipeEnd g_shutdown_w;\n #endif\n \n bool InitShutdownState()\n {\n #ifndef WIN32\n-#if HAVE_O_CLOEXEC\n-    // If we can, make sure that the file descriptors are closed on exec()\n-    // to prevent interference.\n-    if (pipe2(g_shutdown_pipe, O_CLOEXEC) != 0) {\n-        return false;\n-    }\n-#else\n-    if (pipe(g_shutdown_pipe) != 0) {\n-        return false;\n-    }\n-#endif\n+    std::optional<TokenPipe> pipe = TokenPipe::create();\n+    g_shutdown_r = pipe->ReadEnd();\n+    g_shutdown_w = pipe->WriteEnd();",
      "path": "src/shutdown.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "581f48d818e17bebe75e24c9d72029e4a0f2e8af",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The error-check after TokenPipe creation is missing here, e.g. `if (!pipe) return false;`",
      "created_at": "2021-02-17T23:05:37Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r578007134",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578007134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578007441",
      "pull_request_review_id": 592705254,
      "id": 578007441,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODAwNzQ0MQ==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umblical = TokenPipe::create();\n+    if (!umblical) {\n+        return -1; // pipe or pip2 failed.",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "48858432bc7ef3e02685b693954173e722bae4e5",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        return -1; // pipe or pipe2 failed.\r\n```",
      "created_at": "2021-02-17T23:06:19Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r578007441",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578007441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578013255",
      "pull_request_review_id": 592705254,
      "id": 578013255,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODAxMzI1NQ==",
      "diff_hunk": "@@ -105,24 +187,34 @@ static bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             return false;\n         }\n-        if (args.GetBoolArg(\"-daemon\", false)) {\n-#if HAVE_DECL_DAEMON\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n-#endif\n+        if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+#if HAVE_DECL_FORK\n             tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n-            if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n-                return InitError(Untranslated(strprintf(\"daemon() failed: %s\\n\", strerror(errno))));\n+            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\n+                case 0: // Child: continue.\n+                    // If -daemonwait is not enabled, immediately send a success token the parent.\n+                    if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+                        daemon_ep.TokenWrite(1);\n+                        daemon_ep.Close();\n+                    }\n+                    break;\n+                case -1: // Error happened.\n+                    return InitError(Untranslated(strprintf(\"fork_daemon() failed: %s\\n\", strerror(errno))));\n+                default: { // Parent: wait and exit.\n+                        int token = daemon_ep.TokenRead();\n+                        if (token == true) { // fRet == true, Success",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 132,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "48858432bc7ef3e02685b693954173e722bae4e5",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit:\r\n```suggestion\r\n                        if (token == 1) { // fRet == 1, Success\r\n```\r\n(probably the token variable could be eliminated by calling `TokenRead` directly in the if condition.)",
      "created_at": "2021-02-17T23:19:26Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r578013255",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578013255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578014248",
      "pull_request_review_id": 592705254,
      "id": 578014248,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODAxNDI0OA==",
      "diff_hunk": "@@ -59,6 +133,14 @@ static bool AppInit(int argc, char* argv[])\n         return true;\n     }\n \n+#if HAVE_DECL_FORK\n+    // Communication with parent after daemonizing. This is used for signalling in the following ways:\n+    // - a boolean token is sent when the initialization process (all the Init* functions) have finished to indicate\n+    // that the parent process can quit, and whether it was succesful/unsuccesful.",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 95,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "48858432bc7ef3e02685b693954173e722bae4e5",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "typos:\r\n```suggestion\r\n    // that the parent process can quit, and whether it was successful/unsuccessful.\r\n```",
      "created_at": "2021-02-17T23:21:57Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r578014248",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578014248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578017192",
      "pull_request_review_id": 592705254,
      "id": 578017192,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODAxNzE5Mg==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umblical = TokenPipe::create();\n+    if (!umblical) {\n+        return -1; // pipe or pip2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umblical->ReadEnd();",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "48858432bc7ef3e02685b693954173e722bae4e5",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I didn't know the word before (nice name for a parent-child-pipe 😄), but according to the dictionary the spelling is slightly different:\r\n```suggestion\r\n        endpoint = umbilical->ReadEnd();\r\n```",
      "created_at": "2021-02-17T23:29:08Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r578017192",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578017192"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578235280",
      "pull_request_review_id": 592976710,
      "id": 578235280,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODIzNTI4MA==",
      "diff_hunk": "@@ -24,25 +27,17 @@ std::mutex g_shutdown_mutex;\n std::condition_variable g_shutdown_cv;\n #else\n /** On UNIX-like operating systems use the self-pipe trick.\n- * Index 0 will be the read end of the pipe, index 1 the write end.\n  */\n-static int g_shutdown_pipe[2] = {-1, -1};\n+static TokenPipeEnd g_shutdown_r;\n+static TokenPipeEnd g_shutdown_w;\n #endif\n \n bool InitShutdownState()\n {\n #ifndef WIN32\n-#if HAVE_O_CLOEXEC\n-    // If we can, make sure that the file descriptors are closed on exec()\n-    // to prevent interference.\n-    if (pipe2(g_shutdown_pipe, O_CLOEXEC) != 0) {\n-        return false;\n-    }\n-#else\n-    if (pipe(g_shutdown_pipe) != 0) {\n-        return false;\n-    }\n-#endif\n+    std::optional<TokenPipe> pipe = TokenPipe::create();\n+    g_shutdown_r = pipe->ReadEnd();\n+    g_shutdown_w = pipe->WriteEnd();",
      "path": "src/shutdown.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "581f48d818e17bebe75e24c9d72029e4a0f2e8af",
      "in_reply_to_id": 578007134,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "~~Good point, will re-add an assertion.~~\r\n~~All the error handling in `shutdown` consists of assertions but skipping it is a bad idea.~~\r\nNo, returning false is the right thing to do here.",
      "created_at": "2021-02-18T08:52:18Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r578235280",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578235280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578236272",
      "pull_request_review_id": 592978037,
      "id": 578236272,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3ODIzNjI3Mg==",
      "diff_hunk": "@@ -105,24 +187,34 @@ static bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             return false;\n         }\n-        if (args.GetBoolArg(\"-daemon\", false)) {\n-#if HAVE_DECL_DAEMON\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n-#endif\n+        if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+#if HAVE_DECL_FORK\n             tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n-            if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n-                return InitError(Untranslated(strprintf(\"daemon() failed: %s\\n\", strerror(errno))));\n+            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\n+                case 0: // Child: continue.\n+                    // If -daemonwait is not enabled, immediately send a success token the parent.\n+                    if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+                        daemon_ep.TokenWrite(1);\n+                        daemon_ep.Close();\n+                    }\n+                    break;\n+                case -1: // Error happened.\n+                    return InitError(Untranslated(strprintf(\"fork_daemon() failed: %s\\n\", strerror(errno))));\n+                default: { // Parent: wait and exit.\n+                        int token = daemon_ep.TokenRead();\n+                        if (token == true) { // fRet == true, Success",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 132,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "48858432bc7ef3e02685b693954173e722bae4e5",
      "in_reply_to_id": 578013255,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I prefer having a variable here. Having a read as a side effect of an if() clause is kind of meh.\r\nWill change the `true`.",
      "created_at": "2021-02-18T08:53:52Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r578236272",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/578236272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584617352",
      "pull_request_review_id": 600609252,
      "id": 584617352,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDYxNzM1Mg==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();\n+\n+#if HAVE_DECL_SETSID\n+    if (setsid() < 0) {\n+        exit(1); // setsid failed.\n+    }\n+#endif\n+\n+    if (!nochdir) {\n+        if (chdir(\"/\") != 0) {\n+            exit(1); // chdir failed.\n+        }\n+    }\n+    if (!noclose) {\n+        // Open /dev/null, and clone it into STDIN, STDOUT and STDERR to detach\n+        // from terminal.\n+        int fd = open(\"/dev/null\", O_RDWR);\n+        if (fd >= 0) {\n+            bool err = dup2(fd, STDIN_FILENO) < 0 || dup2(fd, STDOUT_FILENO) < 0 || dup2(fd, STDERR_FILENO) < 0;\n+            close(fd);\n+            if (err) {\n+                exit(1); // dup2 failed.\n+            }\n+            close(fd);",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are you calling `close(fd)` twice? Shouldn't it be a single `if (fd > 2) close(fd);` as per glibc?",
      "created_at": "2021-03-01T10:56:14Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584617352",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584617352"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584624966",
      "pull_request_review_id": 600609252,
      "id": 584624966,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDYyNDk2Ng==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Calling `umbilical->ReadEnd()` to create the `TokenPipeEnd` then immediately destroy it, which then closes the underlying fd seems a bit clunky. A comment might be worthwhile at least.",
      "created_at": "2021-03-01T11:07:48Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584624966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584624966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584631946",
      "pull_request_review_id": 600609252,
      "id": 584631946,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDYzMTk0Ng==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::create()\n+{\n+    int fds[2] = {-1, -1};\n+#if HAVE_O_CLOEXEC && HAVE_DECL_PIPE2\n+    if (pipe2(fds, O_CLOEXEC) != 0) {\n+        return std::nullopt;\n+    }\n+#else\n+    if (pipe(fds) != 0) {\n+        return std::nullopt;\n+    }\n+#endif\n+    return TokenPipe(fds);\n+}\n+\n+TokenPipe::~TokenPipe()\n+{\n+    Close();\n+}\n+\n+void TokenPipe::Close()\n+{\n+    if (m_fds[0] != -1) close(m_fds[0]);\n+    if (m_fds[1] != -1) close(m_fds[1]);",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "45fe328c1b3776f4d6666b2f4f3a6a51501f0f52",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this would be incorrect if you had code like: `{ TokenPipe tp; a(); tp.Close(); b(); }` in particular -- the fds would be closed when `Close()` is called, but may be reallocated to different files during `b()` which would then be incorrectly closed when `tp` is destructed.\r\n\r\nCould explicitly set `m_fds = {-1,-1}`, or could drop `Close()` entirely and move the code into the destructor -- it's only called from `operator=(TokenPipe&&)` and you could just mark that as `= deleted;` I think; it doesn't seem to be needed.",
      "created_at": "2021-03-01T11:19:09Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584631946",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584631946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584638097",
      "pull_request_review_id": 600609252,
      "id": 584638097,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDYzODA5Nw==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::create()",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "45fe328c1b3776f4d6666b2f4f3a6a51501f0f52",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Doesn't matter, but net_processing uses `make` as the name for PeerManager's nearly-but-not-quite-a-constructor.",
      "created_at": "2021-03-01T11:29:35Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584638097",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584638097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584641206",
      "pull_request_review_id": 600639629,
      "id": 584641206,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDY0MTIwNg==",
      "diff_hunk": "@@ -240,6 +240,7 @@ BITCOIN_CORE_H = \\\n   util/memory.h \\\n   util/message.h \\\n   util/moneystr.h \\\n+  util/tokenpipe.h \\",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 4,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit, sort",
      "created_at": "2021-03-01T11:35:13Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584641206",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584641206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 243,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584651551",
      "pull_request_review_id": 600639629,
      "id": 584651551,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDY1MTU1MQ==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::create()\n+{\n+    int fds[2] = {-1, -1};\n+#if HAVE_O_CLOEXEC && HAVE_DECL_PIPE2\n+    if (pipe2(fds, O_CLOEXEC) != 0) {\n+        return std::nullopt;\n+    }\n+#else\n+    if (pipe(fds) != 0) {\n+        return std::nullopt;\n+    }\n+#endif\n+    return TokenPipe(fds);\n+}\n+\n+TokenPipe::~TokenPipe()\n+{\n+    Close();\n+}\n+\n+void TokenPipe::Close()\n+{\n+    if (m_fds[0] != -1) close(m_fds[0]);\n+    if (m_fds[1] != -1) close(m_fds[1]);\n+}\n+\n+TokenPipeEnd TokenPipe::ReadEnd()\n+{\n+    TokenPipeEnd res(m_fds[0]);\n+    m_fds[0] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd TokenPipe::WriteEnd()\n+{\n+    TokenPipeEnd res(m_fds[1]);\n+    m_fds[1] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd::TokenPipeEnd(int fd):\n+    m_fd(fd)\n+{\n+}\n+\n+TokenPipeEnd::~TokenPipeEnd()\n+{\n+    Close();\n+}\n+\n+int TokenPipeEnd::TokenWrite(uint8_t token)\n+{\n+    while (true) {\n+        int result = write(m_fd, &token, 1);",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`write` seems to be returning ssize_t / long, same for `read` line 86\r\n```suggestion\r\n        const long result{write(m_fd, &token, 1)};\r\n```",
      "created_at": "2021-03-01T11:52:59Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584651551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584651551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584651985",
      "pull_request_review_id": 600639629,
      "id": 584651985,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDY1MTk4NQ==",
      "diff_hunk": "@@ -9,6 +9,11 @@\n #include <memory>\n #include <string>\n \n+//! Default value for -daemon option\n+static const bool DEFAULT_DAEMON = false;\n+//! Default value for -daemonwait option\n+static const bool DEFAULT_DAEMONWAIT = false;",
      "path": "src/init.h",
      "position": null,
      "original_position": 7,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "these two can be `constexpr`",
      "created_at": "2021-03-01T11:53:42Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584651985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584651985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584652550",
      "pull_request_review_id": 600639629,
      "id": 584652550,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDY1MjU1MA==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();\n+\n+#if HAVE_DECL_SETSID\n+    if (setsid() < 0) {\n+        exit(1); // setsid failed.\n+    }\n+#endif\n+\n+    if (!nochdir) {\n+        if (chdir(\"/\") != 0) {\n+            exit(1); // chdir failed.\n+        }\n+    }\n+    if (!noclose) {\n+        // Open /dev/null, and clone it into STDIN, STDOUT and STDERR to detach\n+        // from terminal.\n+        int fd = open(\"/dev/null\", O_RDWR);\n+        if (fd >= 0) {\n+            bool err = dup2(fd, STDIN_FILENO) < 0 || dup2(fd, STDOUT_FILENO) < 0 || dup2(fd, STDERR_FILENO) < 0;",
      "path": "src/bitcoind.cpp",
      "position": 69,
      "original_position": 69,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`fd` and `err` can be const",
      "created_at": "2021-03-01T11:54:46Z",
      "updated_at": "2021-03-04T17:24:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584652550",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584652550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584653087",
      "pull_request_review_id": 600639629,
      "id": 584653087,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDY1MzA4Nw==",
      "diff_hunk": "@@ -96,17 +81,10 @@ void WaitForShutdown()\n     std::unique_lock<std::mutex> lk(g_shutdown_mutex);\n     g_shutdown_cv.wait(lk, [] { return fRequestShutdown.load(); });\n #else\n-    char token;\n-    while (true) {\n-        int result = read(g_shutdown_pipe[0], &token, 1);\n-        if (result < 0) {\n-            // Failure. Check if the read was interrupted by a signal.\n-            // Other errors are unexpected here.\n-            assert(errno == EINTR);\n-        } else {\n-            assert(result == 1);\n-            break;\n-        }\n+    int res = g_shutdown_r.TokenRead();",
      "path": "src/shutdown.cpp",
      "position": 89,
      "original_position": 89,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`res` here and line 54 can be const",
      "created_at": "2021-03-01T11:55:41Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584653087",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584653087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584938135",
      "pull_request_review_id": 601023934,
      "id": 584938135,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDkzODEzNQ==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::create()\n+{\n+    int fds[2] = {-1, -1};\n+#if HAVE_O_CLOEXEC && HAVE_DECL_PIPE2\n+    if (pipe2(fds, O_CLOEXEC) != 0) {\n+        return std::nullopt;\n+    }\n+#else\n+    if (pipe(fds) != 0) {\n+        return std::nullopt;\n+    }\n+#endif\n+    return TokenPipe(fds);\n+}\n+\n+TokenPipe::~TokenPipe()\n+{\n+    Close();\n+}\n+\n+void TokenPipe::Close()\n+{\n+    if (m_fds[0] != -1) close(m_fds[0]);\n+    if (m_fds[1] != -1) close(m_fds[1]);\n+}\n+\n+TokenPipeEnd TokenPipe::ReadEnd()\n+{\n+    TokenPipeEnd res(m_fds[0]);\n+    m_fds[0] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd TokenPipe::WriteEnd()\n+{\n+    TokenPipeEnd res(m_fds[1]);\n+    m_fds[1] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd::TokenPipeEnd(int fd):\n+    m_fd(fd)",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\nTokenPipeEnd::TokenPipeEnd(int fd)\r\n    : m_fd(fd)\r\n```",
      "created_at": "2021-03-01T18:09:18Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584938135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584938135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 54,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 55,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584939246",
      "pull_request_review_id": 601023934,
      "id": 584939246,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDkzOTI0Ng==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 17,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\nclass TokenPipeEnd\r\n{\r\nprivate:\r\n    int m_fd = -1;\r\n\r\npublic:\r\n```",
      "created_at": "2021-03-01T18:10:58Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584939246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584939246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 14,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584939998",
      "pull_request_review_id": 601023934,
      "id": 584939998,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDkzOTk5OA==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 67,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\n    TokenPipeEnd(const TokenPipeEnd&) = delete;\r\n    TokenPipeEnd& operator=(const TokenPipeEnd&) = delete;\r\n```",
      "created_at": "2021-03-01T18:11:56Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584939998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584939998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 66,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584940313",
      "pull_request_review_id": 601023934,
      "id": 584940313,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0MDMxMw==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;\n+};\n+\n+/** An interprocess or interthread pipe for sending tokens (one-byte values)\n+ * over.\n+ */\n+class TokenPipe {",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 73,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\nclass TokenPipe\r\n{\r\n```",
      "created_at": "2021-03-01T18:12:25Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584940313",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584940313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584940905",
      "pull_request_review_id": 601023934,
      "id": 584940905,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0MDkwNQ==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;\n+};\n+\n+/** An interprocess or interthread pipe for sending tokens (one-byte values)\n+ * over.\n+ */\n+class TokenPipe {\n+private:\n+    int m_fds[2] = {-1, -1};\n+\n+    TokenPipe(int fds[2]): m_fds{fds[0], fds[1]} {}\n+public:",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 78,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\n    TokenPipe(int fds[2]) : m_fds{fds[0], fds[1]} {}\r\n\r\npublic:\r\n```",
      "created_at": "2021-03-01T18:13:16Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584940905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584940905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 77,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584941276",
      "pull_request_review_id": 601023934,
      "id": 584941276,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0MTI3Ng==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;\n+};\n+\n+/** An interprocess or interthread pipe for sending tokens (one-byte values)\n+ * over.\n+ */\n+class TokenPipe {\n+private:\n+    int m_fds[2] = {-1, -1};\n+\n+    TokenPipe(int fds[2]): m_fds{fds[0], fds[1]} {}\n+public:\n+    ~TokenPipe();\n+\n+    /** Create a new pipe.\n+     * @returns The created TokenPipe, or an empty std::nullopt in case of error.\n+     */\n+    static std::optional<TokenPipe> create();\n+\n+    /** Get the read end of this pipe. This can only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd ReadEnd();\n+\n+    /** Get the write end of this pipe. This should only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd WriteEnd();\n+\n+    /** Close and end of the pipe that hasn't been moved out.\n+     */\n+    void Close();\n+\n+    // Move-only class.\n+    TokenPipe(TokenPipe&& other)\n+    {\n+        for(int i = 0; i < 2; ++i) {",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 103,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\n        for (int i = 0; i < 2; ++i) {\r\n```",
      "created_at": "2021-03-01T18:13:48Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584941276",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584941276"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584941408",
      "pull_request_review_id": 601023934,
      "id": 584941408,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0MTQwOA==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;\n+};\n+\n+/** An interprocess or interthread pipe for sending tokens (one-byte values)\n+ * over.\n+ */\n+class TokenPipe {\n+private:\n+    int m_fds[2] = {-1, -1};\n+\n+    TokenPipe(int fds[2]): m_fds{fds[0], fds[1]} {}\n+public:\n+    ~TokenPipe();\n+\n+    /** Create a new pipe.\n+     * @returns The created TokenPipe, or an empty std::nullopt in case of error.\n+     */\n+    static std::optional<TokenPipe> create();\n+\n+    /** Get the read end of this pipe. This can only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd ReadEnd();\n+\n+    /** Get the write end of this pipe. This should only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd WriteEnd();\n+\n+    /** Close and end of the pipe that hasn't been moved out.\n+     */\n+    void Close();\n+\n+    // Move-only class.\n+    TokenPipe(TokenPipe&& other)\n+    {\n+        for(int i = 0; i < 2; ++i) {\n+            m_fds[i] = other.m_fds[i];\n+            other.m_fds[i] = -1;\n+        }\n+    }\n+    TokenPipe& operator=(TokenPipe&& other)\n+    {\n+        Close();\n+        for(int i = 0; i < 2; ++i) {",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 111,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\n        for (int i = 0; i < 2; ++i) {\r\n```",
      "created_at": "2021-03-01T18:14:01Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584941408",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584941408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584941710",
      "pull_request_review_id": 601023934,
      "id": 584941710,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0MTcxMA==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;\n+};\n+\n+/** An interprocess or interthread pipe for sending tokens (one-byte values)\n+ * over.\n+ */\n+class TokenPipe {\n+private:\n+    int m_fds[2] = {-1, -1};\n+\n+    TokenPipe(int fds[2]): m_fds{fds[0], fds[1]} {}\n+public:\n+    ~TokenPipe();\n+\n+    /** Create a new pipe.\n+     * @returns The created TokenPipe, or an empty std::nullopt in case of error.\n+     */\n+    static std::optional<TokenPipe> create();\n+\n+    /** Get the read end of this pipe. This can only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd ReadEnd();\n+\n+    /** Get the write end of this pipe. This should only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd WriteEnd();\n+\n+    /** Close and end of the pipe that hasn't been moved out.\n+     */\n+    void Close();\n+\n+    // Move-only class.\n+    TokenPipe(TokenPipe&& other)\n+    {\n+        for(int i = 0; i < 2; ++i) {\n+            m_fds[i] = other.m_fds[i];\n+            other.m_fds[i] = -1;\n+        }\n+    }\n+    TokenPipe& operator=(TokenPipe&& other)\n+    {\n+        Close();\n+        for(int i = 0; i < 2; ++i) {\n+            m_fds[i] = other.m_fds[i];\n+            other.m_fds[i] = -1;\n+        }\n+        return *this;\n+    }\n+    TokenPipe (const TokenPipe&) = delete;\n+    TokenPipe &operator=(const TokenPipe&) = delete;",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 118,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\n    TokenPipe(const TokenPipe&) = delete;\r\n    TokenPipe& operator=(const TokenPipe&) = delete;\r\n```",
      "created_at": "2021-03-01T18:14:28Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584941710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584941710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 117,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584942855",
      "pull_request_review_id": 601023934,
      "id": 584942855,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0Mjg1NQ==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\nint fork_daemon(bool nochdir, bool noclose, TokenPipeEnd& endpoint)\r\n```",
      "created_at": "2021-03-01T18:16:13Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584942855",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584942855"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 44,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584947020",
      "pull_request_review_id": 601023934,
      "id": 584947020,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0NzAyMA==",
      "diff_hunk": "@@ -105,24 +187,34 @@ static bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             return false;\n         }\n-        if (args.GetBoolArg(\"-daemon\", false)) {\n-#if HAVE_DECL_DAEMON\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n-#endif\n+        if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+#if HAVE_DECL_FORK\n             tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n-            if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n-                return InitError(Untranslated(strprintf(\"daemon() failed: %s\\n\", strerror(errno))));\n+            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\n+                case 0: // Child: continue.\n+                    // If -daemonwait is not enabled, immediately send a success token the parent.\n+                    if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+                        daemon_ep.TokenWrite(1);\n+                        daemon_ep.Close();\n+                    }\n+                    break;\n+                case -1: // Error happened.\n+                    return InitError(Untranslated(strprintf(\"fork_daemon() failed: %s\\n\", strerror(errno))));\n+                default: { // Parent: wait and exit.\n+                        int token = daemon_ep.TokenRead();\n+                        if (token) { // Success\n+                            exit(EXIT_SUCCESS);\n+                        } else { // fRet = false or token read error (premature exit).\n+                            tfm::format(std::cout, \"Error during initializaton - check debug.log for details\\n\");\n+                            exit(EXIT_FAILURE);\n+                        }\n+                    }",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 138,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "indentation-nit, suggested by [clang-format-diff.py](https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy):\r\n```suggestion\r\n            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\r\n            case 0: // Child: continue.\r\n                // If -daemonwait is not enabled, immediately send a success token the parent.\r\n                if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\r\n                    daemon_ep.TokenWrite(1);\r\n                    daemon_ep.Close();\r\n                }\r\n                break;\r\n            case -1: // Error happened.\r\n                return InitError(Untranslated(strprintf(\"fork_daemon() failed: %s\\n\", strerror(errno))));\r\n            default: // Parent: wait and exit.\r\n                int token = daemon_ep.TokenRead();\r\n                if (token) { // Success\r\n                    exit(EXIT_SUCCESS);\r\n                } else { // fRet = false or token read error (premature exit).\r\n                    tfm::format(std::cout, \"Error during initializaton - check debug.log for details\\n\");\r\n                    exit(EXIT_FAILURE);\r\n               }\r\n```",
      "created_at": "2021-03-01T18:22:18Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584947020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584947020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 195,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 213,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584948106",
      "pull_request_review_id": 601023934,
      "id": 584948106,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0ODEwNg==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;\n+};\n+\n+/** An interprocess or interthread pipe for sending tokens (one-byte values)\n+ * over.\n+ */\n+class TokenPipe {\n+private:\n+    int m_fds[2] = {-1, -1};\n+\n+    TokenPipe(int fds[2]): m_fds{fds[0], fds[1]} {}\n+public:\n+    ~TokenPipe();\n+\n+    /** Create a new pipe.\n+     * @returns The created TokenPipe, or an empty std::nullopt in case of error.\n+     */\n+    static std::optional<TokenPipe> create();",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 84,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Capitalize function name as others?\r\n```suggestion\r\n    static std::optional<TokenPipe> Create();\r\n```",
      "created_at": "2021-03-01T18:24:01Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584948106",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584948106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584948457",
      "pull_request_review_id": 601023934,
      "id": 584948457,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDk0ODQ1Nw==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;\n+};\n+\n+/** An interprocess or interthread pipe for sending tokens (one-byte values)\n+ * over.\n+ */\n+class TokenPipe {\n+private:\n+    int m_fds[2] = {-1, -1};\n+\n+    TokenPipe(int fds[2]): m_fds{fds[0], fds[1]} {}\n+public:\n+    ~TokenPipe();\n+\n+    /** Create a new pipe.\n+     * @returns The created TokenPipe, or an empty std::nullopt in case of error.\n+     */\n+    static std::optional<TokenPipe> create();\n+\n+    /** Get the read end of this pipe. This can only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd ReadEnd();\n+\n+    /** Get the write end of this pipe. This should only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd WriteEnd();\n+\n+    /** Close and end of the pipe that hasn't been moved out.\n+     */\n+    void Close();\n+\n+    // Move-only class.\n+    TokenPipe(TokenPipe&& other)\n+    {\n+        for(int i = 0; i < 2; ++i) {\n+            m_fds[i] = other.m_fds[i];\n+            other.m_fds[i] = -1;\n+        }\n+    }\n+    TokenPipe& operator=(TokenPipe&& other)\n+    {\n+        Close();\n+        for(int i = 0; i < 2; ++i) {\n+            m_fds[i] = other.m_fds[i];\n+            other.m_fds[i] = -1;\n+        }\n+        return *this;\n+    }\n+    TokenPipe (const TokenPipe&) = delete;\n+    TokenPipe &operator=(const TokenPipe&) = delete;\n+};\n+\n+#endif",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 121,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": null,
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n#endif // WIN32\r\n```",
      "created_at": "2021-03-01T18:24:35Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r584948457",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/584948457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585061306",
      "pull_request_review_id": 601181564,
      "id": 585061306,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTA2MTMwNg==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584624966,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I thought about adding an explicit `CloseReadEnd` `CloseWriteEnd` function but as it'd essentially be the same I didn't do so. Will add a comment.",
      "created_at": "2021-03-01T21:27:09Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585061306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585061306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585062353",
      "pull_request_review_id": 601182877,
      "id": 585062353,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTA2MjM1Mw==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::create()\n+{\n+    int fds[2] = {-1, -1};\n+#if HAVE_O_CLOEXEC && HAVE_DECL_PIPE2\n+    if (pipe2(fds, O_CLOEXEC) != 0) {\n+        return std::nullopt;\n+    }\n+#else\n+    if (pipe(fds) != 0) {\n+        return std::nullopt;\n+    }\n+#endif\n+    return TokenPipe(fds);\n+}\n+\n+TokenPipe::~TokenPipe()\n+{\n+    Close();\n+}\n+\n+void TokenPipe::Close()\n+{\n+    if (m_fds[0] != -1) close(m_fds[0]);\n+    if (m_fds[1] != -1) close(m_fds[1]);",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "45fe328c1b3776f4d6666b2f4f3a6a51501f0f52",
      "in_reply_to_id": 584631946,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will take a look. Agree the fds should be se to -1 after closing them to prevent 'use fd after close' problems, seems I forgot that. I made it like this to be symmetric with `TokenPipeEnd::Close`. Sure, I could move the code around if minimalism was the goal, but I like a consistent API more.",
      "created_at": "2021-03-01T21:28:54Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585062353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585062353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585062645",
      "pull_request_review_id": 601183338,
      "id": 585062645,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTA2MjY0NQ==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::create()",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "45fe328c1b3776f4d6666b2f4f3a6a51501f0f52",
      "in_reply_to_id": 584638097,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, I'm fine with a different name, `create` is the convention in rust but Make is fine with me too.",
      "created_at": "2021-03-01T21:29:30Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585062645",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585062645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585065011",
      "pull_request_review_id": 601186347,
      "id": 585065011,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTA2NTAxMQ==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584624966,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What if I call the functions `TakeReadEnd` `TakeWriteEnd` would that make it clearer that a move is happening?",
      "created_at": "2021-03-01T21:33:41Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585065011",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585065011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585067416",
      "pull_request_review_id": 601189388,
      "id": 585067416,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTA2NzQxNg==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();\n+\n+#if HAVE_DECL_SETSID\n+    if (setsid() < 0) {\n+        exit(1); // setsid failed.\n+    }\n+#endif\n+\n+    if (!nochdir) {\n+        if (chdir(\"/\") != 0) {\n+            exit(1); // chdir failed.\n+        }\n+    }\n+    if (!noclose) {\n+        // Open /dev/null, and clone it into STDIN, STDOUT and STDERR to detach\n+        // from terminal.\n+        int fd = open(\"/dev/null\", O_RDWR);\n+        if (fd >= 0) {\n+            bool err = dup2(fd, STDIN_FILENO) < 0 || dup2(fd, STDOUT_FILENO) < 0 || dup2(fd, STDERR_FILENO) < 0;\n+            close(fd);\n+            if (err) {\n+                exit(1); // dup2 failed.\n+            }\n+            close(fd);",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584617352,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Uhm, good catch, it should only be closed once. I don't think there's a need to compare it to 2.",
      "created_at": "2021-03-01T21:37:49Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585067416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585067416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585075652",
      "pull_request_review_id": 601199645,
      "id": 585075652,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTA3NTY1Mg==",
      "diff_hunk": "@@ -0,0 +1,123 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_TOKENPIPE_H\n+#define BITCOIN_UTIL_TOKENPIPE_H\n+\n+#ifndef WIN32\n+\n+#include <cstdint>\n+#include <optional>\n+\n+/** One end of a token pipe. */\n+class TokenPipeEnd {\n+private:\n+    int m_fd = -1;\n+public:\n+    TokenPipeEnd(int fd = -1);\n+    ~TokenPipeEnd();\n+\n+    /** Return value constants for TokenWrite and TokenRead. */\n+    enum Status {\n+        TS_ERR = -1, //!< I/O error\n+        TS_EOS = -2, //!< Unexpected end of stream\n+    };\n+\n+    /** Write token to endpoint.\n+     *\n+     * @returns 0       If successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenWrite(uint8_t token);\n+\n+    /** Read token from endpoint.\n+     *\n+     * @returns >=0     Token value, if successful.\n+     *          <0 if error:\n+     *            TS_ERR  If an error happened.\n+     *            TS_EOS  If end of stream happened.\n+     */\n+    int TokenRead();\n+\n+    /** Explicit close function.\n+     */\n+    void Close();\n+\n+    /** Return whether endpoint is open.\n+     */\n+    bool IsOpen() { return m_fd != -1; }\n+\n+    // Move-only class.\n+    TokenPipeEnd(TokenPipeEnd&& other)\n+    {\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+    }\n+    TokenPipeEnd& operator=(TokenPipeEnd&& other)\n+    {\n+        Close();\n+        m_fd = other.m_fd;\n+        other.m_fd = -1;\n+        return *this;\n+    }\n+    TokenPipeEnd (const TokenPipeEnd&) = delete;\n+    TokenPipeEnd &operator=(const TokenPipeEnd&) = delete;\n+};\n+\n+/** An interprocess or interthread pipe for sending tokens (one-byte values)\n+ * over.\n+ */\n+class TokenPipe {\n+private:\n+    int m_fds[2] = {-1, -1};\n+\n+    TokenPipe(int fds[2]): m_fds{fds[0], fds[1]} {}\n+public:\n+    ~TokenPipe();\n+\n+    /** Create a new pipe.\n+     * @returns The created TokenPipe, or an empty std::nullopt in case of error.\n+     */\n+    static std::optional<TokenPipe> create();\n+\n+    /** Get the read end of this pipe. This can only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd ReadEnd();\n+\n+    /** Get the write end of this pipe. This should only be called once,\n+     * as the object will be moved out.\n+     */\n+    TokenPipeEnd WriteEnd();\n+\n+    /** Close and end of the pipe that hasn't been moved out.\n+     */\n+    void Close();\n+\n+    // Move-only class.\n+    TokenPipe(TokenPipe&& other)\n+    {\n+        for(int i = 0; i < 2; ++i) {\n+            m_fds[i] = other.m_fds[i];\n+            other.m_fds[i] = -1;\n+        }\n+    }\n+    TokenPipe& operator=(TokenPipe&& other)\n+    {\n+        Close();\n+        for(int i = 0; i < 2; ++i) {\n+            m_fds[i] = other.m_fds[i];\n+            other.m_fds[i] = -1;\n+        }\n+        return *this;\n+    }\n+    TokenPipe (const TokenPipe&) = delete;\n+    TokenPipe &operator=(const TokenPipe&) = delete;",
      "path": "src/util/tokenpipe.h",
      "position": null,
      "original_position": 118,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584941710,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks. FWIW it's fine to just mark one of these and say to run `clang-format-diff`, no need to open a review item for every little indentation/style mismatch :smile:  (as this makes it harder to find the more serious comments)",
      "created_at": "2021-03-01T21:51:45Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585075652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585075652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": 117,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 118,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585080051",
      "pull_request_review_id": 601205109,
      "id": 585080051,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTA4MDA1MQ==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::create()\n+{\n+    int fds[2] = {-1, -1};\n+#if HAVE_O_CLOEXEC && HAVE_DECL_PIPE2\n+    if (pipe2(fds, O_CLOEXEC) != 0) {\n+        return std::nullopt;\n+    }\n+#else\n+    if (pipe(fds) != 0) {\n+        return std::nullopt;\n+    }\n+#endif\n+    return TokenPipe(fds);\n+}\n+\n+TokenPipe::~TokenPipe()\n+{\n+    Close();\n+}\n+\n+void TokenPipe::Close()\n+{\n+    if (m_fds[0] != -1) close(m_fds[0]);\n+    if (m_fds[1] != -1) close(m_fds[1]);\n+}\n+\n+TokenPipeEnd TokenPipe::ReadEnd()\n+{\n+    TokenPipeEnd res(m_fds[0]);\n+    m_fds[0] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd TokenPipe::WriteEnd()\n+{\n+    TokenPipeEnd res(m_fds[1]);\n+    m_fds[1] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd::TokenPipeEnd(int fd):\n+    m_fd(fd)\n+{\n+}\n+\n+TokenPipeEnd::~TokenPipeEnd()\n+{\n+    Close();\n+}\n+\n+int TokenPipeEnd::TokenWrite(uint8_t token)\n+{\n+    while (true) {\n+        int result = write(m_fd, &token, 1);",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584651551,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good catch with the type, not sure though i like the `{}` initialization style more here, `=` seems to express intent clearer",
      "created_at": "2021-03-01T21:59:09Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585080051",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585080051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585234399",
      "pull_request_review_id": 601390392,
      "id": 585234399,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTIzNDM5OQ==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584624966,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could also write `umbilical->ReadEnd().Close();` (relying on the destructor's second call to Close then being a no-op). I don't really have a preference.",
      "created_at": "2021-03-02T04:11:12Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585234399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585234399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585240397",
      "pull_request_review_id": 601400771,
      "id": 585240397,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTI0MDM5Nw==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();\n+\n+#if HAVE_DECL_SETSID\n+    if (setsid() < 0) {\n+        exit(1); // setsid failed.\n+    }\n+#endif\n+\n+    if (!nochdir) {\n+        if (chdir(\"/\") != 0) {\n+            exit(1); // chdir failed.\n+        }\n+    }\n+    if (!noclose) {\n+        // Open /dev/null, and clone it into STDIN, STDOUT and STDERR to detach\n+        // from terminal.\n+        int fd = open(\"/dev/null\", O_RDWR);\n+        if (fd >= 0) {\n+            bool err = dup2(fd, STDIN_FILENO) < 0 || dup2(fd, STDOUT_FILENO) < 0 || dup2(fd, STDERR_FILENO) < 0;\n+            close(fd);\n+            if (err) {\n+                exit(1); // dup2 failed.\n+            }\n+            close(fd);",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584617352,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The standard reason to compare it to 2 is in case you start the executable with stdin/stdout/stderr already closed -- in that case `fd` will be assigned to 0/1/2 because that's the first free fd, `dup2(fd,stdin)` (or out or err) will evaluate to `dup2(0,0)` and be a no-op, and you'll then call `close(0)` which will leave you without a dummied stdin (or out or err) which will mean some later fd you open might overlap with stdin (or out or err). Not sure that things wouldn't already be broken in those cases though -- TokenPipe would probably grab the free fds in that case, and then dup2 would close the TokenPipe fd.",
      "created_at": "2021-03-02T04:22:46Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585240397",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585240397"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585241828",
      "pull_request_review_id": 601401460,
      "id": 585241828,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTI0MTgyOA==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::create()",
      "path": "src/util/tokenpipe.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "45fe328c1b3776f4d6666b2f4f3a6a51501f0f52",
      "in_reply_to_id": 584638097,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, either way. PeerManager could change too; it was just copied from some stackoverflow link or something.",
      "created_at": "2021-03-02T04:24:42Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r585241828",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585241828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586362501",
      "pull_request_review_id": 602822380,
      "id": 586362501,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjM2MjUwMQ==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584624966,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah yea! I think I'll do both.\r\n```\r\numbilical->TakeReadEnd().Close();\r\n```\r\nFully self-documenting then.",
      "created_at": "2021-03-03T12:06:43Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586362501",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586362501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586366126",
      "pull_request_review_id": 602827013,
      "id": 586366126,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjM2NjEyNg==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();\n+\n+#if HAVE_DECL_SETSID\n+    if (setsid() < 0) {\n+        exit(1); // setsid failed.\n+    }\n+#endif\n+\n+    if (!nochdir) {\n+        if (chdir(\"/\") != 0) {\n+            exit(1); // chdir failed.\n+        }\n+    }\n+    if (!noclose) {\n+        // Open /dev/null, and clone it into STDIN, STDOUT and STDERR to detach\n+        // from terminal.\n+        int fd = open(\"/dev/null\", O_RDWR);\n+        if (fd >= 0) {\n+            bool err = dup2(fd, STDIN_FILENO) < 0 || dup2(fd, STDOUT_FILENO) < 0 || dup2(fd, STDERR_FILENO) < 0;\n+            close(fd);\n+            if (err) {\n+                exit(1); // dup2 failed.\n+            }\n+            close(fd);",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584617352,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hmm good point. I did not think about that case. It's really unconventional to start binaries with stdin/stdout/stderr closed (the graceful way would be to redirect them to `/dev/null` and I'm not sure we handle this in other places.",
      "created_at": "2021-03-03T12:12:27Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586366126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586366126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586381946",
      "pull_request_review_id": 602847383,
      "id": 586381946,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjM4MTk0Ng==",
      "diff_hunk": "@@ -240,6 +240,7 @@ BITCOIN_CORE_H = \\\n   util/memory.h \\\n   util/message.h \\\n   util/moneystr.h \\\n+  util/tokenpipe.h \\",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 4,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584641206,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Strange, I guess I had this module named differently at first :smile: ",
      "created_at": "2021-03-03T12:37:45Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586381946",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586381946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 243,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586383949",
      "pull_request_review_id": 602849929,
      "id": 586383949,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjM4Mzk0OQ==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();\n+\n+#if HAVE_DECL_SETSID\n+    if (setsid() < 0) {\n+        exit(1); // setsid failed.\n+    }\n+#endif\n+\n+    if (!nochdir) {\n+        if (chdir(\"/\") != 0) {\n+            exit(1); // chdir failed.\n+        }\n+    }\n+    if (!noclose) {\n+        // Open /dev/null, and clone it into STDIN, STDOUT and STDERR to detach\n+        // from terminal.\n+        int fd = open(\"/dev/null\", O_RDWR);\n+        if (fd >= 0) {\n+            bool err = dup2(fd, STDIN_FILENO) < 0 || dup2(fd, STDOUT_FILENO) < 0 || dup2(fd, STDERR_FILENO) < 0;",
      "path": "src/bitcoind.cpp",
      "position": 69,
      "original_position": 69,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584652550,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not really sure what the common thing is to do for internal variables, do we have a const-unless-required-otherwise recommendation?",
      "created_at": "2021-03-03T12:41:02Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586383949",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586383949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586394972",
      "pull_request_review_id": 602864142,
      "id": 586394972,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjM5NDk3Mg==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.\n+ *          -1 in case of error (in parent process).\n+ *\n+ *          In case of success, endpoint will be one end of a pipe from the child to parent process,\n+ *          which can be used with TokenWrite (in the child) or TokenRead (in the parent).\n+ */\n+int fork_daemon(bool nochdir, bool noclose, TokenPipeEnd &endpoint)\n+{\n+    // communication pipe with child process\n+    std::optional<TokenPipe> umbilical = TokenPipe::create();\n+    if (!umbilical) {\n+        return -1; // pipe or pipe2 failed.\n+    }\n+\n+    int pid = fork();\n+    if (pid < 0) {\n+        return -1; // fork failed.\n+    }\n+    if (pid != 0) {\n+        // Parent process gets read end, closes write end.\n+        endpoint = umbilical->ReadEnd();\n+        umbilical->WriteEnd();\n+\n+        int status = endpoint.TokenRead();\n+        if (status != 0) { // Something went wrong while setting up child process.\n+            endpoint.Close();\n+            return -1;\n+        }\n+\n+        return pid;\n+    }\n+    // Child process gets write end, closes read end.\n+    endpoint = umbilical->WriteEnd();\n+    umbilical->ReadEnd();\n+\n+#if HAVE_DECL_SETSID\n+    if (setsid() < 0) {\n+        exit(1); // setsid failed.\n+    }\n+#endif\n+\n+    if (!nochdir) {\n+        if (chdir(\"/\") != 0) {\n+            exit(1); // chdir failed.\n+        }\n+    }\n+    if (!noclose) {\n+        // Open /dev/null, and clone it into STDIN, STDOUT and STDERR to detach\n+        // from terminal.\n+        int fd = open(\"/dev/null\", O_RDWR);\n+        if (fd >= 0) {\n+            bool err = dup2(fd, STDIN_FILENO) < 0 || dup2(fd, STDOUT_FILENO) < 0 || dup2(fd, STDERR_FILENO) < 0;",
      "path": "src/bitcoind.cpp",
      "position": 69,
      "original_position": 69,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "8e6d339434fdb6cfe5057b60f89ce08101e2eeb0",
      "in_reply_to_id": 584652550,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I don't think it's explicitly stated, other than maybe via the C++ Code Guidelines linked to in the developer notes, but it's what I've been doing/reviewing, and seeing others say and do.",
      "created_at": "2021-03-03T12:58:07Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586394972",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586394972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 89,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586564996",
      "pull_request_review_id": 603089570,
      "id": 586564996,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjU2NDk5Ng==",
      "diff_hunk": "@@ -105,24 +187,34 @@ static bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             return false;\n         }\n-        if (args.GetBoolArg(\"-daemon\", false)) {\n-#if HAVE_DECL_DAEMON\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n-#endif\n+        if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+#if HAVE_DECL_FORK\n             tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n-            if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n-                return InitError(Untranslated(strprintf(\"daemon() failed: %s\\n\", strerror(errno))));\n+            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\n+            case 0: // Child: continue.\n+                // If -daemonwait is not enabled, immediately send a success token the parent.\n+                if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+                    daemon_ep.TokenWrite(1);\n+                    daemon_ep.Close();\n+                }\n+                break;\n+            case -1: // Error happened.\n+                return InitError(Untranslated(strprintf(\"fork_daemon() failed: %s\\n\", strerror(errno))));\n+            default: { // Parent: wait and exit.\n+                int token = daemon_ep.TokenRead();\n+                if (token) { // Success\n+                    exit(EXIT_SUCCESS);\n+                } else { // fRet = false or token read error (premature exit).\n+                    tfm::format(std::cout, \"Error during initializaton - check debug.log for details\\n\");",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "b83b386c6e03a57f93110dfefdbbf515e62b5753",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b83b386 s/cout/cerr/?",
      "created_at": "2021-03-03T16:28:23Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586564996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586564996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586567883",
      "pull_request_review_id": 603089570,
      "id": 586567883,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjU2Nzg4Mw==",
      "diff_hunk": "@@ -0,0 +1,108 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#include <util/tokenpipe.h>\n+\n+#include <config/bitcoin-config.h>\n+\n+#ifndef WIN32\n+\n+#include <errno.h>\n+#include <fcntl.h>\n+#include <unistd.h>\n+\n+std::optional<TokenPipe> TokenPipe::Make()\n+{\n+    int fds[2] = {-1, -1};\n+#if HAVE_O_CLOEXEC && HAVE_DECL_PIPE2\n+    if (pipe2(fds, O_CLOEXEC) != 0) {\n+        return std::nullopt;\n+    }\n+#else\n+    if (pipe(fds) != 0) {\n+        return std::nullopt;\n+    }\n+#endif\n+    return TokenPipe(fds);\n+}\n+\n+TokenPipe::~TokenPipe()\n+{\n+    Close();\n+}\n+\n+void TokenPipe::Close()\n+{\n+    if (m_fds[0] != -1) close(m_fds[0]);\n+    if (m_fds[1] != -1) close(m_fds[1]);\n+    m_fds[0] = m_fds[1] = -1;\n+}\n+\n+TokenPipeEnd TokenPipe::TakeReadEnd()\n+{\n+    TokenPipeEnd res(m_fds[0]);\n+    m_fds[0] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd TokenPipe::TakeWriteEnd()\n+{\n+    TokenPipeEnd res(m_fds[1]);\n+    m_fds[1] = -1;\n+    return res;\n+}\n+\n+TokenPipeEnd::TokenPipeEnd(int fd) : m_fd(fd)\n+{\n+}\n+\n+TokenPipeEnd::~TokenPipeEnd()\n+{\n+    Close();\n+}\n+\n+int TokenPipeEnd::TokenWrite(uint8_t token)\n+{\n+    while (true) {\n+        ssize_t result = write(m_fd, &token, 1);\n+        if (result < 0) {\n+            // Failure. It's possible that the write was interrupted by a signal,\n+            // in that case retry.\n+            if (errno != EINTR) {\n+                return TS_ERR;\n+            }\n+        } else if (result == 0) {\n+            return TS_EOS;\n+        } else { // ==1\n+            return 0;\n+        }\n+    }\n+}\n+\n+int TokenPipeEnd::TokenRead()\n+{\n+    uint8_t token;\n+    while (true) {\n+        ssize_t result = read(m_fd, &token, 1);\n+        if (result < 0) {\n+            // Failure. Check if the read was interrupted by a signal,\n+            // in that case retry.\n+            if (errno != EINTR) {\n+                return TS_ERR;\n+            }\n+        } else if (result == 0) {\n+            return TS_EOS;\n+        } else { // ==1\n+            return token;\n+        }\n+    }\n+    return token;\n+}\n+\n+void TokenPipeEnd::Close()\n+{\n+    if (m_fd != -1) close(m_fd);\n+    m_fd = -1;\n+}\n+\n+#endif",
      "path": "src/util/tokenpipe.cpp",
      "position": 92,
      "original_position": 108,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "b83b386c6e03a57f93110dfefdbbf515e62b5753",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "0b9994ac\r\n```suggestion\r\n#endif // WIN32\r\n```",
      "created_at": "2021-03-03T16:31:33Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586567883",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586567883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 92,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586569854",
      "pull_request_review_id": 603089570,
      "id": 586569854,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjU2OTg1NA==",
      "diff_hunk": "@@ -28,6 +29,79 @@\n const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n UrlDecodeFn* const URL_DECODE = urlDecode;\n \n+#if HAVE_DECL_FORK\n+\n+/** Custom implementation of daemon(). This implements the same order of operations as glibc.\n+ * Opens a pipe to the child process to be able to wait for an event to occur.\n+ *\n+ * @returns 0 if succesful, and in child process.\n+ *          >0 if succesful, and in parent process.",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "b83b386c6e03a57f93110dfefdbbf515e62b5753",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b83b386c lines 37 and 38: s/succesful/successful/",
      "created_at": "2021-03-03T16:33:57Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586569854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586569854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586606199",
      "pull_request_review_id": 603133029,
      "id": 586606199,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjYwNjE5OQ==",
      "diff_hunk": "@@ -105,24 +187,34 @@ static bool AppInit(int argc, char* argv[])\n             // InitError will have been called with detailed error, which ends up on console\n             return false;\n         }\n-        if (args.GetBoolArg(\"-daemon\", false)) {\n-#if HAVE_DECL_DAEMON\n-#if defined(MAC_OSX)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n-#endif\n+        if (args.GetBoolArg(\"-daemon\", DEFAULT_DAEMON) || args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+#if HAVE_DECL_FORK\n             tfm::format(std::cout, PACKAGE_NAME \" starting\\n\");\n \n             // Daemonize\n-            if (daemon(1, 0)) { // don't chdir (1), do close FDs (0)\n-                return InitError(Untranslated(strprintf(\"daemon() failed: %s\\n\", strerror(errno))));\n+            switch (fork_daemon(1, 0, daemon_ep)) { // don't chdir (1), do close FDs (0)\n+            case 0: // Child: continue.\n+                // If -daemonwait is not enabled, immediately send a success token the parent.\n+                if (!args.GetBoolArg(\"-daemonwait\", DEFAULT_DAEMONWAIT)) {\n+                    daemon_ep.TokenWrite(1);\n+                    daemon_ep.Close();\n+                }\n+                break;\n+            case -1: // Error happened.\n+                return InitError(Untranslated(strprintf(\"fork_daemon() failed: %s\\n\", strerror(errno))));\n+            default: { // Parent: wait and exit.\n+                int token = daemon_ep.TokenRead();\n+                if (token) { // Success\n+                    exit(EXIT_SUCCESS);\n+                } else { // fRet = false or token read error (premature exit).\n+                    tfm::format(std::cout, \"Error during initializaton - check debug.log for details\\n\");",
      "path": "src/bitcoind.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "e017a913d0d78ef0766cf73586fe7a38488e1a26",
      "original_commit_id": "b83b386c6e03a57f93110dfefdbbf515e62b5753",
      "in_reply_to_id": 586564996,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, why not",
      "created_at": "2021-03-03T17:02:55Z",
      "updated_at": "2021-03-04T17:24:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/21007#discussion_r586606199",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/586606199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21007"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    }
  ]
}